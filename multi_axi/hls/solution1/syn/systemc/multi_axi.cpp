// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "multi_axi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic multi_axi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic multi_axi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> multi_axi::ap_ST_fsm_state1 = "1";
const sc_lv<6> multi_axi::ap_ST_fsm_state2 = "10";
const sc_lv<6> multi_axi::ap_ST_fsm_state3 = "100";
const sc_lv<6> multi_axi::ap_ST_fsm_state4 = "1000";
const sc_lv<6> multi_axi::ap_ST_fsm_state5 = "10000";
const sc_lv<6> multi_axi::ap_ST_fsm_state6 = "100000";
const sc_lv<32> multi_axi::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool multi_axi::ap_const_boolean_1 = true;
const sc_lv<4> multi_axi::ap_const_lv4_0 = "0000";
const sc_lv<32> multi_axi::ap_const_lv32_1 = "1";
const sc_lv<1> multi_axi::ap_const_lv1_1 = "1";
const sc_lv<32> multi_axi::ap_const_lv32_2 = "10";
const sc_lv<32> multi_axi::ap_const_lv32_3 = "11";
const sc_lv<32> multi_axi::ap_const_lv32_4 = "100";
const sc_lv<32> multi_axi::ap_const_lv32_5 = "101";
const sc_lv<4> multi_axi::ap_const_lv4_1 = "1";
const sc_lv<4> multi_axi::ap_const_lv4_2 = "10";
const sc_lv<4> multi_axi::ap_const_lv4_3 = "11";
const int multi_axi::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<1> multi_axi::ap_const_lv1_0 = "0";
const bool multi_axi::ap_const_boolean_0 = false;
const sc_lv<4> multi_axi::ap_const_lv4_4 = "100";
const sc_lv<4> multi_axi::ap_const_lv4_5 = "101";
const sc_lv<4> multi_axi::ap_const_lv4_6 = "110";
const sc_lv<4> multi_axi::ap_const_lv4_7 = "111";
const sc_lv<4> multi_axi::ap_const_lv4_8 = "1000";
const sc_lv<4> multi_axi::ap_const_lv4_9 = "1001";
const sc_lv<4> multi_axi::ap_const_lv4_A = "1010";
const sc_lv<4> multi_axi::ap_const_lv4_B = "1011";
const sc_lv<4> multi_axi::ap_const_lv4_C = "1100";
const sc_lv<4> multi_axi::ap_const_lv4_D = "1101";
const sc_lv<4> multi_axi::ap_const_lv4_E = "1110";
const sc_lv<4> multi_axi::ap_const_lv4_F = "1111";

multi_axi::multi_axi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    multi_axi_control_s_axi_U = new multi_axi_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("multi_axi_control_s_axi_U");
    multi_axi_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    multi_axi_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    multi_axi_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    multi_axi_control_s_axi_U->WVALID(s_axi_control_WVALID);
    multi_axi_control_s_axi_U->WREADY(s_axi_control_WREADY);
    multi_axi_control_s_axi_U->WDATA(s_axi_control_WDATA);
    multi_axi_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    multi_axi_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    multi_axi_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    multi_axi_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    multi_axi_control_s_axi_U->RVALID(s_axi_control_RVALID);
    multi_axi_control_s_axi_U->RREADY(s_axi_control_RREADY);
    multi_axi_control_s_axi_U->RDATA(s_axi_control_RDATA);
    multi_axi_control_s_axi_U->RRESP(s_axi_control_RRESP);
    multi_axi_control_s_axi_U->BVALID(s_axi_control_BVALID);
    multi_axi_control_s_axi_U->BREADY(s_axi_control_BREADY);
    multi_axi_control_s_axi_U->BRESP(s_axi_control_BRESP);
    multi_axi_control_s_axi_U->ACLK(ap_clk);
    multi_axi_control_s_axi_U->ARESET(ap_rst_n_inv);
    multi_axi_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    multi_axi_control_s_axi_U->ap_start(ap_start);
    multi_axi_control_s_axi_U->interrupt(interrupt);
    multi_axi_control_s_axi_U->ap_ready(ap_ready);
    multi_axi_control_s_axi_U->ap_done(ap_done);
    multi_axi_control_s_axi_U->ap_idle(ap_idle);
    regslice_both_out_0_V_data_V_U = new regslice_both<32>("regslice_both_out_0_V_data_V_U");
    regslice_both_out_0_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_0_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_0_V_data_V_U->data_in(out_0_TDATA_int);
    regslice_both_out_0_V_data_V_U->vld_in(out_0_TVALID_int);
    regslice_both_out_0_V_data_V_U->ack_in(out_0_TREADY_int);
    regslice_both_out_0_V_data_V_U->data_out(out_0_TDATA);
    regslice_both_out_0_V_data_V_U->vld_out(regslice_both_out_0_V_data_V_U_vld_out);
    regslice_both_out_0_V_data_V_U->ack_out(out_0_TREADY);
    regslice_both_out_0_V_data_V_U->apdone_blk(regslice_both_out_0_V_data_V_U_apdone_blk);
    regslice_both_out_1_V_data_V_U = new regslice_both<32>("regslice_both_out_1_V_data_V_U");
    regslice_both_out_1_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_1_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_1_V_data_V_U->data_in(out_1_TDATA_int);
    regslice_both_out_1_V_data_V_U->vld_in(out_1_TVALID_int);
    regslice_both_out_1_V_data_V_U->ack_in(out_1_TREADY_int);
    regslice_both_out_1_V_data_V_U->data_out(out_1_TDATA);
    regslice_both_out_1_V_data_V_U->vld_out(regslice_both_out_1_V_data_V_U_vld_out);
    regslice_both_out_1_V_data_V_U->ack_out(out_1_TREADY);
    regslice_both_out_1_V_data_V_U->apdone_blk(regslice_both_out_1_V_data_V_U_apdone_blk);
    regslice_both_out_2_V_data_V_U = new regslice_both<32>("regslice_both_out_2_V_data_V_U");
    regslice_both_out_2_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_2_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_2_V_data_V_U->data_in(out_2_TDATA_int);
    regslice_both_out_2_V_data_V_U->vld_in(out_2_TVALID_int);
    regslice_both_out_2_V_data_V_U->ack_in(out_2_TREADY_int);
    regslice_both_out_2_V_data_V_U->data_out(out_2_TDATA);
    regslice_both_out_2_V_data_V_U->vld_out(regslice_both_out_2_V_data_V_U_vld_out);
    regslice_both_out_2_V_data_V_U->ack_out(out_2_TREADY);
    regslice_both_out_2_V_data_V_U->apdone_blk(regslice_both_out_2_V_data_V_U_apdone_blk);
    regslice_both_out_3_V_data_V_U = new regslice_both<32>("regslice_both_out_3_V_data_V_U");
    regslice_both_out_3_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_3_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_3_V_data_V_U->data_in(out_3_TDATA_int);
    regslice_both_out_3_V_data_V_U->vld_in(out_3_TVALID_int);
    regslice_both_out_3_V_data_V_U->ack_in(out_3_TREADY_int);
    regslice_both_out_3_V_data_V_U->data_out(out_3_TDATA);
    regslice_both_out_3_V_data_V_U->vld_out(regslice_both_out_3_V_data_V_U_vld_out);
    regslice_both_out_3_V_data_V_U->ack_out(out_3_TREADY);
    regslice_both_out_3_V_data_V_U->apdone_blk(regslice_both_out_3_V_data_V_U_apdone_blk);
    regslice_both_out_0_V_keep_V_U = new regslice_both<4>("regslice_both_out_0_V_keep_V_U");
    regslice_both_out_0_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_0_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_0_V_keep_V_U->data_in(out_0_TKEEP_int);
    regslice_both_out_0_V_keep_V_U->vld_in(out_0_TVALID_int);
    regslice_both_out_0_V_keep_V_U->ack_in(regslice_both_out_0_V_keep_V_U_ack_in_dummy);
    regslice_both_out_0_V_keep_V_U->data_out(out_0_TKEEP);
    regslice_both_out_0_V_keep_V_U->vld_out(regslice_both_out_0_V_keep_V_U_vld_out);
    regslice_both_out_0_V_keep_V_U->ack_out(out_0_TREADY);
    regslice_both_out_0_V_keep_V_U->apdone_blk(regslice_both_out_0_V_keep_V_U_apdone_blk);
    regslice_both_out_1_V_keep_V_U = new regslice_both<4>("regslice_both_out_1_V_keep_V_U");
    regslice_both_out_1_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_1_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_1_V_keep_V_U->data_in(out_1_TKEEP_int);
    regslice_both_out_1_V_keep_V_U->vld_in(out_1_TVALID_int);
    regslice_both_out_1_V_keep_V_U->ack_in(regslice_both_out_1_V_keep_V_U_ack_in_dummy);
    regslice_both_out_1_V_keep_V_U->data_out(out_1_TKEEP);
    regslice_both_out_1_V_keep_V_U->vld_out(regslice_both_out_1_V_keep_V_U_vld_out);
    regslice_both_out_1_V_keep_V_U->ack_out(out_1_TREADY);
    regslice_both_out_1_V_keep_V_U->apdone_blk(regslice_both_out_1_V_keep_V_U_apdone_blk);
    regslice_both_out_2_V_keep_V_U = new regslice_both<4>("regslice_both_out_2_V_keep_V_U");
    regslice_both_out_2_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_2_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_2_V_keep_V_U->data_in(out_2_TKEEP_int);
    regslice_both_out_2_V_keep_V_U->vld_in(out_2_TVALID_int);
    regslice_both_out_2_V_keep_V_U->ack_in(regslice_both_out_2_V_keep_V_U_ack_in_dummy);
    regslice_both_out_2_V_keep_V_U->data_out(out_2_TKEEP);
    regslice_both_out_2_V_keep_V_U->vld_out(regslice_both_out_2_V_keep_V_U_vld_out);
    regslice_both_out_2_V_keep_V_U->ack_out(out_2_TREADY);
    regslice_both_out_2_V_keep_V_U->apdone_blk(regslice_both_out_2_V_keep_V_U_apdone_blk);
    regslice_both_out_3_V_keep_V_U = new regslice_both<4>("regslice_both_out_3_V_keep_V_U");
    regslice_both_out_3_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_3_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_3_V_keep_V_U->data_in(out_3_TKEEP_int);
    regslice_both_out_3_V_keep_V_U->vld_in(out_3_TVALID_int);
    regslice_both_out_3_V_keep_V_U->ack_in(regslice_both_out_3_V_keep_V_U_ack_in_dummy);
    regslice_both_out_3_V_keep_V_U->data_out(out_3_TKEEP);
    regslice_both_out_3_V_keep_V_U->vld_out(regslice_both_out_3_V_keep_V_U_vld_out);
    regslice_both_out_3_V_keep_V_U->ack_out(out_3_TREADY);
    regslice_both_out_3_V_keep_V_U->apdone_blk(regslice_both_out_3_V_keep_V_U_apdone_blk);
    regslice_both_out_0_V_strb_V_U = new regslice_both<4>("regslice_both_out_0_V_strb_V_U");
    regslice_both_out_0_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_0_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_0_V_strb_V_U->data_in(out_0_TSTRB_int);
    regslice_both_out_0_V_strb_V_U->vld_in(out_0_TVALID_int);
    regslice_both_out_0_V_strb_V_U->ack_in(regslice_both_out_0_V_strb_V_U_ack_in_dummy);
    regslice_both_out_0_V_strb_V_U->data_out(out_0_TSTRB);
    regslice_both_out_0_V_strb_V_U->vld_out(regslice_both_out_0_V_strb_V_U_vld_out);
    regslice_both_out_0_V_strb_V_U->ack_out(out_0_TREADY);
    regslice_both_out_0_V_strb_V_U->apdone_blk(regslice_both_out_0_V_strb_V_U_apdone_blk);
    regslice_both_out_1_V_strb_V_U = new regslice_both<4>("regslice_both_out_1_V_strb_V_U");
    regslice_both_out_1_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_1_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_1_V_strb_V_U->data_in(out_1_TSTRB_int);
    regslice_both_out_1_V_strb_V_U->vld_in(out_1_TVALID_int);
    regslice_both_out_1_V_strb_V_U->ack_in(regslice_both_out_1_V_strb_V_U_ack_in_dummy);
    regslice_both_out_1_V_strb_V_U->data_out(out_1_TSTRB);
    regslice_both_out_1_V_strb_V_U->vld_out(regslice_both_out_1_V_strb_V_U_vld_out);
    regslice_both_out_1_V_strb_V_U->ack_out(out_1_TREADY);
    regslice_both_out_1_V_strb_V_U->apdone_blk(regslice_both_out_1_V_strb_V_U_apdone_blk);
    regslice_both_out_2_V_strb_V_U = new regslice_both<4>("regslice_both_out_2_V_strb_V_U");
    regslice_both_out_2_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_2_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_2_V_strb_V_U->data_in(out_2_TSTRB_int);
    regslice_both_out_2_V_strb_V_U->vld_in(out_2_TVALID_int);
    regslice_both_out_2_V_strb_V_U->ack_in(regslice_both_out_2_V_strb_V_U_ack_in_dummy);
    regslice_both_out_2_V_strb_V_U->data_out(out_2_TSTRB);
    regslice_both_out_2_V_strb_V_U->vld_out(regslice_both_out_2_V_strb_V_U_vld_out);
    regslice_both_out_2_V_strb_V_U->ack_out(out_2_TREADY);
    regslice_both_out_2_V_strb_V_U->apdone_blk(regslice_both_out_2_V_strb_V_U_apdone_blk);
    regslice_both_out_3_V_strb_V_U = new regslice_both<4>("regslice_both_out_3_V_strb_V_U");
    regslice_both_out_3_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_3_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_3_V_strb_V_U->data_in(out_3_TSTRB_int);
    regslice_both_out_3_V_strb_V_U->vld_in(out_3_TVALID_int);
    regslice_both_out_3_V_strb_V_U->ack_in(regslice_both_out_3_V_strb_V_U_ack_in_dummy);
    regslice_both_out_3_V_strb_V_U->data_out(out_3_TSTRB);
    regslice_both_out_3_V_strb_V_U->vld_out(regslice_both_out_3_V_strb_V_U_vld_out);
    regslice_both_out_3_V_strb_V_U->ack_out(out_3_TREADY);
    regslice_both_out_3_V_strb_V_U->apdone_blk(regslice_both_out_3_V_strb_V_U_apdone_blk);
    regslice_both_out_0_V_last_V_U = new regslice_both<1>("regslice_both_out_0_V_last_V_U");
    regslice_both_out_0_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_0_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_0_V_last_V_U->data_in(out_0_TLAST_int);
    regslice_both_out_0_V_last_V_U->vld_in(out_0_TVALID_int);
    regslice_both_out_0_V_last_V_U->ack_in(regslice_both_out_0_V_last_V_U_ack_in_dummy);
    regslice_both_out_0_V_last_V_U->data_out(out_0_TLAST);
    regslice_both_out_0_V_last_V_U->vld_out(regslice_both_out_0_V_last_V_U_vld_out);
    regslice_both_out_0_V_last_V_U->ack_out(out_0_TREADY);
    regslice_both_out_0_V_last_V_U->apdone_blk(regslice_both_out_0_V_last_V_U_apdone_blk);
    regslice_both_out_1_V_last_V_U = new regslice_both<1>("regslice_both_out_1_V_last_V_U");
    regslice_both_out_1_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_1_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_1_V_last_V_U->data_in(out_1_TLAST_int);
    regslice_both_out_1_V_last_V_U->vld_in(out_1_TVALID_int);
    regslice_both_out_1_V_last_V_U->ack_in(regslice_both_out_1_V_last_V_U_ack_in_dummy);
    regslice_both_out_1_V_last_V_U->data_out(out_1_TLAST);
    regslice_both_out_1_V_last_V_U->vld_out(regslice_both_out_1_V_last_V_U_vld_out);
    regslice_both_out_1_V_last_V_U->ack_out(out_1_TREADY);
    regslice_both_out_1_V_last_V_U->apdone_blk(regslice_both_out_1_V_last_V_U_apdone_blk);
    regslice_both_out_2_V_last_V_U = new regslice_both<1>("regslice_both_out_2_V_last_V_U");
    regslice_both_out_2_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_2_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_2_V_last_V_U->data_in(out_2_TLAST_int);
    regslice_both_out_2_V_last_V_U->vld_in(out_2_TVALID_int);
    regslice_both_out_2_V_last_V_U->ack_in(regslice_both_out_2_V_last_V_U_ack_in_dummy);
    regslice_both_out_2_V_last_V_U->data_out(out_2_TLAST);
    regslice_both_out_2_V_last_V_U->vld_out(regslice_both_out_2_V_last_V_U_vld_out);
    regslice_both_out_2_V_last_V_U->ack_out(out_2_TREADY);
    regslice_both_out_2_V_last_V_U->apdone_blk(regslice_both_out_2_V_last_V_U_apdone_blk);
    regslice_both_out_3_V_last_V_U = new regslice_both<1>("regslice_both_out_3_V_last_V_U");
    regslice_both_out_3_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_3_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_3_V_last_V_U->data_in(out_3_TLAST_int);
    regslice_both_out_3_V_last_V_U->vld_in(out_3_TVALID_int);
    regslice_both_out_3_V_last_V_U->ack_in(regslice_both_out_3_V_last_V_U_ack_in_dummy);
    regslice_both_out_3_V_last_V_U->data_out(out_3_TLAST);
    regslice_both_out_3_V_last_V_U->vld_out(regslice_both_out_3_V_last_V_U_vld_out);
    regslice_both_out_3_V_last_V_U->ack_out(out_3_TREADY);
    regslice_both_out_3_V_last_V_U->apdone_blk(regslice_both_out_3_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );
    sensitive << ( out_0_TREADY_int );
    sensitive << ( out_1_TREADY_int );
    sensitive << ( out_2_TREADY_int );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( state_load_reg_478 );
    sensitive << ( out_0_TREADY_int );
    sensitive << ( out_1_TREADY_int );
    sensitive << ( out_2_TREADY_int );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( state_load_reg_478 );
    sensitive << ( out_0_TREADY_int );
    sensitive << ( out_1_TREADY_int );
    sensitive << ( out_2_TREADY_int );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( state_load_reg_478 );
    sensitive << ( out_0_TREADY_int );
    sensitive << ( out_1_TREADY_int );
    sensitive << ( out_2_TREADY_int );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( regslice_both_out_0_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_1_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_2_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_3_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( state_load_reg_478 );
    sensitive << ( out_0_TREADY_int );
    sensitive << ( out_1_TREADY_int );
    sensitive << ( out_2_TREADY_int );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_ap_condition_259);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_0_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_1_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_2_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_3_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op59_read_state2);
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op63_read_state2);
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op67_read_state2);
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op71_read_state2);
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op77_write_state2);
    sensitive << ( state );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op79_write_state2);
    sensitive << ( state );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op81_write_state2);
    sensitive << ( state );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_predicate_op83_write_state2);
    sensitive << ( state );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_0_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_1_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_2_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_3_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_in_0_TDATA_blk_n);
    sensitive << ( in_0_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_in_0_TREADY);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_in_1_TDATA_blk_n);
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_in_1_TREADY);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_in_2_TDATA_blk_n);
    sensitive << ( in_2_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_in_2_TREADY);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_in_3_TDATA_blk_n);
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_in_3_TREADY);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_out_0_TDATA_blk_n);
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( out_0_TREADY_int );

    SC_METHOD(thread_out_0_TDATA_int);
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );
    sensitive << ( tmp_data_V_1_reg_406 );
    sensitive << ( tmp_data_V_2_reg_430 );
    sensitive << ( tmp_data_V_3_reg_454 );

    SC_METHOD(thread_out_0_TKEEP_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TKEEP );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );
    sensitive << ( tmp_keep_V_1_reg_414 );
    sensitive << ( tmp_keep_V_2_reg_438 );
    sensitive << ( tmp_keep_V_3_reg_462 );

    SC_METHOD(thread_out_0_TLAST_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );

    SC_METHOD(thread_out_0_TSTRB_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TSTRB );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );
    sensitive << ( tmp_strb_V_1_reg_422 );
    sensitive << ( tmp_strb_V_2_reg_446 );
    sensitive << ( tmp_strb_V_3_reg_470 );

    SC_METHOD(thread_out_0_TVALID);
    sensitive << ( regslice_both_out_0_V_data_V_U_vld_out );

    SC_METHOD(thread_out_0_TVALID_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op83_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_out_1_TDATA_blk_n);
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( out_1_TREADY_int );

    SC_METHOD(thread_out_1_TDATA_int);
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );
    sensitive << ( tmp_data_V_1_reg_406 );
    sensitive << ( tmp_data_V_2_reg_430 );
    sensitive << ( tmp_data_V_3_reg_454 );

    SC_METHOD(thread_out_1_TKEEP_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TKEEP );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );
    sensitive << ( tmp_keep_V_1_reg_414 );
    sensitive << ( tmp_keep_V_2_reg_438 );
    sensitive << ( tmp_keep_V_3_reg_462 );

    SC_METHOD(thread_out_1_TLAST_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );

    SC_METHOD(thread_out_1_TSTRB_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TSTRB );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );
    sensitive << ( tmp_strb_V_1_reg_422 );
    sensitive << ( tmp_strb_V_2_reg_446 );
    sensitive << ( tmp_strb_V_3_reg_470 );

    SC_METHOD(thread_out_1_TVALID);
    sensitive << ( regslice_both_out_1_V_data_V_U_vld_out );

    SC_METHOD(thread_out_1_TVALID_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op81_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_out_2_TDATA_blk_n);
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( out_2_TREADY_int );

    SC_METHOD(thread_out_2_TDATA_int);
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );
    sensitive << ( tmp_data_V_1_reg_406 );
    sensitive << ( tmp_data_V_2_reg_430 );
    sensitive << ( tmp_data_V_3_reg_454 );

    SC_METHOD(thread_out_2_TKEEP_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TKEEP );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );
    sensitive << ( tmp_keep_V_1_reg_414 );
    sensitive << ( tmp_keep_V_2_reg_438 );
    sensitive << ( tmp_keep_V_3_reg_462 );

    SC_METHOD(thread_out_2_TLAST_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );

    SC_METHOD(thread_out_2_TSTRB_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TSTRB );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );
    sensitive << ( tmp_strb_V_1_reg_422 );
    sensitive << ( tmp_strb_V_2_reg_446 );
    sensitive << ( tmp_strb_V_3_reg_470 );

    SC_METHOD(thread_out_2_TVALID);
    sensitive << ( regslice_both_out_2_V_data_V_U_vld_out );

    SC_METHOD(thread_out_2_TVALID_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op79_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_out_3_TDATA_blk_n);
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( out_3_TREADY_int );

    SC_METHOD(thread_out_3_TDATA_int);
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( tmp_data_V_1_reg_406 );
    sensitive << ( tmp_data_V_2_reg_430 );
    sensitive << ( tmp_data_V_3_reg_454 );

    SC_METHOD(thread_out_3_TKEEP_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TKEEP );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( tmp_keep_V_1_reg_414 );
    sensitive << ( tmp_keep_V_2_reg_438 );
    sensitive << ( tmp_keep_V_3_reg_462 );

    SC_METHOD(thread_out_3_TLAST_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );

    SC_METHOD(thread_out_3_TSTRB_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( in_0_TSTRB );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( tmp_strb_V_1_reg_422 );
    sensitive << ( tmp_strb_V_2_reg_446 );
    sensitive << ( tmp_strb_V_3_reg_470 );

    SC_METHOD(thread_out_3_TVALID);
    sensitive << ( regslice_both_out_3_V_data_V_U_vld_out );

    SC_METHOD(thread_out_3_TVALID_int);
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_predicate_op77_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_state_load_load_fu_342_p1);
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );

    SC_METHOD(thread_tmp_1_nbreadreq_fu_120_p6);
    sensitive << ( in_1_TVALID );

    SC_METHOD(thread_tmp_2_nbreadreq_fu_134_p6);
    sensitive << ( in_2_TVALID );

    SC_METHOD(thread_tmp_3_nbreadreq_fu_148_p6);
    sensitive << ( in_3_TVALID );

    SC_METHOD(thread_tmp_nbreadreq_fu_106_p6);
    sensitive << ( in_0_TVALID );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( in_2_TVALID );
    sensitive << ( in_3_TVALID );
    sensitive << ( state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_106_p6 );
    sensitive << ( tmp_1_nbreadreq_fu_120_p6 );
    sensitive << ( tmp_2_nbreadreq_fu_134_p6 );
    sensitive << ( tmp_3_nbreadreq_fu_148_p6 );
    sensitive << ( state_load_load_fu_342_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_load_reg_478 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_predicate_op59_read_state2 );
    sensitive << ( ap_predicate_op63_read_state2 );
    sensitive << ( ap_predicate_op67_read_state2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );
    sensitive << ( regslice_both_out_0_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_1_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_2_V_data_V_U_apdone_blk );
    sensitive << ( regslice_both_out_3_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state6_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    state = "0000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "multi_axi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_0_TDATA, "(port)in_0_TDATA");
    sc_trace(mVcdFile, in_0_TVALID, "(port)in_0_TVALID");
    sc_trace(mVcdFile, in_0_TREADY, "(port)in_0_TREADY");
    sc_trace(mVcdFile, in_1_TDATA, "(port)in_1_TDATA");
    sc_trace(mVcdFile, in_1_TVALID, "(port)in_1_TVALID");
    sc_trace(mVcdFile, in_1_TREADY, "(port)in_1_TREADY");
    sc_trace(mVcdFile, in_2_TDATA, "(port)in_2_TDATA");
    sc_trace(mVcdFile, in_2_TVALID, "(port)in_2_TVALID");
    sc_trace(mVcdFile, in_2_TREADY, "(port)in_2_TREADY");
    sc_trace(mVcdFile, in_3_TDATA, "(port)in_3_TDATA");
    sc_trace(mVcdFile, in_3_TVALID, "(port)in_3_TVALID");
    sc_trace(mVcdFile, in_3_TREADY, "(port)in_3_TREADY");
    sc_trace(mVcdFile, in_0_TKEEP, "(port)in_0_TKEEP");
    sc_trace(mVcdFile, in_1_TKEEP, "(port)in_1_TKEEP");
    sc_trace(mVcdFile, in_2_TKEEP, "(port)in_2_TKEEP");
    sc_trace(mVcdFile, in_3_TKEEP, "(port)in_3_TKEEP");
    sc_trace(mVcdFile, in_0_TSTRB, "(port)in_0_TSTRB");
    sc_trace(mVcdFile, in_1_TSTRB, "(port)in_1_TSTRB");
    sc_trace(mVcdFile, in_2_TSTRB, "(port)in_2_TSTRB");
    sc_trace(mVcdFile, in_3_TSTRB, "(port)in_3_TSTRB");
    sc_trace(mVcdFile, in_0_TLAST, "(port)in_0_TLAST");
    sc_trace(mVcdFile, in_1_TLAST, "(port)in_1_TLAST");
    sc_trace(mVcdFile, in_2_TLAST, "(port)in_2_TLAST");
    sc_trace(mVcdFile, in_3_TLAST, "(port)in_3_TLAST");
    sc_trace(mVcdFile, out_0_TDATA, "(port)out_0_TDATA");
    sc_trace(mVcdFile, out_0_TVALID, "(port)out_0_TVALID");
    sc_trace(mVcdFile, out_0_TREADY, "(port)out_0_TREADY");
    sc_trace(mVcdFile, out_1_TDATA, "(port)out_1_TDATA");
    sc_trace(mVcdFile, out_1_TVALID, "(port)out_1_TVALID");
    sc_trace(mVcdFile, out_1_TREADY, "(port)out_1_TREADY");
    sc_trace(mVcdFile, out_2_TDATA, "(port)out_2_TDATA");
    sc_trace(mVcdFile, out_2_TVALID, "(port)out_2_TVALID");
    sc_trace(mVcdFile, out_2_TREADY, "(port)out_2_TREADY");
    sc_trace(mVcdFile, out_3_TDATA, "(port)out_3_TDATA");
    sc_trace(mVcdFile, out_3_TVALID, "(port)out_3_TVALID");
    sc_trace(mVcdFile, out_3_TREADY, "(port)out_3_TREADY");
    sc_trace(mVcdFile, out_0_TKEEP, "(port)out_0_TKEEP");
    sc_trace(mVcdFile, out_1_TKEEP, "(port)out_1_TKEEP");
    sc_trace(mVcdFile, out_2_TKEEP, "(port)out_2_TKEEP");
    sc_trace(mVcdFile, out_3_TKEEP, "(port)out_3_TKEEP");
    sc_trace(mVcdFile, out_0_TSTRB, "(port)out_0_TSTRB");
    sc_trace(mVcdFile, out_1_TSTRB, "(port)out_1_TSTRB");
    sc_trace(mVcdFile, out_2_TSTRB, "(port)out_2_TSTRB");
    sc_trace(mVcdFile, out_3_TSTRB, "(port)out_3_TSTRB");
    sc_trace(mVcdFile, out_0_TLAST, "(port)out_0_TLAST");
    sc_trace(mVcdFile, out_1_TLAST, "(port)out_1_TLAST");
    sc_trace(mVcdFile, out_2_TLAST, "(port)out_2_TLAST");
    sc_trace(mVcdFile, out_3_TLAST, "(port)out_3_TLAST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, state, "state");
    sc_trace(mVcdFile, in_0_TDATA_blk_n, "in_0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_106_p6, "tmp_nbreadreq_fu_106_p6");
    sc_trace(mVcdFile, tmp_1_nbreadreq_fu_120_p6, "tmp_1_nbreadreq_fu_120_p6");
    sc_trace(mVcdFile, tmp_2_nbreadreq_fu_134_p6, "tmp_2_nbreadreq_fu_134_p6");
    sc_trace(mVcdFile, tmp_3_nbreadreq_fu_148_p6, "tmp_3_nbreadreq_fu_148_p6");
    sc_trace(mVcdFile, in_1_TDATA_blk_n, "in_1_TDATA_blk_n");
    sc_trace(mVcdFile, in_2_TDATA_blk_n, "in_2_TDATA_blk_n");
    sc_trace(mVcdFile, in_3_TDATA_blk_n, "in_3_TDATA_blk_n");
    sc_trace(mVcdFile, out_0_TDATA_blk_n, "out_0_TDATA_blk_n");
    sc_trace(mVcdFile, state_load_load_fu_342_p1, "state_load_load_fu_342_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, state_load_reg_478, "state_load_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, out_1_TDATA_blk_n, "out_1_TDATA_blk_n");
    sc_trace(mVcdFile, out_2_TDATA_blk_n, "out_2_TDATA_blk_n");
    sc_trace(mVcdFile, out_3_TDATA_blk_n, "out_3_TDATA_blk_n");
    sc_trace(mVcdFile, ap_predicate_op59_read_state2, "ap_predicate_op59_read_state2");
    sc_trace(mVcdFile, ap_predicate_op63_read_state2, "ap_predicate_op63_read_state2");
    sc_trace(mVcdFile, ap_predicate_op67_read_state2, "ap_predicate_op67_read_state2");
    sc_trace(mVcdFile, ap_predicate_op71_read_state2, "ap_predicate_op71_read_state2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, ap_predicate_op77_write_state2, "ap_predicate_op77_write_state2");
    sc_trace(mVcdFile, ap_predicate_op79_write_state2, "ap_predicate_op79_write_state2");
    sc_trace(mVcdFile, ap_predicate_op81_write_state2, "ap_predicate_op81_write_state2");
    sc_trace(mVcdFile, ap_predicate_op83_write_state2, "ap_predicate_op83_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, tmp_data_V_1_reg_406, "tmp_data_V_1_reg_406");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_414, "tmp_keep_V_1_reg_414");
    sc_trace(mVcdFile, tmp_strb_V_1_reg_422, "tmp_strb_V_1_reg_422");
    sc_trace(mVcdFile, tmp_data_V_2_reg_430, "tmp_data_V_2_reg_430");
    sc_trace(mVcdFile, tmp_keep_V_2_reg_438, "tmp_keep_V_2_reg_438");
    sc_trace(mVcdFile, tmp_strb_V_2_reg_446, "tmp_strb_V_2_reg_446");
    sc_trace(mVcdFile, tmp_data_V_3_reg_454, "tmp_data_V_3_reg_454");
    sc_trace(mVcdFile, tmp_keep_V_3_reg_462, "tmp_keep_V_3_reg_462");
    sc_trace(mVcdFile, tmp_strb_V_3_reg_470, "tmp_strb_V_3_reg_470");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, regslice_both_out_0_V_data_V_U_apdone_blk, "regslice_both_out_0_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_1_V_data_V_U_apdone_blk, "regslice_both_out_1_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_2_V_data_V_U_apdone_blk, "regslice_both_out_2_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_3_V_data_V_U_apdone_blk, "regslice_both_out_3_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, out_0_TDATA_int, "out_0_TDATA_int");
    sc_trace(mVcdFile, out_0_TVALID_int, "out_0_TVALID_int");
    sc_trace(mVcdFile, out_0_TREADY_int, "out_0_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_0_V_data_V_U_vld_out, "regslice_both_out_0_V_data_V_U_vld_out");
    sc_trace(mVcdFile, out_1_TDATA_int, "out_1_TDATA_int");
    sc_trace(mVcdFile, out_1_TVALID_int, "out_1_TVALID_int");
    sc_trace(mVcdFile, out_1_TREADY_int, "out_1_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_1_V_data_V_U_vld_out, "regslice_both_out_1_V_data_V_U_vld_out");
    sc_trace(mVcdFile, out_2_TDATA_int, "out_2_TDATA_int");
    sc_trace(mVcdFile, out_2_TVALID_int, "out_2_TVALID_int");
    sc_trace(mVcdFile, out_2_TREADY_int, "out_2_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_2_V_data_V_U_vld_out, "regslice_both_out_2_V_data_V_U_vld_out");
    sc_trace(mVcdFile, out_3_TDATA_int, "out_3_TDATA_int");
    sc_trace(mVcdFile, out_3_TVALID_int, "out_3_TVALID_int");
    sc_trace(mVcdFile, out_3_TREADY_int, "out_3_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_3_V_data_V_U_vld_out, "regslice_both_out_3_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_0_V_keep_V_U_apdone_blk, "regslice_both_out_0_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, out_0_TKEEP_int, "out_0_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_out_0_V_keep_V_U_ack_in_dummy, "regslice_both_out_0_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_0_V_keep_V_U_vld_out, "regslice_both_out_0_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_1_V_keep_V_U_apdone_blk, "regslice_both_out_1_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, out_1_TKEEP_int, "out_1_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_out_1_V_keep_V_U_ack_in_dummy, "regslice_both_out_1_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_1_V_keep_V_U_vld_out, "regslice_both_out_1_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_2_V_keep_V_U_apdone_blk, "regslice_both_out_2_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, out_2_TKEEP_int, "out_2_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_out_2_V_keep_V_U_ack_in_dummy, "regslice_both_out_2_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_2_V_keep_V_U_vld_out, "regslice_both_out_2_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_3_V_keep_V_U_apdone_blk, "regslice_both_out_3_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, out_3_TKEEP_int, "out_3_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_out_3_V_keep_V_U_ack_in_dummy, "regslice_both_out_3_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_3_V_keep_V_U_vld_out, "regslice_both_out_3_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_0_V_strb_V_U_apdone_blk, "regslice_both_out_0_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, out_0_TSTRB_int, "out_0_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_out_0_V_strb_V_U_ack_in_dummy, "regslice_both_out_0_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_0_V_strb_V_U_vld_out, "regslice_both_out_0_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_1_V_strb_V_U_apdone_blk, "regslice_both_out_1_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, out_1_TSTRB_int, "out_1_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_out_1_V_strb_V_U_ack_in_dummy, "regslice_both_out_1_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_1_V_strb_V_U_vld_out, "regslice_both_out_1_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_2_V_strb_V_U_apdone_blk, "regslice_both_out_2_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, out_2_TSTRB_int, "out_2_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_out_2_V_strb_V_U_ack_in_dummy, "regslice_both_out_2_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_2_V_strb_V_U_vld_out, "regslice_both_out_2_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_3_V_strb_V_U_apdone_blk, "regslice_both_out_3_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, out_3_TSTRB_int, "out_3_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_out_3_V_strb_V_U_ack_in_dummy, "regslice_both_out_3_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_3_V_strb_V_U_vld_out, "regslice_both_out_3_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_0_V_last_V_U_apdone_blk, "regslice_both_out_0_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_0_TLAST_int, "out_0_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_0_V_last_V_U_ack_in_dummy, "regslice_both_out_0_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_0_V_last_V_U_vld_out, "regslice_both_out_0_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_1_V_last_V_U_apdone_blk, "regslice_both_out_1_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_1_TLAST_int, "out_1_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_1_V_last_V_U_ack_in_dummy, "regslice_both_out_1_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_1_V_last_V_U_vld_out, "regslice_both_out_1_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_2_V_last_V_U_apdone_blk, "regslice_both_out_2_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_2_TLAST_int, "out_2_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_2_V_last_V_U_ack_in_dummy, "regslice_both_out_2_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_2_V_last_V_U_vld_out, "regslice_both_out_2_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_3_V_last_V_U_apdone_blk, "regslice_both_out_3_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_3_TLAST_int, "out_3_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_3_V_last_V_U_ack_in_dummy, "regslice_both_out_3_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_3_V_last_V_U_vld_out, "regslice_both_out_3_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_259, "ap_condition_259");
#endif

    }
    mHdltvinHandle.open("multi_axi.hdltvin.dat");
    mHdltvoutHandle.open("multi_axi.hdltvout.dat");
}

multi_axi::~multi_axi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete multi_axi_control_s_axi_U;
    delete regslice_both_out_0_V_data_V_U;
    delete regslice_both_out_1_V_data_V_U;
    delete regslice_both_out_2_V_data_V_U;
    delete regslice_both_out_3_V_data_V_U;
    delete regslice_both_out_0_V_keep_V_U;
    delete regslice_both_out_1_V_keep_V_U;
    delete regslice_both_out_2_V_keep_V_U;
    delete regslice_both_out_3_V_keep_V_U;
    delete regslice_both_out_0_V_strb_V_U;
    delete regslice_both_out_1_V_strb_V_U;
    delete regslice_both_out_2_V_strb_V_U;
    delete regslice_both_out_3_V_strb_V_U;
    delete regslice_both_out_0_V_last_V_U;
    delete regslice_both_out_1_V_last_V_U;
    delete regslice_both_out_2_V_last_V_U;
    delete regslice_both_out_3_V_last_V_U;
}

void multi_axi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void multi_axi::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_259.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(ap_const_lv4_0, state.read())) {
            state = ap_const_lv4_1;
        } else if (esl_seteq<1,4,4>(state.read(), ap_const_lv4_1)) {
            state = ap_const_lv4_2;
        } else if (esl_seteq<1,4,4>(state.read(), ap_const_lv4_2)) {
            state = ap_const_lv4_3;
        } else if (esl_seteq<1,4,4>(state.read(), ap_const_lv4_3)) {
            state = ap_const_lv4_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        state_load_reg_478 = state.read();
        tmp_data_V_1_reg_406 = in_1_TDATA.read();
        tmp_data_V_2_reg_430 = in_2_TDATA.read();
        tmp_data_V_3_reg_454 = in_3_TDATA.read();
        tmp_keep_V_1_reg_414 = in_1_TKEEP.read();
        tmp_keep_V_2_reg_438 = in_2_TKEEP.read();
        tmp_keep_V_3_reg_462 = in_3_TKEEP.read();
        tmp_strb_V_1_reg_422 = in_1_TSTRB.read();
        tmp_strb_V_2_reg_446 = in_2_TSTRB.read();
        tmp_strb_V_3_reg_470 = in_3_TSTRB.read();
    }
}

void multi_axi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void multi_axi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void multi_axi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void multi_axi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void multi_axi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void multi_axi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void multi_axi::thread_ap_block_state2() {
    ap_block_state2 = ((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())));
}

void multi_axi::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_0_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_1_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_2_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_3_TREADY_int.read())));
}

void multi_axi::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_0_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_1_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_2_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_3_TREADY_int.read())));
}

void multi_axi::thread_ap_block_state4_io() {
    ap_block_state4_io = ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_0_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_1_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_2_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_3_TREADY_int.read())));
}

void multi_axi::thread_ap_block_state5_io() {
    ap_block_state5_io = ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_0_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_1_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_2_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_3_TREADY_int.read())));
}

void multi_axi::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_0_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_1_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_2_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_3_V_data_V_U_apdone_blk.read()));
}

void multi_axi::thread_ap_block_state6_io() {
    ap_block_state6_io = ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_0_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_1_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_2_TREADY_int.read())) || (esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_3_TREADY_int.read())));
}

void multi_axi::thread_ap_condition_259() {
    ap_condition_259 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())));
}

void multi_axi::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_0_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_1_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_2_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_3_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void multi_axi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void multi_axi::thread_ap_predicate_op59_read_state2() {
    ap_predicate_op59_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()));
}

void multi_axi::thread_ap_predicate_op63_read_state2() {
    ap_predicate_op63_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()));
}

void multi_axi::thread_ap_predicate_op67_read_state2() {
    ap_predicate_op67_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()));
}

void multi_axi::thread_ap_predicate_op71_read_state2() {
    ap_predicate_op71_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()));
}

void multi_axi::thread_ap_predicate_op77_write_state2() {
    ap_predicate_op77_write_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && esl_seteq<1,4,4>(state.read(), ap_const_lv4_3));
}

void multi_axi::thread_ap_predicate_op79_write_state2() {
    ap_predicate_op79_write_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && esl_seteq<1,4,4>(state.read(), ap_const_lv4_2));
}

void multi_axi::thread_ap_predicate_op81_write_state2() {
    ap_predicate_op81_write_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && esl_seteq<1,4,4>(state.read(), ap_const_lv4_1));
}

void multi_axi::thread_ap_predicate_op83_write_state2() {
    ap_predicate_op83_write_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && esl_seteq<1,4,4>(ap_const_lv4_0, state.read()));
}

void multi_axi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_0_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_1_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_2_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_3_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void multi_axi::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void multi_axi::thread_in_0_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()))) {
        in_0_TDATA_blk_n = in_0_TVALID.read();
    } else {
        in_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_in_0_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        in_0_TREADY = ap_const_logic_1;
    } else {
        in_0_TREADY = ap_const_logic_0;
    }
}

void multi_axi::thread_in_1_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()))) {
        in_1_TDATA_blk_n = in_1_TVALID.read();
    } else {
        in_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_in_1_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        in_1_TREADY = ap_const_logic_1;
    } else {
        in_1_TREADY = ap_const_logic_0;
    }
}

void multi_axi::thread_in_2_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()))) {
        in_2_TDATA_blk_n = in_2_TVALID.read();
    } else {
        in_2_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_in_2_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        in_2_TREADY = ap_const_logic_1;
    } else {
        in_2_TREADY = ap_const_logic_0;
    }
}

void multi_axi::thread_in_3_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()))) {
        in_3_TDATA_blk_n = in_3_TVALID.read();
    } else {
        in_3_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_in_3_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        in_3_TREADY = ap_const_logic_1;
    } else {
        in_3_TREADY = ap_const_logic_0;
    }
}

void multi_axi::thread_out_0_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read())) || 
         (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())))) {
        out_0_TDATA_blk_n = out_0_TREADY_int.read();
    } else {
        out_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_out_0_TDATA_int() {
    if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        out_0_TDATA_int = tmp_data_V_3_reg_454.read();
    } else if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        out_0_TDATA_int = tmp_data_V_2_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()))) {
        out_0_TDATA_int = tmp_data_V_1_reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_0_TDATA_int = in_0_TDATA.read();
    } else {
        out_0_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void multi_axi::thread_out_0_TKEEP_int() {
    if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        out_0_TKEEP_int = tmp_keep_V_3_reg_462.read();
    } else if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        out_0_TKEEP_int = tmp_keep_V_2_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()))) {
        out_0_TKEEP_int = tmp_keep_V_1_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_0_TKEEP_int = in_0_TKEEP.read();
    } else {
        out_0_TKEEP_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_0_TLAST_int() {
    if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        out_0_TLAST_int = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read())) || 
                (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())))))) {
        out_0_TLAST_int = ap_const_lv1_0;
    } else {
        out_0_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void multi_axi::thread_out_0_TSTRB_int() {
    if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        out_0_TSTRB_int = tmp_strb_V_3_reg_470.read();
    } else if ((esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        out_0_TSTRB_int = tmp_strb_V_2_reg_446.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()))) {
        out_0_TSTRB_int = tmp_strb_V_1_reg_422.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_0_TSTRB_int = in_0_TSTRB.read();
    } else {
        out_0_TSTRB_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_0_TVALID() {
    out_0_TVALID = regslice_both_out_0_V_data_V_U_vld_out.read();
}

void multi_axi::thread_out_0_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_write_state2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_state5_io.read(), ap_const_boolean_0)))) {
        out_0_TVALID_int = ap_const_logic_1;
    } else {
        out_0_TVALID_int = ap_const_logic_0;
    }
}

void multi_axi::thread_out_1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && 
          esl_seteq<1,4,4>(state.read(), ap_const_lv4_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)))) {
        out_1_TDATA_blk_n = out_1_TREADY_int.read();
    } else {
        out_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_out_1_TDATA_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TDATA_int = tmp_data_V_3_reg_454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TDATA_int = tmp_data_V_2_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TDATA_int = tmp_data_V_1_reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_1_TDATA_int = in_0_TDATA.read();
    } else {
        out_1_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void multi_axi::thread_out_1_TKEEP_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TKEEP_int = tmp_keep_V_3_reg_462.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TKEEP_int = tmp_keep_V_2_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TKEEP_int = tmp_keep_V_1_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_1_TKEEP_int = in_0_TKEEP.read();
    } else {
        out_1_TKEEP_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_1_TLAST_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TLAST_int = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())))))) {
        out_1_TLAST_int = ap_const_lv1_0;
    } else {
        out_1_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void multi_axi::thread_out_1_TSTRB_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TSTRB_int = tmp_strb_V_3_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TSTRB_int = tmp_strb_V_2_reg_446.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1))) {
        out_1_TSTRB_int = tmp_strb_V_1_reg_422.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_1_TSTRB_int = in_0_TSTRB.read();
    } else {
        out_1_TSTRB_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_1_TVALID() {
    out_1_TVALID = regslice_both_out_1_V_data_V_U_vld_out.read();
}

void multi_axi::thread_out_1_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op81_write_state2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_block_state5_io.read(), ap_const_boolean_0)))) {
        out_1_TVALID_int = ap_const_logic_1;
    } else {
        out_1_TVALID_int = ap_const_logic_0;
    }
}

void multi_axi::thread_out_2_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && 
          esl_seteq<1,4,4>(state.read(), ap_const_lv4_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)))) {
        out_2_TDATA_blk_n = out_2_TREADY_int.read();
    } else {
        out_2_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_out_2_TDATA_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TDATA_int = tmp_data_V_3_reg_454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TDATA_int = tmp_data_V_2_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TDATA_int = tmp_data_V_1_reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_2_TDATA_int = in_0_TDATA.read();
    } else {
        out_2_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void multi_axi::thread_out_2_TKEEP_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TKEEP_int = tmp_keep_V_3_reg_462.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TKEEP_int = tmp_keep_V_2_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TKEEP_int = tmp_keep_V_1_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_2_TKEEP_int = in_0_TKEEP.read();
    } else {
        out_2_TKEEP_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_2_TLAST_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TLAST_int = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())))))) {
        out_2_TLAST_int = ap_const_lv1_0;
    } else {
        out_2_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void multi_axi::thread_out_2_TSTRB_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TSTRB_int = tmp_strb_V_3_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TSTRB_int = tmp_strb_V_2_reg_446.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2))) {
        out_2_TSTRB_int = tmp_strb_V_1_reg_422.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_2_TSTRB_int = in_0_TSTRB.read();
    } else {
        out_2_TSTRB_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_2_TVALID() {
    out_2_TVALID = regslice_both_out_2_V_data_V_U_vld_out.read();
}

void multi_axi::thread_out_2_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op79_write_state2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_block_state5_io.read(), ap_const_boolean_0)))) {
        out_2_TVALID_int = ap_const_logic_1;
    } else {
        out_2_TVALID_int = ap_const_logic_0;
    }
}

void multi_axi::thread_out_3_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && 
          esl_seteq<1,4,4>(state.read(), ap_const_lv4_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)))) {
        out_3_TDATA_blk_n = out_3_TREADY_int.read();
    } else {
        out_3_TDATA_blk_n = ap_const_logic_1;
    }
}

void multi_axi::thread_out_3_TDATA_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TDATA_int = tmp_data_V_3_reg_454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TDATA_int = tmp_data_V_2_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TDATA_int = tmp_data_V_1_reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_3_TDATA_int = in_0_TDATA.read();
    } else {
        out_3_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void multi_axi::thread_out_3_TKEEP_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TKEEP_int = tmp_keep_V_3_reg_462.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TKEEP_int = tmp_keep_V_2_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TKEEP_int = tmp_keep_V_1_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_3_TKEEP_int = in_0_TKEEP.read();
    } else {
        out_3_TKEEP_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_3_TLAST_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TLAST_int = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())))))) {
        out_3_TLAST_int = ap_const_lv1_0;
    } else {
        out_3_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void multi_axi::thread_out_3_TSTRB_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TSTRB_int = tmp_strb_V_3_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TSTRB_int = tmp_strb_V_2_reg_446.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3))) {
        out_3_TSTRB_int = tmp_strb_V_1_reg_422.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()))))) {
        out_3_TSTRB_int = in_0_TSTRB.read();
    } else {
        out_3_TSTRB_int =  (sc_lv<4>) ("XXXX");
    }
}

void multi_axi::thread_out_3_TVALID() {
    out_3_TVALID = regslice_both_out_3_V_data_V_U_vld_out.read();
}

void multi_axi::thread_out_3_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op77_write_state2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_block_state5_io.read(), ap_const_boolean_0)))) {
        out_3_TVALID_int = ap_const_logic_1;
    } else {
        out_3_TVALID_int = ap_const_logic_0;
    }
}

void multi_axi::thread_state_load_load_fu_342_p1() {
    state_load_load_fu_342_p1 = state.read();
}

void multi_axi::thread_tmp_1_nbreadreq_fu_120_p6() {
    tmp_1_nbreadreq_fu_120_p6 =  (sc_lv<1>) ((in_1_TVALID.read()));
}

void multi_axi::thread_tmp_2_nbreadreq_fu_134_p6() {
    tmp_2_nbreadreq_fu_134_p6 =  (sc_lv<1>) ((in_2_TVALID.read()));
}

void multi_axi::thread_tmp_3_nbreadreq_fu_148_p6() {
    tmp_3_nbreadreq_fu_148_p6 =  (sc_lv<1>) ((in_3_TVALID.read()));
}

void multi_axi::thread_tmp_nbreadreq_fu_106_p6() {
    tmp_nbreadreq_fu_106_p6 =  (sc_lv<1>) ((in_0_TVALID.read()));
}

void multi_axi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && !esl_seteq<1,4,4>(ap_const_lv4_0, state.read()) && !esl_seteq<1,4,4>(state.read(), ap_const_lv4_1) && !esl_seteq<1,4,4>(state.read(), ap_const_lv4_2) && !esl_seteq<1,4,4>(state.read(), ap_const_lv4_3))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_120_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_134_p6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_nbreadreq_fu_148_p6.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_4) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_5) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_6) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_7) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_8) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_9) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_A) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_B) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_C) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_D) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_E) && !esl_seteq<1,4,4>(state_load_load_fu_342_p1.read(), ap_const_lv4_F))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_2_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_3_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && (((esl_seteq<1,1,1>(tmp_3_nbreadreq_fu_148_p6.read(), ap_const_lv1_0) || 
    esl_seteq<1,1,1>(tmp_2_nbreadreq_fu_134_p6.read(), ap_const_lv1_0)) || 
   esl_seteq<1,1,1>(tmp_1_nbreadreq_fu_120_p6.read(), ap_const_lv1_0)) || 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_106_p6.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0) && (((esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) || 
    esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
   esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
  esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && (((esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) || 
    esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
   esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
  esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_block_state5_io.read(), ap_const_boolean_0) && (((esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_3) || 
    esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_2)) || 
   esl_seteq<1,4,4>(state_load_reg_478.read(), ap_const_lv4_1)) || 
  esl_seteq<1,4,4>(ap_const_lv4_0, state_load_reg_478.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_0_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_1_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_2_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_out_3_V_data_V_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void multi_axi::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_TDATA\" :  \"" << in_0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_TVALID\" :  \"" << in_0_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_0_TREADY\" :  \"" << in_0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_TDATA\" :  \"" << in_1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_TVALID\" :  \"" << in_1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_1_TREADY\" :  \"" << in_1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_2_TDATA\" :  \"" << in_2_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_2_TVALID\" :  \"" << in_2_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_2_TREADY\" :  \"" << in_2_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_3_TDATA\" :  \"" << in_3_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_3_TVALID\" :  \"" << in_3_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_3_TREADY\" :  \"" << in_3_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_TKEEP\" :  \"" << in_0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_TKEEP\" :  \"" << in_1_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_2_TKEEP\" :  \"" << in_2_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_3_TKEEP\" :  \"" << in_3_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_TSTRB\" :  \"" << in_0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_TSTRB\" :  \"" << in_1_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_2_TSTRB\" :  \"" << in_2_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_3_TSTRB\" :  \"" << in_3_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_TLAST\" :  \"" << in_0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_TLAST\" :  \"" << in_1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_2_TLAST\" :  \"" << in_2_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_3_TLAST\" :  \"" << in_3_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_TDATA\" :  \"" << out_0_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_TVALID\" :  \"" << out_0_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_0_TREADY\" :  \"" << out_0_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_TDATA\" :  \"" << out_1_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_TVALID\" :  \"" << out_1_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_1_TREADY\" :  \"" << out_1_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_TDATA\" :  \"" << out_2_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_TVALID\" :  \"" << out_2_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_2_TREADY\" :  \"" << out_2_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_3_TDATA\" :  \"" << out_3_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_3_TVALID\" :  \"" << out_3_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_3_TREADY\" :  \"" << out_3_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_TKEEP\" :  \"" << out_0_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_TKEEP\" :  \"" << out_1_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_TKEEP\" :  \"" << out_2_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_3_TKEEP\" :  \"" << out_3_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_TSTRB\" :  \"" << out_0_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_TSTRB\" :  \"" << out_1_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_TSTRB\" :  \"" << out_2_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_3_TSTRB\" :  \"" << out_3_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_TLAST\" :  \"" << out_0_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_TLAST\" :  \"" << out_1_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_TLAST\" :  \"" << out_2_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_3_TLAST\" :  \"" << out_3_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

