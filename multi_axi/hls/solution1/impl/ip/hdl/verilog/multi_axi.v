// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="multi_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.860500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=166,HLS_SYN_LUT=583,HLS_VERSION=2020_1}" *)

module multi_axi (
        ap_clk,
        ap_rst_n,
        in_0_TDATA,
        in_0_TVALID,
        in_0_TREADY,
        in_1_TDATA,
        in_1_TVALID,
        in_1_TREADY,
        in_2_TDATA,
        in_2_TVALID,
        in_2_TREADY,
        in_3_TDATA,
        in_3_TVALID,
        in_3_TREADY,
        in_0_TKEEP,
        in_1_TKEEP,
        in_2_TKEEP,
        in_3_TKEEP,
        in_0_TSTRB,
        in_1_TSTRB,
        in_2_TSTRB,
        in_3_TSTRB,
        in_0_TLAST,
        in_1_TLAST,
        in_2_TLAST,
        in_3_TLAST,
        out_0_TDATA,
        out_0_TVALID,
        out_0_TREADY,
        out_1_TDATA,
        out_1_TVALID,
        out_1_TREADY,
        out_2_TDATA,
        out_2_TVALID,
        out_2_TREADY,
        out_3_TDATA,
        out_3_TVALID,
        out_3_TREADY,
        out_0_TKEEP,
        out_1_TKEEP,
        out_2_TKEEP,
        out_3_TKEEP,
        out_0_TSTRB,
        out_1_TSTRB,
        out_2_TSTRB,
        out_3_TSTRB,
        out_0_TLAST,
        out_1_TLAST,
        out_2_TLAST,
        out_3_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_0_TDATA;
input   in_0_TVALID;
output   in_0_TREADY;
input  [31:0] in_1_TDATA;
input   in_1_TVALID;
output   in_1_TREADY;
input  [31:0] in_2_TDATA;
input   in_2_TVALID;
output   in_2_TREADY;
input  [31:0] in_3_TDATA;
input   in_3_TVALID;
output   in_3_TREADY;
input  [3:0] in_0_TKEEP;
input  [3:0] in_1_TKEEP;
input  [3:0] in_2_TKEEP;
input  [3:0] in_3_TKEEP;
input  [3:0] in_0_TSTRB;
input  [3:0] in_1_TSTRB;
input  [3:0] in_2_TSTRB;
input  [3:0] in_3_TSTRB;
input  [0:0] in_0_TLAST;
input  [0:0] in_1_TLAST;
input  [0:0] in_2_TLAST;
input  [0:0] in_3_TLAST;
output  [31:0] out_0_TDATA;
output   out_0_TVALID;
input   out_0_TREADY;
output  [31:0] out_1_TDATA;
output   out_1_TVALID;
input   out_1_TREADY;
output  [31:0] out_2_TDATA;
output   out_2_TVALID;
input   out_2_TREADY;
output  [31:0] out_3_TDATA;
output   out_3_TVALID;
input   out_3_TREADY;
output  [3:0] out_0_TKEEP;
output  [3:0] out_1_TKEEP;
output  [3:0] out_2_TKEEP;
output  [3:0] out_3_TKEEP;
output  [3:0] out_0_TSTRB;
output  [3:0] out_1_TSTRB;
output  [3:0] out_2_TSTRB;
output  [3:0] out_3_TSTRB;
output  [0:0] out_0_TLAST;
output  [0:0] out_1_TLAST;
output  [0:0] out_2_TLAST;
output  [0:0] out_3_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg in_0_TREADY;
reg in_1_TREADY;
reg in_2_TREADY;
reg in_3_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [3:0] state;
reg    in_0_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_nbreadreq_fu_106_p6;
wire   [0:0] tmp_1_nbreadreq_fu_120_p6;
wire   [0:0] tmp_2_nbreadreq_fu_134_p6;
wire   [0:0] tmp_3_nbreadreq_fu_148_p6;
reg    in_1_TDATA_blk_n;
reg    in_2_TDATA_blk_n;
reg    in_3_TDATA_blk_n;
reg    out_0_TDATA_blk_n;
wire   [3:0] state_load_load_fu_342_p1;
wire    ap_CS_fsm_state3;
reg   [3:0] state_load_reg_478;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    out_1_TDATA_blk_n;
reg    out_2_TDATA_blk_n;
reg    out_3_TDATA_blk_n;
reg    ap_predicate_op59_read_state2;
reg    ap_predicate_op63_read_state2;
reg    ap_predicate_op67_read_state2;
reg    ap_predicate_op71_read_state2;
reg    ap_block_state2;
reg    ap_predicate_op77_write_state2;
reg    ap_predicate_op79_write_state2;
reg    ap_predicate_op81_write_state2;
reg    ap_predicate_op83_write_state2;
reg    ap_block_state2_io;
reg   [31:0] tmp_data_V_1_reg_406;
reg   [3:0] tmp_keep_V_1_reg_414;
reg   [3:0] tmp_strb_V_1_reg_422;
reg   [31:0] tmp_data_V_2_reg_430;
reg   [3:0] tmp_keep_V_2_reg_438;
reg   [3:0] tmp_strb_V_2_reg_446;
reg   [31:0] tmp_data_V_3_reg_454;
reg   [3:0] tmp_keep_V_3_reg_462;
reg   [3:0] tmp_strb_V_3_reg_470;
reg    ap_block_state3_io;
reg    ap_block_state4_io;
reg    ap_block_state5_io;
wire    regslice_both_out_0_V_data_V_U_apdone_blk;
wire    regslice_both_out_1_V_data_V_U_apdone_blk;
wire    regslice_both_out_2_V_data_V_U_apdone_blk;
wire    regslice_both_out_3_V_data_V_U_apdone_blk;
reg    ap_block_state6;
reg    ap_block_state6_io;
reg   [5:0] ap_NS_fsm;
reg   [31:0] out_0_TDATA_int;
reg    out_0_TVALID_int;
wire    out_0_TREADY_int;
wire    regslice_both_out_0_V_data_V_U_vld_out;
reg   [31:0] out_1_TDATA_int;
reg    out_1_TVALID_int;
wire    out_1_TREADY_int;
wire    regslice_both_out_1_V_data_V_U_vld_out;
reg   [31:0] out_2_TDATA_int;
reg    out_2_TVALID_int;
wire    out_2_TREADY_int;
wire    regslice_both_out_2_V_data_V_U_vld_out;
reg   [31:0] out_3_TDATA_int;
reg    out_3_TVALID_int;
wire    out_3_TREADY_int;
wire    regslice_both_out_3_V_data_V_U_vld_out;
wire    regslice_both_out_0_V_keep_V_U_apdone_blk;
reg   [3:0] out_0_TKEEP_int;
wire    regslice_both_out_0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_0_V_keep_V_U_vld_out;
wire    regslice_both_out_1_V_keep_V_U_apdone_blk;
reg   [3:0] out_1_TKEEP_int;
wire    regslice_both_out_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_1_V_keep_V_U_vld_out;
wire    regslice_both_out_2_V_keep_V_U_apdone_blk;
reg   [3:0] out_2_TKEEP_int;
wire    regslice_both_out_2_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_2_V_keep_V_U_vld_out;
wire    regslice_both_out_3_V_keep_V_U_apdone_blk;
reg   [3:0] out_3_TKEEP_int;
wire    regslice_both_out_3_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_3_V_keep_V_U_vld_out;
wire    regslice_both_out_0_V_strb_V_U_apdone_blk;
reg   [3:0] out_0_TSTRB_int;
wire    regslice_both_out_0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_0_V_strb_V_U_vld_out;
wire    regslice_both_out_1_V_strb_V_U_apdone_blk;
reg   [3:0] out_1_TSTRB_int;
wire    regslice_both_out_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_1_V_strb_V_U_vld_out;
wire    regslice_both_out_2_V_strb_V_U_apdone_blk;
reg   [3:0] out_2_TSTRB_int;
wire    regslice_both_out_2_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_2_V_strb_V_U_vld_out;
wire    regslice_both_out_3_V_strb_V_U_apdone_blk;
reg   [3:0] out_3_TSTRB_int;
wire    regslice_both_out_3_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_3_V_strb_V_U_vld_out;
wire    regslice_both_out_0_V_last_V_U_apdone_blk;
reg   [0:0] out_0_TLAST_int;
wire    regslice_both_out_0_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_0_V_last_V_U_vld_out;
wire    regslice_both_out_1_V_last_V_U_apdone_blk;
reg   [0:0] out_1_TLAST_int;
wire    regslice_both_out_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_1_V_last_V_U_vld_out;
wire    regslice_both_out_2_V_last_V_U_apdone_blk;
reg   [0:0] out_2_TLAST_int;
wire    regslice_both_out_2_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_2_V_last_V_U_vld_out;
wire    regslice_both_out_3_V_last_V_U_apdone_blk;
reg   [0:0] out_3_TLAST_int;
wire    regslice_both_out_3_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_3_V_last_V_U_vld_out;
reg    ap_condition_259;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 state = 4'd0;
end

multi_axi_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
multi_axi_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_0_TDATA_int),
    .vld_in(out_0_TVALID_int),
    .ack_in(out_0_TREADY_int),
    .data_out(out_0_TDATA),
    .vld_out(regslice_both_out_0_V_data_V_U_vld_out),
    .ack_out(out_0_TREADY),
    .apdone_blk(regslice_both_out_0_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_1_TDATA_int),
    .vld_in(out_1_TVALID_int),
    .ack_in(out_1_TREADY_int),
    .data_out(out_1_TDATA),
    .vld_out(regslice_both_out_1_V_data_V_U_vld_out),
    .ack_out(out_1_TREADY),
    .apdone_blk(regslice_both_out_1_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_2_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_2_TDATA_int),
    .vld_in(out_2_TVALID_int),
    .ack_in(out_2_TREADY_int),
    .data_out(out_2_TDATA),
    .vld_out(regslice_both_out_2_V_data_V_U_vld_out),
    .ack_out(out_2_TREADY),
    .apdone_blk(regslice_both_out_2_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_3_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_3_TDATA_int),
    .vld_in(out_3_TVALID_int),
    .ack_in(out_3_TREADY_int),
    .data_out(out_3_TDATA),
    .vld_out(regslice_both_out_3_V_data_V_U_vld_out),
    .ack_out(out_3_TREADY),
    .apdone_blk(regslice_both_out_3_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_0_TKEEP_int),
    .vld_in(out_0_TVALID_int),
    .ack_in(regslice_both_out_0_V_keep_V_U_ack_in_dummy),
    .data_out(out_0_TKEEP),
    .vld_out(regslice_both_out_0_V_keep_V_U_vld_out),
    .ack_out(out_0_TREADY),
    .apdone_blk(regslice_both_out_0_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_1_TKEEP_int),
    .vld_in(out_1_TVALID_int),
    .ack_in(regslice_both_out_1_V_keep_V_U_ack_in_dummy),
    .data_out(out_1_TKEEP),
    .vld_out(regslice_both_out_1_V_keep_V_U_vld_out),
    .ack_out(out_1_TREADY),
    .apdone_blk(regslice_both_out_1_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_2_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_2_TKEEP_int),
    .vld_in(out_2_TVALID_int),
    .ack_in(regslice_both_out_2_V_keep_V_U_ack_in_dummy),
    .data_out(out_2_TKEEP),
    .vld_out(regslice_both_out_2_V_keep_V_U_vld_out),
    .ack_out(out_2_TREADY),
    .apdone_blk(regslice_both_out_2_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_3_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_3_TKEEP_int),
    .vld_in(out_3_TVALID_int),
    .ack_in(regslice_both_out_3_V_keep_V_U_ack_in_dummy),
    .data_out(out_3_TKEEP),
    .vld_out(regslice_both_out_3_V_keep_V_U_vld_out),
    .ack_out(out_3_TREADY),
    .apdone_blk(regslice_both_out_3_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_0_TSTRB_int),
    .vld_in(out_0_TVALID_int),
    .ack_in(regslice_both_out_0_V_strb_V_U_ack_in_dummy),
    .data_out(out_0_TSTRB),
    .vld_out(regslice_both_out_0_V_strb_V_U_vld_out),
    .ack_out(out_0_TREADY),
    .apdone_blk(regslice_both_out_0_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_1_TSTRB_int),
    .vld_in(out_1_TVALID_int),
    .ack_in(regslice_both_out_1_V_strb_V_U_ack_in_dummy),
    .data_out(out_1_TSTRB),
    .vld_out(regslice_both_out_1_V_strb_V_U_vld_out),
    .ack_out(out_1_TREADY),
    .apdone_blk(regslice_both_out_1_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_2_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_2_TSTRB_int),
    .vld_in(out_2_TVALID_int),
    .ack_in(regslice_both_out_2_V_strb_V_U_ack_in_dummy),
    .data_out(out_2_TSTRB),
    .vld_out(regslice_both_out_2_V_strb_V_U_vld_out),
    .ack_out(out_2_TREADY),
    .apdone_blk(regslice_both_out_2_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_3_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_3_TSTRB_int),
    .vld_in(out_3_TVALID_int),
    .ack_in(regslice_both_out_3_V_strb_V_U_ack_in_dummy),
    .data_out(out_3_TSTRB),
    .vld_out(regslice_both_out_3_V_strb_V_U_vld_out),
    .ack_out(out_3_TREADY),
    .apdone_blk(regslice_both_out_3_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_0_TLAST_int),
    .vld_in(out_0_TVALID_int),
    .ack_in(regslice_both_out_0_V_last_V_U_ack_in_dummy),
    .data_out(out_0_TLAST),
    .vld_out(regslice_both_out_0_V_last_V_U_vld_out),
    .ack_out(out_0_TREADY),
    .apdone_blk(regslice_both_out_0_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_1_TLAST_int),
    .vld_in(out_1_TVALID_int),
    .ack_in(regslice_both_out_1_V_last_V_U_ack_in_dummy),
    .data_out(out_1_TLAST),
    .vld_out(regslice_both_out_1_V_last_V_U_vld_out),
    .ack_out(out_1_TREADY),
    .apdone_blk(regslice_both_out_1_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_2_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_2_TLAST_int),
    .vld_in(out_2_TVALID_int),
    .ack_in(regslice_both_out_2_V_last_V_U_ack_in_dummy),
    .data_out(out_2_TLAST),
    .vld_out(regslice_both_out_2_V_last_V_U_vld_out),
    .ack_out(out_2_TREADY),
    .apdone_blk(regslice_both_out_2_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_3_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_3_TLAST_int),
    .vld_in(out_3_TVALID_int),
    .ack_in(regslice_both_out_3_V_last_V_U_ack_in_dummy),
    .data_out(out_3_TLAST),
    .vld_out(regslice_both_out_3_V_last_V_U_vld_out),
    .ack_out(out_3_TREADY),
    .apdone_blk(regslice_both_out_3_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_259)) begin
        if ((state == 4'd0)) begin
                        state[0] <= 1'b1;
            state[1] <= 1'b0;
        end else if ((state == 4'd1)) begin
                        state[0] <= 1'b0;
            state[1] <= 1'b1;
        end else if ((state == 4'd2)) begin
                        state[0] <= 1'b1;
            state[1] <= 1'b1;
        end else if ((state == 4'd3)) begin
                        state[0] <= 1'b0;
            state[1] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        state_load_reg_478[1 : 0] <= state[1 : 0];
        tmp_data_V_1_reg_406 <= in_1_TDATA;
        tmp_data_V_2_reg_430 <= in_2_TDATA;
        tmp_data_V_3_reg_454 <= in_3_TDATA;
        tmp_keep_V_1_reg_414 <= in_1_TKEEP;
        tmp_keep_V_2_reg_438 <= in_2_TKEEP;
        tmp_keep_V_3_reg_462 <= in_3_TKEEP;
        tmp_strb_V_1_reg_422 <= in_1_TSTRB;
        tmp_strb_V_2_reg_446 <= in_2_TSTRB;
        tmp_strb_V_3_reg_470 <= in_3_TSTRB;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state6_io) | (regslice_both_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_0_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state6_io) | (regslice_both_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_0_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_0_TDATA_blk_n = in_0_TVALID;
    end else begin
        in_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op59_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_0_TREADY = 1'b1;
    end else begin
        in_0_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_1_TDATA_blk_n = in_1_TVALID;
    end else begin
        in_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op63_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_1_TREADY = 1'b1;
    end else begin
        in_1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_2_TDATA_blk_n = in_2_TVALID;
    end else begin
        in_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op67_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_2_TREADY = 1'b1;
    end else begin
        in_2_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_3_TDATA_blk_n = in_3_TVALID;
    end else begin
        in_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op71_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_3_TREADY = 1'b1;
    end else begin
        in_3_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (state == 4'd0) & (1'b1 == ap_CS_fsm_state2)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state6)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state5)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state4)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        out_0_TDATA_blk_n = out_0_TREADY_int;
    end else begin
        out_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        out_0_TDATA_int = tmp_data_V_3_reg_454;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        out_0_TDATA_int = tmp_data_V_2_reg_430;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_0_TDATA_int = tmp_data_V_1_reg_406;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op83_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_0_TDATA_int = in_0_TDATA;
    end else begin
        out_0_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        out_0_TKEEP_int = tmp_keep_V_3_reg_462;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        out_0_TKEEP_int = tmp_keep_V_2_reg_438;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_0_TKEEP_int = tmp_keep_V_1_reg_414;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op83_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_0_TKEEP_int = in_0_TKEEP;
    end else begin
        out_0_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        out_0_TLAST_int = 1'd1;
    end else if (((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op83_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state4)) | ((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        out_0_TLAST_int = 1'd0;
    end else begin
        out_0_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        out_0_TSTRB_int = tmp_strb_V_3_reg_470;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        out_0_TSTRB_int = tmp_strb_V_2_reg_446;
    end else if (((state_load_reg_478 == 4'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_0_TSTRB_int = tmp_strb_V_1_reg_422;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op83_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_0_TSTRB_int = in_0_TSTRB;
    end else begin
        out_0_TSTRB_int = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op83_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((state_load_reg_478 == 4'd0) & (1'b0 == ap_block_state5_io) & (1'b1 == ap_CS_fsm_state5)) | ((state_load_reg_478 == 4'd0) & (1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4)) | ((state_load_reg_478 == 4'd0) & (1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3)))) begin
        out_0_TVALID_int = 1'b1;
    end else begin
        out_0_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (state == 4'd1)) | ((1'b1 == ap_CS_fsm_state6) & (state_load_reg_478 == 4'd1)) | ((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1)))) begin
        out_1_TDATA_blk_n = out_1_TREADY_int;
    end else begin
        out_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1))) begin
        out_1_TDATA_int = tmp_data_V_3_reg_454;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1))) begin
        out_1_TDATA_int = tmp_data_V_2_reg_430;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1))) begin
        out_1_TDATA_int = tmp_data_V_1_reg_406;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op81_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_1_TDATA_int = in_0_TDATA;
    end else begin
        out_1_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1))) begin
        out_1_TKEEP_int = tmp_keep_V_3_reg_462;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1))) begin
        out_1_TKEEP_int = tmp_keep_V_2_reg_438;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1))) begin
        out_1_TKEEP_int = tmp_keep_V_1_reg_414;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op81_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_1_TKEEP_int = in_0_TKEEP;
    end else begin
        out_1_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1))) begin
        out_1_TLAST_int = 1'd1;
    end else if (((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op81_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1)))) begin
        out_1_TLAST_int = 1'd0;
    end else begin
        out_1_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1))) begin
        out_1_TSTRB_int = tmp_strb_V_3_reg_470;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1))) begin
        out_1_TSTRB_int = tmp_strb_V_2_reg_446;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1))) begin
        out_1_TSTRB_int = tmp_strb_V_1_reg_422;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op81_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_1_TSTRB_int = in_0_TSTRB;
    end else begin
        out_1_TSTRB_int = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op81_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state5_io) & (1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd1)) | ((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd1)) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd1)))) begin
        out_1_TVALID_int = 1'b1;
    end else begin
        out_1_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (state == 4'd2)) | ((1'b1 == ap_CS_fsm_state6) & (state_load_reg_478 == 4'd2)) | ((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2)))) begin
        out_2_TDATA_blk_n = out_2_TREADY_int;
    end else begin
        out_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2))) begin
        out_2_TDATA_int = tmp_data_V_3_reg_454;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2))) begin
        out_2_TDATA_int = tmp_data_V_2_reg_430;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2))) begin
        out_2_TDATA_int = tmp_data_V_1_reg_406;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op79_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_2_TDATA_int = in_0_TDATA;
    end else begin
        out_2_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2))) begin
        out_2_TKEEP_int = tmp_keep_V_3_reg_462;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2))) begin
        out_2_TKEEP_int = tmp_keep_V_2_reg_438;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2))) begin
        out_2_TKEEP_int = tmp_keep_V_1_reg_414;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op79_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_2_TKEEP_int = in_0_TKEEP;
    end else begin
        out_2_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2))) begin
        out_2_TLAST_int = 1'd1;
    end else if (((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op79_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2)))) begin
        out_2_TLAST_int = 1'd0;
    end else begin
        out_2_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2))) begin
        out_2_TSTRB_int = tmp_strb_V_3_reg_470;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2))) begin
        out_2_TSTRB_int = tmp_strb_V_2_reg_446;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2))) begin
        out_2_TSTRB_int = tmp_strb_V_1_reg_422;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op79_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_2_TSTRB_int = in_0_TSTRB;
    end else begin
        out_2_TSTRB_int = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op79_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state5_io) & (1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd2)) | ((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd2)) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd2)))) begin
        out_2_TVALID_int = 1'b1;
    end else begin
        out_2_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (state == 4'd3)) | ((1'b1 == ap_CS_fsm_state6) & (state_load_reg_478 == 4'd3)) | ((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3)))) begin
        out_3_TDATA_blk_n = out_3_TREADY_int;
    end else begin
        out_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3))) begin
        out_3_TDATA_int = tmp_data_V_3_reg_454;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3))) begin
        out_3_TDATA_int = tmp_data_V_2_reg_430;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3))) begin
        out_3_TDATA_int = tmp_data_V_1_reg_406;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op77_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_3_TDATA_int = in_0_TDATA;
    end else begin
        out_3_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3))) begin
        out_3_TKEEP_int = tmp_keep_V_3_reg_462;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3))) begin
        out_3_TKEEP_int = tmp_keep_V_2_reg_438;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3))) begin
        out_3_TKEEP_int = tmp_keep_V_1_reg_414;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op77_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_3_TKEEP_int = in_0_TKEEP;
    end else begin
        out_3_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3))) begin
        out_3_TLAST_int = 1'd1;
    end else if (((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op77_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3)) | ((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3)))) begin
        out_3_TLAST_int = 1'd0;
    end else begin
        out_3_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3))) begin
        out_3_TSTRB_int = tmp_strb_V_3_reg_470;
    end else if (((1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3))) begin
        out_3_TSTRB_int = tmp_strb_V_2_reg_446;
    end else if (((1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3))) begin
        out_3_TSTRB_int = tmp_strb_V_1_reg_422;
    end else if ((~(((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op77_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_3_TSTRB_int = in_0_TSTRB;
    end else begin
        out_3_TSTRB_int = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (ap_predicate_op77_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state5_io) & (1'b1 == ap_CS_fsm_state5) & (state_load_reg_478 == 4'd3)) | ((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4) & (state_load_reg_478 == 4'd3)) | ((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (state_load_reg_478 == 4'd3)))) begin
        out_3_TVALID_int = 1'b1;
    end else begin
        out_3_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & ~(state == 4'd3) & ~(state == 4'd2) & ~(state == 4'd1) & ~(state == 4'd0) & (tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~(state_load_load_fu_342_p1 == 4'd15) & ~(state_load_load_fu_342_p1 == 4'd14) & ~(state_load_load_fu_342_p1 == 4'd13) & ~(state_load_load_fu_342_p1 == 4'd12) & ~(state_load_load_fu_342_p1 == 4'd11) & ~(state_load_load_fu_342_p1 == 4'd10) & ~(state_load_load_fu_342_p1 == 4'd9) & ~(state_load_load_fu_342_p1 == 4'd8) & ~(state_load_load_fu_342_p1 == 4'd7) & ~(state_load_load_fu_342_p1 == 4'd6) & ~(state_load_load_fu_342_p1 == 4'd5) & ~(state_load_load_fu_342_p1 == 4'd4) & ~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & ((tmp_nbreadreq_fu_106_p6 == 1'd0) | ((tmp_1_nbreadreq_fu_120_p6 == 1'd0) | ((tmp_3_nbreadreq_fu_148_p6 == 1'd0) | (tmp_2_nbreadreq_fu_134_p6 == 1'd0)))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & ((state_load_reg_478 == 4'd0) | ((state_load_reg_478 == 4'd1) | ((state_load_reg_478 == 4'd3) | (state_load_reg_478 == 4'd2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_io) & (1'b1 == ap_CS_fsm_state4) & ((state_load_reg_478 == 4'd0) | ((state_load_reg_478 == 4'd1) | ((state_load_reg_478 == 4'd3) | (state_load_reg_478 == 4'd2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_io) & (1'b1 == ap_CS_fsm_state5) & ((state_load_reg_478 == 4'd0) | ((state_load_reg_478 == 4'd1) | ((state_load_reg_478 == 4'd3) | (state_load_reg_478 == 4'd2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'b1 == ap_block_state6_io) | (regslice_both_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_0_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state2 = (((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((out_0_TREADY_int == 1'b0) & (ap_predicate_op83_write_state2 == 1'b1)) | ((out_1_TREADY_int == 1'b0) & (ap_predicate_op81_write_state2 == 1'b1)) | ((out_2_TREADY_int == 1'b0) & (ap_predicate_op79_write_state2 == 1'b1)) | ((out_3_TREADY_int == 1'b0) & (ap_predicate_op77_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((out_3_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd3)) | ((out_2_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd2)) | ((out_1_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd1)) | ((state_load_reg_478 == 4'd0) & (out_0_TREADY_int == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((out_3_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd3)) | ((out_2_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd2)) | ((out_1_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd1)) | ((state_load_reg_478 == 4'd0) & (out_0_TREADY_int == 1'b0)));
end

always @ (*) begin
    ap_block_state5_io = (((out_3_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd3)) | ((out_2_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd2)) | ((out_1_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd1)) | ((state_load_reg_478 == 4'd0) & (out_0_TREADY_int == 1'b0)));
end

always @ (*) begin
    ap_block_state6 = ((regslice_both_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_out_0_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state6_io = (((out_3_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd3)) | ((out_2_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd2)) | ((out_1_TREADY_int == 1'b0) & (state_load_reg_478 == 4'd1)) | ((state_load_reg_478 == 4'd0) & (out_0_TREADY_int == 1'b0)));
end

always @ (*) begin
    ap_condition_259 = (~((1'b1 == ap_block_state2_io) | ((in_3_TVALID == 1'b0) & (ap_predicate_op71_read_state2 == 1'b1)) | ((in_2_TVALID == 1'b0) & (ap_predicate_op67_read_state2 == 1'b1)) | ((in_1_TVALID == 1'b0) & (ap_predicate_op63_read_state2 == 1'b1)) | ((in_0_TVALID == 1'b0) & (ap_predicate_op59_read_state2 == 1'b1))) & (tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_predicate_op59_read_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1));
end

always @ (*) begin
    ap_predicate_op63_read_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1));
end

always @ (*) begin
    ap_predicate_op67_read_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1));
end

always @ (*) begin
    ap_predicate_op71_read_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1));
end

always @ (*) begin
    ap_predicate_op77_write_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (state == 4'd3));
end

always @ (*) begin
    ap_predicate_op79_write_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (state == 4'd2));
end

always @ (*) begin
    ap_predicate_op81_write_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (state == 4'd1));
end

always @ (*) begin
    ap_predicate_op83_write_state2 = ((tmp_3_nbreadreq_fu_148_p6 == 1'd1) & (tmp_2_nbreadreq_fu_134_p6 == 1'd1) & (tmp_1_nbreadreq_fu_120_p6 == 1'd1) & (tmp_nbreadreq_fu_106_p6 == 1'd1) & (state == 4'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign out_0_TVALID = regslice_both_out_0_V_data_V_U_vld_out;

assign out_1_TVALID = regslice_both_out_1_V_data_V_U_vld_out;

assign out_2_TVALID = regslice_both_out_2_V_data_V_U_vld_out;

assign out_3_TVALID = regslice_both_out_3_V_data_V_U_vld_out;

assign state_load_load_fu_342_p1 = state;

assign tmp_1_nbreadreq_fu_120_p6 = in_1_TVALID;

assign tmp_2_nbreadreq_fu_134_p6 = in_2_TVALID;

assign tmp_3_nbreadreq_fu_148_p6 = in_3_TVALID;

assign tmp_nbreadreq_fu_106_p6 = in_0_TVALID;

always @ (posedge ap_clk) begin
    state[3:2] <= 2'b00;
    state_load_reg_478[3:2] <= 2'b00;
end

endmodule //multi_axi
