// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp_kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp_kernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp_kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> mlp_kernel::ap_ST_fsm_state1 = "1";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state2 = "10";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state3 = "100";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state4 = "1000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state5 = "10000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state6 = "100000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> mlp_kernel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> mlp_kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mlp_kernel::ap_const_lv32_1 = "1";
const sc_lv<1> mlp_kernel::ap_const_lv1_0 = "0";
const sc_lv<32> mlp_kernel::ap_const_lv32_2 = "10";
const sc_lv<1> mlp_kernel::ap_const_lv1_1 = "1";
const sc_lv<32> mlp_kernel::ap_const_lv32_3 = "11";
const sc_lv<32> mlp_kernel::ap_const_lv32_4 = "100";
const sc_lv<32> mlp_kernel::ap_const_lv32_5 = "101";
const sc_lv<32> mlp_kernel::ap_const_lv32_7 = "111";
const sc_lv<32> mlp_kernel::ap_const_lv32_8 = "1000";
const sc_lv<32> mlp_kernel::ap_const_lv32_9 = "1001";
const sc_lv<32> mlp_kernel::ap_const_lv32_A = "1010";
const sc_lv<7> mlp_kernel::ap_const_lv7_0 = "0000000";
const sc_lv<32> mlp_kernel::ap_const_lv32_6 = "110";
const sc_lv<16> mlp_kernel::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> mlp_kernel::ap_const_lv32_B = "1011";
const sc_lv<4> mlp_kernel::ap_const_lv4_0 = "0000";
const sc_lv<7> mlp_kernel::ap_const_lv7_40 = "1000000";
const sc_lv<7> mlp_kernel::ap_const_lv7_1 = "1";
const sc_lv<6> mlp_kernel::ap_const_lv6_0 = "000000";
const sc_lv<32> mlp_kernel::ap_const_lv32_F = "1111";
const sc_lv<15> mlp_kernel::ap_const_lv15_0 = "000000000000000";
const sc_lv<4> mlp_kernel::ap_const_lv4_A = "1010";
const sc_lv<4> mlp_kernel::ap_const_lv4_1 = "1";
const bool mlp_kernel::ap_const_boolean_1 = true;

mlp_kernel::mlp_kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    l1_weights_1_U = new mlp_kernel_l1_weibkb("l1_weights_1_U");
    l1_weights_1_U->clk(ap_clk);
    l1_weights_1_U->reset(ap_rst);
    l1_weights_1_U->address0(l1_weights_1_address0);
    l1_weights_1_U->ce0(l1_weights_1_ce0);
    l1_weights_1_U->q0(l1_weights_1_q0);
    l1_weights_0_U = new mlp_kernel_l1_weicud("l1_weights_0_U");
    l1_weights_0_U->clk(ap_clk);
    l1_weights_0_U->reset(ap_rst);
    l1_weights_0_U->address0(l1_weights_0_address0);
    l1_weights_0_U->ce0(l1_weights_0_ce0);
    l1_weights_0_U->q0(l1_weights_0_q0);
    l1_biases_1_U = new mlp_kernel_l1_biadEe("l1_biases_1_U");
    l1_biases_1_U->clk(ap_clk);
    l1_biases_1_U->reset(ap_rst);
    l1_biases_1_U->address0(l1_biases_1_address0);
    l1_biases_1_U->ce0(l1_biases_1_ce0);
    l1_biases_1_U->q0(l1_biases_1_q0);
    l1_biases_0_U = new mlp_kernel_l1_biaeOg("l1_biases_0_U");
    l1_biases_0_U->clk(ap_clk);
    l1_biases_0_U->reset(ap_rst);
    l1_biases_0_U->address0(l1_biases_0_address0);
    l1_biases_0_U->ce0(l1_biases_0_ce0);
    l1_biases_0_U->q0(l1_biases_0_q0);
    l2_weights_1_U = new mlp_kernel_l2_weifYi("l2_weights_1_U");
    l2_weights_1_U->clk(ap_clk);
    l2_weights_1_U->reset(ap_rst);
    l2_weights_1_U->address0(l2_weights_1_address0);
    l2_weights_1_U->ce0(l2_weights_1_ce0);
    l2_weights_1_U->q0(l2_weights_1_q0);
    l2_weights_0_U = new mlp_kernel_l2_weig8j("l2_weights_0_U");
    l2_weights_0_U->clk(ap_clk);
    l2_weights_0_U->reset(ap_rst);
    l2_weights_0_U->address0(l2_weights_0_address0);
    l2_weights_0_U->ce0(l2_weights_0_ce0);
    l2_weights_0_U->q0(l2_weights_0_q0);
    l2_biases_1_U = new mlp_kernel_l2_biahbi("l2_biases_1_U");
    l2_biases_1_U->clk(ap_clk);
    l2_biases_1_U->reset(ap_rst);
    l2_biases_1_U->address0(l2_biases_1_address0);
    l2_biases_1_U->ce0(l2_biases_1_ce0);
    l2_biases_1_U->q0(l2_biases_1_q0);
    l2_biases_0_U = new mlp_kernel_l2_biaibs("l2_biases_0_U");
    l2_biases_0_U->clk(ap_clk);
    l2_biases_0_U->reset(ap_rst);
    l2_biases_0_U->address0(l2_biases_0_address0);
    l2_biases_0_U->ce0(l2_biases_0_ce0);
    l2_biases_0_U->q0(l2_biases_0_q0);
    l1_out_0_U = new mlp_kernel_l1_out_0("l1_out_0_U");
    l1_out_0_U->clk(ap_clk);
    l1_out_0_U->reset(ap_rst);
    l1_out_0_U->address0(l1_out_0_address0);
    l1_out_0_U->ce0(l1_out_0_ce0);
    l1_out_0_U->we0(l1_out_0_we0);
    l1_out_0_U->d0(sum_1_reg_931);
    l1_out_0_U->q0(l1_out_0_q0);
    l1_out_1_U = new mlp_kernel_l1_out_0("l1_out_1_U");
    l1_out_1_U->clk(ap_clk);
    l1_out_1_U->reset(ap_rst);
    l1_out_1_U->address0(l1_out_1_address0);
    l1_out_1_U->ce0(l1_out_1_ce0);
    l1_out_1_U->we0(l1_out_1_we0);
    l1_out_1_U->d0(sum_1_reg_931);
    l1_out_1_U->q0(l1_out_1_q0);
    mlp_mux_832_8_1_1_U1 = new mlp_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("mlp_mux_832_8_1_1_U1");
    mlp_mux_832_8_1_1_U1->din0(sample_0_q0);
    mlp_mux_832_8_1_1_U1->din1(sample_1_q0);
    mlp_mux_832_8_1_1_U1->din2(sample_2_q0);
    mlp_mux_832_8_1_1_U1->din3(sample_3_q0);
    mlp_mux_832_8_1_1_U1->din4(sample_4_q0);
    mlp_mux_832_8_1_1_U1->din5(sample_5_q0);
    mlp_mux_832_8_1_1_U1->din6(sample_6_q0);
    mlp_mux_832_8_1_1_U1->din7(sample_7_q0);
    mlp_mux_832_8_1_1_U1->din8(tmp_2_fu_581_p9);
    mlp_mux_832_8_1_1_U1->dout(tmp_2_fu_581_p10);
    mlp_mac_muladd_8sjbC_U2 = new mlp_mac_muladd_8sjbC<1,1,8,8,16,16>("mlp_mac_muladd_8sjbC_U2");
    mlp_mac_muladd_8sjbC_U2->din0(select_ln350_reg_916);
    mlp_mac_muladd_8sjbC_U2->din1(tmp_2_reg_921);
    mlp_mac_muladd_8sjbC_U2->din2(sum_0_reg_411);
    mlp_mac_muladd_8sjbC_U2->dout(grp_fu_794_p3);
    mlp_mac_muladd_15kbM_U3 = new mlp_mac_muladd_15kbM<1,1,15,8,16,16>("mlp_mac_muladd_15kbM_U3");
    mlp_mac_muladd_15kbM_U3->din0(grp_fu_802_p0);
    mlp_mac_muladd_15kbM_U3->din1(select_ln366_reg_1009);
    mlp_mac_muladd_15kbM_U3->din2(sum2_0_reg_435);
    mlp_mac_muladd_15kbM_U3->dout(grp_fu_802_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln350_fu_502_p2);
    sensitive << ( shl_ln_reg_818 );
    sensitive << ( zext_ln348_fu_482_p1 );

    SC_METHOD(thread_add_ln352_1_fu_634_p2);
    sensitive << ( trunc_ln352_1_fu_624_p1 );
    sensitive << ( sext_ln352_1_fu_620_p1 );

    SC_METHOD(thread_add_ln366_fu_696_p2);
    sensitive << ( shl_ln1_reg_945 );
    sensitive << ( zext_ln364_fu_676_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln361_fu_656_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln361_fu_656_p2 );

    SC_METHOD(thread_grp_fu_802_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_802_p00 );

    SC_METHOD(thread_grp_fu_802_p00);
    sensitive << ( select_ln366_1_reg_1014 );

    SC_METHOD(thread_i_1_fu_662_p2);
    sensitive << ( i1_0_reg_423 );

    SC_METHOD(thread_i_fu_464_p2);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_icmp_ln345_fu_458_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_icmp_ln348_fu_486_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_icmp_ln361_fu_656_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i1_0_reg_423 );

    SC_METHOD(thread_icmp_ln364_fu_680_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( j3_0_reg_447 );

    SC_METHOD(thread_j_1_fu_686_p2);
    sensitive << ( j3_0_reg_447 );

    SC_METHOD(thread_j_fu_492_p2);
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_l1_biases_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln352_fu_563_p1 );

    SC_METHOD(thread_l1_biases_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l1_biases_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln352_fu_563_p1 );

    SC_METHOD(thread_l1_biases_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l1_out_0_address0);
    sensitive << ( l1_out_0_addr_reg_906 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln366_1_fu_727_p1 );

    SC_METHOD(thread_l1_out_0_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_l1_out_0_we0);
    sensitive << ( trunc_ln352_reg_891 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_l1_out_1_address0);
    sensitive << ( l1_out_1_addr_reg_911 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln366_1_fu_727_p1 );

    SC_METHOD(thread_l1_out_1_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_l1_out_1_we0);
    sensitive << ( trunc_ln352_reg_891 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_l1_weights_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_fu_517_p1 );

    SC_METHOD(thread_l1_weights_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l1_weights_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_fu_517_p1 );

    SC_METHOD(thread_l1_weights_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l2_biases_0_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln368_fu_747_p1 );

    SC_METHOD(thread_l2_biases_0_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_l2_biases_1_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln368_fu_747_p1 );

    SC_METHOD(thread_l2_biases_1_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_l2_weights_0_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln366_fu_711_p1 );

    SC_METHOD(thread_l2_weights_0_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_l2_weights_1_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln366_fu_711_p1 );

    SC_METHOD(thread_l2_weights_1_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_lshr_ln1_fu_507_p4);
    sensitive << ( add_ln350_fu_502_p2 );

    SC_METHOD(thread_lshr_ln2_fu_737_p4);
    sensitive << ( i1_0_reg_423 );

    SC_METHOD(thread_lshr_ln350_1_fu_527_p4);
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_lshr_ln366_1_fu_717_p4);
    sensitive << ( j3_0_reg_447 );

    SC_METHOD(thread_lshr_ln3_fu_701_p4);
    sensitive << ( add_ln366_fu_696_p2 );

    SC_METHOD(thread_lshr_ln_fu_553_p4);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_prediction_0_address0);
    sensitive << ( prediction_0_addr_reg_999 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_0_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_0_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum_3_fu_786_p2 );

    SC_METHOD(thread_prediction_0_we0);
    sensitive << ( trunc_ln368_reg_984 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_1_address0);
    sensitive << ( prediction_1_addr_reg_1004 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_1_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_1_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum_3_fu_786_p2 );

    SC_METHOD(thread_prediction_1_we0);
    sensitive << ( trunc_ln368_reg_984 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_sample_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_6_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_6_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sample_7_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln350_2_fu_537_p1 );

    SC_METHOD(thread_sample_7_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_select_ln350_fu_571_p3);
    sensitive << ( l1_weights_1_q0 );
    sensitive << ( l1_weights_0_q0 );
    sensitive << ( trunc_ln350_1_reg_831 );

    SC_METHOD(thread_select_ln352_fu_609_p3);
    sensitive << ( l1_biases_1_q0 );
    sensitive << ( l1_biases_0_q0 );
    sensitive << ( trunc_ln352_reg_891 );

    SC_METHOD(thread_select_ln366_1_fu_762_p3);
    sensitive << ( trunc_ln366_reg_958 );
    sensitive << ( l1_out_0_q0 );
    sensitive << ( l1_out_1_q0 );

    SC_METHOD(thread_select_ln366_fu_755_p3);
    sensitive << ( l2_weights_1_q0 );
    sensitive << ( l2_weights_0_q0 );
    sensitive << ( trunc_ln366_reg_958 );

    SC_METHOD(thread_select_ln368_fu_775_p3);
    sensitive << ( l2_biases_1_q0 );
    sensitive << ( l2_biases_0_q0 );
    sensitive << ( trunc_ln368_reg_984 );

    SC_METHOD(thread_sext_ln352_1_fu_620_p1);
    sensitive << ( select_ln352_fu_609_p3 );

    SC_METHOD(thread_sext_ln352_fu_616_p1);
    sensitive << ( select_ln352_fu_609_p3 );

    SC_METHOD(thread_sext_ln368_fu_782_p1);
    sensitive << ( select_ln368_fu_775_p3 );

    SC_METHOD(thread_shl_ln1_fu_668_p3);
    sensitive << ( i1_0_reg_423 );

    SC_METHOD(thread_shl_ln_fu_474_p3);
    sensitive << ( trunc_ln350_fu_470_p1 );

    SC_METHOD(thread_sum_1_fu_648_p3);
    sensitive << ( tmp_3_fu_640_p3 );
    sensitive << ( add_ln352_1_fu_634_p2 );

    SC_METHOD(thread_sum_3_fu_786_p2);
    sensitive << ( sum2_0_reg_435 );
    sensitive << ( sext_ln368_fu_782_p1 );

    SC_METHOD(thread_sum_fu_628_p2);
    sensitive << ( sum_0_reg_411 );
    sensitive << ( sext_ln352_fu_616_p1 );

    SC_METHOD(thread_tmp_2_fu_581_p9);
    sensitive << ( trunc_ln350_2_reg_846 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_3_fu_640_p3);
    sensitive << ( sum_fu_628_p2 );

    SC_METHOD(thread_trunc_ln350_1_fu_498_p1);
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_trunc_ln350_2_fu_523_p1);
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_trunc_ln350_fu_470_p1);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_trunc_ln352_1_fu_624_p1);
    sensitive << ( sum_0_reg_411 );

    SC_METHOD(thread_trunc_ln352_fu_549_p1);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_trunc_ln366_fu_692_p1);
    sensitive << ( j3_0_reg_447 );

    SC_METHOD(thread_trunc_ln368_fu_733_p1);
    sensitive << ( i1_0_reg_423 );

    SC_METHOD(thread_zext_ln348_fu_482_p1);
    sensitive << ( j_0_reg_400 );

    SC_METHOD(thread_zext_ln350_2_fu_537_p1);
    sensitive << ( lshr_ln350_1_fu_527_p4 );

    SC_METHOD(thread_zext_ln350_fu_517_p1);
    sensitive << ( lshr_ln1_fu_507_p4 );

    SC_METHOD(thread_zext_ln352_fu_563_p1);
    sensitive << ( lshr_ln_fu_553_p4 );

    SC_METHOD(thread_zext_ln364_fu_676_p1);
    sensitive << ( j3_0_reg_447 );

    SC_METHOD(thread_zext_ln366_1_fu_727_p1);
    sensitive << ( lshr_ln366_1_fu_717_p4 );

    SC_METHOD(thread_zext_ln366_fu_711_p1);
    sensitive << ( lshr_ln3_fu_701_p4 );

    SC_METHOD(thread_zext_ln368_fu_747_p1);
    sensitive << ( lshr_ln2_fu_737_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln345_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln348_fu_486_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln361_fu_656_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln364_fu_680_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sample_0_address0, "(port)sample_0_address0");
    sc_trace(mVcdFile, sample_0_ce0, "(port)sample_0_ce0");
    sc_trace(mVcdFile, sample_0_q0, "(port)sample_0_q0");
    sc_trace(mVcdFile, sample_1_address0, "(port)sample_1_address0");
    sc_trace(mVcdFile, sample_1_ce0, "(port)sample_1_ce0");
    sc_trace(mVcdFile, sample_1_q0, "(port)sample_1_q0");
    sc_trace(mVcdFile, sample_2_address0, "(port)sample_2_address0");
    sc_trace(mVcdFile, sample_2_ce0, "(port)sample_2_ce0");
    sc_trace(mVcdFile, sample_2_q0, "(port)sample_2_q0");
    sc_trace(mVcdFile, sample_3_address0, "(port)sample_3_address0");
    sc_trace(mVcdFile, sample_3_ce0, "(port)sample_3_ce0");
    sc_trace(mVcdFile, sample_3_q0, "(port)sample_3_q0");
    sc_trace(mVcdFile, sample_4_address0, "(port)sample_4_address0");
    sc_trace(mVcdFile, sample_4_ce0, "(port)sample_4_ce0");
    sc_trace(mVcdFile, sample_4_q0, "(port)sample_4_q0");
    sc_trace(mVcdFile, sample_5_address0, "(port)sample_5_address0");
    sc_trace(mVcdFile, sample_5_ce0, "(port)sample_5_ce0");
    sc_trace(mVcdFile, sample_5_q0, "(port)sample_5_q0");
    sc_trace(mVcdFile, sample_6_address0, "(port)sample_6_address0");
    sc_trace(mVcdFile, sample_6_ce0, "(port)sample_6_ce0");
    sc_trace(mVcdFile, sample_6_q0, "(port)sample_6_q0");
    sc_trace(mVcdFile, sample_7_address0, "(port)sample_7_address0");
    sc_trace(mVcdFile, sample_7_ce0, "(port)sample_7_ce0");
    sc_trace(mVcdFile, sample_7_q0, "(port)sample_7_q0");
    sc_trace(mVcdFile, prediction_0_address0, "(port)prediction_0_address0");
    sc_trace(mVcdFile, prediction_0_ce0, "(port)prediction_0_ce0");
    sc_trace(mVcdFile, prediction_0_we0, "(port)prediction_0_we0");
    sc_trace(mVcdFile, prediction_0_d0, "(port)prediction_0_d0");
    sc_trace(mVcdFile, prediction_1_address0, "(port)prediction_1_address0");
    sc_trace(mVcdFile, prediction_1_ce0, "(port)prediction_1_ce0");
    sc_trace(mVcdFile, prediction_1_we0, "(port)prediction_1_we0");
    sc_trace(mVcdFile, prediction_1_d0, "(port)prediction_1_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, l1_weights_1_address0, "l1_weights_1_address0");
    sc_trace(mVcdFile, l1_weights_1_ce0, "l1_weights_1_ce0");
    sc_trace(mVcdFile, l1_weights_1_q0, "l1_weights_1_q0");
    sc_trace(mVcdFile, l1_weights_0_address0, "l1_weights_0_address0");
    sc_trace(mVcdFile, l1_weights_0_ce0, "l1_weights_0_ce0");
    sc_trace(mVcdFile, l1_weights_0_q0, "l1_weights_0_q0");
    sc_trace(mVcdFile, l1_biases_1_address0, "l1_biases_1_address0");
    sc_trace(mVcdFile, l1_biases_1_ce0, "l1_biases_1_ce0");
    sc_trace(mVcdFile, l1_biases_1_q0, "l1_biases_1_q0");
    sc_trace(mVcdFile, l1_biases_0_address0, "l1_biases_0_address0");
    sc_trace(mVcdFile, l1_biases_0_ce0, "l1_biases_0_ce0");
    sc_trace(mVcdFile, l1_biases_0_q0, "l1_biases_0_q0");
    sc_trace(mVcdFile, l2_weights_1_address0, "l2_weights_1_address0");
    sc_trace(mVcdFile, l2_weights_1_ce0, "l2_weights_1_ce0");
    sc_trace(mVcdFile, l2_weights_1_q0, "l2_weights_1_q0");
    sc_trace(mVcdFile, l2_weights_0_address0, "l2_weights_0_address0");
    sc_trace(mVcdFile, l2_weights_0_ce0, "l2_weights_0_ce0");
    sc_trace(mVcdFile, l2_weights_0_q0, "l2_weights_0_q0");
    sc_trace(mVcdFile, l2_biases_1_address0, "l2_biases_1_address0");
    sc_trace(mVcdFile, l2_biases_1_ce0, "l2_biases_1_ce0");
    sc_trace(mVcdFile, l2_biases_1_q0, "l2_biases_1_q0");
    sc_trace(mVcdFile, l2_biases_0_address0, "l2_biases_0_address0");
    sc_trace(mVcdFile, l2_biases_0_ce0, "l2_biases_0_ce0");
    sc_trace(mVcdFile, l2_biases_0_q0, "l2_biases_0_q0");
    sc_trace(mVcdFile, i_fu_464_p2, "i_fu_464_p2");
    sc_trace(mVcdFile, i_reg_813, "i_reg_813");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, shl_ln_fu_474_p3, "shl_ln_fu_474_p3");
    sc_trace(mVcdFile, shl_ln_reg_818, "shl_ln_reg_818");
    sc_trace(mVcdFile, icmp_ln345_fu_458_p2, "icmp_ln345_fu_458_p2");
    sc_trace(mVcdFile, j_fu_492_p2, "j_fu_492_p2");
    sc_trace(mVcdFile, j_reg_826, "j_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln350_1_fu_498_p1, "trunc_ln350_1_fu_498_p1");
    sc_trace(mVcdFile, trunc_ln350_1_reg_831, "trunc_ln350_1_reg_831");
    sc_trace(mVcdFile, icmp_ln348_fu_486_p2, "icmp_ln348_fu_486_p2");
    sc_trace(mVcdFile, trunc_ln350_2_fu_523_p1, "trunc_ln350_2_fu_523_p1");
    sc_trace(mVcdFile, trunc_ln350_2_reg_846, "trunc_ln350_2_reg_846");
    sc_trace(mVcdFile, trunc_ln352_fu_549_p1, "trunc_ln352_fu_549_p1");
    sc_trace(mVcdFile, trunc_ln352_reg_891, "trunc_ln352_reg_891");
    sc_trace(mVcdFile, l1_out_0_addr_reg_906, "l1_out_0_addr_reg_906");
    sc_trace(mVcdFile, l1_out_1_addr_reg_911, "l1_out_1_addr_reg_911");
    sc_trace(mVcdFile, select_ln350_fu_571_p3, "select_ln350_fu_571_p3");
    sc_trace(mVcdFile, select_ln350_reg_916, "select_ln350_reg_916");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_2_fu_581_p10, "tmp_2_fu_581_p10");
    sc_trace(mVcdFile, tmp_2_reg_921, "tmp_2_reg_921");
    sc_trace(mVcdFile, grp_fu_794_p3, "grp_fu_794_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sum_1_fu_648_p3, "sum_1_fu_648_p3");
    sc_trace(mVcdFile, sum_1_reg_931, "sum_1_reg_931");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_1_fu_662_p2, "i_1_fu_662_p2");
    sc_trace(mVcdFile, i_1_reg_940, "i_1_reg_940");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, shl_ln1_fu_668_p3, "shl_ln1_fu_668_p3");
    sc_trace(mVcdFile, shl_ln1_reg_945, "shl_ln1_reg_945");
    sc_trace(mVcdFile, icmp_ln361_fu_656_p2, "icmp_ln361_fu_656_p2");
    sc_trace(mVcdFile, j_1_fu_686_p2, "j_1_fu_686_p2");
    sc_trace(mVcdFile, j_1_reg_953, "j_1_reg_953");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, trunc_ln366_fu_692_p1, "trunc_ln366_fu_692_p1");
    sc_trace(mVcdFile, trunc_ln366_reg_958, "trunc_ln366_reg_958");
    sc_trace(mVcdFile, icmp_ln364_fu_680_p2, "icmp_ln364_fu_680_p2");
    sc_trace(mVcdFile, trunc_ln368_fu_733_p1, "trunc_ln368_fu_733_p1");
    sc_trace(mVcdFile, trunc_ln368_reg_984, "trunc_ln368_reg_984");
    sc_trace(mVcdFile, prediction_0_addr_reg_999, "prediction_0_addr_reg_999");
    sc_trace(mVcdFile, prediction_1_addr_reg_1004, "prediction_1_addr_reg_1004");
    sc_trace(mVcdFile, select_ln366_fu_755_p3, "select_ln366_fu_755_p3");
    sc_trace(mVcdFile, select_ln366_reg_1009, "select_ln366_reg_1009");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, select_ln366_1_fu_762_p3, "select_ln366_1_fu_762_p3");
    sc_trace(mVcdFile, select_ln366_1_reg_1014, "select_ln366_1_reg_1014");
    sc_trace(mVcdFile, grp_fu_802_p3, "grp_fu_802_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, l1_out_0_address0, "l1_out_0_address0");
    sc_trace(mVcdFile, l1_out_0_ce0, "l1_out_0_ce0");
    sc_trace(mVcdFile, l1_out_0_we0, "l1_out_0_we0");
    sc_trace(mVcdFile, l1_out_0_q0, "l1_out_0_q0");
    sc_trace(mVcdFile, l1_out_1_address0, "l1_out_1_address0");
    sc_trace(mVcdFile, l1_out_1_ce0, "l1_out_1_ce0");
    sc_trace(mVcdFile, l1_out_1_we0, "l1_out_1_we0");
    sc_trace(mVcdFile, l1_out_1_q0, "l1_out_1_q0");
    sc_trace(mVcdFile, i_0_reg_388, "i_0_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, j_0_reg_400, "j_0_reg_400");
    sc_trace(mVcdFile, sum_0_reg_411, "sum_0_reg_411");
    sc_trace(mVcdFile, i1_0_reg_423, "i1_0_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sum2_0_reg_435, "sum2_0_reg_435");
    sc_trace(mVcdFile, j3_0_reg_447, "j3_0_reg_447");
    sc_trace(mVcdFile, zext_ln350_fu_517_p1, "zext_ln350_fu_517_p1");
    sc_trace(mVcdFile, zext_ln350_2_fu_537_p1, "zext_ln350_2_fu_537_p1");
    sc_trace(mVcdFile, zext_ln352_fu_563_p1, "zext_ln352_fu_563_p1");
    sc_trace(mVcdFile, zext_ln366_fu_711_p1, "zext_ln366_fu_711_p1");
    sc_trace(mVcdFile, zext_ln366_1_fu_727_p1, "zext_ln366_1_fu_727_p1");
    sc_trace(mVcdFile, zext_ln368_fu_747_p1, "zext_ln368_fu_747_p1");
    sc_trace(mVcdFile, sum_3_fu_786_p2, "sum_3_fu_786_p2");
    sc_trace(mVcdFile, trunc_ln350_fu_470_p1, "trunc_ln350_fu_470_p1");
    sc_trace(mVcdFile, zext_ln348_fu_482_p1, "zext_ln348_fu_482_p1");
    sc_trace(mVcdFile, add_ln350_fu_502_p2, "add_ln350_fu_502_p2");
    sc_trace(mVcdFile, lshr_ln1_fu_507_p4, "lshr_ln1_fu_507_p4");
    sc_trace(mVcdFile, lshr_ln350_1_fu_527_p4, "lshr_ln350_1_fu_527_p4");
    sc_trace(mVcdFile, lshr_ln_fu_553_p4, "lshr_ln_fu_553_p4");
    sc_trace(mVcdFile, tmp_2_fu_581_p9, "tmp_2_fu_581_p9");
    sc_trace(mVcdFile, select_ln352_fu_609_p3, "select_ln352_fu_609_p3");
    sc_trace(mVcdFile, sext_ln352_fu_616_p1, "sext_ln352_fu_616_p1");
    sc_trace(mVcdFile, trunc_ln352_1_fu_624_p1, "trunc_ln352_1_fu_624_p1");
    sc_trace(mVcdFile, sext_ln352_1_fu_620_p1, "sext_ln352_1_fu_620_p1");
    sc_trace(mVcdFile, sum_fu_628_p2, "sum_fu_628_p2");
    sc_trace(mVcdFile, tmp_3_fu_640_p3, "tmp_3_fu_640_p3");
    sc_trace(mVcdFile, add_ln352_1_fu_634_p2, "add_ln352_1_fu_634_p2");
    sc_trace(mVcdFile, zext_ln364_fu_676_p1, "zext_ln364_fu_676_p1");
    sc_trace(mVcdFile, add_ln366_fu_696_p2, "add_ln366_fu_696_p2");
    sc_trace(mVcdFile, lshr_ln3_fu_701_p4, "lshr_ln3_fu_701_p4");
    sc_trace(mVcdFile, lshr_ln366_1_fu_717_p4, "lshr_ln366_1_fu_717_p4");
    sc_trace(mVcdFile, lshr_ln2_fu_737_p4, "lshr_ln2_fu_737_p4");
    sc_trace(mVcdFile, select_ln368_fu_775_p3, "select_ln368_fu_775_p3");
    sc_trace(mVcdFile, sext_ln368_fu_782_p1, "sext_ln368_fu_782_p1");
    sc_trace(mVcdFile, grp_fu_802_p0, "grp_fu_802_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_802_p00, "grp_fu_802_p00");
#endif

    }
}

mlp_kernel::~mlp_kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete l1_weights_1_U;
    delete l1_weights_0_U;
    delete l1_biases_1_U;
    delete l1_biases_0_U;
    delete l2_weights_1_U;
    delete l2_weights_0_U;
    delete l2_biases_1_U;
    delete l2_biases_0_U;
    delete l1_out_0_U;
    delete l1_out_1_U;
    delete mlp_mux_832_8_1_1_U1;
    delete mlp_mac_muladd_8sjbC_U2;
    delete mlp_mac_muladd_15kbM_U3;
}

void mlp_kernel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln345_fu_458_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_423 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i1_0_reg_423 = i_1_reg_940.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_reg_388 = i_reg_813.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_388 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j3_0_reg_447 = j_1_reg_953.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln361_fu_656_p2.read()))) {
        j3_0_reg_447 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_400 = j_reg_826.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln345_fu_458_p2.read(), ap_const_lv1_0))) {
        j_0_reg_400 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        sum2_0_reg_435 = grp_fu_802_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln361_fu_656_p2.read()))) {
        sum2_0_reg_435 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sum_0_reg_411 = grp_fu_794_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln345_fu_458_p2.read(), ap_const_lv1_0))) {
        sum_0_reg_411 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_1_reg_940 = i_1_fu_662_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_813 = i_fu_464_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_1_reg_953 = j_1_fu_686_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_826 = j_fu_492_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln348_fu_486_p2.read(), ap_const_lv1_1))) {
        l1_out_0_addr_reg_906 =  (sc_lv<5>) (zext_ln352_fu_563_p1.read());
        l1_out_1_addr_reg_911 =  (sc_lv<5>) (zext_ln352_fu_563_p1.read());
        trunc_ln352_reg_891 = trunc_ln352_fu_549_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln364_fu_680_p2.read()))) {
        prediction_0_addr_reg_999 =  (sc_lv<3>) (zext_ln368_fu_747_p1.read());
        prediction_1_addr_reg_1004 =  (sc_lv<3>) (zext_ln368_fu_747_p1.read());
        trunc_ln368_reg_984 = trunc_ln368_fu_733_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        select_ln350_reg_916 = select_ln350_fu_571_p3.read();
        tmp_2_reg_921 = tmp_2_fu_581_p10.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        select_ln366_1_reg_1014 = select_ln366_1_fu_762_p3.read();
        select_ln366_reg_1009 = select_ln366_fu_755_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln361_fu_656_p2.read()))) {
        shl_ln1_reg_945 = shl_ln1_fu_668_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln345_fu_458_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_818 = shl_ln_fu_474_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_1_reg_931 = sum_1_fu_648_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln348_fu_486_p2.read()))) {
        trunc_ln350_1_reg_831 = trunc_ln350_1_fu_498_p1.read();
        trunc_ln350_2_reg_846 = trunc_ln350_2_fu_523_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_fu_680_p2.read()))) {
        trunc_ln366_reg_958 = trunc_ln366_fu_692_p1.read();
    }
}

void mlp_kernel::thread_add_ln350_fu_502_p2() {
    add_ln350_fu_502_p2 = (!zext_ln348_fu_482_p1.read().is_01() || !shl_ln_reg_818.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln348_fu_482_p1.read()) + sc_biguint<12>(shl_ln_reg_818.read()));
}

void mlp_kernel::thread_add_ln352_1_fu_634_p2() {
    add_ln352_1_fu_634_p2 = (!trunc_ln352_1_fu_624_p1.read().is_01() || !sext_ln352_1_fu_620_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(trunc_ln352_1_fu_624_p1.read()) + sc_bigint<15>(sext_ln352_1_fu_620_p1.read()));
}

void mlp_kernel::thread_add_ln366_fu_696_p2() {
    add_ln366_fu_696_p2 = (!zext_ln364_fu_676_p1.read().is_01() || !shl_ln1_reg_945.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln364_fu_676_p1.read()) + sc_biguint<10>(shl_ln1_reg_945.read()));
}

void mlp_kernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp_kernel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mlp_kernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mlp_kernel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void mlp_kernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mlp_kernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mlp_kernel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mlp_kernel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mlp_kernel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mlp_kernel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mlp_kernel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mlp_kernel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void mlp_kernel::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln361_fu_656_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mlp_kernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mlp_kernel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln361_fu_656_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mlp_kernel::thread_grp_fu_802_p0() {
    grp_fu_802_p0 =  (sc_lv<15>) (grp_fu_802_p00.read());
}

void mlp_kernel::thread_grp_fu_802_p00() {
    grp_fu_802_p00 = esl_zext<16,15>(select_ln366_1_reg_1014.read());
}

void mlp_kernel::thread_i_1_fu_662_p2() {
    i_1_fu_662_p2 = (!i1_0_reg_423.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_423.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mlp_kernel::thread_i_fu_464_p2() {
    i_fu_464_p2 = (!i_0_reg_388.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_388.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp_kernel::thread_icmp_ln345_fu_458_p2() {
    icmp_ln345_fu_458_p2 = (!i_0_reg_388.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_388.read() == ap_const_lv7_40);
}

void mlp_kernel::thread_icmp_ln348_fu_486_p2() {
    icmp_ln348_fu_486_p2 = (!j_0_reg_400.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_400.read() == ap_const_lv7_40);
}

void mlp_kernel::thread_icmp_ln361_fu_656_p2() {
    icmp_ln361_fu_656_p2 = (!i1_0_reg_423.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_423.read() == ap_const_lv4_A);
}

void mlp_kernel::thread_icmp_ln364_fu_680_p2() {
    icmp_ln364_fu_680_p2 = (!j3_0_reg_447.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_reg_447.read() == ap_const_lv7_40);
}

void mlp_kernel::thread_j_1_fu_686_p2() {
    j_1_fu_686_p2 = (!j3_0_reg_447.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j3_0_reg_447.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp_kernel::thread_j_fu_492_p2() {
    j_fu_492_p2 = (!j_0_reg_400.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_400.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp_kernel::thread_l1_biases_0_address0() {
    l1_biases_0_address0 =  (sc_lv<5>) (zext_ln352_fu_563_p1.read());
}

void mlp_kernel::thread_l1_biases_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l1_biases_0_ce0 = ap_const_logic_1;
    } else {
        l1_biases_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_biases_1_address0() {
    l1_biases_1_address0 =  (sc_lv<5>) (zext_ln352_fu_563_p1.read());
}

void mlp_kernel::thread_l1_biases_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l1_biases_1_ce0 = ap_const_logic_1;
    } else {
        l1_biases_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_out_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l1_out_0_address0 =  (sc_lv<5>) (zext_ln366_1_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l1_out_0_address0 = l1_out_0_addr_reg_906.read();
    } else {
        l1_out_0_address0 = "XXXXX";
    }
}

void mlp_kernel::thread_l1_out_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        l1_out_0_ce0 = ap_const_logic_1;
    } else {
        l1_out_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_out_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln352_reg_891.read()))) {
        l1_out_0_we0 = ap_const_logic_1;
    } else {
        l1_out_0_we0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_out_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l1_out_1_address0 =  (sc_lv<5>) (zext_ln366_1_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l1_out_1_address0 = l1_out_1_addr_reg_911.read();
    } else {
        l1_out_1_address0 = "XXXXX";
    }
}

void mlp_kernel::thread_l1_out_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        l1_out_1_ce0 = ap_const_logic_1;
    } else {
        l1_out_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_out_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(trunc_ln352_reg_891.read(), ap_const_lv1_1))) {
        l1_out_1_we0 = ap_const_logic_1;
    } else {
        l1_out_1_we0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_weights_0_address0() {
    l1_weights_0_address0 =  (sc_lv<11>) (zext_ln350_fu_517_p1.read());
}

void mlp_kernel::thread_l1_weights_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l1_weights_0_ce0 = ap_const_logic_1;
    } else {
        l1_weights_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l1_weights_1_address0() {
    l1_weights_1_address0 =  (sc_lv<11>) (zext_ln350_fu_517_p1.read());
}

void mlp_kernel::thread_l1_weights_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l1_weights_1_ce0 = ap_const_logic_1;
    } else {
        l1_weights_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l2_biases_0_address0() {
    l2_biases_0_address0 =  (sc_lv<3>) (zext_ln368_fu_747_p1.read());
}

void mlp_kernel::thread_l2_biases_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l2_biases_0_ce0 = ap_const_logic_1;
    } else {
        l2_biases_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l2_biases_1_address0() {
    l2_biases_1_address0 =  (sc_lv<3>) (zext_ln368_fu_747_p1.read());
}

void mlp_kernel::thread_l2_biases_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l2_biases_1_ce0 = ap_const_logic_1;
    } else {
        l2_biases_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l2_weights_0_address0() {
    l2_weights_0_address0 =  (sc_lv<9>) (zext_ln366_fu_711_p1.read());
}

void mlp_kernel::thread_l2_weights_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l2_weights_0_ce0 = ap_const_logic_1;
    } else {
        l2_weights_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_l2_weights_1_address0() {
    l2_weights_1_address0 =  (sc_lv<9>) (zext_ln366_fu_711_p1.read());
}

void mlp_kernel::thread_l2_weights_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        l2_weights_1_ce0 = ap_const_logic_1;
    } else {
        l2_weights_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_lshr_ln1_fu_507_p4() {
    lshr_ln1_fu_507_p4 = add_ln350_fu_502_p2.read().range(11, 1);
}

void mlp_kernel::thread_lshr_ln2_fu_737_p4() {
    lshr_ln2_fu_737_p4 = i1_0_reg_423.read().range(3, 1);
}

void mlp_kernel::thread_lshr_ln350_1_fu_527_p4() {
    lshr_ln350_1_fu_527_p4 = j_0_reg_400.read().range(6, 3);
}

void mlp_kernel::thread_lshr_ln366_1_fu_717_p4() {
    lshr_ln366_1_fu_717_p4 = j3_0_reg_447.read().range(6, 1);
}

void mlp_kernel::thread_lshr_ln3_fu_701_p4() {
    lshr_ln3_fu_701_p4 = add_ln366_fu_696_p2.read().range(9, 1);
}

void mlp_kernel::thread_lshr_ln_fu_553_p4() {
    lshr_ln_fu_553_p4 = i_0_reg_388.read().range(6, 1);
}

void mlp_kernel::thread_prediction_0_address0() {
    prediction_0_address0 = prediction_0_addr_reg_999.read();
}

void mlp_kernel::thread_prediction_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        prediction_0_ce0 = ap_const_logic_1;
    } else {
        prediction_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_prediction_0_d0() {
    prediction_0_d0 = sum_3_fu_786_p2.read();
}

void mlp_kernel::thread_prediction_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln368_reg_984.read()))) {
        prediction_0_we0 = ap_const_logic_1;
    } else {
        prediction_0_we0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_prediction_1_address0() {
    prediction_1_address0 = prediction_1_addr_reg_1004.read();
}

void mlp_kernel::thread_prediction_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        prediction_1_ce0 = ap_const_logic_1;
    } else {
        prediction_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_prediction_1_d0() {
    prediction_1_d0 = sum_3_fu_786_p2.read();
}

void mlp_kernel::thread_prediction_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln368_reg_984.read()))) {
        prediction_1_we0 = ap_const_logic_1;
    } else {
        prediction_1_we0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_0_address0() {
    sample_0_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_0_ce0 = ap_const_logic_1;
    } else {
        sample_0_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_1_address0() {
    sample_1_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_1_ce0 = ap_const_logic_1;
    } else {
        sample_1_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_2_address0() {
    sample_2_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_2_ce0 = ap_const_logic_1;
    } else {
        sample_2_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_3_address0() {
    sample_3_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_3_ce0 = ap_const_logic_1;
    } else {
        sample_3_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_4_address0() {
    sample_4_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_4_ce0 = ap_const_logic_1;
    } else {
        sample_4_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_5_address0() {
    sample_5_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_5_ce0 = ap_const_logic_1;
    } else {
        sample_5_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_6_address0() {
    sample_6_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_6_ce0 = ap_const_logic_1;
    } else {
        sample_6_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_sample_7_address0() {
    sample_7_address0 =  (sc_lv<3>) (zext_ln350_2_fu_537_p1.read());
}

void mlp_kernel::thread_sample_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sample_7_ce0 = ap_const_logic_1;
    } else {
        sample_7_ce0 = ap_const_logic_0;
    }
}

void mlp_kernel::thread_select_ln350_fu_571_p3() {
    select_ln350_fu_571_p3 = (!trunc_ln350_1_reg_831.read()[0].is_01())? sc_lv<8>(): ((trunc_ln350_1_reg_831.read()[0].to_bool())? l1_weights_1_q0.read(): l1_weights_0_q0.read());
}

void mlp_kernel::thread_select_ln352_fu_609_p3() {
    select_ln352_fu_609_p3 = (!trunc_ln352_reg_891.read()[0].is_01())? sc_lv<8>(): ((trunc_ln352_reg_891.read()[0].to_bool())? l1_biases_1_q0.read(): l1_biases_0_q0.read());
}

void mlp_kernel::thread_select_ln366_1_fu_762_p3() {
    select_ln366_1_fu_762_p3 = (!trunc_ln366_reg_958.read()[0].is_01())? sc_lv<15>(): ((trunc_ln366_reg_958.read()[0].to_bool())? l1_out_1_q0.read(): l1_out_0_q0.read());
}

void mlp_kernel::thread_select_ln366_fu_755_p3() {
    select_ln366_fu_755_p3 = (!trunc_ln366_reg_958.read()[0].is_01())? sc_lv<8>(): ((trunc_ln366_reg_958.read()[0].to_bool())? l2_weights_1_q0.read(): l2_weights_0_q0.read());
}

void mlp_kernel::thread_select_ln368_fu_775_p3() {
    select_ln368_fu_775_p3 = (!trunc_ln368_reg_984.read()[0].is_01())? sc_lv<8>(): ((trunc_ln368_reg_984.read()[0].to_bool())? l2_biases_1_q0.read(): l2_biases_0_q0.read());
}

void mlp_kernel::thread_sext_ln352_1_fu_620_p1() {
    sext_ln352_1_fu_620_p1 = esl_sext<15,8>(select_ln352_fu_609_p3.read());
}

void mlp_kernel::thread_sext_ln352_fu_616_p1() {
    sext_ln352_fu_616_p1 = esl_sext<16,8>(select_ln352_fu_609_p3.read());
}

void mlp_kernel::thread_sext_ln368_fu_782_p1() {
    sext_ln368_fu_782_p1 = esl_sext<16,8>(select_ln368_fu_775_p3.read());
}

void mlp_kernel::thread_shl_ln1_fu_668_p3() {
    shl_ln1_fu_668_p3 = esl_concat<4,6>(i1_0_reg_423.read(), ap_const_lv6_0);
}

void mlp_kernel::thread_shl_ln_fu_474_p3() {
    shl_ln_fu_474_p3 = esl_concat<6,6>(trunc_ln350_fu_470_p1.read(), ap_const_lv6_0);
}

void mlp_kernel::thread_sum_1_fu_648_p3() {
    sum_1_fu_648_p3 = (!tmp_3_fu_640_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_3_fu_640_p3.read()[0].to_bool())? ap_const_lv15_0: add_ln352_1_fu_634_p2.read());
}

void mlp_kernel::thread_sum_3_fu_786_p2() {
    sum_3_fu_786_p2 = (!sum2_0_reg_435.read().is_01() || !sext_ln368_fu_782_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(sum2_0_reg_435.read()) + sc_bigint<16>(sext_ln368_fu_782_p1.read()));
}

void mlp_kernel::thread_sum_fu_628_p2() {
    sum_fu_628_p2 = (!sext_ln352_fu_616_p1.read().is_01() || !sum_0_reg_411.read().is_01())? sc_lv<16>(): (sc_bigint<16>(sext_ln352_fu_616_p1.read()) + sc_biguint<16>(sum_0_reg_411.read()));
}

void mlp_kernel::thread_tmp_2_fu_581_p9() {
    tmp_2_fu_581_p9 = esl_zext<32,3>(trunc_ln350_2_reg_846.read());
}

void mlp_kernel::thread_tmp_3_fu_640_p3() {
    tmp_3_fu_640_p3 = sum_fu_628_p2.read().range(15, 15);
}

void mlp_kernel::thread_trunc_ln350_1_fu_498_p1() {
    trunc_ln350_1_fu_498_p1 = j_0_reg_400.read().range(1-1, 0);
}

void mlp_kernel::thread_trunc_ln350_2_fu_523_p1() {
    trunc_ln350_2_fu_523_p1 = j_0_reg_400.read().range(3-1, 0);
}

void mlp_kernel::thread_trunc_ln350_fu_470_p1() {
    trunc_ln350_fu_470_p1 = i_0_reg_388.read().range(6-1, 0);
}

void mlp_kernel::thread_trunc_ln352_1_fu_624_p1() {
    trunc_ln352_1_fu_624_p1 = sum_0_reg_411.read().range(15-1, 0);
}

void mlp_kernel::thread_trunc_ln352_fu_549_p1() {
    trunc_ln352_fu_549_p1 = i_0_reg_388.read().range(1-1, 0);
}

void mlp_kernel::thread_trunc_ln366_fu_692_p1() {
    trunc_ln366_fu_692_p1 = j3_0_reg_447.read().range(1-1, 0);
}

void mlp_kernel::thread_trunc_ln368_fu_733_p1() {
    trunc_ln368_fu_733_p1 = i1_0_reg_423.read().range(1-1, 0);
}

void mlp_kernel::thread_zext_ln348_fu_482_p1() {
    zext_ln348_fu_482_p1 = esl_zext<12,7>(j_0_reg_400.read());
}

void mlp_kernel::thread_zext_ln350_2_fu_537_p1() {
    zext_ln350_2_fu_537_p1 = esl_zext<64,4>(lshr_ln350_1_fu_527_p4.read());
}

void mlp_kernel::thread_zext_ln350_fu_517_p1() {
    zext_ln350_fu_517_p1 = esl_zext<64,11>(lshr_ln1_fu_507_p4.read());
}

void mlp_kernel::thread_zext_ln352_fu_563_p1() {
    zext_ln352_fu_563_p1 = esl_zext<64,6>(lshr_ln_fu_553_p4.read());
}

void mlp_kernel::thread_zext_ln364_fu_676_p1() {
    zext_ln364_fu_676_p1 = esl_zext<10,7>(j3_0_reg_447.read());
}

void mlp_kernel::thread_zext_ln366_1_fu_727_p1() {
    zext_ln366_1_fu_727_p1 = esl_zext<64,6>(lshr_ln366_1_fu_717_p4.read());
}

void mlp_kernel::thread_zext_ln366_fu_711_p1() {
    zext_ln366_fu_711_p1 = esl_zext<64,9>(lshr_ln3_fu_701_p4.read());
}

void mlp_kernel::thread_zext_ln368_fu_747_p1() {
    zext_ln368_fu_747_p1 = esl_zext<64,3>(lshr_ln2_fu_737_p4.read());
}

void mlp_kernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln345_fu_458_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln348_fu_486_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln361_fu_656_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln364_fu_680_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

