// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        inputs_0_0_V_dout,
        inputs_0_0_V_empty_n,
        inputs_0_0_V_read,
        inputs_0_1_V_dout,
        inputs_0_1_V_empty_n,
        inputs_0_1_V_read,
        inputs_0_2_V_dout,
        inputs_0_2_V_empty_n,
        inputs_0_2_V_read,
        inputs_1_0_V_dout,
        inputs_1_0_V_empty_n,
        inputs_1_0_V_read,
        inputs_1_1_V_dout,
        inputs_1_1_V_empty_n,
        inputs_1_1_V_read,
        inputs_1_2_V_dout,
        inputs_1_2_V_empty_n,
        inputs_1_2_V_read,
        inputs_2_0_V_dout,
        inputs_2_0_V_empty_n,
        inputs_2_0_V_read,
        inputs_2_1_V_dout,
        inputs_2_1_V_empty_n,
        inputs_2_1_V_read,
        inputs_2_2_V_dout,
        inputs_2_2_V_empty_n,
        inputs_2_2_V_read,
        inputs_3_0_V_dout,
        inputs_3_0_V_empty_n,
        inputs_3_0_V_read,
        inputs_3_1_V_dout,
        inputs_3_1_V_empty_n,
        inputs_3_1_V_read,
        inputs_3_2_V_dout,
        inputs_3_2_V_empty_n,
        inputs_3_2_V_read,
        outputs_0_0_V_din,
        outputs_0_0_V_full_n,
        outputs_0_0_V_write,
        outputs_0_1_V_din,
        outputs_0_1_V_full_n,
        outputs_0_1_V_write,
        outputs_0_2_V_din,
        outputs_0_2_V_full_n,
        outputs_0_2_V_write,
        outputs_0_3_V_din,
        outputs_0_3_V_full_n,
        outputs_0_3_V_write,
        outputs_1_0_V_din,
        outputs_1_0_V_full_n,
        outputs_1_0_V_write,
        outputs_1_1_V_din,
        outputs_1_1_V_full_n,
        outputs_1_1_V_write,
        outputs_1_2_V_din,
        outputs_1_2_V_full_n,
        outputs_1_2_V_write,
        outputs_1_3_V_din,
        outputs_1_3_V_full_n,
        outputs_1_3_V_write
);

parameter    ap_ST_fsm_state1 = 83'd1;
parameter    ap_ST_fsm_state2 = 83'd2;
parameter    ap_ST_fsm_state3 = 83'd4;
parameter    ap_ST_fsm_state4 = 83'd8;
parameter    ap_ST_fsm_state5 = 83'd16;
parameter    ap_ST_fsm_state6 = 83'd32;
parameter    ap_ST_fsm_state7 = 83'd64;
parameter    ap_ST_fsm_state8 = 83'd128;
parameter    ap_ST_fsm_state9 = 83'd256;
parameter    ap_ST_fsm_state10 = 83'd512;
parameter    ap_ST_fsm_state11 = 83'd1024;
parameter    ap_ST_fsm_state12 = 83'd2048;
parameter    ap_ST_fsm_state13 = 83'd4096;
parameter    ap_ST_fsm_state14 = 83'd8192;
parameter    ap_ST_fsm_state15 = 83'd16384;
parameter    ap_ST_fsm_state16 = 83'd32768;
parameter    ap_ST_fsm_state17 = 83'd65536;
parameter    ap_ST_fsm_state18 = 83'd131072;
parameter    ap_ST_fsm_state19 = 83'd262144;
parameter    ap_ST_fsm_state20 = 83'd524288;
parameter    ap_ST_fsm_state21 = 83'd1048576;
parameter    ap_ST_fsm_state22 = 83'd2097152;
parameter    ap_ST_fsm_state23 = 83'd4194304;
parameter    ap_ST_fsm_state24 = 83'd8388608;
parameter    ap_ST_fsm_state25 = 83'd16777216;
parameter    ap_ST_fsm_state26 = 83'd33554432;
parameter    ap_ST_fsm_state27 = 83'd67108864;
parameter    ap_ST_fsm_state28 = 83'd134217728;
parameter    ap_ST_fsm_state29 = 83'd268435456;
parameter    ap_ST_fsm_state30 = 83'd536870912;
parameter    ap_ST_fsm_state31 = 83'd1073741824;
parameter    ap_ST_fsm_state32 = 83'd2147483648;
parameter    ap_ST_fsm_state33 = 83'd4294967296;
parameter    ap_ST_fsm_state34 = 83'd8589934592;
parameter    ap_ST_fsm_state35 = 83'd17179869184;
parameter    ap_ST_fsm_state36 = 83'd34359738368;
parameter    ap_ST_fsm_state37 = 83'd68719476736;
parameter    ap_ST_fsm_state38 = 83'd137438953472;
parameter    ap_ST_fsm_state39 = 83'd274877906944;
parameter    ap_ST_fsm_state40 = 83'd549755813888;
parameter    ap_ST_fsm_state41 = 83'd1099511627776;
parameter    ap_ST_fsm_state42 = 83'd2199023255552;
parameter    ap_ST_fsm_state43 = 83'd4398046511104;
parameter    ap_ST_fsm_state44 = 83'd8796093022208;
parameter    ap_ST_fsm_state45 = 83'd17592186044416;
parameter    ap_ST_fsm_state46 = 83'd35184372088832;
parameter    ap_ST_fsm_state47 = 83'd70368744177664;
parameter    ap_ST_fsm_state48 = 83'd140737488355328;
parameter    ap_ST_fsm_state49 = 83'd281474976710656;
parameter    ap_ST_fsm_state50 = 83'd562949953421312;
parameter    ap_ST_fsm_state51 = 83'd1125899906842624;
parameter    ap_ST_fsm_state52 = 83'd2251799813685248;
parameter    ap_ST_fsm_state53 = 83'd4503599627370496;
parameter    ap_ST_fsm_state54 = 83'd9007199254740992;
parameter    ap_ST_fsm_state55 = 83'd18014398509481984;
parameter    ap_ST_fsm_state56 = 83'd36028797018963968;
parameter    ap_ST_fsm_state57 = 83'd72057594037927936;
parameter    ap_ST_fsm_state58 = 83'd144115188075855872;
parameter    ap_ST_fsm_state59 = 83'd288230376151711744;
parameter    ap_ST_fsm_state60 = 83'd576460752303423488;
parameter    ap_ST_fsm_state61 = 83'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 83'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 83'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 83'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 83'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 83'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 83'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 83'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 83'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 83'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 83'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 83'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 83'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 83'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 83'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 83'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 83'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 83'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 83'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 83'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 83'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 83'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 83'd4835703278458516698824704;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] inputs_0_0_V_dout;
input   inputs_0_0_V_empty_n;
output   inputs_0_0_V_read;
input  [7:0] inputs_0_1_V_dout;
input   inputs_0_1_V_empty_n;
output   inputs_0_1_V_read;
input  [7:0] inputs_0_2_V_dout;
input   inputs_0_2_V_empty_n;
output   inputs_0_2_V_read;
input  [7:0] inputs_1_0_V_dout;
input   inputs_1_0_V_empty_n;
output   inputs_1_0_V_read;
input  [7:0] inputs_1_1_V_dout;
input   inputs_1_1_V_empty_n;
output   inputs_1_1_V_read;
input  [7:0] inputs_1_2_V_dout;
input   inputs_1_2_V_empty_n;
output   inputs_1_2_V_read;
input  [7:0] inputs_2_0_V_dout;
input   inputs_2_0_V_empty_n;
output   inputs_2_0_V_read;
input  [7:0] inputs_2_1_V_dout;
input   inputs_2_1_V_empty_n;
output   inputs_2_1_V_read;
input  [7:0] inputs_2_2_V_dout;
input   inputs_2_2_V_empty_n;
output   inputs_2_2_V_read;
input  [7:0] inputs_3_0_V_dout;
input   inputs_3_0_V_empty_n;
output   inputs_3_0_V_read;
input  [7:0] inputs_3_1_V_dout;
input   inputs_3_1_V_empty_n;
output   inputs_3_1_V_read;
input  [7:0] inputs_3_2_V_dout;
input   inputs_3_2_V_empty_n;
output   inputs_3_2_V_read;
output  [15:0] outputs_0_0_V_din;
input   outputs_0_0_V_full_n;
output   outputs_0_0_V_write;
output  [15:0] outputs_0_1_V_din;
input   outputs_0_1_V_full_n;
output   outputs_0_1_V_write;
output  [15:0] outputs_0_2_V_din;
input   outputs_0_2_V_full_n;
output   outputs_0_2_V_write;
output  [15:0] outputs_0_3_V_din;
input   outputs_0_3_V_full_n;
output   outputs_0_3_V_write;
output  [15:0] outputs_1_0_V_din;
input   outputs_1_0_V_full_n;
output   outputs_1_0_V_write;
output  [15:0] outputs_1_1_V_din;
input   outputs_1_1_V_full_n;
output   outputs_1_1_V_write;
output  [15:0] outputs_1_2_V_din;
input   outputs_1_2_V_full_n;
output   outputs_1_2_V_write;
output  [15:0] outputs_1_3_V_din;
input   outputs_1_3_V_full_n;
output   outputs_1_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg inputs_0_0_V_read;
reg inputs_0_1_V_read;
reg inputs_0_2_V_read;
reg inputs_1_0_V_read;
reg inputs_1_1_V_read;
reg inputs_1_2_V_read;
reg inputs_2_0_V_read;
reg inputs_2_1_V_read;
reg inputs_2_2_V_read;
reg inputs_3_0_V_read;
reg inputs_3_1_V_read;
reg inputs_3_2_V_read;
reg outputs_0_0_V_write;
reg outputs_0_1_V_write;
reg outputs_0_2_V_write;
reg outputs_0_3_V_write;
reg outputs_1_0_V_write;
reg outputs_1_1_V_write;
reg outputs_1_2_V_write;
reg outputs_1_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [82:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] read_odd;
reg   [15:0] read_col_index;
reg   [0:0] compute_odd;
reg   [15:0] compute_col_index;
reg   [3:0] kernels_0_address0;
reg    kernels_0_ce0;
wire   [5:0] kernels_0_q0;
reg   [12:0] stripes_0_address0;
reg    stripes_0_ce0;
wire   [7:0] stripes_0_q0;
reg   [12:0] stripes_0_address1;
reg    stripes_0_ce1;
reg    stripes_0_we1;
reg   [7:0] stripes_0_d1;
reg   [3:0] kernels_1_address0;
reg    kernels_1_ce0;
wire   [5:0] kernels_1_q0;
reg   [3:0] kernels_2_address0;
reg    kernels_2_ce0;
wire   [5:0] kernels_2_q0;
reg   [3:0] kernels_3_address0;
reg    kernels_3_ce0;
wire   [5:0] kernels_3_q0;
reg   [3:0] kernels_4_address0;
reg    kernels_4_ce0;
wire   [5:0] kernels_4_q0;
reg   [12:0] stripes_1_address0;
reg    stripes_1_ce0;
wire   [7:0] stripes_1_q0;
reg   [12:0] stripes_1_address1;
reg    stripes_1_ce1;
reg    stripes_1_we1;
reg   [7:0] stripes_1_d1;
reg   [3:0] kernels_5_address0;
reg    kernels_5_ce0;
wire   [5:0] kernels_5_q0;
reg   [3:0] kernels_6_address0;
reg    kernels_6_ce0;
wire   [5:0] kernels_6_q0;
reg   [3:0] kernels_7_address0;
reg    kernels_7_ce0;
wire   [5:0] kernels_7_q0;
reg   [3:0] kernels_8_address0;
reg    kernels_8_ce0;
wire   [5:0] kernels_8_q0;
reg   [12:0] stripes_2_address0;
reg    stripes_2_ce0;
wire   [7:0] stripes_2_q0;
reg   [12:0] stripes_2_address1;
reg    stripes_2_ce1;
reg    stripes_2_we1;
reg   [7:0] stripes_2_d1;
reg   [3:0] kernels_9_address0;
reg    kernels_9_ce0;
wire   [5:0] kernels_9_q0;
reg   [3:0] kernels_10_address0;
reg    kernels_10_ce0;
wire   [5:0] kernels_10_q0;
reg   [3:0] kernels_11_address0;
reg    kernels_11_ce0;
wire   [5:0] kernels_11_q0;
reg    inputs_0_0_V_blk_n;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln108_fu_2264_p2;
reg   [1:0] i1_0_reg_1436;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln89_fu_2196_p2;
reg   [1:0] i_0_reg_1424;
reg    inputs_0_1_V_blk_n;
reg    inputs_0_2_V_blk_n;
reg    inputs_1_0_V_blk_n;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state5;
reg    inputs_1_1_V_blk_n;
reg    inputs_1_2_V_blk_n;
reg    inputs_2_0_V_blk_n;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state6;
reg    inputs_2_1_V_blk_n;
reg    inputs_2_2_V_blk_n;
reg    inputs_3_0_V_blk_n;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state7;
reg    inputs_3_1_V_blk_n;
reg    inputs_3_2_V_blk_n;
reg    outputs_0_0_V_blk_n;
wire    ap_CS_fsm_state48;
reg   [1:0] trunc_ln182_reg_4580;
reg    outputs_0_1_V_blk_n;
reg    outputs_0_2_V_blk_n;
reg    outputs_0_3_V_blk_n;
reg    outputs_1_0_V_blk_n;
wire    ap_CS_fsm_state81;
reg   [1:0] trunc_ln182_4_reg_4910;
reg    outputs_1_1_V_blk_n;
reg    outputs_1_2_V_blk_n;
reg    outputs_1_3_V_blk_n;
wire   [31:0] partial_sums_q0;
reg   [31:0] reg_1988;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state57;
wire   [31:0] partial_sums_q1;
reg   [31:0] reg_1992;
reg   [31:0] reg_1996;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state58;
reg   [31:0] reg_2001;
reg   [31:0] reg_2006;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state59;
reg   [31:0] reg_2011;
reg   [31:0] reg_2016;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state60;
reg   [31:0] reg_2021;
reg  signed [5:0] reg_2026;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state61;
reg   [7:0] reg_2030;
reg  signed [5:0] reg_2034;
reg  signed [5:0] reg_2038;
reg  signed [5:0] reg_2042;
reg  signed [5:0] reg_2046;
reg   [7:0] reg_2050;
reg  signed [5:0] reg_2054;
reg  signed [5:0] reg_2058;
reg  signed [5:0] reg_2062;
reg  signed [5:0] reg_2066;
reg   [7:0] reg_2070;
reg   [31:0] reg_2074;
reg  signed [5:0] reg_2079;
reg   [31:0] reg_2083;
reg  signed [5:0] reg_2088;
reg  signed [5:0] reg_2092;
reg    ap_block_state1;
wire   [2:0] b_fu_2102_p2;
reg   [2:0] b_reg_3891;
wire    ap_CS_fsm_state2;
wire   [0:0] read_odd_load_load_fu_2108_p1;
reg   [0:0] read_odd_load_reg_3896;
wire   [0:0] icmp_ln80_fu_2096_p2;
wire   [1:0] i_1_fu_2118_p2;
reg   [1:0] i_1_reg_3904;
wire    ap_CS_fsm_state3;
wire  signed [16:0] sext_ln87_fu_2124_p1;
wire   [0:0] icmp_ln85_fu_2112_p2;
wire   [1:0] i_fu_2134_p2;
reg   [1:0] i_reg_3917;
wire  signed [16:0] sext_ln106_fu_2140_p1;
wire   [0:0] icmp_ln104_fu_2128_p2;
reg   [0:0] compute_odd_load_reg_3927;
wire   [2:0] current_row_indices_s_fu_2148_p3;
reg   [2:0] current_row_indices_s_reg_3932;
wire   [2:0] current_row_indices_1_fu_2156_p3;
reg   [2:0] current_row_indices_1_reg_3937;
wire   [2:0] current_row_indices_2_fu_2164_p3;
reg   [2:0] current_row_indices_2_reg_3943;
wire   [2:0] current_row_indices_3_fu_2172_p3;
reg   [2:0] current_row_indices_3_reg_3950;
wire   [2:0] current_row_indices_4_fu_2180_p3;
reg   [2:0] current_row_indices_4_reg_3957;
wire   [2:0] current_row_indices_5_fu_2188_p3;
reg   [2:0] current_row_indices_5_reg_3963;
wire   [1:0] j_1_fu_2202_p2;
reg   [1:0] j_1_reg_3971;
reg    ap_predicate_op225_read_state4;
reg    ap_predicate_op227_read_state4;
reg    ap_predicate_op229_read_state4;
reg    ap_block_state4;
reg   [12:0] stripes_0_addr_1_reg_3976;
reg   [12:0] stripes_0_addr_3_reg_3981;
reg   [12:0] stripes_0_addr_5_reg_3986;
reg   [12:0] stripes_0_addr_7_reg_3991;
reg   [12:0] stripes_1_addr_1_reg_3996;
reg   [12:0] stripes_1_addr_3_reg_4001;
reg   [12:0] stripes_1_addr_5_reg_4006;
reg   [12:0] stripes_1_addr_7_reg_4011;
reg   [12:0] stripes_2_addr_1_reg_4016;
reg   [12:0] stripes_2_addr_3_reg_4021;
reg   [12:0] stripes_2_addr_5_reg_4026;
reg   [12:0] stripes_2_addr_7_reg_4031;
reg    ap_predicate_op246_read_state5;
reg    ap_block_state5;
reg    ap_predicate_op261_read_state6;
reg    ap_block_state6;
reg    ap_predicate_op276_read_state7;
reg    ap_block_state7;
wire   [16:0] local_col_index_1_fu_2258_p2;
wire    ap_CS_fsm_state8;
wire   [1:0] j_fu_2270_p2;
reg   [1:0] j_reg_4104;
reg    ap_predicate_op317_read_state9;
reg    ap_predicate_op319_read_state9;
reg    ap_predicate_op321_read_state9;
reg    ap_block_state9;
reg   [12:0] stripes_0_addr_reg_4109;
reg   [12:0] stripes_0_addr_2_reg_4114;
reg   [12:0] stripes_0_addr_4_reg_4119;
reg   [12:0] stripes_0_addr_6_reg_4124;
reg   [12:0] stripes_1_addr_reg_4129;
reg   [12:0] stripes_1_addr_2_reg_4134;
reg   [12:0] stripes_1_addr_4_reg_4139;
reg   [12:0] stripes_1_addr_6_reg_4144;
reg   [12:0] stripes_2_addr_reg_4149;
reg   [12:0] stripes_2_addr_2_reg_4154;
reg   [12:0] stripes_2_addr_4_reg_4159;
reg   [12:0] stripes_2_addr_6_reg_4164;
reg    ap_predicate_op338_read_state10;
reg    ap_block_state10;
reg    ap_predicate_op353_read_state11;
reg    ap_block_state11;
reg    ap_predicate_op368_read_state12;
reg    ap_block_state12;
wire   [16:0] local_col_index_fu_2332_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] xor_ln146_fu_2338_p2;
reg   [0:0] xor_ln146_reg_4234;
wire    ap_CS_fsm_state14;
wire   [1:0] add_ln146_fu_2344_p2;
wire    ap_CS_fsm_state15;
reg   [15:0] compute_col_index_lo_reg_4247;
wire   [0:0] icmp_ln146_fu_2363_p2;
reg   [0:0] phi_ln146_reg_1602;
wire   [2:0] add_ln153_fu_2379_p2;
reg   [2:0] add_ln153_reg_4257;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln155_fu_2395_p2;
reg   [0:0] icmp_ln155_reg_4262;
wire   [0:0] icmp_ln153_fu_2373_p2;
wire   [0:0] trunc_ln160_fu_2401_p1;
reg   [0:0] trunc_ln160_reg_4267;
wire   [13:0] zext_ln172_fu_2425_p1;
reg   [13:0] zext_ln172_reg_4272;
wire    ap_CS_fsm_state17;
wire   [13:0] trunc_ln172_fu_2428_p1;
reg   [13:0] trunc_ln172_reg_4277;
wire   [0:0] xor_ln174_fu_2431_p2;
reg   [0:0] xor_ln174_reg_4282;
wire    ap_CS_fsm_state18;
wire   [2:0] select_ln174_fu_2437_p3;
reg   [2:0] select_ln174_reg_4287;
wire   [1:0] add_ln174_fu_2445_p2;
reg   [1:0] add_ln174_reg_4292;
wire    ap_CS_fsm_state19;
wire   [2:0] add_ln174_4_fu_2455_p2;
reg   [2:0] add_ln174_4_reg_4297;
wire   [1:0] add_ln174_1_fu_2460_p2;
wire    ap_CS_fsm_state20;
wire   [13:0] add_ln190_32_fu_2490_p2;
reg   [13:0] add_ln190_32_reg_4313;
wire   [0:0] icmp_ln174_fu_2478_p2;
wire   [0:0] icmp_ln174_1_fu_2484_p2;
reg   [0:0] phi_ln174_reg_1636;
wire   [1:0] add_ln177_fu_2500_p2;
reg   [1:0] add_ln177_reg_4321;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln177_fu_2494_p2;
wire   [4:0] sub_ln190_fu_2527_p2;
reg   [4:0] sub_ln190_reg_4331;
wire    ap_CS_fsm_state22;
wire   [13:0] zext_ln190_5_fu_2563_p1;
reg   [13:0] zext_ln190_5_reg_4336;
wire   [1:0] add_ln180_fu_2577_p2;
reg   [1:0] add_ln180_reg_4344;
wire    ap_CS_fsm_state23;
wire   [4:0] add_ln190_27_fu_2587_p2;
reg   [4:0] add_ln190_27_reg_4349;
wire   [0:0] icmp_ln180_fu_2571_p2;
wire   [13:0] add_ln190_28_fu_2597_p2;
reg   [13:0] add_ln190_28_reg_4354;
wire  signed [31:0] grp_fu_3518_p3;
reg  signed [31:0] add_ln190_3_reg_4434;
wire    ap_CS_fsm_state29;
wire  signed [31:0] grp_fu_3526_p3;
reg  signed [31:0] add_ln190_4_reg_4439;
wire  signed [31:0] grp_fu_3534_p3;
reg  signed [31:0] add_ln190_5_reg_4444;
wire  signed [31:0] grp_fu_3542_p3;
reg  signed [31:0] add_ln190_6_reg_4449;
wire  signed [31:0] grp_fu_3550_p3;
reg  signed [31:0] add_ln190_7_reg_4454;
wire  signed [31:0] grp_fu_3558_p3;
reg  signed [31:0] add_ln190_8_reg_4459;
wire  signed [31:0] grp_fu_3566_p3;
reg  signed [31:0] add_ln190_9_reg_4464;
wire  signed [31:0] grp_fu_3574_p3;
reg  signed [31:0] add_ln190_10_reg_4469;
wire  signed [31:0] grp_fu_3582_p3;
reg  signed [31:0] add_ln190_11_reg_4474;
wire  signed [31:0] grp_fu_3590_p3;
reg  signed [31:0] add_ln190_12_reg_4479;
wire   [0:0] xor_ln196_fu_2683_p2;
reg   [0:0] xor_ln196_reg_4484;
wire    ap_CS_fsm_state35;
wire   [1:0] add_ln196_fu_2689_p2;
wire    ap_CS_fsm_state36;
wire   [1:0] add_ln202_fu_2720_p2;
reg   [1:0] add_ln202_reg_4500;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln202_fu_2714_p2;
wire   [1:0] add_ln202_1_fu_2745_p2;
reg   [1:0] add_ln202_1_reg_4513;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln202_1_fu_2739_p2;
wire   [1:0] add_ln202_3_fu_2780_p2;
reg   [1:0] add_ln202_3_reg_4526;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln202_3_fu_2774_p2;
wire   [1:0] add_ln202_5_fu_2815_p2;
reg   [1:0] add_ln202_5_reg_4539;
wire    ap_CS_fsm_state43;
wire   [0:0] icmp_ln202_5_fu_2809_p2;
wire   [2:0] add_ln209_fu_2850_p2;
reg   [2:0] add_ln209_reg_4552;
wire    ap_CS_fsm_state45;
reg   [2:0] maxes_addr_3_reg_4557;
wire   [0:0] icmp_ln209_fu_2844_p2;
wire   [2:0] add_ln216_fu_2868_p2;
reg   [2:0] add_ln216_reg_4570;
wire    ap_CS_fsm_state47;
wire   [0:0] icmp_ln216_fu_2862_p2;
wire   [1:0] trunc_ln182_fu_2879_p1;
wire   [2:0] add_ln153_1_fu_2897_p2;
reg   [2:0] add_ln153_1_reg_4587;
wire    ap_CS_fsm_state49;
wire   [0:0] trunc_ln158_fu_2919_p1;
reg   [0:0] trunc_ln158_reg_4592;
wire   [0:0] icmp_ln153_1_fu_2891_p2;
wire   [2:0] current_row_indices_11_fu_2937_p3;
reg   [2:0] current_row_indices_11_reg_4597;
wire   [13:0] zext_ln172_1_fu_2943_p1;
reg   [13:0] zext_ln172_1_reg_4602;
wire    ap_CS_fsm_state50;
wire   [13:0] trunc_ln172_1_fu_2946_p1;
reg   [13:0] trunc_ln172_1_reg_4607;
wire   [0:0] xor_ln174_1_fu_2949_p2;
reg   [0:0] xor_ln174_1_reg_4612;
wire    ap_CS_fsm_state51;
wire   [2:0] select_ln174_1_fu_2955_p3;
reg   [2:0] select_ln174_1_reg_4617;
wire   [1:0] add_ln174_2_fu_2963_p2;
reg   [1:0] add_ln174_2_reg_4622;
wire    ap_CS_fsm_state52;
wire   [2:0] add_ln174_5_fu_2973_p2;
reg   [2:0] add_ln174_5_reg_4627;
wire   [1:0] add_ln174_3_fu_2978_p2;
wire    ap_CS_fsm_state53;
wire   [13:0] add_ln190_33_fu_3008_p2;
reg   [13:0] add_ln190_33_reg_4643;
wire   [0:0] icmp_ln174_2_fu_2996_p2;
wire   [0:0] icmp_ln174_3_fu_3002_p2;
reg   [0:0] phi_ln174_3_reg_1794;
wire   [1:0] add_ln177_1_fu_3018_p2;
reg   [1:0] add_ln177_1_reg_4651;
wire    ap_CS_fsm_state54;
wire   [0:0] icmp_ln177_1_fu_3012_p2;
wire   [4:0] sub_ln190_1_fu_3045_p2;
reg   [4:0] sub_ln190_1_reg_4661;
wire    ap_CS_fsm_state55;
wire   [13:0] zext_ln190_17_fu_3081_p1;
reg   [13:0] zext_ln190_17_reg_4666;
wire   [1:0] add_ln180_1_fu_3095_p2;
reg   [1:0] add_ln180_1_reg_4674;
wire    ap_CS_fsm_state56;
wire   [4:0] add_ln190_30_fu_3105_p2;
reg   [4:0] add_ln190_30_reg_4679;
wire   [0:0] icmp_ln180_1_fu_3089_p2;
wire   [13:0] add_ln190_31_fu_3115_p2;
reg   [13:0] add_ln190_31_reg_4684;
wire  signed [31:0] grp_fu_3616_p3;
reg  signed [31:0] add_ln190_16_reg_4764;
wire    ap_CS_fsm_state62;
wire  signed [31:0] grp_fu_3624_p3;
reg  signed [31:0] add_ln190_17_reg_4769;
wire  signed [31:0] grp_fu_3632_p3;
reg  signed [31:0] add_ln190_18_reg_4774;
wire  signed [31:0] grp_fu_3640_p3;
reg  signed [31:0] add_ln190_19_reg_4779;
wire  signed [31:0] grp_fu_3648_p3;
reg  signed [31:0] add_ln190_20_reg_4784;
wire  signed [31:0] grp_fu_3656_p3;
reg  signed [31:0] add_ln190_21_reg_4789;
wire  signed [31:0] grp_fu_3664_p3;
reg  signed [31:0] add_ln190_22_reg_4794;
wire  signed [31:0] grp_fu_3672_p3;
reg  signed [31:0] add_ln190_23_reg_4799;
wire  signed [31:0] grp_fu_3680_p3;
reg  signed [31:0] add_ln190_24_reg_4804;
wire  signed [31:0] grp_fu_3688_p3;
reg  signed [31:0] add_ln190_25_reg_4809;
wire   [0:0] xor_ln196_1_fu_3201_p2;
reg   [0:0] xor_ln196_1_reg_4814;
wire    ap_CS_fsm_state68;
wire   [1:0] add_ln196_1_fu_3207_p2;
wire    ap_CS_fsm_state69;
wire   [1:0] add_ln202_2_fu_3238_p2;
reg   [1:0] add_ln202_2_reg_4830;
wire    ap_CS_fsm_state70;
wire   [0:0] icmp_ln202_2_fu_3232_p2;
wire   [1:0] add_ln202_4_fu_3273_p2;
reg   [1:0] add_ln202_4_reg_4843;
wire    ap_CS_fsm_state72;
wire   [0:0] icmp_ln202_4_fu_3267_p2;
wire   [1:0] add_ln202_6_fu_3308_p2;
reg   [1:0] add_ln202_6_reg_4856;
wire    ap_CS_fsm_state74;
wire   [0:0] icmp_ln202_6_fu_3302_p2;
wire   [1:0] add_ln202_7_fu_3343_p2;
reg   [1:0] add_ln202_7_reg_4869;
wire    ap_CS_fsm_state76;
wire   [0:0] icmp_ln202_7_fu_3337_p2;
wire   [2:0] add_ln209_1_fu_3378_p2;
reg   [2:0] add_ln209_1_reg_4882;
wire    ap_CS_fsm_state78;
reg   [2:0] maxes_addr_4_reg_4887;
wire   [0:0] icmp_ln209_1_fu_3372_p2;
wire   [2:0] add_ln216_1_fu_3402_p2;
reg   [2:0] add_ln216_1_reg_4900;
wire    ap_CS_fsm_state80;
wire   [0:0] icmp_ln216_1_fu_3396_p2;
wire   [1:0] trunc_ln182_4_fu_3419_p1;
wire   [0:0] icmp_ln225_fu_3435_p2;
reg   [0:0] icmp_ln225_reg_4914;
wire   [0:0] icmp_ln232_fu_3477_p2;
reg   [0:0] icmp_ln232_reg_4918;
wire    ap_CS_fsm_state82;
reg   [2:0] maxes_address0;
reg    maxes_ce0;
reg    maxes_we0;
reg   [31:0] maxes_d0;
wire   [31:0] maxes_q0;
reg   [1:0] local_row_indices_0_address0;
reg    local_row_indices_0_ce0;
reg    local_row_indices_0_we0;
reg   [2:0] local_row_indices_0_d0;
reg   [1:0] local_row_indices_0_address1;
reg    local_row_indices_0_ce1;
reg    local_row_indices_0_we1;
wire   [2:0] local_row_indices_0_d1;
wire   [2:0] local_row_indices_0_q1;
reg   [1:0] local_row_indices_1_address0;
reg    local_row_indices_1_ce0;
reg    local_row_indices_1_we0;
reg   [2:0] local_row_indices_1_d0;
reg   [1:0] local_row_indices_1_address1;
reg    local_row_indices_1_ce1;
reg    local_row_indices_1_we1;
wire   [2:0] local_row_indices_1_d1;
wire   [2:0] local_row_indices_1_q1;
reg   [4:0] partial_sums_address0;
reg    partial_sums_ce0;
reg    partial_sums_we0;
reg   [31:0] partial_sums_d0;
reg   [4:0] partial_sums_address1;
reg    partial_sums_ce1;
reg    partial_sums_we1;
reg   [31:0] partial_sums_d1;
reg   [2:0] kernel_sums_address0;
reg    kernel_sums_ce0;
reg    kernel_sums_we0;
reg   [31:0] kernel_sums_d0;
wire   [31:0] kernel_sums_q0;
reg   [2:0] b_0_reg_1413;
wire    ap_CS_fsm_state83;
reg   [1:0] j_0_reg_1448;
reg  signed [16:0] local_col_index_0_reg_1459;
reg   [7:0] tmp_2_0_reg_1469;
reg   [7:0] tmp_2_1_reg_1483;
reg   [7:0] tmp_2_2_reg_1497;
reg   [7:0] tmp_2_3_reg_1511;
reg   [1:0] j3_0_reg_1525;
reg   [16:0] local_col_index2_0_reg_1536;
reg   [7:0] tmp_0_reg_1546;
reg   [7:0] tmp_11366_reg_1560;
reg   [7:0] tmp_21367_reg_1574;
reg   [7:0] tmp_31368_reg_1588;
reg   [1:0] phi_ln146_1_reg_1614;
reg   [2:0] i6_0_0_reg_1625;
reg   [1:0] phi_ln174_1_reg_1648;
reg   [1:0] phi_ln174_2_reg_1660;
reg   [1:0] l_0_0_reg_1671;
reg   [1:0] m_0_0_reg_1683;
wire    ap_CS_fsm_state34;
reg   [0:0] phi_ln196_reg_1694;
wire   [0:0] icmp_ln196_fu_2708_p2;
reg   [1:0] phi_ln196_1_reg_1706;
reg   [1:0] j10_0_0_0_reg_1717;
wire    ap_CS_fsm_state38;
reg   [1:0] j10_0_0_1_reg_1728;
wire    ap_CS_fsm_state40;
reg   [1:0] j10_0_0_2_reg_1739;
wire    ap_CS_fsm_state42;
reg   [1:0] j10_0_0_3_reg_1750;
wire    ap_CS_fsm_state44;
reg   [2:0] j11_0_0_reg_1761;
wire    ap_CS_fsm_state46;
reg   [2:0] i12_0_0_reg_1772;
reg    ap_block_state48;
reg   [2:0] i6_0_1_reg_1783;
reg   [1:0] phi_ln174_4_reg_1806;
reg   [1:0] phi_ln174_5_reg_1818;
reg   [1:0] l_0_1_reg_1829;
reg   [1:0] m_0_1_reg_1841;
wire    ap_CS_fsm_state67;
reg   [0:0] phi_ln196_2_reg_1852;
wire   [0:0] icmp_ln196_1_fu_3226_p2;
reg   [1:0] phi_ln196_3_reg_1864;
reg   [1:0] j10_0_1_0_reg_1875;
wire    ap_CS_fsm_state71;
reg   [1:0] j10_0_1_1_reg_1886;
wire    ap_CS_fsm_state73;
reg   [1:0] j10_0_1_2_reg_1897;
wire    ap_CS_fsm_state75;
reg   [1:0] j10_0_1_3_reg_1908;
wire    ap_CS_fsm_state77;
reg   [2:0] j11_0_1_reg_1919;
wire    ap_CS_fsm_state79;
reg   [2:0] i12_0_1_reg_1930;
reg    ap_block_state81;
wire  signed [63:0] sext_ln95_fu_2208_p1;
wire  signed [63:0] sext_ln95_1_fu_2225_p1;
wire  signed [63:0] sext_ln95_2_fu_2238_p1;
wire  signed [63:0] sext_ln95_3_fu_2251_p1;
wire  signed [63:0] sext_ln114_fu_2286_p1;
wire  signed [63:0] sext_ln114_1_fu_2299_p1;
wire  signed [63:0] sext_ln114_2_fu_2312_p1;
wire  signed [63:0] sext_ln114_3_fu_2325_p1;
wire   [63:0] zext_ln146_fu_2358_p1;
wire   [63:0] zext_ln174_1_fu_2473_p1;
wire   [63:0] zext_ln190_fu_2506_p1;
wire  signed [63:0] sext_ln190_fu_2602_p1;
wire   [63:0] zext_ln190_9_fu_2617_p1;
wire   [63:0] zext_ln196_fu_2703_p1;
wire   [63:0] zext_ln204_fu_2734_p1;
wire   [63:0] tmp_30_fu_2765_p3;
wire   [63:0] tmp_34_fu_2800_p3;
wire   [63:0] tmp_37_fu_2835_p3;
wire   [63:0] zext_ln211_fu_2856_p1;
wire   [63:0] zext_ln218_fu_2874_p1;
wire   [63:0] zext_ln174_3_fu_2991_p1;
wire   [63:0] zext_ln190_7_fu_3024_p1;
wire  signed [63:0] sext_ln190_37_fu_3120_p1;
wire   [63:0] zext_ln190_20_fu_3135_p1;
wire   [63:0] zext_ln196_1_fu_3221_p1;
wire   [63:0] zext_ln204_2_fu_3262_p1;
wire   [63:0] zext_ln204_4_fu_3297_p1;
wire   [63:0] zext_ln204_6_fu_3332_p1;
wire   [63:0] zext_ln204_8_fu_3367_p1;
wire   [63:0] zext_ln211_1_fu_3390_p1;
wire   [63:0] zext_ln218_1_fu_3414_p1;
wire   [0:0] xor_ln228_fu_3441_p2;
wire   [15:0] add_ln224_fu_3423_p2;
wire   [0:0] xor_ln235_fu_3483_p2;
wire   [15:0] add_ln231_fu_3466_p2;
wire   [15:0] tmp_52_fu_2883_p1;
wire   [15:0] tmp_61_fu_3452_p1;
wire   [31:0] grp_fu_1965_p3;
wire   [2:0] current_row_indices_6_fu_2405_p3;
wire   [2:0] current_row_indices_8_fu_2419_p3;
wire  signed [31:0] grp_fu_3500_p3;
wire  signed [31:0] grp_fu_3509_p3;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire  signed [31:0] grp_fu_3598_p3;
wire  signed [31:0] grp_fu_3607_p3;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire   [31:0] grp_fu_1945_p2;
wire   [31:0] grp_fu_1952_p2;
wire   [31:0] grp_fu_1974_p2;
wire   [31:0] grp_fu_1981_p2;
wire   [2:0] current_row_indices_9_fu_2923_p3;
wire   [0:0] grp_fu_1959_p2;
wire   [13:0] trunc_ln95_fu_2215_p1;
wire   [13:0] add_ln95_fu_2219_p2;
wire   [13:0] add_ln95_1_fu_2232_p2;
wire   [13:0] add_ln95_2_fu_2245_p2;
wire   [13:0] trunc_ln114_fu_2276_p1;
wire   [13:0] add_ln114_fu_2280_p2;
wire   [13:0] add_ln114_1_fu_2293_p2;
wire   [13:0] add_ln114_2_fu_2306_p2;
wire   [13:0] add_ln114_3_fu_2319_p2;
wire   [2:0] tmp_2_fu_2350_p3;
wire   [1:0] tmp_45_fu_2385_p4;
wire   [2:0] zext_ln174_fu_2451_p1;
wire   [4:0] tmp_53_fu_2466_p3;
wire   [3:0] tmp_9_fu_2515_p3;
wire   [4:0] zext_ln190_2_fu_2523_p1;
wire   [4:0] zext_ln190_1_fu_2511_p1;
wire   [11:0] tmp_10_fu_2533_p3;
wire   [3:0] tmp_11_fu_2545_p3;
wire   [12:0] zext_ln190_4_fu_2553_p1;
wire   [12:0] zext_ln190_3_fu_2541_p1;
wire   [12:0] add_ln190_26_fu_2557_p2;
wire   [4:0] zext_ln190_8_fu_2583_p1;
wire   [13:0] zext_ln190_6_fu_2567_p1;
wire   [13:0] add_ln190_fu_2592_p2;
wire   [2:0] tmp_69_fu_2695_p3;
wire   [3:0] tmp_27_fu_2726_p3;
wire   [3:0] tmp_28_fu_2751_p3;
wire   [3:0] or_ln204_fu_2759_p2;
wire   [3:0] tmp_32_fu_2786_p3;
wire   [3:0] or_ln204_1_fu_2794_p2;
wire   [3:0] tmp_36_fu_2821_p3;
wire   [3:0] or_ln204_2_fu_2829_p2;
wire   [1:0] tmp_54_fu_2903_p4;
wire   [0:0] icmp_ln155_1_fu_2913_p2;
wire   [2:0] zext_ln174_2_fu_2969_p1;
wire   [4:0] tmp_62_fu_2984_p3;
wire   [3:0] tmp_23_fu_3033_p3;
wire   [4:0] zext_ln190_14_fu_3041_p1;
wire   [4:0] zext_ln190_13_fu_3029_p1;
wire   [11:0] tmp_25_fu_3051_p3;
wire   [3:0] tmp_26_fu_3063_p3;
wire   [12:0] zext_ln190_16_fu_3071_p1;
wire   [12:0] zext_ln190_15_fu_3059_p1;
wire   [12:0] add_ln190_29_fu_3075_p2;
wire   [4:0] zext_ln190_19_fu_3101_p1;
wire   [13:0] zext_ln190_18_fu_3085_p1;
wire   [13:0] add_ln190_13_fu_3110_p2;
wire   [2:0] tmp_70_fu_3213_p3;
wire   [3:0] tmp_31_fu_3244_p3;
wire   [4:0] zext_ln204_1_fu_3252_p1;
wire   [4:0] add_ln204_8_fu_3256_p2;
wire   [3:0] tmp_35_fu_3279_p3;
wire   [4:0] zext_ln204_3_fu_3287_p1;
wire   [4:0] add_ln204_9_fu_3291_p2;
wire   [3:0] tmp_38_fu_3314_p3;
wire   [4:0] zext_ln204_5_fu_3322_p1;
wire   [4:0] add_ln204_10_fu_3326_p2;
wire   [3:0] tmp_39_fu_3349_p3;
wire   [4:0] zext_ln204_7_fu_3357_p1;
wire   [4:0] add_ln204_11_fu_3361_p2;
wire   [2:0] xor_ln211_fu_3384_p2;
wire   [2:0] xor_ln218_fu_3408_p2;
wire   [7:0] grp_fu_3500_p0;
wire   [14:0] zext_ln190_10_fu_2627_p1;
wire   [7:0] grp_fu_3509_p0;
wire   [7:0] grp_fu_3518_p0;
wire   [7:0] grp_fu_3526_p0;
wire   [7:0] grp_fu_3534_p0;
wire   [14:0] zext_ln190_11_fu_2647_p1;
wire   [7:0] grp_fu_3542_p0;
wire   [7:0] grp_fu_3550_p0;
wire   [7:0] grp_fu_3558_p0;
wire   [7:0] grp_fu_3566_p0;
wire   [14:0] zext_ln190_12_fu_2667_p1;
wire   [7:0] grp_fu_3574_p0;
wire   [7:0] grp_fu_3582_p0;
wire   [7:0] grp_fu_3590_p0;
wire   [7:0] grp_fu_3598_p0;
wire   [14:0] zext_ln190_21_fu_3145_p1;
wire   [7:0] grp_fu_3607_p0;
wire   [7:0] grp_fu_3616_p0;
wire   [7:0] grp_fu_3624_p0;
wire   [7:0] grp_fu_3632_p0;
wire   [14:0] zext_ln190_22_fu_3165_p1;
wire   [7:0] grp_fu_3640_p0;
wire   [7:0] grp_fu_3648_p0;
wire   [7:0] grp_fu_3656_p0;
wire   [7:0] grp_fu_3664_p0;
wire   [14:0] zext_ln190_23_fu_3185_p1;
wire   [7:0] grp_fu_3672_p0;
wire   [7:0] grp_fu_3680_p0;
wire   [7:0] grp_fu_3688_p0;
reg   [82:0] ap_NS_fsm;
reg    ap_condition_838;
reg    ap_condition_877;
reg    ap_condition_893;
reg    ap_condition_715;
reg    ap_condition_761;
reg    ap_condition_783;
reg    ap_condition_805;
reg    ap_condition_909;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 83'd1;
#0 read_odd = 1'd0;
#0 read_col_index = 16'd1;
#0 compute_odd = 1'd1;
#0 compute_col_index = 16'd508;
end

kernel_kernels_0 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_address0),
    .ce0(kernels_0_ce0),
    .q0(kernels_0_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 4112 ),
    .AddressWidth( 13 ))
stripes_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_address0),
    .ce0(stripes_0_ce0),
    .q0(stripes_0_q0),
    .address1(stripes_0_address1),
    .ce1(stripes_0_ce1),
    .we1(stripes_0_we1),
    .d1(stripes_0_d1)
);

kernel_kernels_1 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_address0),
    .ce0(kernels_1_ce0),
    .q0(kernels_1_q0)
);

kernel_kernels_2 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_address0),
    .ce0(kernels_2_ce0),
    .q0(kernels_2_q0)
);

kernel_kernels_3 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_address0),
    .ce0(kernels_3_ce0),
    .q0(kernels_3_q0)
);

kernel_kernels_4 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_address0),
    .ce0(kernels_4_ce0),
    .q0(kernels_4_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 4112 ),
    .AddressWidth( 13 ))
stripes_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_address0),
    .ce0(stripes_1_ce0),
    .q0(stripes_1_q0),
    .address1(stripes_1_address1),
    .ce1(stripes_1_ce1),
    .we1(stripes_1_we1),
    .d1(stripes_1_d1)
);

kernel_kernels_5 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_address0),
    .ce0(kernels_5_ce0),
    .q0(kernels_5_q0)
);

kernel_kernels_6 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_address0),
    .ce0(kernels_6_ce0),
    .q0(kernels_6_q0)
);

kernel_kernels_7 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_address0),
    .ce0(kernels_7_ce0),
    .q0(kernels_7_q0)
);

kernel_kernels_8 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_address0),
    .ce0(kernels_8_ce0),
    .q0(kernels_8_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 4112 ),
    .AddressWidth( 13 ))
stripes_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_address0),
    .ce0(stripes_2_ce0),
    .q0(stripes_2_q0),
    .address1(stripes_2_address1),
    .ce1(stripes_2_ce1),
    .we1(stripes_2_we1),
    .d1(stripes_2_d1)
);

kernel_kernels_9 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_address0),
    .ce0(kernels_9_ce0),
    .q0(kernels_9_q0)
);

kernel_kernels_10 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_address0),
    .ce0(kernels_10_ce0),
    .q0(kernels_10_q0)
);

kernel_kernels_11 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_address0),
    .ce0(kernels_11_ce0),
    .q0(kernels_11_q0)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
maxes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maxes_address0),
    .ce0(maxes_ce0),
    .we0(maxes_we0),
    .d0(maxes_d0),
    .q0(maxes_q0)
);

kernel_local_row_cud #(
    .DataWidth( 3 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
local_row_indices_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_row_indices_0_address0),
    .ce0(local_row_indices_0_ce0),
    .we0(local_row_indices_0_we0),
    .d0(local_row_indices_0_d0),
    .address1(local_row_indices_0_address1),
    .ce1(local_row_indices_0_ce1),
    .we1(local_row_indices_0_we1),
    .d1(local_row_indices_0_d1),
    .q1(local_row_indices_0_q1)
);

kernel_local_row_cud #(
    .DataWidth( 3 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
local_row_indices_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_row_indices_1_address0),
    .ce0(local_row_indices_1_ce0),
    .we0(local_row_indices_1_we0),
    .d0(local_row_indices_1_d0),
    .address1(local_row_indices_1_address1),
    .ce1(local_row_indices_1_ce1),
    .we1(local_row_indices_1_we1),
    .d1(local_row_indices_1_d1),
    .q1(local_row_indices_1_q1)
);

kernel_partial_sums #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
partial_sums_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_address0),
    .ce0(partial_sums_ce0),
    .we0(partial_sums_we0),
    .d0(partial_sums_d0),
    .q0(partial_sums_q0),
    .address1(partial_sums_address1),
    .ce1(partial_sums_ce1),
    .we1(partial_sums_we1),
    .d1(partial_sums_d1),
    .q1(partial_sums_q1)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
kernel_sums_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_sums_address0),
    .ce0(kernel_sums_ce0),
    .we0(kernel_sums_we0),
    .d0(kernel_sums_d0),
    .q0(kernel_sums_q0)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U35(
    .din0(grp_fu_3500_p0),
    .din1(reg_2026),
    .din2(reg_1988),
    .dout(grp_fu_3500_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U36(
    .din0(grp_fu_3509_p0),
    .din1(reg_2034),
    .din2(reg_1992),
    .dout(grp_fu_3509_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U37(
    .din0(grp_fu_3518_p0),
    .din1(reg_2038),
    .din2(reg_1996),
    .dout(grp_fu_3518_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U38(
    .din0(grp_fu_3526_p0),
    .din1(reg_2042),
    .din2(reg_2001),
    .dout(grp_fu_3526_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U39(
    .din0(grp_fu_3534_p0),
    .din1(reg_2046),
    .din2(reg_2006),
    .dout(grp_fu_3534_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U40(
    .din0(grp_fu_3542_p0),
    .din1(reg_2054),
    .din2(reg_2011),
    .dout(grp_fu_3542_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U41(
    .din0(grp_fu_3550_p0),
    .din1(reg_2058),
    .din2(reg_2016),
    .dout(grp_fu_3550_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U42(
    .din0(grp_fu_3558_p0),
    .din1(reg_2062),
    .din2(reg_2021),
    .dout(grp_fu_3558_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U43(
    .din0(grp_fu_3566_p0),
    .din1(reg_2066),
    .din2(reg_2074),
    .dout(grp_fu_3566_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U44(
    .din0(grp_fu_3574_p0),
    .din1(reg_2079),
    .din2(reg_2083),
    .dout(grp_fu_3574_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U45(
    .din0(grp_fu_3582_p0),
    .din1(reg_2088),
    .din2(partial_sums_q1),
    .dout(grp_fu_3582_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U46(
    .din0(grp_fu_3590_p0),
    .din1(reg_2092),
    .din2(partial_sums_q0),
    .dout(grp_fu_3590_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U47(
    .din0(grp_fu_3598_p0),
    .din1(reg_2026),
    .din2(reg_1988),
    .dout(grp_fu_3598_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U48(
    .din0(grp_fu_3607_p0),
    .din1(reg_2034),
    .din2(reg_1992),
    .dout(grp_fu_3607_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U49(
    .din0(grp_fu_3616_p0),
    .din1(reg_2038),
    .din2(reg_1996),
    .dout(grp_fu_3616_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U50(
    .din0(grp_fu_3624_p0),
    .din1(reg_2042),
    .din2(reg_2001),
    .dout(grp_fu_3624_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U51(
    .din0(grp_fu_3632_p0),
    .din1(reg_2046),
    .din2(reg_2006),
    .dout(grp_fu_3632_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U52(
    .din0(grp_fu_3640_p0),
    .din1(reg_2054),
    .din2(reg_2011),
    .dout(grp_fu_3640_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U53(
    .din0(grp_fu_3648_p0),
    .din1(reg_2058),
    .din2(reg_2016),
    .dout(grp_fu_3648_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U54(
    .din0(grp_fu_3656_p0),
    .din1(reg_2062),
    .din2(reg_2021),
    .dout(grp_fu_3656_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U55(
    .din0(grp_fu_3664_p0),
    .din1(reg_2066),
    .din2(reg_2074),
    .dout(grp_fu_3664_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U56(
    .din0(grp_fu_3672_p0),
    .din1(reg_2079),
    .din2(reg_2083),
    .dout(grp_fu_3672_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U57(
    .din0(grp_fu_3680_p0),
    .din1(reg_2088),
    .din2(partial_sums_q0),
    .dout(grp_fu_3680_p3)
);

cnn_mac_muladd_8neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mac_muladd_8neOg_U58(
    .din0(grp_fu_3688_p0),
    .din1(reg_2092),
    .din2(partial_sums_q1),
    .dout(grp_fu_3688_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln80_fu_2096_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        compute_col_index <= 16'd508;
    end else begin
        if (((icmp_ln232_reg_4918 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
            compute_col_index <= 16'd0;
        end else if ((1'b1 == ap_CS_fsm_state82)) begin
            compute_col_index <= add_ln231_fu_3466_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_col_index <= 16'd1;
    end else begin
        if (((icmp_ln225_reg_4914 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
            read_col_index <= 16'd1;
        end else if (((icmp_ln216_1_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
            read_col_index <= add_ln224_fu_3423_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_odd <= 1'd0;
    end else begin
        if (((icmp_ln225_fu_3435_p2 == 1'd1) & (icmp_ln216_1_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
            read_odd <= xor_ln228_fu_3441_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        b_0_reg_1413 <= b_reg_3891;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        b_0_reg_1413 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_fu_2373_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i12_0_0_reg_1772 <= 3'd0;
    end else if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state48))) begin
        i12_0_0_reg_1772 <= add_ln216_reg_4570;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_1_fu_2891_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i12_0_1_reg_1930 <= 3'd0;
    end else if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state81))) begin
        i12_0_1_reg_1930 <= add_ln216_1_reg_4900;
    end
end

always @ (posedge ap_clk) begin
    if (((read_odd_load_load_fu_2108_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_2096_p2 == 1'd0))) begin
        i1_0_reg_1436 <= 2'd0;
    end else if ((~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (icmp_ln108_fu_2264_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i1_0_reg_1436 <= i_reg_3917;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_fu_2844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        i6_0_0_reg_1625 <= add_ln153_reg_4257;
    end else if (((phi_ln146_reg_1602 == 1'd1) & (icmp_ln146_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i6_0_0_reg_1625 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_1_fu_3372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        i6_0_1_reg_1783 <= add_ln153_1_reg_4587;
    end else if (((icmp_ln216_fu_2862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        i6_0_1_reg_1783 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_2096_p2 == 1'd0) & (read_odd_load_load_fu_2108_p1 == 1'd0))) begin
        i_0_reg_1424 <= 2'd0;
    end else if ((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (icmp_ln89_fu_2196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_1424 <= i_1_reg_3904;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        j10_0_0_0_reg_1717 <= add_ln202_reg_4500;
    end else if (((icmp_ln196_fu_2708_p2 == 1'd1) & (phi_ln196_reg_1694 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        j10_0_0_0_reg_1717 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        j10_0_0_1_reg_1728 <= add_ln202_1_reg_4513;
    end else if (((icmp_ln202_fu_2714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        j10_0_0_1_reg_1728 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        j10_0_0_2_reg_1739 <= add_ln202_3_reg_4526;
    end else if (((icmp_ln202_1_fu_2739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        j10_0_0_2_reg_1739 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j10_0_0_3_reg_1750 <= add_ln202_5_reg_4539;
    end else if (((icmp_ln202_3_fu_2774_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        j10_0_0_3_reg_1750 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        j10_0_1_0_reg_1875 <= add_ln202_2_reg_4830;
    end else if (((icmp_ln196_1_fu_3226_p2 == 1'd1) & (phi_ln196_2_reg_1852 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        j10_0_1_0_reg_1875 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j10_0_1_1_reg_1886 <= add_ln202_4_reg_4843;
    end else if (((icmp_ln202_2_fu_3232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        j10_0_1_1_reg_1886 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j10_0_1_2_reg_1897 <= add_ln202_6_reg_4856;
    end else if (((icmp_ln202_4_fu_3267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        j10_0_1_2_reg_1897 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        j10_0_1_3_reg_1908 <= add_ln202_7_reg_4869;
    end else if (((icmp_ln202_6_fu_3302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
        j10_0_1_3_reg_1908 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_5_fu_2809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        j11_0_0_reg_1761 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        j11_0_0_reg_1761 <= add_ln209_reg_4552;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_7_fu_3337_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        j11_0_1_reg_1919 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        j11_0_1_reg_1919 <= add_ln209_1_reg_4882;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j3_0_reg_1525 <= j_reg_4104;
    end else if (((read_odd_load_reg_3896 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln104_fu_2128_p2 == 1'd0))) begin
        j3_0_reg_1525 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_0_reg_1448 <= j_1_reg_3971;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln85_fu_2112_p2 == 1'd0) & (read_odd_load_reg_3896 == 1'd0))) begin
        j_0_reg_1448 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_2571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        l_0_0_reg_1671 <= add_ln177_reg_4321;
    end else if (((phi_ln174_reg_1636 == 1'd1) & (icmp_ln174_1_fu_2484_p2 == 1'd1) & (icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        l_0_0_reg_1671 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_1_fu_3089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        l_0_1_reg_1829 <= add_ln177_1_reg_4651;
    end else if (((phi_ln174_3_reg_1794 == 1'd1) & (icmp_ln174_3_fu_3002_p2 == 1'd1) & (icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        l_0_1_reg_1829 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        local_col_index2_0_reg_1536 <= local_col_index_fu_2332_p2;
    end else if (((read_odd_load_reg_3896 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln104_fu_2128_p2 == 1'd0))) begin
        local_col_index2_0_reg_1536 <= sext_ln106_fu_2140_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        local_col_index_0_reg_1459 <= local_col_index_1_fu_2258_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln85_fu_2112_p2 == 1'd0) & (read_odd_load_reg_3896 == 1'd0))) begin
        local_col_index_0_reg_1459 <= sext_ln87_fu_2124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        m_0_0_reg_1683 <= add_ln180_reg_4344;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        m_0_0_reg_1683 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        m_0_1_reg_1841 <= add_ln180_1_reg_4674;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        m_0_1_reg_1841 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln146_fu_2363_p2 == 1'd0))) begin
        phi_ln146_1_reg_1614 <= add_ln146_fu_2344_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        phi_ln146_1_reg_1614 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln146_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15) & (phi_ln146_reg_1602 == 1'd0))) begin
        phi_ln146_reg_1602 <= xor_ln146_reg_4234;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln104_fu_2128_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd1)) | ((icmp_ln85_fu_2112_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd0))))) begin
        phi_ln146_reg_1602 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (icmp_ln174_1_fu_2484_p2 == 1'd0))) begin
        phi_ln174_1_reg_1648 <= add_ln174_reg_4292;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        phi_ln174_1_reg_1648 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln174_fu_2478_p2 == 1'd0))) begin
        phi_ln174_2_reg_1660 <= add_ln174_1_fu_2460_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        phi_ln174_2_reg_1660 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln174_3_fu_3002_p2 == 1'd1) & (icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53) & (phi_ln174_3_reg_1794 == 1'd0))) begin
        phi_ln174_3_reg_1794 <= xor_ln174_1_reg_4612;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        phi_ln174_3_reg_1794 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53) & (icmp_ln174_3_fu_3002_p2 == 1'd0))) begin
        phi_ln174_4_reg_1806 <= add_ln174_2_reg_4622;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        phi_ln174_4_reg_1806 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (icmp_ln174_2_fu_2996_p2 == 1'd0))) begin
        phi_ln174_5_reg_1818 <= add_ln174_3_fu_2978_p2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        phi_ln174_5_reg_1818 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln174_1_fu_2484_p2 == 1'd1) & (icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (phi_ln174_reg_1636 == 1'd0))) begin
        phi_ln174_reg_1636 <= xor_ln174_reg_4282;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        phi_ln174_reg_1636 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln196_fu_2708_p2 == 1'd0))) begin
        phi_ln196_1_reg_1706 <= add_ln196_fu_2689_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        phi_ln196_1_reg_1706 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln177_1_fu_3012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        phi_ln196_2_reg_1852 <= 1'd0;
    end else if (((icmp_ln196_1_fu_3226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69) & (phi_ln196_2_reg_1852 == 1'd0))) begin
        phi_ln196_2_reg_1852 <= xor_ln196_1_reg_4814;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (icmp_ln196_1_fu_3226_p2 == 1'd0))) begin
        phi_ln196_3_reg_1864 <= add_ln196_1_fu_3207_p2;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        phi_ln196_3_reg_1864 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln177_fu_2494_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        phi_ln196_reg_1694 <= 1'd0;
    end else if (((icmp_ln196_fu_2708_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36) & (phi_ln196_reg_1694 == 1'd0))) begin
        phi_ln196_reg_1694 <= xor_ln196_reg_4484;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        reg_1996 <= partial_sums_q0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_1996 <= partial_sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        reg_2001 <= partial_sums_q1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_2001 <= partial_sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        reg_2006 <= partial_sums_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_2006 <= partial_sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        reg_2011 <= partial_sums_q1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_2011 <= partial_sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        reg_2016 <= partial_sums_q0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_2016 <= partial_sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        reg_2021 <= partial_sums_q1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_2021 <= partial_sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        reg_2074 <= partial_sums_q0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_2074 <= partial_sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        reg_2083 <= partial_sums_q1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_2083 <= partial_sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_838)) begin
        if ((i1_0_reg_1436 == 2'd0)) begin
            tmp_0_reg_1546 <= inputs_0_0_V_dout;
        end else if ((i1_0_reg_1436 == 2'd1)) begin
            tmp_0_reg_1546 <= inputs_0_1_V_dout;
        end else if ((~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0))) begin
            tmp_0_reg_1546 <= inputs_0_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_877)) begin
        if ((i1_0_reg_1436 == 2'd0)) begin
            tmp_11366_reg_1560 <= inputs_1_0_V_dout;
        end else if ((i1_0_reg_1436 == 2'd1)) begin
            tmp_11366_reg_1560 <= inputs_1_1_V_dout;
        end else if ((~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0))) begin
            tmp_11366_reg_1560 <= inputs_1_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_893)) begin
        if ((i1_0_reg_1436 == 2'd0)) begin
            tmp_21367_reg_1574 <= inputs_2_0_V_dout;
        end else if ((i1_0_reg_1436 == 2'd1)) begin
            tmp_21367_reg_1574 <= inputs_2_1_V_dout;
        end else if ((~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0))) begin
            tmp_21367_reg_1574 <= inputs_2_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_715)) begin
        if ((i_0_reg_1424 == 2'd0)) begin
            tmp_2_0_reg_1469 <= inputs_0_0_V_dout;
        end else if ((i_0_reg_1424 == 2'd1)) begin
            tmp_2_0_reg_1469 <= inputs_0_1_V_dout;
        end else if ((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0))) begin
            tmp_2_0_reg_1469 <= inputs_0_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_761)) begin
        if ((i_0_reg_1424 == 2'd0)) begin
            tmp_2_1_reg_1483 <= inputs_1_0_V_dout;
        end else if ((i_0_reg_1424 == 2'd1)) begin
            tmp_2_1_reg_1483 <= inputs_1_1_V_dout;
        end else if ((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0))) begin
            tmp_2_1_reg_1483 <= inputs_1_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_783)) begin
        if ((i_0_reg_1424 == 2'd0)) begin
            tmp_2_2_reg_1497 <= inputs_2_0_V_dout;
        end else if ((i_0_reg_1424 == 2'd1)) begin
            tmp_2_2_reg_1497 <= inputs_2_1_V_dout;
        end else if ((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0))) begin
            tmp_2_2_reg_1497 <= inputs_2_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_805)) begin
        if ((i_0_reg_1424 == 2'd0)) begin
            tmp_2_3_reg_1511 <= inputs_3_0_V_dout;
        end else if ((i_0_reg_1424 == 2'd1)) begin
            tmp_2_3_reg_1511 <= inputs_3_1_V_dout;
        end else if ((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0))) begin
            tmp_2_3_reg_1511 <= inputs_3_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_909)) begin
        if ((i1_0_reg_1436 == 2'd0)) begin
            tmp_31368_reg_1588 <= inputs_3_0_V_dout;
        end else if ((i1_0_reg_1436 == 2'd1)) begin
            tmp_31368_reg_1588 <= inputs_3_1_V_dout;
        end else if ((~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0))) begin
            tmp_31368_reg_1588 <= inputs_3_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln153_1_reg_4587 <= add_ln153_1_fu_2897_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln153_reg_4257 <= add_ln153_fu_2379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        add_ln174_2_reg_4622 <= add_ln174_2_fu_2963_p2;
        add_ln174_5_reg_4627 <= add_ln174_5_fu_2973_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln174_4_reg_4297 <= add_ln174_4_fu_2455_p2;
        add_ln174_reg_4292 <= add_ln174_fu_2445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln177_1_reg_4651 <= add_ln177_1_fu_3018_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln177_reg_4321 <= add_ln177_fu_2500_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        add_ln180_1_reg_4674 <= add_ln180_1_fu_3095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln180_reg_4344 <= add_ln180_fu_2577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln190_10_reg_4469 <= grp_fu_3574_p3;
        add_ln190_11_reg_4474 <= grp_fu_3582_p3;
        add_ln190_12_reg_4479 <= grp_fu_3590_p3;
        add_ln190_3_reg_4434 <= grp_fu_3518_p3;
        add_ln190_4_reg_4439 <= grp_fu_3526_p3;
        add_ln190_5_reg_4444 <= grp_fu_3534_p3;
        add_ln190_6_reg_4449 <= grp_fu_3542_p3;
        add_ln190_7_reg_4454 <= grp_fu_3550_p3;
        add_ln190_8_reg_4459 <= grp_fu_3558_p3;
        add_ln190_9_reg_4464 <= grp_fu_3566_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        add_ln190_16_reg_4764 <= grp_fu_3616_p3;
        add_ln190_17_reg_4769 <= grp_fu_3624_p3;
        add_ln190_18_reg_4774 <= grp_fu_3632_p3;
        add_ln190_19_reg_4779 <= grp_fu_3640_p3;
        add_ln190_20_reg_4784 <= grp_fu_3648_p3;
        add_ln190_21_reg_4789 <= grp_fu_3656_p3;
        add_ln190_22_reg_4794 <= grp_fu_3664_p3;
        add_ln190_23_reg_4799 <= grp_fu_3672_p3;
        add_ln190_24_reg_4804 <= grp_fu_3680_p3;
        add_ln190_25_reg_4809 <= grp_fu_3688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln180_fu_2571_p2 == 1'd0))) begin
        add_ln190_27_reg_4349 <= add_ln190_27_fu_2587_p2;
        add_ln190_28_reg_4354 <= add_ln190_28_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) & (icmp_ln180_1_fu_3089_p2 == 1'd0))) begin
        add_ln190_30_reg_4679 <= add_ln190_30_fu_3105_p2;
        add_ln190_31_reg_4684 <= add_ln190_31_fu_3115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln174_reg_1636 == 1'd1) & (icmp_ln174_1_fu_2484_p2 == 1'd1) & (icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln190_32_reg_4313 <= add_ln190_32_fu_2490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln174_3_reg_1794 == 1'd1) & (icmp_ln174_3_fu_3002_p2 == 1'd1) & (icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        add_ln190_33_reg_4643 <= add_ln190_33_fu_3008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln202_1_reg_4513 <= add_ln202_1_fu_2745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        add_ln202_2_reg_4830 <= add_ln202_2_fu_3238_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        add_ln202_3_reg_4526 <= add_ln202_3_fu_2780_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        add_ln202_4_reg_4843 <= add_ln202_4_fu_3273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        add_ln202_5_reg_4539 <= add_ln202_5_fu_2815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        add_ln202_6_reg_4856 <= add_ln202_6_fu_3308_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        add_ln202_7_reg_4869 <= add_ln202_7_fu_3343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln202_reg_4500 <= add_ln202_fu_2720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        add_ln209_1_reg_4882 <= add_ln209_1_fu_3378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        add_ln209_reg_4552 <= add_ln209_fu_2850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln216_1_reg_4900 <= add_ln216_1_fu_3402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add_ln216_reg_4570 <= add_ln216_fu_2868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_reg_3891 <= b_fu_2102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln146_reg_1602 == 1'd1) & (icmp_ln146_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        compute_col_index_lo_reg_4247 <= compute_col_index;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_fu_3477_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        compute_odd <= xor_ln235_fu_3483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln104_fu_2128_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd1)) | ((icmp_ln85_fu_2112_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd0))))) begin
        compute_odd_load_reg_3927 <= compute_odd;
        current_row_indices_1_reg_3937[2] <= current_row_indices_1_fu_2156_p3[2];
        current_row_indices_2_reg_3943[2] <= current_row_indices_2_fu_2164_p3[2];
        current_row_indices_3_reg_3950[2] <= current_row_indices_3_fu_2172_p3[2];
        current_row_indices_4_reg_3957[2] <= current_row_indices_4_fu_2180_p3[2];
        current_row_indices_5_reg_3963[2] <= current_row_indices_5_fu_2188_p3[2];
        current_row_indices_s_reg_3932[2] <= current_row_indices_s_fu_2148_p3[2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln153_1_fu_2891_p2 == 1'd0))) begin
        current_row_indices_11_reg_4597[0] <= current_row_indices_11_fu_2937_p3[0];
current_row_indices_11_reg_4597[2] <= current_row_indices_11_fu_2937_p3[2];
        trunc_ln158_reg_4592 <= trunc_ln158_fu_2919_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3896 == 1'd0))) begin
        i_1_reg_3904 <= i_1_fu_2118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((read_odd_load_reg_3896 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_3917 <= i_fu_2134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln153_fu_2373_p2 == 1'd0))) begin
        icmp_ln155_reg_4262 <= icmp_ln155_fu_2395_p2;
        trunc_ln160_reg_4267 <= trunc_ln160_fu_2401_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_1_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        icmp_ln225_reg_4914 <= icmp_ln225_fu_3435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        icmp_ln232_reg_4918 <= icmp_ln232_fu_3477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
        j_1_reg_3971 <= j_1_fu_2202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9))) begin
        j_reg_4104 <= j_fu_2270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (icmp_ln209_fu_2844_p2 == 1'd0))) begin
        maxes_addr_3_reg_4557 <= zext_ln211_fu_2856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (icmp_ln209_1_fu_3372_p2 == 1'd0))) begin
        maxes_addr_4_reg_4887 <= zext_ln211_1_fu_3390_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln80_fu_2096_p2 == 1'd0))) begin
        read_odd_load_reg_3896 <= read_odd;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_1988 <= partial_sums_q0;
        reg_1992 <= partial_sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_2026 <= kernels_0_q0;
        reg_2030 <= stripes_0_q0;
        reg_2034 <= kernels_1_q0;
        reg_2038 <= kernels_2_q0;
        reg_2042 <= kernels_3_q0;
        reg_2046 <= kernels_4_q0;
        reg_2050 <= stripes_1_q0;
        reg_2054 <= kernels_5_q0;
        reg_2058 <= kernels_6_q0;
        reg_2062 <= kernels_7_q0;
        reg_2066 <= kernels_8_q0;
        reg_2070 <= stripes_2_q0;
        reg_2079 <= kernels_9_q0;
        reg_2088 <= kernels_10_q0;
        reg_2092 <= kernels_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        select_ln174_1_reg_4617[1 : 0] <= select_ln174_1_fu_2955_p3[1 : 0];
        xor_ln174_1_reg_4612 <= xor_ln174_1_fu_2949_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        select_ln174_reg_4287[1 : 0] <= select_ln174_fu_2437_p3[1 : 0];
        xor_ln174_reg_4282 <= xor_ln174_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0))) begin
        stripes_0_addr_1_reg_3976 <= sext_ln95_fu_2208_p1;
        stripes_0_addr_3_reg_3981 <= sext_ln95_1_fu_2225_p1;
        stripes_0_addr_5_reg_3986 <= sext_ln95_2_fu_2238_p1;
        stripes_0_addr_7_reg_3991 <= sext_ln95_3_fu_2251_p1;
        stripes_1_addr_1_reg_3996 <= sext_ln95_fu_2208_p1;
        stripes_1_addr_3_reg_4001 <= sext_ln95_1_fu_2225_p1;
        stripes_1_addr_5_reg_4006 <= sext_ln95_2_fu_2238_p1;
        stripes_1_addr_7_reg_4011 <= sext_ln95_3_fu_2251_p1;
        stripes_2_addr_1_reg_4016 <= sext_ln95_fu_2208_p1;
        stripes_2_addr_3_reg_4021 <= sext_ln95_1_fu_2225_p1;
        stripes_2_addr_5_reg_4026 <= sext_ln95_2_fu_2238_p1;
        stripes_2_addr_7_reg_4031 <= sext_ln95_3_fu_2251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0))) begin
        stripes_0_addr_2_reg_4114 <= sext_ln114_1_fu_2299_p1;
        stripes_0_addr_4_reg_4119 <= sext_ln114_2_fu_2312_p1;
        stripes_0_addr_6_reg_4124 <= sext_ln114_3_fu_2325_p1;
        stripes_0_addr_reg_4109 <= sext_ln114_fu_2286_p1;
        stripes_1_addr_2_reg_4134 <= sext_ln114_1_fu_2299_p1;
        stripes_1_addr_4_reg_4139 <= sext_ln114_2_fu_2312_p1;
        stripes_1_addr_6_reg_4144 <= sext_ln114_3_fu_2325_p1;
        stripes_1_addr_reg_4129 <= sext_ln114_fu_2286_p1;
        stripes_2_addr_2_reg_4154 <= sext_ln114_1_fu_2299_p1;
        stripes_2_addr_4_reg_4159 <= sext_ln114_2_fu_2312_p1;
        stripes_2_addr_6_reg_4164 <= sext_ln114_3_fu_2325_p1;
        stripes_2_addr_reg_4149 <= sext_ln114_fu_2286_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sub_ln190_1_reg_4661 <= sub_ln190_1_fu_3045_p2;
        zext_ln190_17_reg_4666[12 : 1] <= zext_ln190_17_fu_3081_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sub_ln190_reg_4331 <= sub_ln190_fu_2527_p2;
        zext_ln190_5_reg_4336[12 : 1] <= zext_ln190_5_fu_2563_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        trunc_ln172_1_reg_4607 <= trunc_ln172_1_fu_2946_p1;
        zext_ln172_1_reg_4602[0] <= zext_ln172_1_fu_2943_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        trunc_ln172_reg_4277 <= trunc_ln172_fu_2428_p1;
        zext_ln172_reg_4272[0] <= zext_ln172_fu_2425_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (icmp_ln216_1_fu_3396_p2 == 1'd0))) begin
        trunc_ln182_4_reg_4910 <= trunc_ln182_4_fu_3419_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (icmp_ln216_fu_2862_p2 == 1'd0))) begin
        trunc_ln182_reg_4580 <= trunc_ln182_fu_2879_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        xor_ln146_reg_4234 <= xor_ln146_fu_2338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        xor_ln196_1_reg_4814 <= xor_ln196_1_fu_3201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        xor_ln196_reg_4484 <= xor_ln196_fu_2683_p2;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_2096_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0)) | ((i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0)))) begin
        inputs_0_0_V_blk_n = inputs_0_0_V_empty_n;
    end else begin
        inputs_0_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op227_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op319_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        inputs_0_0_V_read = 1'b1;
    end else begin
        inputs_0_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0)) | ((i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0)))) begin
        inputs_0_1_V_blk_n = inputs_0_1_V_empty_n;
    end else begin
        inputs_0_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op225_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op317_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        inputs_0_1_V_read = 1'b1;
    end else begin
        inputs_0_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0)) | (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0)))) begin
        inputs_0_2_V_blk_n = inputs_0_2_V_empty_n;
    end else begin
        inputs_0_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op229_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (ap_predicate_op321_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        inputs_0_2_V_read = 1'b1;
    end else begin
        inputs_0_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_0_V_blk_n = inputs_1_0_V_empty_n;
    end else begin
        inputs_1_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_0_V_read = 1'b1;
    end else begin
        inputs_1_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_1_V_blk_n = inputs_1_1_V_empty_n;
    end else begin
        inputs_1_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_1_V_read = 1'b1;
    end else begin
        inputs_1_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_2_V_blk_n = inputs_1_2_V_empty_n;
    end else begin
        inputs_1_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (ap_predicate_op246_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (ap_predicate_op338_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        inputs_1_2_V_read = 1'b1;
    end else begin
        inputs_1_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state6)) | ((i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_0_V_blk_n = inputs_2_0_V_empty_n;
    end else begin
        inputs_2_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_0_V_read = 1'b1;
    end else begin
        inputs_2_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state6)) | ((i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_1_V_blk_n = inputs_2_1_V_empty_n;
    end else begin
        inputs_2_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_1_V_read = 1'b1;
    end else begin
        inputs_2_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state6)) | (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_2_V_blk_n = inputs_2_2_V_empty_n;
    end else begin
        inputs_2_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (ap_predicate_op261_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (ap_predicate_op353_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        inputs_2_2_V_read = 1'b1;
    end else begin
        inputs_2_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_0_V_blk_n = inputs_3_0_V_empty_n;
    end else begin
        inputs_3_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_0_V_read = 1'b1;
    end else begin
        inputs_3_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_1_V_blk_n = inputs_3_1_V_empty_n;
    end else begin
        inputs_3_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_1_V_read = 1'b1;
    end else begin
        inputs_3_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_2_V_blk_n = inputs_3_2_V_empty_n;
    end else begin
        inputs_3_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (ap_predicate_op276_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (ap_predicate_op368_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        inputs_3_2_V_read = 1'b1;
    end else begin
        inputs_3_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_fu_2096_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        kernel_sums_address0 = zext_ln211_1_fu_3390_p1;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76))) begin
        kernel_sums_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        kernel_sums_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72))) begin
        kernel_sums_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70))) begin
        kernel_sums_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        kernel_sums_address0 = zext_ln196_1_fu_3221_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        kernel_sums_address0 = zext_ln211_fu_2856_p1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43))) begin
        kernel_sums_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41))) begin
        kernel_sums_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39))) begin
        kernel_sums_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        kernel_sums_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        kernel_sums_address0 = zext_ln196_fu_2703_p1;
    end else begin
        kernel_sums_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        kernel_sums_ce0 = 1'b1;
    end else begin
        kernel_sums_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73))) begin
        kernel_sums_d0 = grp_fu_1981_p2;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71))) begin
        kernel_sums_d0 = grp_fu_1974_p2;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40))) begin
        kernel_sums_d0 = grp_fu_1952_p2;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38))) begin
        kernel_sums_d0 = grp_fu_1945_p2;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state36))) begin
        kernel_sums_d0 = 32'd0;
    end else begin
        kernel_sums_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state36))) begin
        kernel_sums_we0 = 1'b1;
    end else begin
        kernel_sums_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_0_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_0_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_0_ce0 = 1'b1;
    end else begin
        kernels_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_10_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_10_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_10_ce0 = 1'b1;
    end else begin
        kernels_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_11_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_11_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_11_ce0 = 1'b1;
    end else begin
        kernels_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_1_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_1_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_1_ce0 = 1'b1;
    end else begin
        kernels_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_2_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_2_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_2_ce0 = 1'b1;
    end else begin
        kernels_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_3_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_3_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_3_ce0 = 1'b1;
    end else begin
        kernels_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_4_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_4_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_4_ce0 = 1'b1;
    end else begin
        kernels_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_5_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_5_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_5_ce0 = 1'b1;
    end else begin
        kernels_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_6_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_6_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_6_ce0 = 1'b1;
    end else begin
        kernels_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_7_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_7_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_7_ce0 = 1'b1;
    end else begin
        kernels_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_8_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_8_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_8_ce0 = 1'b1;
    end else begin
        kernels_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        kernels_9_address0 = sext_ln190_37_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_9_address0 = sext_ln190_fu_2602_p1;
    end else begin
        kernels_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        kernels_9_ce0 = 1'b1;
    end else begin
        kernels_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        local_row_indices_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        local_row_indices_0_address0 = 64'd0;
    end else begin
        local_row_indices_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        local_row_indices_0_address1 = zext_ln190_fu_2506_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        local_row_indices_0_address1 = 64'd1;
    end else begin
        local_row_indices_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        local_row_indices_0_ce0 = 1'b1;
    end else begin
        local_row_indices_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21))) begin
        local_row_indices_0_ce1 = 1'b1;
    end else begin
        local_row_indices_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        local_row_indices_0_d0 = current_row_indices_8_fu_2419_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        local_row_indices_0_d0 = current_row_indices_6_fu_2405_p3;
    end else begin
        local_row_indices_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln153_fu_2373_p2 == 1'd0)))) begin
        local_row_indices_0_we0 = 1'b1;
    end else begin
        local_row_indices_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln153_fu_2373_p2 == 1'd0))) begin
        local_row_indices_0_we1 = 1'b1;
    end else begin
        local_row_indices_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        local_row_indices_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        local_row_indices_1_address0 = 64'd0;
    end else begin
        local_row_indices_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        local_row_indices_1_address1 = zext_ln190_7_fu_3024_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        local_row_indices_1_address1 = 64'd1;
    end else begin
        local_row_indices_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49))) begin
        local_row_indices_1_ce0 = 1'b1;
    end else begin
        local_row_indices_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49))) begin
        local_row_indices_1_ce1 = 1'b1;
    end else begin
        local_row_indices_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        local_row_indices_1_d0 = current_row_indices_11_reg_4597;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        local_row_indices_1_d0 = current_row_indices_9_fu_2923_p3;
    end else begin
        local_row_indices_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((1'b1 == ap_CS_fsm_state49) & (icmp_ln153_1_fu_2891_p2 == 1'd0)))) begin
        local_row_indices_1_we0 = 1'b1;
    end else begin
        local_row_indices_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln153_1_fu_2891_p2 == 1'd0))) begin
        local_row_indices_1_we1 = 1'b1;
    end else begin
        local_row_indices_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        maxes_address0 = zext_ln218_1_fu_3414_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        maxes_address0 = maxes_addr_4_reg_4887;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        maxes_address0 = zext_ln211_1_fu_3390_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        maxes_address0 = zext_ln218_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        maxes_address0 = maxes_addr_3_reg_4557;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        maxes_address0 = zext_ln211_fu_2856_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        maxes_address0 = zext_ln146_fu_2358_p1;
    end else begin
        maxes_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        maxes_ce0 = 1'b1;
    end else begin
        maxes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state46))) begin
        maxes_d0 = grp_fu_1965_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        maxes_d0 = 32'd0;
    end else begin
        maxes_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state46))) begin
        maxes_we0 = 1'b1;
    end else begin
        maxes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_4580 == 2'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_0_V_blk_n = outputs_0_0_V_full_n;
    end else begin
        outputs_0_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (trunc_ln182_reg_4580 == 2'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_0_V_write = 1'b1;
    end else begin
        outputs_0_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_4580 == 2'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_1_V_blk_n = outputs_0_1_V_full_n;
    end else begin
        outputs_0_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (trunc_ln182_reg_4580 == 2'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_1_V_write = 1'b1;
    end else begin
        outputs_0_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_4580 == 2'd2) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_2_V_blk_n = outputs_0_2_V_full_n;
    end else begin
        outputs_0_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (trunc_ln182_reg_4580 == 2'd2) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_2_V_write = 1'b1;
    end else begin
        outputs_0_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_4580 == 2'd3) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_3_V_blk_n = outputs_0_3_V_full_n;
    end else begin
        outputs_0_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (trunc_ln182_reg_4580 == 2'd3) & (1'b1 == ap_CS_fsm_state48))) begin
        outputs_0_3_V_write = 1'b1;
    end else begin
        outputs_0_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_4_reg_4910 == 2'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_0_V_blk_n = outputs_1_0_V_full_n;
    end else begin
        outputs_1_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (trunc_ln182_4_reg_4910 == 2'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_0_V_write = 1'b1;
    end else begin
        outputs_1_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_4_reg_4910 == 2'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_1_V_blk_n = outputs_1_1_V_full_n;
    end else begin
        outputs_1_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (trunc_ln182_4_reg_4910 == 2'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_1_V_write = 1'b1;
    end else begin
        outputs_1_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_4_reg_4910 == 2'd2) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_2_V_blk_n = outputs_1_2_V_full_n;
    end else begin
        outputs_1_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (trunc_ln182_4_reg_4910 == 2'd2) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_2_V_write = 1'b1;
    end else begin
        outputs_1_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_4_reg_4910 == 2'd3) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_3_V_blk_n = outputs_1_3_V_full_n;
    end else begin
        outputs_1_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (trunc_ln182_4_reg_4910 == 2'd3) & (1'b1 == ap_CS_fsm_state81))) begin
        outputs_1_3_V_write = 1'b1;
    end else begin
        outputs_1_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        partial_sums_address0 = zext_ln204_6_fu_3332_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        partial_sums_address0 = zext_ln204_2_fu_3262_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67))) begin
        partial_sums_address0 = 64'd22;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state66))) begin
        partial_sums_address0 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state65))) begin
        partial_sums_address0 = 64'd18;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state64))) begin
        partial_sums_address0 = 64'd16;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state63))) begin
        partial_sums_address0 = 64'd14;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56))) begin
        partial_sums_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        partial_sums_address0 = tmp_37_fu_2835_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        partial_sums_address0 = tmp_30_fu_2765_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state34))) begin
        partial_sums_address0 = 64'd11;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state33))) begin
        partial_sums_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state32))) begin
        partial_sums_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state31))) begin
        partial_sums_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30))) begin
        partial_sums_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        partial_sums_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        partial_sums_address0 = zext_ln174_1_fu_2473_p1;
    end else begin
        partial_sums_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        partial_sums_address1 = zext_ln204_8_fu_3367_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        partial_sums_address1 = zext_ln204_4_fu_3297_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67))) begin
        partial_sums_address1 = 64'd23;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state66))) begin
        partial_sums_address1 = 64'd21;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state65))) begin
        partial_sums_address1 = 64'd19;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state64))) begin
        partial_sums_address1 = 64'd17;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state63))) begin
        partial_sums_address1 = 64'd15;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56))) begin
        partial_sums_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        partial_sums_address1 = zext_ln174_3_fu_2991_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        partial_sums_address1 = tmp_34_fu_2800_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        partial_sums_address1 = zext_ln204_fu_2734_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state34))) begin
        partial_sums_address1 = 64'd10;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state33))) begin
        partial_sums_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state32))) begin
        partial_sums_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state31))) begin
        partial_sums_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30))) begin
        partial_sums_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        partial_sums_address1 = 64'd1;
    end else begin
        partial_sums_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23))) begin
        partial_sums_ce0 = 1'b1;
    end else begin
        partial_sums_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23))) begin
        partial_sums_ce1 = 1'b1;
    end else begin
        partial_sums_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        partial_sums_d0 = add_ln190_24_reg_4804;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        partial_sums_d0 = add_ln190_22_reg_4794;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        partial_sums_d0 = add_ln190_20_reg_4784;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        partial_sums_d0 = add_ln190_18_reg_4774;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        partial_sums_d0 = add_ln190_16_reg_4764;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        partial_sums_d0 = grp_fu_3598_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        partial_sums_d0 = add_ln190_12_reg_4479;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        partial_sums_d0 = add_ln190_10_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        partial_sums_d0 = add_ln190_8_reg_4459;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        partial_sums_d0 = add_ln190_6_reg_4449;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        partial_sums_d0 = add_ln190_4_reg_4439;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_d0 = grp_fu_3509_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        partial_sums_d0 = 32'd0;
    end else begin
        partial_sums_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        partial_sums_d1 = add_ln190_25_reg_4809;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        partial_sums_d1 = add_ln190_23_reg_4799;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        partial_sums_d1 = add_ln190_21_reg_4789;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        partial_sums_d1 = add_ln190_19_reg_4779;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        partial_sums_d1 = add_ln190_17_reg_4769;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        partial_sums_d1 = grp_fu_3607_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        partial_sums_d1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        partial_sums_d1 = add_ln190_11_reg_4474;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        partial_sums_d1 = add_ln190_9_reg_4464;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        partial_sums_d1 = add_ln190_7_reg_4454;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        partial_sums_d1 = add_ln190_5_reg_4444;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        partial_sums_d1 = add_ln190_3_reg_4434;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_d1 = grp_fu_3500_p3;
    end else begin
        partial_sums_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state29))) begin
        partial_sums_we0 = 1'b1;
    end else begin
        partial_sums_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state29))) begin
        partial_sums_we1 = 1'b1;
    end else begin
        partial_sums_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        stripes_0_address0 = zext_ln190_20_fu_3135_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_0_address0 = zext_ln190_9_fu_2617_p1;
    end else begin
        stripes_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_0_address1 = stripes_0_addr_6_reg_4124;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_0_address1 = stripes_0_addr_4_reg_4119;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_0_address1 = stripes_0_addr_2_reg_4114;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_0_address1 = stripes_0_addr_reg_4109;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_address1 = stripes_0_addr_7_reg_3991;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_address1 = stripes_0_addr_5_reg_3986;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_0_address1 = stripes_0_addr_3_reg_3981;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_address1 = stripes_0_addr_1_reg_3976;
    end else begin
        stripes_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        stripes_0_ce0 = 1'b1;
    end else begin
        stripes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_0_ce1 = 1'b1;
    end else begin
        stripes_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_0_d1 = tmp_31368_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_0_d1 = tmp_21367_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_0_d1 = tmp_11366_reg_1560;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_0_d1 = tmp_0_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_d1 = tmp_2_3_reg_1511;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_d1 = tmp_2_2_reg_1497;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_0_d1 = tmp_2_1_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_d1 = tmp_2_0_reg_1469;
    end else begin
        stripes_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state13)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_0_we1 = 1'b1;
    end else begin
        stripes_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        stripes_1_address0 = zext_ln190_20_fu_3135_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_1_address0 = zext_ln190_9_fu_2617_p1;
    end else begin
        stripes_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_1_address1 = stripes_1_addr_6_reg_4144;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_1_address1 = stripes_1_addr_4_reg_4139;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_1_address1 = stripes_1_addr_2_reg_4134;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_1_address1 = stripes_1_addr_reg_4129;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_address1 = stripes_1_addr_7_reg_4011;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_address1 = stripes_1_addr_5_reg_4006;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_1_address1 = stripes_1_addr_3_reg_4001;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_address1 = stripes_1_addr_1_reg_3996;
    end else begin
        stripes_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        stripes_1_ce0 = 1'b1;
    end else begin
        stripes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_1_ce1 = 1'b1;
    end else begin
        stripes_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_1_d1 = tmp_31368_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_1_d1 = tmp_21367_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_1_d1 = tmp_11366_reg_1560;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_1_d1 = tmp_0_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_d1 = tmp_2_3_reg_1511;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_d1 = tmp_2_2_reg_1497;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_1_d1 = tmp_2_1_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_d1 = tmp_2_0_reg_1469;
    end else begin
        stripes_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i_0_reg_1424 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state13)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (i1_0_reg_1436 == 2'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_1_we1 = 1'b1;
    end else begin
        stripes_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        stripes_2_address0 = zext_ln190_20_fu_3135_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_2_address0 = zext_ln190_9_fu_2617_p1;
    end else begin
        stripes_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_2_address1 = stripes_2_addr_6_reg_4164;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_2_address1 = stripes_2_addr_4_reg_4159;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_2_address1 = stripes_2_addr_2_reg_4154;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_2_address1 = stripes_2_addr_reg_4149;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_address1 = stripes_2_addr_7_reg_4031;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_address1 = stripes_2_addr_5_reg_4026;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_2_address1 = stripes_2_addr_3_reg_4021;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_address1 = stripes_2_addr_1_reg_4016;
    end else begin
        stripes_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        stripes_2_ce0 = 1'b1;
    end else begin
        stripes_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_2_ce1 = 1'b1;
    end else begin
        stripes_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stripes_2_d1 = tmp_31368_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        stripes_2_d1 = tmp_21367_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        stripes_2_d1 = tmp_11366_reg_1560;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        stripes_2_d1 = tmp_0_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_d1 = tmp_2_3_reg_1511;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_d1 = tmp_2_2_reg_1497;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_2_d1 = tmp_2_1_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_d1 = tmp_2_0_reg_1469;
    end else begin
        stripes_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & ~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & ~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & ~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state13)) | (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & ~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state12)) | (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & ~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state11)) | (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & ~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        stripes_2_we1 = 1'b1;
    end else begin
        stripes_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln80_fu_2096_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln104_fu_2128_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd1)) | ((icmp_ln85_fu_2112_p2 == 1'd1) & (read_odd_load_reg_3896 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((read_odd_load_reg_3896 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln104_fu_2128_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (icmp_ln89_fu_2196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state9 : begin
            if ((~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (icmp_ln108_fu_2264_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((phi_ln146_reg_1602 == 1'd1) & (icmp_ln146_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((icmp_ln146_fu_2363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15) & (phi_ln146_reg_1602 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln153_fu_2373_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((phi_ln174_reg_1636 == 1'd1) & (icmp_ln174_1_fu_2484_p2 == 1'd1) & (icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((icmp_ln174_1_fu_2484_p2 == 1'd1) & (icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (phi_ln174_reg_1636 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((icmp_ln174_fu_2478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (icmp_ln174_1_fu_2484_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln177_fu_2494_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln180_fu_2571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln196_fu_2708_p2 == 1'd1) & (phi_ln196_reg_1694 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((icmp_ln196_fu_2708_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36) & (phi_ln196_reg_1694 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln202_fu_2714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln202_1_fu_2739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln202_3_fu_2774_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln202_5_fu_2809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln209_fu_2844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln216_fu_2862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            if ((~(((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln153_1_fu_2891_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((phi_ln174_3_reg_1794 == 1'd1) & (icmp_ln174_3_fu_3002_p2 == 1'd1) & (icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((icmp_ln174_3_fu_3002_p2 == 1'd1) & (icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53) & (phi_ln174_3_reg_1794 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else if (((icmp_ln174_2_fu_2996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53) & (icmp_ln174_3_fu_3002_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln177_1_fu_3012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln180_1_fu_3089_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((icmp_ln196_1_fu_3226_p2 == 1'd1) & (phi_ln196_2_reg_1852 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else if (((icmp_ln196_1_fu_3226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69) & (phi_ln196_2_reg_1852 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln202_2_fu_3232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state72 : begin
            if (((icmp_ln202_4_fu_3267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state74 : begin
            if (((icmp_ln202_6_fu_3302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state76 : begin
            if (((icmp_ln202_7_fu_3337_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state78 : begin
            if (((icmp_ln209_1_fu_3372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state80 : begin
            if (((icmp_ln216_1_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            if ((~(((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln114_1_fu_2293_p2 = (14'd2570 + trunc_ln114_fu_2276_p1);

assign add_ln114_2_fu_2306_p2 = (14'd3084 + trunc_ln114_fu_2276_p1);

assign add_ln114_3_fu_2319_p2 = (14'd3598 + trunc_ln114_fu_2276_p1);

assign add_ln114_fu_2280_p2 = (14'd2056 + trunc_ln114_fu_2276_p1);

assign add_ln146_fu_2344_p2 = (phi_ln146_1_reg_1614 + 2'd1);

assign add_ln153_1_fu_2897_p2 = (i6_0_1_reg_1783 + 3'd1);

assign add_ln153_fu_2379_p2 = (i6_0_0_reg_1625 + 3'd1);

assign add_ln174_1_fu_2460_p2 = (phi_ln174_2_reg_1660 + 2'd1);

assign add_ln174_2_fu_2963_p2 = (phi_ln174_4_reg_1806 + 2'd1);

assign add_ln174_3_fu_2978_p2 = (phi_ln174_5_reg_1818 + 2'd1);

assign add_ln174_4_fu_2455_p2 = (zext_ln174_fu_2451_p1 + select_ln174_reg_4287);

assign add_ln174_5_fu_2973_p2 = (zext_ln174_2_fu_2969_p1 + select_ln174_1_reg_4617);

assign add_ln174_fu_2445_p2 = (phi_ln174_1_reg_1648 + 2'd1);

assign add_ln177_1_fu_3018_p2 = (l_0_1_reg_1829 + 2'd1);

assign add_ln177_fu_2500_p2 = (l_0_0_reg_1671 + 2'd1);

assign add_ln180_1_fu_3095_p2 = (m_0_1_reg_1841 + 2'd1);

assign add_ln180_fu_2577_p2 = (m_0_0_reg_1683 + 2'd1);

assign add_ln190_13_fu_3110_p2 = (zext_ln190_18_fu_3085_p1 + add_ln190_33_reg_4643);

assign add_ln190_26_fu_2557_p2 = (zext_ln190_4_fu_2553_p1 + zext_ln190_3_fu_2541_p1);

assign add_ln190_27_fu_2587_p2 = (sub_ln190_reg_4331 + zext_ln190_8_fu_2583_p1);

assign add_ln190_28_fu_2597_p2 = (zext_ln190_5_reg_4336 + add_ln190_fu_2592_p2);

assign add_ln190_29_fu_3075_p2 = (zext_ln190_16_fu_3071_p1 + zext_ln190_15_fu_3059_p1);

assign add_ln190_30_fu_3105_p2 = (sub_ln190_1_reg_4661 + zext_ln190_19_fu_3101_p1);

assign add_ln190_31_fu_3115_p2 = (zext_ln190_17_reg_4666 + add_ln190_13_fu_3110_p2);

assign add_ln190_32_fu_2490_p2 = (zext_ln172_reg_4272 + trunc_ln172_reg_4277);

assign add_ln190_33_fu_3008_p2 = (zext_ln172_1_reg_4602 + trunc_ln172_1_reg_4607);

assign add_ln190_fu_2592_p2 = (zext_ln190_6_fu_2567_p1 + add_ln190_32_reg_4313);

assign add_ln196_1_fu_3207_p2 = (phi_ln196_3_reg_1864 + 2'd1);

assign add_ln196_fu_2689_p2 = (phi_ln196_1_reg_1706 + 2'd1);

assign add_ln202_1_fu_2745_p2 = (j10_0_0_1_reg_1728 + 2'd1);

assign add_ln202_2_fu_3238_p2 = (j10_0_1_0_reg_1875 + 2'd1);

assign add_ln202_3_fu_2780_p2 = (j10_0_0_2_reg_1739 + 2'd1);

assign add_ln202_4_fu_3273_p2 = (j10_0_1_1_reg_1886 + 2'd1);

assign add_ln202_5_fu_2815_p2 = (j10_0_0_3_reg_1750 + 2'd1);

assign add_ln202_6_fu_3308_p2 = (j10_0_1_2_reg_1897 + 2'd1);

assign add_ln202_7_fu_3343_p2 = (j10_0_1_3_reg_1908 + 2'd1);

assign add_ln202_fu_2720_p2 = (j10_0_0_0_reg_1717 + 2'd1);

assign add_ln204_10_fu_3326_p2 = (zext_ln204_5_fu_3322_p1 + 5'd14);

assign add_ln204_11_fu_3361_p2 = (zext_ln204_7_fu_3357_p1 + 5'd15);

assign add_ln204_8_fu_3256_p2 = (zext_ln204_1_fu_3252_p1 + 5'd12);

assign add_ln204_9_fu_3291_p2 = (zext_ln204_3_fu_3287_p1 + 5'd13);

assign add_ln209_1_fu_3378_p2 = (j11_0_1_reg_1919 + 3'd1);

assign add_ln209_fu_2850_p2 = (j11_0_0_reg_1761 + 3'd1);

assign add_ln216_1_fu_3402_p2 = (i12_0_1_reg_1930 + 3'd1);

assign add_ln216_fu_2868_p2 = (i12_0_0_reg_1772 + 3'd1);

assign add_ln224_fu_3423_p2 = (read_col_index + 16'd2);

assign add_ln231_fu_3466_p2 = (compute_col_index_lo_reg_4247 + 16'd2);

assign add_ln95_1_fu_2232_p2 = (14'd1028 + trunc_ln95_fu_2215_p1);

assign add_ln95_2_fu_2245_p2 = (14'd1542 + trunc_ln95_fu_2215_p1);

assign add_ln95_fu_2219_p2 = (14'd514 + trunc_ln95_fu_2215_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10 = (((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state11 = (((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12 = (((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = (((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state48 = (((trunc_ln182_reg_4580 == 2'd3) & (outputs_0_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd2) & (outputs_0_2_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd1) & (outputs_0_1_V_full_n == 1'b0)) | ((trunc_ln182_reg_4580 == 2'd0) & (outputs_0_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5 = (((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6 = (((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = (((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state81 = (((trunc_ln182_4_reg_4910 == 2'd3) & (outputs_1_3_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd2) & (outputs_1_2_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd1) & (outputs_1_1_V_full_n == 1'b0)) | ((trunc_ln182_4_reg_4910 == 2'd0) & (outputs_1_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9 = (((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_715 = (~(((ap_predicate_op229_read_state4 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op227_read_state4 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op225_read_state4 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln89_fu_2196_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_761 = (~(((ap_predicate_op246_read_state5 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5));
end

always @ (*) begin
    ap_condition_783 = (~(((ap_predicate_op261_read_state6 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6));
end

always @ (*) begin
    ap_condition_805 = (~(((ap_predicate_op276_read_state7 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i_0_reg_1424 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7));
end

always @ (*) begin
    ap_condition_838 = (~(((ap_predicate_op321_read_state9 == 1'b1) & (inputs_0_2_V_empty_n == 1'b0)) | ((ap_predicate_op319_read_state9 == 1'b1) & (inputs_0_0_V_empty_n == 1'b0)) | ((ap_predicate_op317_read_state9 == 1'b1) & (inputs_0_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln108_fu_2264_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_877 = (~(((ap_predicate_op338_read_state10 == 1'b1) & (inputs_1_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_1_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_1_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10));
end

always @ (*) begin
    ap_condition_893 = (~(((ap_predicate_op353_read_state11 == 1'b1) & (inputs_2_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_2_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_2_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11));
end

always @ (*) begin
    ap_condition_909 = (~(((ap_predicate_op368_read_state12 == 1'b1) & (inputs_3_2_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd1) & (inputs_3_1_V_empty_n == 1'b0)) | ((i1_0_reg_1436 == 2'd0) & (inputs_3_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state12));
end

always @ (*) begin
    ap_predicate_op225_read_state4 = ((i_0_reg_1424 == 2'd1) & (icmp_ln89_fu_2196_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op227_read_state4 = ((i_0_reg_1424 == 2'd0) & (icmp_ln89_fu_2196_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op229_read_state4 = (~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0) & (icmp_ln89_fu_2196_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op246_read_state5 = (~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0));
end

always @ (*) begin
    ap_predicate_op261_read_state6 = (~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0));
end

always @ (*) begin
    ap_predicate_op276_read_state7 = (~(i_0_reg_1424 == 2'd1) & ~(i_0_reg_1424 == 2'd0));
end

always @ (*) begin
    ap_predicate_op317_read_state9 = ((i1_0_reg_1436 == 2'd1) & (icmp_ln108_fu_2264_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op319_read_state9 = ((i1_0_reg_1436 == 2'd0) & (icmp_ln108_fu_2264_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op321_read_state9 = (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0) & (icmp_ln108_fu_2264_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op338_read_state10 = (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0));
end

always @ (*) begin
    ap_predicate_op353_read_state11 = (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0));
end

always @ (*) begin
    ap_predicate_op368_read_state12 = (~(i1_0_reg_1436 == 2'd1) & ~(i1_0_reg_1436 == 2'd0));
end

assign ap_ready = internal_ap_ready;

assign b_fu_2102_p2 = (b_0_reg_1413 + 3'd1);

assign current_row_indices_11_fu_2937_p3 = ((icmp_ln155_1_fu_2913_p2[0:0] === 1'b1) ? current_row_indices_5_reg_3963 : current_row_indices_4_reg_3957);

assign current_row_indices_1_fu_2156_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd1 : 3'd5);

assign current_row_indices_2_fu_2164_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd2 : 3'd6);

assign current_row_indices_3_fu_2172_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd3 : 3'd7);

assign current_row_indices_4_fu_2180_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd4 : 3'd0);

assign current_row_indices_5_fu_2188_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd5 : 3'd1);

assign current_row_indices_6_fu_2405_p3 = ((icmp_ln155_fu_2395_p2[0:0] === 1'b1) ? current_row_indices_1_reg_3937 : current_row_indices_s_reg_3932);

assign current_row_indices_8_fu_2419_p3 = ((icmp_ln155_reg_4262[0:0] === 1'b1) ? current_row_indices_3_reg_3950 : current_row_indices_2_reg_3943);

assign current_row_indices_9_fu_2923_p3 = ((icmp_ln155_1_fu_2913_p2[0:0] === 1'b1) ? current_row_indices_3_reg_3950 : current_row_indices_2_reg_3943);

assign current_row_indices_s_fu_2148_p3 = ((compute_odd[0:0] === 1'b1) ? 3'd0 : 3'd4);

assign grp_fu_1945_p2 = (kernel_sums_q0 + partial_sums_q1);

assign grp_fu_1952_p2 = (kernel_sums_q0 + partial_sums_q0);

assign grp_fu_1959_p2 = (($signed(kernel_sums_q0) > $signed(maxes_q0)) ? 1'b1 : 1'b0);

assign grp_fu_1965_p3 = ((grp_fu_1959_p2[0:0] === 1'b1) ? kernel_sums_q0 : maxes_q0);

assign grp_fu_1974_p2 = (partial_sums_q0 + kernel_sums_q0);

assign grp_fu_1981_p2 = (partial_sums_q1 + kernel_sums_q0);

assign grp_fu_3500_p0 = zext_ln190_10_fu_2627_p1;

assign grp_fu_3509_p0 = zext_ln190_10_fu_2627_p1;

assign grp_fu_3518_p0 = zext_ln190_10_fu_2627_p1;

assign grp_fu_3526_p0 = zext_ln190_10_fu_2627_p1;

assign grp_fu_3534_p0 = zext_ln190_11_fu_2647_p1;

assign grp_fu_3542_p0 = zext_ln190_11_fu_2647_p1;

assign grp_fu_3550_p0 = zext_ln190_11_fu_2647_p1;

assign grp_fu_3558_p0 = zext_ln190_11_fu_2647_p1;

assign grp_fu_3566_p0 = zext_ln190_12_fu_2667_p1;

assign grp_fu_3574_p0 = zext_ln190_12_fu_2667_p1;

assign grp_fu_3582_p0 = zext_ln190_12_fu_2667_p1;

assign grp_fu_3590_p0 = zext_ln190_12_fu_2667_p1;

assign grp_fu_3598_p0 = zext_ln190_21_fu_3145_p1;

assign grp_fu_3607_p0 = zext_ln190_21_fu_3145_p1;

assign grp_fu_3616_p0 = zext_ln190_21_fu_3145_p1;

assign grp_fu_3624_p0 = zext_ln190_21_fu_3145_p1;

assign grp_fu_3632_p0 = zext_ln190_22_fu_3165_p1;

assign grp_fu_3640_p0 = zext_ln190_22_fu_3165_p1;

assign grp_fu_3648_p0 = zext_ln190_22_fu_3165_p1;

assign grp_fu_3656_p0 = zext_ln190_22_fu_3165_p1;

assign grp_fu_3664_p0 = zext_ln190_23_fu_3185_p1;

assign grp_fu_3672_p0 = zext_ln190_23_fu_3185_p1;

assign grp_fu_3680_p0 = zext_ln190_23_fu_3185_p1;

assign grp_fu_3688_p0 = zext_ln190_23_fu_3185_p1;

assign i_1_fu_2118_p2 = (i_0_reg_1424 + 2'd1);

assign i_fu_2134_p2 = (i1_0_reg_1436 + 2'd1);

assign icmp_ln104_fu_2128_p2 = ((i1_0_reg_1436 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2264_p2 = ((j3_0_reg_1525 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_2363_p2 = ((phi_ln146_1_reg_1614 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_2891_p2 = ((i6_0_1_reg_1783 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_2373_p2 = ((i6_0_0_reg_1625 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln155_1_fu_2913_p2 = ((tmp_54_fu_2903_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_2395_p2 = ((tmp_45_fu_2385_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln174_1_fu_2484_p2 = ((phi_ln174_1_reg_1648 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln174_2_fu_2996_p2 = ((phi_ln174_5_reg_1818 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln174_3_fu_3002_p2 = ((phi_ln174_4_reg_1806 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_2478_p2 = ((phi_ln174_2_reg_1660 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln177_1_fu_3012_p2 = ((l_0_1_reg_1829 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_2494_p2 = ((l_0_0_reg_1671 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln180_1_fu_3089_p2 = ((m_0_1_reg_1841 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_2571_p2 = ((m_0_0_reg_1683 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln196_1_fu_3226_p2 = ((phi_ln196_3_reg_1864 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_2708_p2 = ((phi_ln196_1_reg_1706 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_1_fu_2739_p2 = ((j10_0_0_1_reg_1728 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_2_fu_3232_p2 = ((j10_0_1_0_reg_1875 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_3_fu_2774_p2 = ((j10_0_0_2_reg_1739 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_4_fu_3267_p2 = ((j10_0_1_1_reg_1886 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_5_fu_2809_p2 = ((j10_0_0_3_reg_1750 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_6_fu_3302_p2 = ((j10_0_1_2_reg_1897 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_7_fu_3337_p2 = ((j10_0_1_3_reg_1908 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_2714_p2 = ((j10_0_0_0_reg_1717 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln209_1_fu_3372_p2 = ((j11_0_1_reg_1919 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_2844_p2 = ((j11_0_0_reg_1761 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln216_1_fu_3396_p2 = ((i12_0_1_reg_1930 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_2862_p2 = ((i12_0_0_reg_1772 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_3435_p2 = ((add_ln224_fu_3423_p2 == 16'd513) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_3477_p2 = ((add_ln231_fu_3466_p2 == 16'd512) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_2096_p2 = ((b_0_reg_1413 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_2112_p2 = ((i_0_reg_1424 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_2196_p2 = ((j_0_reg_1448 == 2'd2) ? 1'b1 : 1'b0);

assign j_1_fu_2202_p2 = (j_0_reg_1448 + 2'd1);

assign j_fu_2270_p2 = (j3_0_reg_1525 + 2'd1);

assign local_col_index_1_fu_2258_p2 = ($signed(local_col_index_0_reg_1459) + $signed(17'd1));

assign local_col_index_fu_2332_p2 = (local_col_index2_0_reg_1536 + 17'd1);

assign local_row_indices_0_d1 = ((icmp_ln155_fu_2395_p2[0:0] === 1'b1) ? current_row_indices_2_reg_3943 : current_row_indices_1_reg_3937);

assign local_row_indices_1_d1 = ((icmp_ln155_1_fu_2913_p2[0:0] === 1'b1) ? current_row_indices_4_reg_3957 : current_row_indices_3_reg_3950);

assign or_ln204_1_fu_2794_p2 = (tmp_32_fu_2786_p3 | 4'd2);

assign or_ln204_2_fu_2829_p2 = (tmp_36_fu_2821_p3 | 4'd3);

assign or_ln204_fu_2759_p2 = (tmp_28_fu_2751_p3 | 4'd1);

assign outputs_0_0_V_din = tmp_52_fu_2883_p1;

assign outputs_0_1_V_din = tmp_52_fu_2883_p1;

assign outputs_0_2_V_din = tmp_52_fu_2883_p1;

assign outputs_0_3_V_din = tmp_52_fu_2883_p1;

assign outputs_1_0_V_din = tmp_61_fu_3452_p1;

assign outputs_1_1_V_din = tmp_61_fu_3452_p1;

assign outputs_1_2_V_din = tmp_61_fu_3452_p1;

assign outputs_1_3_V_din = tmp_61_fu_3452_p1;

assign read_odd_load_load_fu_2108_p1 = read_odd;

assign select_ln174_1_fu_2955_p3 = ((phi_ln174_3_reg_1794[0:0] === 1'b1) ? 3'd3 : 3'd0);

assign select_ln174_fu_2437_p3 = ((phi_ln174_reg_1636[0:0] === 1'b1) ? 3'd3 : 3'd0);

assign sext_ln106_fu_2140_p1 = $signed(read_col_index);

assign sext_ln114_1_fu_2299_p1 = $signed(add_ln114_1_fu_2293_p2);

assign sext_ln114_2_fu_2312_p1 = $signed(add_ln114_2_fu_2306_p2);

assign sext_ln114_3_fu_2325_p1 = $signed(add_ln114_3_fu_2319_p2);

assign sext_ln114_fu_2286_p1 = $signed(add_ln114_fu_2280_p2);

assign sext_ln190_37_fu_3120_p1 = $signed(add_ln190_30_reg_4679);

assign sext_ln190_fu_2602_p1 = $signed(add_ln190_27_reg_4349);

assign sext_ln87_fu_2124_p1 = $signed(read_col_index);

assign sext_ln95_1_fu_2225_p1 = $signed(add_ln95_fu_2219_p2);

assign sext_ln95_2_fu_2238_p1 = $signed(add_ln95_1_fu_2232_p2);

assign sext_ln95_3_fu_2251_p1 = $signed(add_ln95_2_fu_2245_p2);

assign sext_ln95_fu_2208_p1 = local_col_index_0_reg_1459;

assign start_out = real_start;

assign sub_ln190_1_fu_3045_p2 = (zext_ln190_14_fu_3041_p1 - zext_ln190_13_fu_3029_p1);

assign sub_ln190_fu_2527_p2 = (zext_ln190_2_fu_2523_p1 - zext_ln190_1_fu_2511_p1);

assign tmp_10_fu_2533_p3 = {{local_row_indices_0_q1}, {9'd0}};

assign tmp_11_fu_2545_p3 = {{local_row_indices_0_q1}, {1'd0}};

assign tmp_23_fu_3033_p3 = {{l_0_1_reg_1829}, {2'd0}};

assign tmp_25_fu_3051_p3 = {{local_row_indices_1_q1}, {9'd0}};

assign tmp_26_fu_3063_p3 = {{local_row_indices_1_q1}, {1'd0}};

assign tmp_27_fu_2726_p3 = {{j10_0_0_0_reg_1717}, {2'd0}};

assign tmp_28_fu_2751_p3 = {{j10_0_0_1_reg_1728}, {2'd0}};

assign tmp_2_fu_2350_p3 = {{phi_ln146_reg_1602}, {phi_ln146_1_reg_1614}};

assign tmp_30_fu_2765_p3 = {{60'd0}, {or_ln204_fu_2759_p2}};

assign tmp_31_fu_3244_p3 = {{j10_0_1_0_reg_1875}, {2'd0}};

assign tmp_32_fu_2786_p3 = {{j10_0_0_2_reg_1739}, {2'd0}};

assign tmp_34_fu_2800_p3 = {{60'd0}, {or_ln204_1_fu_2794_p2}};

assign tmp_35_fu_3279_p3 = {{j10_0_1_1_reg_1886}, {2'd0}};

assign tmp_36_fu_2821_p3 = {{j10_0_0_3_reg_1750}, {2'd0}};

assign tmp_37_fu_2835_p3 = {{60'd0}, {or_ln204_2_fu_2829_p2}};

assign tmp_38_fu_3314_p3 = {{j10_0_1_2_reg_1897}, {2'd0}};

assign tmp_39_fu_3349_p3 = {{j10_0_1_3_reg_1908}, {2'd0}};

assign tmp_45_fu_2385_p4 = {{i6_0_0_reg_1625[2:1]}};

assign tmp_52_fu_2883_p1 = maxes_q0[15:0];

assign tmp_53_fu_2466_p3 = {{add_ln174_4_reg_4297}, {phi_ln174_2_reg_1660}};

assign tmp_54_fu_2903_p4 = {{i6_0_1_reg_1783[2:1]}};

assign tmp_61_fu_3452_p1 = maxes_q0[15:0];

assign tmp_62_fu_2984_p3 = {{add_ln174_5_reg_4627}, {phi_ln174_5_reg_1818}};

assign tmp_69_fu_2695_p3 = {{phi_ln196_reg_1694}, {phi_ln196_1_reg_1706}};

assign tmp_70_fu_3213_p3 = {{phi_ln196_2_reg_1852}, {phi_ln196_3_reg_1864}};

assign tmp_9_fu_2515_p3 = {{l_0_0_reg_1671}, {2'd0}};

assign trunc_ln114_fu_2276_p1 = local_col_index2_0_reg_1536[13:0];

assign trunc_ln158_fu_2919_p1 = i6_0_1_reg_1783[0:0];

assign trunc_ln160_fu_2401_p1 = i6_0_0_reg_1625[0:0];

assign trunc_ln172_1_fu_2946_p1 = compute_col_index_lo_reg_4247[13:0];

assign trunc_ln172_fu_2428_p1 = compute_col_index_lo_reg_4247[13:0];

assign trunc_ln182_4_fu_3419_p1 = i12_0_1_reg_1930[1:0];

assign trunc_ln182_fu_2879_p1 = i12_0_0_reg_1772[1:0];

assign trunc_ln95_fu_2215_p1 = local_col_index_0_reg_1459[13:0];

assign xor_ln146_fu_2338_p2 = (phi_ln146_reg_1602 ^ 1'd1);

assign xor_ln174_1_fu_2949_p2 = (phi_ln174_3_reg_1794 ^ 1'd1);

assign xor_ln174_fu_2431_p2 = (phi_ln174_reg_1636 ^ 1'd1);

assign xor_ln196_1_fu_3201_p2 = (phi_ln196_2_reg_1852 ^ 1'd1);

assign xor_ln196_fu_2683_p2 = (phi_ln196_reg_1694 ^ 1'd1);

assign xor_ln211_fu_3384_p2 = (j11_0_1_reg_1919 ^ 3'd4);

assign xor_ln218_fu_3408_p2 = (i12_0_1_reg_1930 ^ 3'd4);

assign xor_ln228_fu_3441_p2 = (read_odd_load_reg_3896 ^ 1'd1);

assign xor_ln235_fu_3483_p2 = (compute_odd_load_reg_3927 ^ 1'd1);

assign zext_ln146_fu_2358_p1 = tmp_2_fu_2350_p3;

assign zext_ln172_1_fu_2943_p1 = trunc_ln158_reg_4592;

assign zext_ln172_fu_2425_p1 = trunc_ln160_reg_4267;

assign zext_ln174_1_fu_2473_p1 = tmp_53_fu_2466_p3;

assign zext_ln174_2_fu_2969_p1 = phi_ln174_4_reg_1806;

assign zext_ln174_3_fu_2991_p1 = tmp_62_fu_2984_p3;

assign zext_ln174_fu_2451_p1 = phi_ln174_1_reg_1648;

assign zext_ln190_10_fu_2627_p1 = reg_2030;

assign zext_ln190_11_fu_2647_p1 = reg_2050;

assign zext_ln190_12_fu_2667_p1 = reg_2070;

assign zext_ln190_13_fu_3029_p1 = l_0_1_reg_1829;

assign zext_ln190_14_fu_3041_p1 = tmp_23_fu_3033_p3;

assign zext_ln190_15_fu_3059_p1 = tmp_25_fu_3051_p3;

assign zext_ln190_16_fu_3071_p1 = tmp_26_fu_3063_p3;

assign zext_ln190_17_fu_3081_p1 = add_ln190_29_fu_3075_p2;

assign zext_ln190_18_fu_3085_p1 = m_0_1_reg_1841;

assign zext_ln190_19_fu_3101_p1 = m_0_1_reg_1841;

assign zext_ln190_1_fu_2511_p1 = l_0_0_reg_1671;

assign zext_ln190_20_fu_3135_p1 = add_ln190_31_reg_4684;

assign zext_ln190_21_fu_3145_p1 = reg_2030;

assign zext_ln190_22_fu_3165_p1 = reg_2050;

assign zext_ln190_23_fu_3185_p1 = reg_2070;

assign zext_ln190_2_fu_2523_p1 = tmp_9_fu_2515_p3;

assign zext_ln190_3_fu_2541_p1 = tmp_10_fu_2533_p3;

assign zext_ln190_4_fu_2553_p1 = tmp_11_fu_2545_p3;

assign zext_ln190_5_fu_2563_p1 = add_ln190_26_fu_2557_p2;

assign zext_ln190_6_fu_2567_p1 = m_0_0_reg_1683;

assign zext_ln190_7_fu_3024_p1 = l_0_1_reg_1829;

assign zext_ln190_8_fu_2583_p1 = m_0_0_reg_1683;

assign zext_ln190_9_fu_2617_p1 = add_ln190_28_reg_4354;

assign zext_ln190_fu_2506_p1 = l_0_0_reg_1671;

assign zext_ln196_1_fu_3221_p1 = tmp_70_fu_3213_p3;

assign zext_ln196_fu_2703_p1 = tmp_69_fu_2695_p3;

assign zext_ln204_1_fu_3252_p1 = tmp_31_fu_3244_p3;

assign zext_ln204_2_fu_3262_p1 = add_ln204_8_fu_3256_p2;

assign zext_ln204_3_fu_3287_p1 = tmp_35_fu_3279_p3;

assign zext_ln204_4_fu_3297_p1 = add_ln204_9_fu_3291_p2;

assign zext_ln204_5_fu_3322_p1 = tmp_38_fu_3314_p3;

assign zext_ln204_6_fu_3332_p1 = add_ln204_10_fu_3326_p2;

assign zext_ln204_7_fu_3357_p1 = tmp_39_fu_3349_p3;

assign zext_ln204_8_fu_3367_p1 = add_ln204_11_fu_3361_p2;

assign zext_ln204_fu_2734_p1 = tmp_27_fu_2726_p3;

assign zext_ln211_1_fu_3390_p1 = xor_ln211_fu_3384_p2;

assign zext_ln211_fu_2856_p1 = j11_0_0_reg_1761;

assign zext_ln218_1_fu_3414_p1 = xor_ln218_fu_3408_p2;

assign zext_ln218_fu_2874_p1 = i12_0_0_reg_1772;

always @ (posedge ap_clk) begin
    current_row_indices_s_reg_3932[1:0] <= 2'b00;
    current_row_indices_1_reg_3937[1:0] <= 2'b01;
    current_row_indices_2_reg_3943[1:0] <= 2'b10;
    current_row_indices_3_reg_3950[1:0] <= 2'b11;
    current_row_indices_4_reg_3957[1:0] <= 2'b00;
    current_row_indices_5_reg_3963[1:0] <= 2'b01;
    zext_ln172_reg_4272[13:1] <= 13'b0000000000000;
    select_ln174_reg_4287[2] <= 1'b0;
    zext_ln190_5_reg_4336[0] <= 1'b0;
    zext_ln190_5_reg_4336[13] <= 1'b0;
    current_row_indices_11_reg_4597[1] <= 1'b0;
    zext_ln172_1_reg_4602[13:1] <= 13'b0000000000000;
    select_ln174_1_reg_4617[2] <= 1'b0;
    zext_ln190_17_reg_4666[0] <= 1'b0;
    zext_ln190_17_reg_4666[13] <= 1'b0;
end

endmodule //kernel
