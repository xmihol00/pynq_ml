-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    inputs_0_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_0_0_V_empty_n : IN STD_LOGIC;
    inputs_0_0_V_read : OUT STD_LOGIC;
    inputs_0_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_0_1_V_empty_n : IN STD_LOGIC;
    inputs_0_1_V_read : OUT STD_LOGIC;
    inputs_0_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_0_2_V_empty_n : IN STD_LOGIC;
    inputs_0_2_V_read : OUT STD_LOGIC;
    inputs_1_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_1_0_V_empty_n : IN STD_LOGIC;
    inputs_1_0_V_read : OUT STD_LOGIC;
    inputs_1_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_1_1_V_empty_n : IN STD_LOGIC;
    inputs_1_1_V_read : OUT STD_LOGIC;
    inputs_1_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_1_2_V_empty_n : IN STD_LOGIC;
    inputs_1_2_V_read : OUT STD_LOGIC;
    inputs_2_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_2_0_V_empty_n : IN STD_LOGIC;
    inputs_2_0_V_read : OUT STD_LOGIC;
    inputs_2_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_2_1_V_empty_n : IN STD_LOGIC;
    inputs_2_1_V_read : OUT STD_LOGIC;
    inputs_2_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_2_2_V_empty_n : IN STD_LOGIC;
    inputs_2_2_V_read : OUT STD_LOGIC;
    inputs_3_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_3_0_V_empty_n : IN STD_LOGIC;
    inputs_3_0_V_read : OUT STD_LOGIC;
    inputs_3_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_3_1_V_empty_n : IN STD_LOGIC;
    inputs_3_1_V_read : OUT STD_LOGIC;
    inputs_3_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inputs_3_2_V_empty_n : IN STD_LOGIC;
    inputs_3_2_V_read : OUT STD_LOGIC;
    outputs_0_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_0_0_V_full_n : IN STD_LOGIC;
    outputs_0_0_V_write : OUT STD_LOGIC;
    outputs_0_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_0_1_V_full_n : IN STD_LOGIC;
    outputs_0_1_V_write : OUT STD_LOGIC;
    outputs_0_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_0_2_V_full_n : IN STD_LOGIC;
    outputs_0_2_V_write : OUT STD_LOGIC;
    outputs_0_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_0_3_V_full_n : IN STD_LOGIC;
    outputs_0_3_V_write : OUT STD_LOGIC;
    outputs_1_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_1_0_V_full_n : IN STD_LOGIC;
    outputs_1_0_V_write : OUT STD_LOGIC;
    outputs_1_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_1_1_V_full_n : IN STD_LOGIC;
    outputs_1_1_V_write : OUT STD_LOGIC;
    outputs_1_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_1_2_V_full_n : IN STD_LOGIC;
    outputs_1_2_V_write : OUT STD_LOGIC;
    outputs_1_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputs_1_3_V_full_n : IN STD_LOGIC;
    outputs_1_3_V_write : OUT STD_LOGIC );
end;


architecture behav of kernel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (82 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (82 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (82 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (82 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (82 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (82 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (82 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (82 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (82 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (82 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (82 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_1FC : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv14_202 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000010";
    constant ap_const_lv14_404 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000100";
    constant ap_const_lv14_606 : STD_LOGIC_VECTOR (13 downto 0) := "00011000000110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv14_808 : STD_LOGIC_VECTOR (13 downto 0) := "00100000001000";
    constant ap_const_lv14_A0A : STD_LOGIC_VECTOR (13 downto 0) := "00101000001010";
    constant ap_const_lv14_C0C : STD_LOGIC_VECTOR (13 downto 0) := "00110000001100";
    constant ap_const_lv14_E0E : STD_LOGIC_VECTOR (13 downto 0) := "00111000001110";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_201 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal read_odd : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal read_col_index : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    signal compute_odd : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal compute_col_index : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111100";
    signal kernels_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_0_ce0 : STD_LOGIC;
    signal kernels_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_ce0 : STD_LOGIC;
    signal stripes_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_ce1 : STD_LOGIC;
    signal stripes_0_we1 : STD_LOGIC;
    signal stripes_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernels_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_1_ce0 : STD_LOGIC;
    signal kernels_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_2_ce0 : STD_LOGIC;
    signal kernels_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_3_ce0 : STD_LOGIC;
    signal kernels_3_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_4_ce0 : STD_LOGIC;
    signal kernels_4_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_ce0 : STD_LOGIC;
    signal stripes_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_1_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_ce1 : STD_LOGIC;
    signal stripes_1_we1 : STD_LOGIC;
    signal stripes_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernels_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_5_ce0 : STD_LOGIC;
    signal kernels_5_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_6_ce0 : STD_LOGIC;
    signal kernels_6_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_7_ce0 : STD_LOGIC;
    signal kernels_7_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_8_ce0 : STD_LOGIC;
    signal kernels_8_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_ce0 : STD_LOGIC;
    signal stripes_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_2_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_ce1 : STD_LOGIC;
    signal stripes_2_we1 : STD_LOGIC;
    signal stripes_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernels_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_9_ce0 : STD_LOGIC;
    signal kernels_9_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_10_ce0 : STD_LOGIC;
    signal kernels_10_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernels_11_ce0 : STD_LOGIC;
    signal kernels_11_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal inputs_0_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln108_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_0_reg_1436 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln89_fu_2196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_1424 : STD_LOGIC_VECTOR (1 downto 0);
    signal inputs_0_1_V_blk_n : STD_LOGIC;
    signal inputs_0_2_V_blk_n : STD_LOGIC;
    signal inputs_1_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal inputs_1_1_V_blk_n : STD_LOGIC;
    signal inputs_1_2_V_blk_n : STD_LOGIC;
    signal inputs_2_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal inputs_2_1_V_blk_n : STD_LOGIC;
    signal inputs_2_2_V_blk_n : STD_LOGIC;
    signal inputs_3_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal inputs_3_1_V_blk_n : STD_LOGIC;
    signal inputs_3_2_V_blk_n : STD_LOGIC;
    signal outputs_0_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal trunc_ln182_reg_4580 : STD_LOGIC_VECTOR (1 downto 0);
    signal outputs_0_1_V_blk_n : STD_LOGIC;
    signal outputs_0_2_V_blk_n : STD_LOGIC;
    signal outputs_0_3_V_blk_n : STD_LOGIC;
    signal outputs_1_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal trunc_ln182_4_reg_4910 : STD_LOGIC_VECTOR (1 downto 0);
    signal outputs_1_1_V_blk_n : STD_LOGIC;
    signal outputs_1_2_V_blk_n : STD_LOGIC;
    signal outputs_1_3_V_blk_n : STD_LOGIC;
    signal partial_sums_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1988 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal partial_sums_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1992 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1996 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal reg_2001 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2006 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal reg_2011 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2016 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal reg_2021 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2026 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal reg_2030 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_2034 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2038 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2042 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2046 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2050 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_2054 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2058 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2062 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2066 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2070 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_2074 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2079 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2083 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2088 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_2092 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal b_fu_2102_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_reg_3891 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal read_odd_load_load_fu_2108_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_odd_load_reg_3896 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_fu_2096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_2118_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_3904 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln87_fu_2124_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln85_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_2134_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_3917 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln106_fu_2140_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln104_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compute_odd_load_reg_3927 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_row_indices_s_fu_2148_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_s_reg_3932 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_1_fu_2156_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_1_reg_3937 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_2_fu_2164_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_2_reg_3943 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_3_fu_2172_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_3_reg_3950 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_4_fu_2180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_4_reg_3957 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_5_fu_2188_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_5_reg_3963 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_fu_2202_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_3971 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_predicate_op225_read_state4 : BOOLEAN;
    signal ap_predicate_op227_read_state4 : BOOLEAN;
    signal ap_predicate_op229_read_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal stripes_0_addr_1_reg_3976 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_3_reg_3981 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_5_reg_3986 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_7_reg_3991 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_1_reg_3996 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_3_reg_4001 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_5_reg_4006 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_7_reg_4011 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_1_reg_4016 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_3_reg_4021 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_5_reg_4026 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_7_reg_4031 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_predicate_op246_read_state5 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_predicate_op261_read_state6 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_predicate_op276_read_state7 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal local_col_index_1_fu_2258_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal j_fu_2270_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_4104 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_predicate_op317_read_state9 : BOOLEAN;
    signal ap_predicate_op319_read_state9 : BOOLEAN;
    signal ap_predicate_op321_read_state9 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal stripes_0_addr_reg_4109 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_2_reg_4114 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_4_reg_4119 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_0_addr_6_reg_4124 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_reg_4129 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_2_reg_4134 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_4_reg_4139 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_1_addr_6_reg_4144 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_reg_4149 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_2_reg_4154 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_4_reg_4159 : STD_LOGIC_VECTOR (12 downto 0);
    signal stripes_2_addr_6_reg_4164 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_predicate_op338_read_state10 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal ap_predicate_op353_read_state11 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal ap_predicate_op368_read_state12 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal local_col_index_fu_2332_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal xor_ln146_fu_2338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln146_reg_4234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln146_fu_2344_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal compute_col_index_lo_reg_4247 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln146_fu_2363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln146_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln153_fu_2379_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln153_reg_4257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln155_fu_2395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln155_reg_4262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_fu_2373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln160_fu_2401_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln160_reg_4267 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln172_fu_2425_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln172_reg_4272 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal trunc_ln172_fu_2428_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln172_reg_4277 : STD_LOGIC_VECTOR (13 downto 0);
    signal xor_ln174_fu_2431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln174_reg_4282 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal select_ln174_fu_2437_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln174_reg_4287 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_fu_2445_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln174_reg_4292 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal add_ln174_4_fu_2455_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_4_reg_4297 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_1_fu_2460_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal add_ln190_32_fu_2490_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_32_reg_4313 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln174_fu_2478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln174_1_fu_2484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln174_reg_1636 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln177_fu_2500_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln177_reg_4321 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal icmp_ln177_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln190_fu_2527_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln190_reg_4331 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln190_5_fu_2563_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln190_5_reg_4336 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln180_fu_2577_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln180_reg_4344 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal add_ln190_27_fu_2587_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln190_27_reg_4349 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln180_fu_2571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln190_28_fu_2597_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_28_reg_4354 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_3518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_3_reg_4434 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_fu_3526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_4_reg_4439 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_5_reg_4444 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_6_reg_4449 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3550_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_7_reg_4454 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3558_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_8_reg_4459 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_9_reg_4464 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_10_reg_4469 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_11_reg_4474 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3590_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_12_reg_4479 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln196_fu_2683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln196_reg_4484 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln196_fu_2689_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln202_fu_2720_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_reg_4500 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal icmp_ln202_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_1_fu_2745_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_1_reg_4513 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal icmp_ln202_1_fu_2739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_3_fu_2780_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_3_reg_4526 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln202_3_fu_2774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_5_fu_2815_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_5_reg_4539 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal icmp_ln202_5_fu_2809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_fu_2850_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln209_reg_4552 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal maxes_addr_3_reg_4557 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln209_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln216_fu_2868_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln216_reg_4570 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal icmp_ln216_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln182_fu_2879_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln153_1_fu_2897_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln153_1_reg_4587 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal trunc_ln158_fu_2919_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln158_reg_4592 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_1_fu_2891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_row_indices_11_fu_2937_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_11_reg_4597 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln172_1_fu_2943_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln172_1_reg_4602 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal trunc_ln172_1_fu_2946_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln172_1_reg_4607 : STD_LOGIC_VECTOR (13 downto 0);
    signal xor_ln174_1_fu_2949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln174_1_reg_4612 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal select_ln174_1_fu_2955_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln174_1_reg_4617 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_2_fu_2963_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln174_2_reg_4622 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal add_ln174_5_fu_2973_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_5_reg_4627 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln174_3_fu_2978_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal add_ln190_33_fu_3008_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_33_reg_4643 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln174_2_fu_2996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln174_3_fu_3002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln174_3_reg_1794 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln177_1_fu_3018_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln177_1_reg_4651 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln177_1_fu_3012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln190_1_fu_3045_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln190_1_reg_4661 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal zext_ln190_17_fu_3081_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln190_17_reg_4666 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln180_1_fu_3095_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln180_1_reg_4674 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal add_ln190_30_fu_3105_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln190_30_reg_4679 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln180_1_fu_3089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln190_31_fu_3115_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_31_reg_4684 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_3616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_16_reg_4764 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_fu_3624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_17_reg_4769 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_18_reg_4774 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3640_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_19_reg_4779 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3648_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_20_reg_4784 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3656_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_21_reg_4789 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3664_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_22_reg_4794 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_23_reg_4799 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3680_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_24_reg_4804 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln190_25_reg_4809 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln196_1_fu_3201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln196_1_reg_4814 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal add_ln196_1_fu_3207_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal add_ln202_2_fu_3238_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_2_reg_4830 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal icmp_ln202_2_fu_3232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_4_fu_3273_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_4_reg_4843 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal icmp_ln202_4_fu_3267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_6_fu_3308_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_6_reg_4856 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal icmp_ln202_6_fu_3302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln202_7_fu_3343_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln202_7_reg_4869 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal icmp_ln202_7_fu_3337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_1_fu_3378_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln209_1_reg_4882 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal maxes_addr_4_reg_4887 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln209_1_fu_3372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln216_1_fu_3402_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln216_1_reg_4900 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal icmp_ln216_1_fu_3396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln182_4_fu_3419_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln225_fu_3435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln225_reg_4914 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_fu_3477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln232_reg_4918 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal maxes_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal maxes_ce0 : STD_LOGIC;
    signal maxes_we0 : STD_LOGIC;
    signal maxes_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_row_indices_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_0_ce0 : STD_LOGIC;
    signal local_row_indices_0_we0 : STD_LOGIC;
    signal local_row_indices_0_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_0_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_0_ce1 : STD_LOGIC;
    signal local_row_indices_0_we1 : STD_LOGIC;
    signal local_row_indices_0_d1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_0_q1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_1_ce0 : STD_LOGIC;
    signal local_row_indices_1_we0 : STD_LOGIC;
    signal local_row_indices_1_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_1_ce1 : STD_LOGIC;
    signal local_row_indices_1_we1 : STD_LOGIC;
    signal local_row_indices_1_d1 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_1_q1 : STD_LOGIC_VECTOR (2 downto 0);
    signal partial_sums_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal partial_sums_ce0 : STD_LOGIC;
    signal partial_sums_we0 : STD_LOGIC;
    signal partial_sums_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal partial_sums_ce1 : STD_LOGIC;
    signal partial_sums_we1 : STD_LOGIC;
    signal partial_sums_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal kernel_sums_ce0 : STD_LOGIC;
    signal kernel_sums_we0 : STD_LOGIC;
    signal kernel_sums_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_reg_1413 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal j_0_reg_1448 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_col_index_0_reg_1459 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_0_reg_1469 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_1_reg_1483 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_2_reg_1497 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_3_reg_1511 : STD_LOGIC_VECTOR (7 downto 0);
    signal j3_0_reg_1525 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_col_index2_0_reg_1536 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_0_reg_1546 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11366_reg_1560 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21367_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31368_reg_1588 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_ln146_1_reg_1614 : STD_LOGIC_VECTOR (1 downto 0);
    signal i6_0_0_reg_1625 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln174_1_reg_1648 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln174_2_reg_1660 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_0_0_reg_1671 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_0_0_reg_1683 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal phi_ln196_reg_1694 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_fu_2708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln196_1_reg_1706 : STD_LOGIC_VECTOR (1 downto 0);
    signal j10_0_0_0_reg_1717 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal j10_0_0_1_reg_1728 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal j10_0_0_2_reg_1739 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal j10_0_0_3_reg_1750 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal j11_0_0_reg_1761 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal i12_0_0_reg_1772 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state48 : BOOLEAN;
    signal i6_0_1_reg_1783 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln174_4_reg_1806 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln174_5_reg_1818 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_0_1_reg_1829 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_0_1_reg_1841 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal phi_ln196_2_reg_1852 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_1_fu_3226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln196_3_reg_1864 : STD_LOGIC_VECTOR (1 downto 0);
    signal j10_0_1_0_reg_1875 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal j10_0_1_1_reg_1886 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal j10_0_1_2_reg_1897 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal j10_0_1_3_reg_1908 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal j11_0_1_reg_1919 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal i12_0_1_reg_1930 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state81 : BOOLEAN;
    signal sext_ln95_fu_2208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln95_1_fu_2225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln95_2_fu_2238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln95_3_fu_2251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln114_fu_2286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln114_1_fu_2299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln114_2_fu_2312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln114_3_fu_2325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln146_fu_2358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_1_fu_2473_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_fu_2506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln190_fu_2602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_9_fu_2617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln196_fu_2703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_fu_2734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_2765_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_2800_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_2835_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_fu_2856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln218_fu_2874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_3_fu_2991_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_7_fu_3024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln190_37_fu_3120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_20_fu_3135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln196_1_fu_3221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_2_fu_3262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_4_fu_3297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_6_fu_3332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_8_fu_3367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_1_fu_3390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln218_1_fu_3414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln228_fu_3441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln224_fu_3423_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln235_fu_3483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln231_fu_3466_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_fu_2883_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_3452_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_row_indices_6_fu_2405_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal current_row_indices_8_fu_2419_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_3500_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_fu_3598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal grp_fu_1945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1981_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_row_indices_9_fu_2923_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln95_fu_2215_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln95_fu_2219_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln95_1_fu_2232_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln95_2_fu_2245_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln114_fu_2276_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln114_fu_2280_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln114_1_fu_2293_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln114_2_fu_2306_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln114_3_fu_2319_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_fu_2350_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_45_fu_2385_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln174_fu_2451_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_53_fu_2466_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_2515_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln190_2_fu_2523_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln190_1_fu_2511_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_2533_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_2545_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln190_4_fu_2553_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln190_3_fu_2541_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln190_26_fu_2557_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln190_8_fu_2583_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln190_6_fu_2567_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_fu_2592_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_69_fu_2695_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_27_fu_2726_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_28_fu_2751_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln204_fu_2759_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_32_fu_2786_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln204_1_fu_2794_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_36_fu_2821_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln204_2_fu_2829_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_54_fu_2903_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln155_1_fu_2913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln174_2_fu_2969_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_62_fu_2984_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_23_fu_3033_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln190_14_fu_3041_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln190_13_fu_3029_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_fu_3051_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_3063_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln190_16_fu_3071_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln190_15_fu_3059_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln190_29_fu_3075_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln190_19_fu_3101_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln190_18_fu_3085_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln190_13_fu_3110_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_70_fu_3213_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_fu_3244_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_1_fu_3252_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln204_8_fu_3256_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_35_fu_3279_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_3_fu_3287_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln204_9_fu_3291_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_fu_3314_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_5_fu_3322_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln204_10_fu_3326_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_39_fu_3349_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_7_fu_3357_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln204_11_fu_3361_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln211_fu_3384_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln218_fu_3408_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_3500_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_10_fu_2627_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3509_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3518_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3526_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3534_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_11_fu_2647_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3542_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3550_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3558_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3566_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_12_fu_2667_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3574_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3582_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3590_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3598_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_21_fu_3145_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3607_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3616_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3624_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3632_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_22_fu_3165_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3640_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3648_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3656_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3664_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln190_23_fu_3185_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3672_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3680_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3688_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (82 downto 0);
    signal ap_condition_838 : BOOLEAN;
    signal ap_condition_877 : BOOLEAN;
    signal ap_condition_893 : BOOLEAN;
    signal ap_condition_715 : BOOLEAN;
    signal ap_condition_761 : BOOLEAN;
    signal ap_condition_783 : BOOLEAN;
    signal ap_condition_805 : BOOLEAN;
    signal ap_condition_909 : BOOLEAN;

    component cnn_mac_muladd_8neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_kernels_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_stripes_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kernel_kernels_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_9 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_10 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_11 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_maxes IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_local_row_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (2 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component kernel_partial_sums IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernels_0_U : component kernel_kernels_0
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_0_address0,
        ce0 => kernels_0_ce0,
        q0 => kernels_0_q0);

    stripes_0_U : component kernel_stripes_0
    generic map (
        DataWidth => 8,
        AddressRange => 4112,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_0_address0,
        ce0 => stripes_0_ce0,
        q0 => stripes_0_q0,
        address1 => stripes_0_address1,
        ce1 => stripes_0_ce1,
        we1 => stripes_0_we1,
        d1 => stripes_0_d1);

    kernels_1_U : component kernel_kernels_1
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_1_address0,
        ce0 => kernels_1_ce0,
        q0 => kernels_1_q0);

    kernels_2_U : component kernel_kernels_2
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_2_address0,
        ce0 => kernels_2_ce0,
        q0 => kernels_2_q0);

    kernels_3_U : component kernel_kernels_3
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_3_address0,
        ce0 => kernels_3_ce0,
        q0 => kernels_3_q0);

    kernels_4_U : component kernel_kernels_4
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_4_address0,
        ce0 => kernels_4_ce0,
        q0 => kernels_4_q0);

    stripes_1_U : component kernel_stripes_0
    generic map (
        DataWidth => 8,
        AddressRange => 4112,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_1_address0,
        ce0 => stripes_1_ce0,
        q0 => stripes_1_q0,
        address1 => stripes_1_address1,
        ce1 => stripes_1_ce1,
        we1 => stripes_1_we1,
        d1 => stripes_1_d1);

    kernels_5_U : component kernel_kernels_5
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_5_address0,
        ce0 => kernels_5_ce0,
        q0 => kernels_5_q0);

    kernels_6_U : component kernel_kernels_6
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_6_address0,
        ce0 => kernels_6_ce0,
        q0 => kernels_6_q0);

    kernels_7_U : component kernel_kernels_7
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_7_address0,
        ce0 => kernels_7_ce0,
        q0 => kernels_7_q0);

    kernels_8_U : component kernel_kernels_8
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_8_address0,
        ce0 => kernels_8_ce0,
        q0 => kernels_8_q0);

    stripes_2_U : component kernel_stripes_0
    generic map (
        DataWidth => 8,
        AddressRange => 4112,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_2_address0,
        ce0 => stripes_2_ce0,
        q0 => stripes_2_q0,
        address1 => stripes_2_address1,
        ce1 => stripes_2_ce1,
        we1 => stripes_2_we1,
        d1 => stripes_2_d1);

    kernels_9_U : component kernel_kernels_9
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_9_address0,
        ce0 => kernels_9_ce0,
        q0 => kernels_9_q0);

    kernels_10_U : component kernel_kernels_10
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_10_address0,
        ce0 => kernels_10_ce0,
        q0 => kernels_10_q0);

    kernels_11_U : component kernel_kernels_11
    generic map (
        DataWidth => 6,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_11_address0,
        ce0 => kernels_11_ce0,
        q0 => kernels_11_q0);

    maxes_U : component kernel_maxes
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => maxes_address0,
        ce0 => maxes_ce0,
        we0 => maxes_we0,
        d0 => maxes_d0,
        q0 => maxes_q0);

    local_row_indices_0_U : component kernel_local_row_cud
    generic map (
        DataWidth => 3,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_row_indices_0_address0,
        ce0 => local_row_indices_0_ce0,
        we0 => local_row_indices_0_we0,
        d0 => local_row_indices_0_d0,
        address1 => local_row_indices_0_address1,
        ce1 => local_row_indices_0_ce1,
        we1 => local_row_indices_0_we1,
        d1 => local_row_indices_0_d1,
        q1 => local_row_indices_0_q1);

    local_row_indices_1_U : component kernel_local_row_cud
    generic map (
        DataWidth => 3,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_row_indices_1_address0,
        ce0 => local_row_indices_1_ce0,
        we0 => local_row_indices_1_we0,
        d0 => local_row_indices_1_d0,
        address1 => local_row_indices_1_address1,
        ce1 => local_row_indices_1_ce1,
        we1 => local_row_indices_1_we1,
        d1 => local_row_indices_1_d1,
        q1 => local_row_indices_1_q1);

    partial_sums_U : component kernel_partial_sums
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => partial_sums_address0,
        ce0 => partial_sums_ce0,
        we0 => partial_sums_we0,
        d0 => partial_sums_d0,
        q0 => partial_sums_q0,
        address1 => partial_sums_address1,
        ce1 => partial_sums_ce1,
        we1 => partial_sums_we1,
        d1 => partial_sums_d1,
        q1 => partial_sums_q1);

    kernel_sums_U : component kernel_maxes
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_sums_address0,
        ce0 => kernel_sums_ce0,
        we0 => kernel_sums_we0,
        d0 => kernel_sums_d0,
        q0 => kernel_sums_q0);

    cnn_mac_muladd_8neOg_U35 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3500_p0,
        din1 => reg_2026,
        din2 => reg_1988,
        dout => grp_fu_3500_p3);

    cnn_mac_muladd_8neOg_U36 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3509_p0,
        din1 => reg_2034,
        din2 => reg_1992,
        dout => grp_fu_3509_p3);

    cnn_mac_muladd_8neOg_U37 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3518_p0,
        din1 => reg_2038,
        din2 => reg_1996,
        dout => grp_fu_3518_p3);

    cnn_mac_muladd_8neOg_U38 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3526_p0,
        din1 => reg_2042,
        din2 => reg_2001,
        dout => grp_fu_3526_p3);

    cnn_mac_muladd_8neOg_U39 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3534_p0,
        din1 => reg_2046,
        din2 => reg_2006,
        dout => grp_fu_3534_p3);

    cnn_mac_muladd_8neOg_U40 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3542_p0,
        din1 => reg_2054,
        din2 => reg_2011,
        dout => grp_fu_3542_p3);

    cnn_mac_muladd_8neOg_U41 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3550_p0,
        din1 => reg_2058,
        din2 => reg_2016,
        dout => grp_fu_3550_p3);

    cnn_mac_muladd_8neOg_U42 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3558_p0,
        din1 => reg_2062,
        din2 => reg_2021,
        dout => grp_fu_3558_p3);

    cnn_mac_muladd_8neOg_U43 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3566_p0,
        din1 => reg_2066,
        din2 => reg_2074,
        dout => grp_fu_3566_p3);

    cnn_mac_muladd_8neOg_U44 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3574_p0,
        din1 => reg_2079,
        din2 => reg_2083,
        dout => grp_fu_3574_p3);

    cnn_mac_muladd_8neOg_U45 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3582_p0,
        din1 => reg_2088,
        din2 => partial_sums_q1,
        dout => grp_fu_3582_p3);

    cnn_mac_muladd_8neOg_U46 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3590_p0,
        din1 => reg_2092,
        din2 => partial_sums_q0,
        dout => grp_fu_3590_p3);

    cnn_mac_muladd_8neOg_U47 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3598_p0,
        din1 => reg_2026,
        din2 => reg_1988,
        dout => grp_fu_3598_p3);

    cnn_mac_muladd_8neOg_U48 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3607_p0,
        din1 => reg_2034,
        din2 => reg_1992,
        dout => grp_fu_3607_p3);

    cnn_mac_muladd_8neOg_U49 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3616_p0,
        din1 => reg_2038,
        din2 => reg_1996,
        dout => grp_fu_3616_p3);

    cnn_mac_muladd_8neOg_U50 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3624_p0,
        din1 => reg_2042,
        din2 => reg_2001,
        dout => grp_fu_3624_p3);

    cnn_mac_muladd_8neOg_U51 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3632_p0,
        din1 => reg_2046,
        din2 => reg_2006,
        dout => grp_fu_3632_p3);

    cnn_mac_muladd_8neOg_U52 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3640_p0,
        din1 => reg_2054,
        din2 => reg_2011,
        dout => grp_fu_3640_p3);

    cnn_mac_muladd_8neOg_U53 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3648_p0,
        din1 => reg_2058,
        din2 => reg_2016,
        dout => grp_fu_3648_p3);

    cnn_mac_muladd_8neOg_U54 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3656_p0,
        din1 => reg_2062,
        din2 => reg_2021,
        dout => grp_fu_3656_p3);

    cnn_mac_muladd_8neOg_U55 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3664_p0,
        din1 => reg_2066,
        din2 => reg_2074,
        dout => grp_fu_3664_p3);

    cnn_mac_muladd_8neOg_U56 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3672_p0,
        din1 => reg_2079,
        din2 => reg_2083,
        dout => grp_fu_3672_p3);

    cnn_mac_muladd_8neOg_U57 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3680_p0,
        din1 => reg_2088,
        din2 => partial_sums_q0,
        dout => grp_fu_3680_p3);

    cnn_mac_muladd_8neOg_U58 : component cnn_mac_muladd_8neOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_3688_p0,
        din1 => reg_2092,
        din2 => partial_sums_q1,
        dout => grp_fu_3688_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln80_fu_2096_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    compute_col_index_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                compute_col_index <= ap_const_lv16_1FC;
            else
                if (((icmp_ln232_reg_4918 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                    compute_col_index <= ap_const_lv16_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                    compute_col_index <= add_ln231_fu_3466_p2;
                end if; 
            end if;
        end if;
    end process;


    read_col_index_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                read_col_index <= ap_const_lv16_1;
            else
                if (((icmp_ln225_reg_4914 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    read_col_index <= ap_const_lv16_1;
                elsif (((icmp_ln216_1_fu_3396_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    read_col_index <= add_ln224_fu_3423_p2;
                end if; 
            end if;
        end if;
    end process;


    read_odd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                read_odd <= ap_const_lv1_0;
            else
                if (((icmp_ln225_fu_3435_p2 = ap_const_lv1_1) and (icmp_ln216_1_fu_3396_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    read_odd <= xor_ln228_fu_3441_p2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    b_0_reg_1413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                b_0_reg_1413 <= b_reg_3891;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                b_0_reg_1413 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i12_0_0_reg_1772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_fu_2373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                i12_0_0_reg_1772 <= ap_const_lv3_0;
            elsif ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                i12_0_0_reg_1772 <= add_ln216_reg_4570;
            end if; 
        end if;
    end process;

    i12_0_1_reg_1930_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_1_fu_2891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                i12_0_1_reg_1930 <= ap_const_lv3_0;
            elsif ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
                i12_0_1_reg_1930 <= add_ln216_1_reg_4900;
            end if; 
        end if;
    end process;

    i1_0_reg_1436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((read_odd_load_load_fu_2108_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_2096_p2 = ap_const_lv1_0))) then 
                i1_0_reg_1436 <= ap_const_lv2_0;
            elsif ((not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i1_0_reg_1436 <= i_reg_3917;
            end if; 
        end if;
    end process;

    i6_0_0_reg_1625_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln209_fu_2844_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                i6_0_0_reg_1625 <= add_ln153_reg_4257;
            elsif (((phi_ln146_reg_1602 = ap_const_lv1_1) and (icmp_ln146_fu_2363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i6_0_0_reg_1625 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i6_0_1_reg_1783_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln209_1_fu_3372_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then 
                i6_0_1_reg_1783 <= add_ln153_1_reg_4587;
            elsif (((icmp_ln216_fu_2862_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                i6_0_1_reg_1783 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_reg_1424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_2096_p2 = ap_const_lv1_0) and (read_odd_load_load_fu_2108_p1 = ap_const_lv1_0))) then 
                i_0_reg_1424 <= ap_const_lv2_0;
            elsif ((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_0_reg_1424 <= i_1_reg_3904;
            end if; 
        end if;
    end process;

    j10_0_0_0_reg_1717_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                j10_0_0_0_reg_1717 <= add_ln202_reg_4500;
            elsif (((icmp_ln196_fu_2708_p2 = ap_const_lv1_1) and (phi_ln196_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                j10_0_0_0_reg_1717 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_0_1_reg_1728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                j10_0_0_1_reg_1728 <= add_ln202_1_reg_4513;
            elsif (((icmp_ln202_fu_2714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                j10_0_0_1_reg_1728 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_0_2_reg_1739_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                j10_0_0_2_reg_1739 <= add_ln202_3_reg_4526;
            elsif (((icmp_ln202_1_fu_2739_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                j10_0_0_2_reg_1739 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_0_3_reg_1750_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                j10_0_0_3_reg_1750 <= add_ln202_5_reg_4539;
            elsif (((icmp_ln202_3_fu_2774_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                j10_0_0_3_reg_1750 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_1_0_reg_1875_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                j10_0_1_0_reg_1875 <= add_ln202_2_reg_4830;
            elsif (((icmp_ln196_1_fu_3226_p2 = ap_const_lv1_1) and (phi_ln196_2_reg_1852 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                j10_0_1_0_reg_1875 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_1_1_reg_1886_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                j10_0_1_1_reg_1886 <= add_ln202_4_reg_4843;
            elsif (((icmp_ln202_2_fu_3232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                j10_0_1_1_reg_1886 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_1_2_reg_1897_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                j10_0_1_2_reg_1897 <= add_ln202_6_reg_4856;
            elsif (((icmp_ln202_4_fu_3267_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                j10_0_1_2_reg_1897 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j10_0_1_3_reg_1908_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                j10_0_1_3_reg_1908 <= add_ln202_7_reg_4869;
            elsif (((icmp_ln202_6_fu_3302_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                j10_0_1_3_reg_1908 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j11_0_0_reg_1761_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln202_5_fu_2809_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                j11_0_0_reg_1761 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                j11_0_0_reg_1761 <= add_ln209_reg_4552;
            end if; 
        end if;
    end process;

    j11_0_1_reg_1919_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln202_7_fu_3337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
                j11_0_1_reg_1919 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
                j11_0_1_reg_1919 <= add_ln209_1_reg_4882;
            end if; 
        end if;
    end process;

    j3_0_reg_1525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                j3_0_reg_1525 <= j_reg_4104;
            elsif (((read_odd_load_reg_3896 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln104_fu_2128_p2 = ap_const_lv1_0))) then 
                j3_0_reg_1525 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_0_reg_1448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                j_0_reg_1448 <= j_1_reg_3971;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln85_fu_2112_p2 = ap_const_lv1_0) and (read_odd_load_reg_3896 = ap_const_lv1_0))) then 
                j_0_reg_1448 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    l_0_0_reg_1671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln180_fu_2571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                l_0_0_reg_1671 <= add_ln177_reg_4321;
            elsif (((phi_ln174_reg_1636 = ap_const_lv1_1) and (icmp_ln174_1_fu_2484_p2 = ap_const_lv1_1) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                l_0_0_reg_1671 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    l_0_1_reg_1829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln180_1_fu_3089_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                l_0_1_reg_1829 <= add_ln177_1_reg_4651;
            elsif (((phi_ln174_3_reg_1794 = ap_const_lv1_1) and (icmp_ln174_3_fu_3002_p2 = ap_const_lv1_1) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                l_0_1_reg_1829 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    local_col_index2_0_reg_1536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                local_col_index2_0_reg_1536 <= local_col_index_fu_2332_p2;
            elsif (((read_odd_load_reg_3896 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln104_fu_2128_p2 = ap_const_lv1_0))) then 
                local_col_index2_0_reg_1536 <= sext_ln106_fu_2140_p1;
            end if; 
        end if;
    end process;

    local_col_index_0_reg_1459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                local_col_index_0_reg_1459 <= local_col_index_1_fu_2258_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln85_fu_2112_p2 = ap_const_lv1_0) and (read_odd_load_reg_3896 = ap_const_lv1_0))) then 
                local_col_index_0_reg_1459 <= sext_ln87_fu_2124_p1;
            end if; 
        end if;
    end process;

    m_0_0_reg_1683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                m_0_0_reg_1683 <= add_ln180_reg_4344;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                m_0_0_reg_1683 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    m_0_1_reg_1841_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                m_0_1_reg_1841 <= add_ln180_1_reg_4674;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                m_0_1_reg_1841 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln146_1_reg_1614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln146_fu_2363_p2 = ap_const_lv1_0))) then 
                phi_ln146_1_reg_1614 <= add_ln146_fu_2344_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                phi_ln146_1_reg_1614 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln146_reg_1602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln146_fu_2363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (phi_ln146_reg_1602 = ap_const_lv1_0))) then 
                phi_ln146_reg_1602 <= xor_ln146_reg_4234;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln104_fu_2128_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_1)) or ((icmp_ln85_fu_2112_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_0))))) then 
                phi_ln146_reg_1602 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_ln174_1_reg_1648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln174_1_fu_2484_p2 = ap_const_lv1_0))) then 
                phi_ln174_1_reg_1648 <= add_ln174_reg_4292;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                phi_ln174_1_reg_1648 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln174_2_reg_1660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_0))) then 
                phi_ln174_2_reg_1660 <= add_ln174_1_fu_2460_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                phi_ln174_2_reg_1660 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln174_3_reg_1794_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_3_fu_3002_p2 = ap_const_lv1_1) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53) and (phi_ln174_3_reg_1794 = ap_const_lv1_0))) then 
                phi_ln174_3_reg_1794 <= xor_ln174_1_reg_4612;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
                phi_ln174_3_reg_1794 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_ln174_4_reg_1806_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln174_3_fu_3002_p2 = ap_const_lv1_0))) then 
                phi_ln174_4_reg_1806 <= add_ln174_2_reg_4622;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                phi_ln174_4_reg_1806 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln174_5_reg_1818_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_0))) then 
                phi_ln174_5_reg_1818 <= add_ln174_3_fu_2978_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                phi_ln174_5_reg_1818 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln174_reg_1636_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_1_fu_2484_p2 = ap_const_lv1_1) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20) and (phi_ln174_reg_1636 = ap_const_lv1_0))) then 
                phi_ln174_reg_1636 <= xor_ln174_reg_4282;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                phi_ln174_reg_1636 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_ln196_1_reg_1706_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (icmp_ln196_fu_2708_p2 = ap_const_lv1_0))) then 
                phi_ln196_1_reg_1706 <= add_ln196_fu_2689_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                phi_ln196_1_reg_1706 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln196_2_reg_1852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln177_1_fu_3012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                phi_ln196_2_reg_1852 <= ap_const_lv1_0;
            elsif (((icmp_ln196_1_fu_3226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69) and (phi_ln196_2_reg_1852 = ap_const_lv1_0))) then 
                phi_ln196_2_reg_1852 <= xor_ln196_1_reg_4814;
            end if; 
        end if;
    end process;

    phi_ln196_3_reg_1864_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln196_1_fu_3226_p2 = ap_const_lv1_0))) then 
                phi_ln196_3_reg_1864 <= add_ln196_1_fu_3207_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                phi_ln196_3_reg_1864 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln196_reg_1694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln177_fu_2494_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                phi_ln196_reg_1694 <= ap_const_lv1_0;
            elsif (((icmp_ln196_fu_2708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (phi_ln196_reg_1694 = ap_const_lv1_0))) then 
                phi_ln196_reg_1694 <= xor_ln196_reg_4484;
            end if; 
        end if;
    end process;

    reg_1996_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                reg_1996 <= partial_sums_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                reg_1996 <= partial_sums_q1;
            end if; 
        end if;
    end process;

    reg_2001_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                reg_2001 <= partial_sums_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                reg_2001 <= partial_sums_q0;
            end if; 
        end if;
    end process;

    reg_2006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                reg_2006 <= partial_sums_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                reg_2006 <= partial_sums_q1;
            end if; 
        end if;
    end process;

    reg_2011_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                reg_2011 <= partial_sums_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                reg_2011 <= partial_sums_q0;
            end if; 
        end if;
    end process;

    reg_2016_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                reg_2016 <= partial_sums_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                reg_2016 <= partial_sums_q1;
            end if; 
        end if;
    end process;

    reg_2021_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                reg_2021 <= partial_sums_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                reg_2021 <= partial_sums_q0;
            end if; 
        end if;
    end process;

    reg_2074_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                reg_2074 <= partial_sums_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                reg_2074 <= partial_sums_q1;
            end if; 
        end if;
    end process;

    reg_2083_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                reg_2083 <= partial_sums_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                reg_2083 <= partial_sums_q0;
            end if; 
        end if;
    end process;

    tmp_0_reg_1546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_838)) then
                if ((i1_0_reg_1436 = ap_const_lv2_0)) then 
                    tmp_0_reg_1546 <= inputs_0_0_V_dout;
                elsif ((i1_0_reg_1436 = ap_const_lv2_1)) then 
                    tmp_0_reg_1546 <= inputs_0_1_V_dout;
                elsif ((not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)))) then 
                    tmp_0_reg_1546 <= inputs_0_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_11366_reg_1560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_877)) then
                if ((i1_0_reg_1436 = ap_const_lv2_0)) then 
                    tmp_11366_reg_1560 <= inputs_1_0_V_dout;
                elsif ((i1_0_reg_1436 = ap_const_lv2_1)) then 
                    tmp_11366_reg_1560 <= inputs_1_1_V_dout;
                elsif ((not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)))) then 
                    tmp_11366_reg_1560 <= inputs_1_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_21367_reg_1574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_893)) then
                if ((i1_0_reg_1436 = ap_const_lv2_0)) then 
                    tmp_21367_reg_1574 <= inputs_2_0_V_dout;
                elsif ((i1_0_reg_1436 = ap_const_lv2_1)) then 
                    tmp_21367_reg_1574 <= inputs_2_1_V_dout;
                elsif ((not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)))) then 
                    tmp_21367_reg_1574 <= inputs_2_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_2_0_reg_1469_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_715)) then
                if ((i_0_reg_1424 = ap_const_lv2_0)) then 
                    tmp_2_0_reg_1469 <= inputs_0_0_V_dout;
                elsif ((i_0_reg_1424 = ap_const_lv2_1)) then 
                    tmp_2_0_reg_1469 <= inputs_0_1_V_dout;
                elsif ((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)))) then 
                    tmp_2_0_reg_1469 <= inputs_0_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_2_1_reg_1483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_761)) then
                if ((i_0_reg_1424 = ap_const_lv2_0)) then 
                    tmp_2_1_reg_1483 <= inputs_1_0_V_dout;
                elsif ((i_0_reg_1424 = ap_const_lv2_1)) then 
                    tmp_2_1_reg_1483 <= inputs_1_1_V_dout;
                elsif ((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)))) then 
                    tmp_2_1_reg_1483 <= inputs_1_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_2_2_reg_1497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_783)) then
                if ((i_0_reg_1424 = ap_const_lv2_0)) then 
                    tmp_2_2_reg_1497 <= inputs_2_0_V_dout;
                elsif ((i_0_reg_1424 = ap_const_lv2_1)) then 
                    tmp_2_2_reg_1497 <= inputs_2_1_V_dout;
                elsif ((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)))) then 
                    tmp_2_2_reg_1497 <= inputs_2_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_2_3_reg_1511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_805)) then
                if ((i_0_reg_1424 = ap_const_lv2_0)) then 
                    tmp_2_3_reg_1511 <= inputs_3_0_V_dout;
                elsif ((i_0_reg_1424 = ap_const_lv2_1)) then 
                    tmp_2_3_reg_1511 <= inputs_3_1_V_dout;
                elsif ((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)))) then 
                    tmp_2_3_reg_1511 <= inputs_3_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_31368_reg_1588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_909)) then
                if ((i1_0_reg_1436 = ap_const_lv2_0)) then 
                    tmp_31368_reg_1588 <= inputs_3_0_V_dout;
                elsif ((i1_0_reg_1436 = ap_const_lv2_1)) then 
                    tmp_31368_reg_1588 <= inputs_3_1_V_dout;
                elsif ((not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)))) then 
                    tmp_31368_reg_1588 <= inputs_3_2_V_dout;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                add_ln153_1_reg_4587 <= add_ln153_1_fu_2897_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln153_reg_4257 <= add_ln153_fu_2379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                add_ln174_2_reg_4622 <= add_ln174_2_fu_2963_p2;
                add_ln174_5_reg_4627 <= add_ln174_5_fu_2973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                add_ln174_4_reg_4297 <= add_ln174_4_fu_2455_p2;
                add_ln174_reg_4292 <= add_ln174_fu_2445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                add_ln177_1_reg_4651 <= add_ln177_1_fu_3018_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln177_reg_4321 <= add_ln177_fu_2500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                add_ln180_1_reg_4674 <= add_ln180_1_fu_3095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                add_ln180_reg_4344 <= add_ln180_fu_2577_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                add_ln190_10_reg_4469 <= grp_fu_3574_p3;
                add_ln190_11_reg_4474 <= grp_fu_3582_p3;
                add_ln190_12_reg_4479 <= grp_fu_3590_p3;
                add_ln190_3_reg_4434 <= grp_fu_3518_p3;
                add_ln190_4_reg_4439 <= grp_fu_3526_p3;
                add_ln190_5_reg_4444 <= grp_fu_3534_p3;
                add_ln190_6_reg_4449 <= grp_fu_3542_p3;
                add_ln190_7_reg_4454 <= grp_fu_3550_p3;
                add_ln190_8_reg_4459 <= grp_fu_3558_p3;
                add_ln190_9_reg_4464 <= grp_fu_3566_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                add_ln190_16_reg_4764 <= grp_fu_3616_p3;
                add_ln190_17_reg_4769 <= grp_fu_3624_p3;
                add_ln190_18_reg_4774 <= grp_fu_3632_p3;
                add_ln190_19_reg_4779 <= grp_fu_3640_p3;
                add_ln190_20_reg_4784 <= grp_fu_3648_p3;
                add_ln190_21_reg_4789 <= grp_fu_3656_p3;
                add_ln190_22_reg_4794 <= grp_fu_3664_p3;
                add_ln190_23_reg_4799 <= grp_fu_3672_p3;
                add_ln190_24_reg_4804 <= grp_fu_3680_p3;
                add_ln190_25_reg_4809 <= grp_fu_3688_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln180_fu_2571_p2 = ap_const_lv1_0))) then
                add_ln190_27_reg_4349 <= add_ln190_27_fu_2587_p2;
                add_ln190_28_reg_4354 <= add_ln190_28_fu_2597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) and (icmp_ln180_1_fu_3089_p2 = ap_const_lv1_0))) then
                add_ln190_30_reg_4679 <= add_ln190_30_fu_3105_p2;
                add_ln190_31_reg_4684 <= add_ln190_31_fu_3115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((phi_ln174_reg_1636 = ap_const_lv1_1) and (icmp_ln174_1_fu_2484_p2 = ap_const_lv1_1) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                add_ln190_32_reg_4313 <= add_ln190_32_fu_2490_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((phi_ln174_3_reg_1794 = ap_const_lv1_1) and (icmp_ln174_3_fu_3002_p2 = ap_const_lv1_1) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                add_ln190_33_reg_4643 <= add_ln190_33_fu_3008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                add_ln202_1_reg_4513 <= add_ln202_1_fu_2745_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                add_ln202_2_reg_4830 <= add_ln202_2_fu_3238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                add_ln202_3_reg_4526 <= add_ln202_3_fu_2780_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                add_ln202_4_reg_4843 <= add_ln202_4_fu_3273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                add_ln202_5_reg_4539 <= add_ln202_5_fu_2815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                add_ln202_6_reg_4856 <= add_ln202_6_fu_3308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                add_ln202_7_reg_4869 <= add_ln202_7_fu_3343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                add_ln202_reg_4500 <= add_ln202_fu_2720_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                add_ln209_1_reg_4882 <= add_ln209_1_fu_3378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                add_ln209_reg_4552 <= add_ln209_fu_2850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                add_ln216_1_reg_4900 <= add_ln216_1_fu_3402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                add_ln216_reg_4570 <= add_ln216_fu_2868_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                b_reg_3891 <= b_fu_2102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((phi_ln146_reg_1602 = ap_const_lv1_1) and (icmp_ln146_fu_2363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                compute_col_index_lo_reg_4247 <= compute_col_index;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_fu_3477_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                compute_odd <= xor_ln235_fu_3483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln104_fu_2128_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_1)) or ((icmp_ln85_fu_2112_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_0))))) then
                compute_odd_load_reg_3927 <= compute_odd;
                    current_row_indices_1_reg_3937(2) <= current_row_indices_1_fu_2156_p3(2);
                    current_row_indices_2_reg_3943(2) <= current_row_indices_2_fu_2164_p3(2);
                    current_row_indices_3_reg_3950(2) <= current_row_indices_3_fu_2172_p3(2);
                    current_row_indices_4_reg_3957(2) <= current_row_indices_4_fu_2180_p3(2);
                    current_row_indices_5_reg_3963(2) <= current_row_indices_5_fu_2188_p3(2);
                    current_row_indices_s_reg_3932(2) <= current_row_indices_s_fu_2148_p3(2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln153_1_fu_2891_p2 = ap_const_lv1_0))) then
                    current_row_indices_11_reg_4597(0) <= current_row_indices_11_fu_2937_p3(0);    current_row_indices_11_reg_4597(2) <= current_row_indices_11_fu_2937_p3(2);
                trunc_ln158_reg_4592 <= trunc_ln158_fu_2919_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3896 = ap_const_lv1_0))) then
                i_1_reg_3904 <= i_1_fu_2118_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((read_odd_load_reg_3896 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                i_reg_3917 <= i_fu_2134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln153_fu_2373_p2 = ap_const_lv1_0))) then
                icmp_ln155_reg_4262 <= icmp_ln155_fu_2395_p2;
                trunc_ln160_reg_4267 <= trunc_ln160_fu_2401_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln216_1_fu_3396_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                icmp_ln225_reg_4914 <= icmp_ln225_fu_3435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                icmp_ln232_reg_4918 <= icmp_ln232_fu_3477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                j_1_reg_3971 <= j_1_fu_2202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                j_reg_4104 <= j_fu_2270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln209_fu_2844_p2 = ap_const_lv1_0))) then
                maxes_addr_3_reg_4557 <= zext_ln211_fu_2856_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state78) and (icmp_ln209_1_fu_3372_p2 = ap_const_lv1_0))) then
                maxes_addr_4_reg_4887 <= zext_ln211_1_fu_3390_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln80_fu_2096_p2 = ap_const_lv1_0))) then
                read_odd_load_reg_3896 <= read_odd;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state24))) then
                reg_1988 <= partial_sums_q0;
                reg_1992 <= partial_sums_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state28))) then
                reg_2026 <= kernels_0_q0;
                reg_2030 <= stripes_0_q0;
                reg_2034 <= kernels_1_q0;
                reg_2038 <= kernels_2_q0;
                reg_2042 <= kernels_3_q0;
                reg_2046 <= kernels_4_q0;
                reg_2050 <= stripes_1_q0;
                reg_2054 <= kernels_5_q0;
                reg_2058 <= kernels_6_q0;
                reg_2062 <= kernels_7_q0;
                reg_2066 <= kernels_8_q0;
                reg_2070 <= stripes_2_q0;
                reg_2079 <= kernels_9_q0;
                reg_2088 <= kernels_10_q0;
                reg_2092 <= kernels_11_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                    select_ln174_1_reg_4617(1 downto 0) <= select_ln174_1_fu_2955_p3(1 downto 0);
                xor_ln174_1_reg_4612 <= xor_ln174_1_fu_2949_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                    select_ln174_reg_4287(1 downto 0) <= select_ln174_fu_2437_p3(1 downto 0);
                xor_ln174_reg_4282 <= xor_ln174_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0))) then
                stripes_0_addr_1_reg_3976 <= sext_ln95_fu_2208_p1(13 - 1 downto 0);
                stripes_0_addr_3_reg_3981 <= sext_ln95_1_fu_2225_p1(13 - 1 downto 0);
                stripes_0_addr_5_reg_3986 <= sext_ln95_2_fu_2238_p1(13 - 1 downto 0);
                stripes_0_addr_7_reg_3991 <= sext_ln95_3_fu_2251_p1(13 - 1 downto 0);
                stripes_1_addr_1_reg_3996 <= sext_ln95_fu_2208_p1(13 - 1 downto 0);
                stripes_1_addr_3_reg_4001 <= sext_ln95_1_fu_2225_p1(13 - 1 downto 0);
                stripes_1_addr_5_reg_4006 <= sext_ln95_2_fu_2238_p1(13 - 1 downto 0);
                stripes_1_addr_7_reg_4011 <= sext_ln95_3_fu_2251_p1(13 - 1 downto 0);
                stripes_2_addr_1_reg_4016 <= sext_ln95_fu_2208_p1(13 - 1 downto 0);
                stripes_2_addr_3_reg_4021 <= sext_ln95_1_fu_2225_p1(13 - 1 downto 0);
                stripes_2_addr_5_reg_4026 <= sext_ln95_2_fu_2238_p1(13 - 1 downto 0);
                stripes_2_addr_7_reg_4031 <= sext_ln95_3_fu_2251_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0))) then
                stripes_0_addr_2_reg_4114 <= sext_ln114_1_fu_2299_p1(13 - 1 downto 0);
                stripes_0_addr_4_reg_4119 <= sext_ln114_2_fu_2312_p1(13 - 1 downto 0);
                stripes_0_addr_6_reg_4124 <= sext_ln114_3_fu_2325_p1(13 - 1 downto 0);
                stripes_0_addr_reg_4109 <= sext_ln114_fu_2286_p1(13 - 1 downto 0);
                stripes_1_addr_2_reg_4134 <= sext_ln114_1_fu_2299_p1(13 - 1 downto 0);
                stripes_1_addr_4_reg_4139 <= sext_ln114_2_fu_2312_p1(13 - 1 downto 0);
                stripes_1_addr_6_reg_4144 <= sext_ln114_3_fu_2325_p1(13 - 1 downto 0);
                stripes_1_addr_reg_4129 <= sext_ln114_fu_2286_p1(13 - 1 downto 0);
                stripes_2_addr_2_reg_4154 <= sext_ln114_1_fu_2299_p1(13 - 1 downto 0);
                stripes_2_addr_4_reg_4159 <= sext_ln114_2_fu_2312_p1(13 - 1 downto 0);
                stripes_2_addr_6_reg_4164 <= sext_ln114_3_fu_2325_p1(13 - 1 downto 0);
                stripes_2_addr_reg_4149 <= sext_ln114_fu_2286_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                sub_ln190_1_reg_4661 <= sub_ln190_1_fu_3045_p2;
                    zext_ln190_17_reg_4666(12 downto 1) <= zext_ln190_17_fu_3081_p1(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                sub_ln190_reg_4331 <= sub_ln190_fu_2527_p2;
                    zext_ln190_5_reg_4336(12 downto 1) <= zext_ln190_5_fu_2563_p1(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                trunc_ln172_1_reg_4607 <= trunc_ln172_1_fu_2946_p1;
                    zext_ln172_1_reg_4602(0) <= zext_ln172_1_fu_2943_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                trunc_ln172_reg_4277 <= trunc_ln172_fu_2428_p1;
                    zext_ln172_reg_4272(0) <= zext_ln172_fu_2425_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state80) and (icmp_ln216_1_fu_3396_p2 = ap_const_lv1_0))) then
                trunc_ln182_4_reg_4910 <= trunc_ln182_4_fu_3419_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln216_fu_2862_p2 = ap_const_lv1_0))) then
                trunc_ln182_reg_4580 <= trunc_ln182_fu_2879_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                xor_ln146_reg_4234 <= xor_ln146_fu_2338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                xor_ln196_1_reg_4814 <= xor_ln196_1_fu_3201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                xor_ln196_reg_4484 <= xor_ln196_fu_2683_p2;
            end if;
        end if;
    end process;
    current_row_indices_s_reg_3932(1 downto 0) <= "00";
    current_row_indices_1_reg_3937(1 downto 0) <= "01";
    current_row_indices_2_reg_3943(1 downto 0) <= "10";
    current_row_indices_3_reg_3950(1 downto 0) <= "11";
    current_row_indices_4_reg_3957(1 downto 0) <= "00";
    current_row_indices_5_reg_3963(1 downto 0) <= "01";
    zext_ln172_reg_4272(13 downto 1) <= "0000000000000";
    select_ln174_reg_4287(2) <= '0';
    zext_ln190_5_reg_4336(0) <= '0';
    zext_ln190_5_reg_4336(13) <= '0';
    current_row_indices_11_reg_4597(1) <= '0';
    zext_ln172_1_reg_4602(13 downto 1) <= "0000000000000";
    select_ln174_1_reg_4617(2) <= '0';
    zext_ln190_17_reg_4666(0) <= '0';
    zext_ln190_17_reg_4666(13) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, ap_CS_fsm_state9, icmp_ln108_fu_2264_p2, i1_0_reg_1436, ap_CS_fsm_state4, icmp_ln89_fu_2196_p2, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state48, trunc_ln182_reg_4580, ap_CS_fsm_state81, trunc_ln182_4_reg_4910, ap_CS_fsm_state2, read_odd_load_reg_3896, icmp_ln80_fu_2096_p2, ap_CS_fsm_state3, icmp_ln85_fu_2112_p2, icmp_ln104_fu_2128_p2, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state15, icmp_ln146_fu_2363_p2, phi_ln146_reg_1602, ap_CS_fsm_state16, icmp_ln153_fu_2373_p2, ap_CS_fsm_state20, icmp_ln174_fu_2478_p2, icmp_ln174_1_fu_2484_p2, phi_ln174_reg_1636, ap_CS_fsm_state21, icmp_ln177_fu_2494_p2, ap_CS_fsm_state23, icmp_ln180_fu_2571_p2, ap_CS_fsm_state36, ap_CS_fsm_state37, icmp_ln202_fu_2714_p2, ap_CS_fsm_state39, icmp_ln202_1_fu_2739_p2, ap_CS_fsm_state41, icmp_ln202_3_fu_2774_p2, ap_CS_fsm_state43, icmp_ln202_5_fu_2809_p2, ap_CS_fsm_state45, icmp_ln209_fu_2844_p2, ap_CS_fsm_state47, icmp_ln216_fu_2862_p2, ap_CS_fsm_state49, icmp_ln153_1_fu_2891_p2, ap_CS_fsm_state53, icmp_ln174_2_fu_2996_p2, icmp_ln174_3_fu_3002_p2, phi_ln174_3_reg_1794, ap_CS_fsm_state54, icmp_ln177_1_fu_3012_p2, ap_CS_fsm_state56, icmp_ln180_1_fu_3089_p2, ap_CS_fsm_state69, ap_CS_fsm_state70, icmp_ln202_2_fu_3232_p2, ap_CS_fsm_state72, icmp_ln202_4_fu_3267_p2, ap_CS_fsm_state74, icmp_ln202_6_fu_3302_p2, ap_CS_fsm_state76, icmp_ln202_7_fu_3337_p2, ap_CS_fsm_state78, icmp_ln209_1_fu_3372_p2, ap_CS_fsm_state80, icmp_ln216_1_fu_3396_p2, phi_ln196_reg_1694, icmp_ln196_fu_2708_p2, phi_ln196_2_reg_1852, icmp_ln196_1_fu_3226_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln80_fu_2096_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln104_fu_2128_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_1)) or ((icmp_ln85_fu_2112_p2 = ap_const_lv1_1) and (read_odd_load_reg_3896 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((read_odd_load_reg_3896 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln104_fu_2128_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state9 => 
                if ((not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((phi_ln146_reg_1602 = ap_const_lv1_1) and (icmp_ln146_fu_2363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((icmp_ln146_fu_2363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (phi_ln146_reg_1602 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln153_fu_2373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((phi_ln174_reg_1636 = ap_const_lv1_1) and (icmp_ln174_1_fu_2484_p2 = ap_const_lv1_1) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((icmp_ln174_1_fu_2484_p2 = ap_const_lv1_1) and (icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20) and (phi_ln174_reg_1636 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((icmp_ln174_fu_2478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln174_1_fu_2484_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln177_fu_2494_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln180_fu_2571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln196_fu_2708_p2 = ap_const_lv1_1) and (phi_ln196_reg_1694 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                elsif (((icmp_ln196_fu_2708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (phi_ln196_reg_1694 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln202_fu_2714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state39 => 
                if (((icmp_ln202_1_fu_2739_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state41 => 
                if (((icmp_ln202_3_fu_2774_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state43 => 
                if (((icmp_ln202_5_fu_2809_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state45 => 
                if (((icmp_ln209_fu_2844_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln216_fu_2862_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((icmp_ln153_1_fu_2891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((phi_ln174_3_reg_1794 = ap_const_lv1_1) and (icmp_ln174_3_fu_3002_p2 = ap_const_lv1_1) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                elsif (((icmp_ln174_3_fu_3002_p2 = ap_const_lv1_1) and (icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53) and (phi_ln174_3_reg_1794 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                elsif (((icmp_ln174_2_fu_2996_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln174_3_fu_3002_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln177_1_fu_3012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((icmp_ln180_1_fu_3089_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((icmp_ln196_1_fu_3226_p2 = ap_const_lv1_1) and (phi_ln196_2_reg_1852 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                elsif (((icmp_ln196_1_fu_3226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69) and (phi_ln196_2_reg_1852 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                if (((icmp_ln202_2_fu_3232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state72 => 
                if (((icmp_ln202_4_fu_3267_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state74 => 
                if (((icmp_ln202_6_fu_3302_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state76 => 
                if (((icmp_ln202_7_fu_3337_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state78 => 
                if (((icmp_ln209_1_fu_3372_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state80 => 
                if (((icmp_ln216_1_fu_3396_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state81 => 
                if ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state81))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln114_1_fu_2293_p2 <= std_logic_vector(unsigned(ap_const_lv14_A0A) + unsigned(trunc_ln114_fu_2276_p1));
    add_ln114_2_fu_2306_p2 <= std_logic_vector(unsigned(ap_const_lv14_C0C) + unsigned(trunc_ln114_fu_2276_p1));
    add_ln114_3_fu_2319_p2 <= std_logic_vector(unsigned(ap_const_lv14_E0E) + unsigned(trunc_ln114_fu_2276_p1));
    add_ln114_fu_2280_p2 <= std_logic_vector(unsigned(ap_const_lv14_808) + unsigned(trunc_ln114_fu_2276_p1));
    add_ln146_fu_2344_p2 <= std_logic_vector(unsigned(phi_ln146_1_reg_1614) + unsigned(ap_const_lv2_1));
    add_ln153_1_fu_2897_p2 <= std_logic_vector(unsigned(i6_0_1_reg_1783) + unsigned(ap_const_lv3_1));
    add_ln153_fu_2379_p2 <= std_logic_vector(unsigned(i6_0_0_reg_1625) + unsigned(ap_const_lv3_1));
    add_ln174_1_fu_2460_p2 <= std_logic_vector(unsigned(phi_ln174_2_reg_1660) + unsigned(ap_const_lv2_1));
    add_ln174_2_fu_2963_p2 <= std_logic_vector(unsigned(phi_ln174_4_reg_1806) + unsigned(ap_const_lv2_1));
    add_ln174_3_fu_2978_p2 <= std_logic_vector(unsigned(phi_ln174_5_reg_1818) + unsigned(ap_const_lv2_1));
    add_ln174_4_fu_2455_p2 <= std_logic_vector(unsigned(zext_ln174_fu_2451_p1) + unsigned(select_ln174_reg_4287));
    add_ln174_5_fu_2973_p2 <= std_logic_vector(unsigned(zext_ln174_2_fu_2969_p1) + unsigned(select_ln174_1_reg_4617));
    add_ln174_fu_2445_p2 <= std_logic_vector(unsigned(phi_ln174_1_reg_1648) + unsigned(ap_const_lv2_1));
    add_ln177_1_fu_3018_p2 <= std_logic_vector(unsigned(l_0_1_reg_1829) + unsigned(ap_const_lv2_1));
    add_ln177_fu_2500_p2 <= std_logic_vector(unsigned(l_0_0_reg_1671) + unsigned(ap_const_lv2_1));
    add_ln180_1_fu_3095_p2 <= std_logic_vector(unsigned(m_0_1_reg_1841) + unsigned(ap_const_lv2_1));
    add_ln180_fu_2577_p2 <= std_logic_vector(unsigned(m_0_0_reg_1683) + unsigned(ap_const_lv2_1));
    add_ln190_13_fu_3110_p2 <= std_logic_vector(unsigned(zext_ln190_18_fu_3085_p1) + unsigned(add_ln190_33_reg_4643));
    add_ln190_26_fu_2557_p2 <= std_logic_vector(unsigned(zext_ln190_4_fu_2553_p1) + unsigned(zext_ln190_3_fu_2541_p1));
    add_ln190_27_fu_2587_p2 <= std_logic_vector(unsigned(sub_ln190_reg_4331) + unsigned(zext_ln190_8_fu_2583_p1));
    add_ln190_28_fu_2597_p2 <= std_logic_vector(unsigned(zext_ln190_5_reg_4336) + unsigned(add_ln190_fu_2592_p2));
    add_ln190_29_fu_3075_p2 <= std_logic_vector(unsigned(zext_ln190_16_fu_3071_p1) + unsigned(zext_ln190_15_fu_3059_p1));
    add_ln190_30_fu_3105_p2 <= std_logic_vector(unsigned(sub_ln190_1_reg_4661) + unsigned(zext_ln190_19_fu_3101_p1));
    add_ln190_31_fu_3115_p2 <= std_logic_vector(unsigned(zext_ln190_17_reg_4666) + unsigned(add_ln190_13_fu_3110_p2));
    add_ln190_32_fu_2490_p2 <= std_logic_vector(unsigned(zext_ln172_reg_4272) + unsigned(trunc_ln172_reg_4277));
    add_ln190_33_fu_3008_p2 <= std_logic_vector(unsigned(zext_ln172_1_reg_4602) + unsigned(trunc_ln172_1_reg_4607));
    add_ln190_fu_2592_p2 <= std_logic_vector(unsigned(zext_ln190_6_fu_2567_p1) + unsigned(add_ln190_32_reg_4313));
    add_ln196_1_fu_3207_p2 <= std_logic_vector(unsigned(phi_ln196_3_reg_1864) + unsigned(ap_const_lv2_1));
    add_ln196_fu_2689_p2 <= std_logic_vector(unsigned(phi_ln196_1_reg_1706) + unsigned(ap_const_lv2_1));
    add_ln202_1_fu_2745_p2 <= std_logic_vector(unsigned(j10_0_0_1_reg_1728) + unsigned(ap_const_lv2_1));
    add_ln202_2_fu_3238_p2 <= std_logic_vector(unsigned(j10_0_1_0_reg_1875) + unsigned(ap_const_lv2_1));
    add_ln202_3_fu_2780_p2 <= std_logic_vector(unsigned(j10_0_0_2_reg_1739) + unsigned(ap_const_lv2_1));
    add_ln202_4_fu_3273_p2 <= std_logic_vector(unsigned(j10_0_1_1_reg_1886) + unsigned(ap_const_lv2_1));
    add_ln202_5_fu_2815_p2 <= std_logic_vector(unsigned(j10_0_0_3_reg_1750) + unsigned(ap_const_lv2_1));
    add_ln202_6_fu_3308_p2 <= std_logic_vector(unsigned(j10_0_1_2_reg_1897) + unsigned(ap_const_lv2_1));
    add_ln202_7_fu_3343_p2 <= std_logic_vector(unsigned(j10_0_1_3_reg_1908) + unsigned(ap_const_lv2_1));
    add_ln202_fu_2720_p2 <= std_logic_vector(unsigned(j10_0_0_0_reg_1717) + unsigned(ap_const_lv2_1));
    add_ln204_10_fu_3326_p2 <= std_logic_vector(unsigned(zext_ln204_5_fu_3322_p1) + unsigned(ap_const_lv5_E));
    add_ln204_11_fu_3361_p2 <= std_logic_vector(unsigned(zext_ln204_7_fu_3357_p1) + unsigned(ap_const_lv5_F));
    add_ln204_8_fu_3256_p2 <= std_logic_vector(unsigned(zext_ln204_1_fu_3252_p1) + unsigned(ap_const_lv5_C));
    add_ln204_9_fu_3291_p2 <= std_logic_vector(unsigned(zext_ln204_3_fu_3287_p1) + unsigned(ap_const_lv5_D));
    add_ln209_1_fu_3378_p2 <= std_logic_vector(unsigned(j11_0_1_reg_1919) + unsigned(ap_const_lv3_1));
    add_ln209_fu_2850_p2 <= std_logic_vector(unsigned(j11_0_0_reg_1761) + unsigned(ap_const_lv3_1));
    add_ln216_1_fu_3402_p2 <= std_logic_vector(unsigned(i12_0_1_reg_1930) + unsigned(ap_const_lv3_1));
    add_ln216_fu_2868_p2 <= std_logic_vector(unsigned(i12_0_0_reg_1772) + unsigned(ap_const_lv3_1));
    add_ln224_fu_3423_p2 <= std_logic_vector(unsigned(read_col_index) + unsigned(ap_const_lv16_2));
    add_ln231_fu_3466_p2 <= std_logic_vector(unsigned(compute_col_index_lo_reg_4247) + unsigned(ap_const_lv16_2));
    add_ln95_1_fu_2232_p2 <= std_logic_vector(unsigned(ap_const_lv14_404) + unsigned(trunc_ln95_fu_2215_p1));
    add_ln95_2_fu_2245_p2 <= std_logic_vector(unsigned(ap_const_lv14_606) + unsigned(trunc_ln95_fu_2215_p1));
    add_ln95_fu_2219_p2 <= std_logic_vector(unsigned(ap_const_lv14_202) + unsigned(trunc_ln95_fu_2215_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state10_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i1_0_reg_1436, ap_predicate_op338_read_state10)
    begin
                ap_block_state10 <= (((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state11_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i1_0_reg_1436, ap_predicate_op353_read_state11)
    begin
                ap_block_state11 <= (((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state12_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, ap_predicate_op368_read_state12)
    begin
                ap_block_state12 <= (((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state4_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4)
    begin
                ap_block_state4 <= (((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state48_assign_proc : process(outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, trunc_ln182_reg_4580)
    begin
                ap_block_state48 <= (((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state5_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i_0_reg_1424, ap_predicate_op246_read_state5)
    begin
                ap_block_state5 <= (((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state6_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i_0_reg_1424, ap_predicate_op261_read_state6)
    begin
                ap_block_state6 <= (((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state7_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i_0_reg_1424, ap_predicate_op276_read_state7)
    begin
                ap_block_state7 <= (((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state81_assign_proc : process(outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, trunc_ln182_4_reg_4910)
    begin
                ap_block_state81 <= (((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state9_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9)
    begin
                ap_block_state9 <= (((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_715_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_CS_fsm_state4, icmp_ln89_fu_2196_p2, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4)
    begin
                ap_condition_715 <= (not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0));
    end process;


    ap_condition_761_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i_0_reg_1424, ap_CS_fsm_state5, ap_predicate_op246_read_state5)
    begin
                ap_condition_761 <= (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5));
    end process;


    ap_condition_783_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i_0_reg_1424, ap_CS_fsm_state6, ap_predicate_op261_read_state6)
    begin
                ap_condition_783 <= (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6));
    end process;


    ap_condition_805_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i_0_reg_1424, ap_CS_fsm_state7, ap_predicate_op276_read_state7)
    begin
                ap_condition_805 <= (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7));
    end process;


    ap_condition_838_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_CS_fsm_state9, icmp_ln108_fu_2264_p2, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9)
    begin
                ap_condition_838 <= (not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0));
    end process;


    ap_condition_877_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i1_0_reg_1436, ap_CS_fsm_state10, ap_predicate_op338_read_state10)
    begin
                ap_condition_877 <= (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10));
    end process;


    ap_condition_893_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i1_0_reg_1436, ap_CS_fsm_state11, ap_predicate_op353_read_state11)
    begin
                ap_condition_893 <= (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11));
    end process;


    ap_condition_909_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, ap_CS_fsm_state12, ap_predicate_op368_read_state12)
    begin
                ap_condition_909 <= (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln80_fu_2096_p2)
    begin
        if (((icmp_ln80_fu_2096_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op225_read_state4_assign_proc : process(icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
                ap_predicate_op225_read_state4 <= ((i_0_reg_1424 = ap_const_lv2_1) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op227_read_state4_assign_proc : process(icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
                ap_predicate_op227_read_state4 <= ((i_0_reg_1424 = ap_const_lv2_0) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op229_read_state4_assign_proc : process(icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
                ap_predicate_op229_read_state4 <= (not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op246_read_state5_assign_proc : process(i_0_reg_1424)
    begin
                ap_predicate_op246_read_state5 <= (not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)));
    end process;


    ap_predicate_op261_read_state6_assign_proc : process(i_0_reg_1424)
    begin
                ap_predicate_op261_read_state6 <= (not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)));
    end process;


    ap_predicate_op276_read_state7_assign_proc : process(i_0_reg_1424)
    begin
                ap_predicate_op276_read_state7 <= (not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)));
    end process;


    ap_predicate_op317_read_state9_assign_proc : process(icmp_ln108_fu_2264_p2, i1_0_reg_1436)
    begin
                ap_predicate_op317_read_state9 <= ((i1_0_reg_1436 = ap_const_lv2_1) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op319_read_state9_assign_proc : process(icmp_ln108_fu_2264_p2, i1_0_reg_1436)
    begin
                ap_predicate_op319_read_state9 <= ((i1_0_reg_1436 = ap_const_lv2_0) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op321_read_state9_assign_proc : process(icmp_ln108_fu_2264_p2, i1_0_reg_1436)
    begin
                ap_predicate_op321_read_state9 <= (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op338_read_state10_assign_proc : process(i1_0_reg_1436)
    begin
                ap_predicate_op338_read_state10 <= (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)));
    end process;


    ap_predicate_op353_read_state11_assign_proc : process(i1_0_reg_1436)
    begin
                ap_predicate_op353_read_state11 <= (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)));
    end process;


    ap_predicate_op368_read_state12_assign_proc : process(i1_0_reg_1436)
    begin
                ap_predicate_op368_read_state12 <= (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)));
    end process;

    ap_ready <= internal_ap_ready;
    b_fu_2102_p2 <= std_logic_vector(unsigned(b_0_reg_1413) + unsigned(ap_const_lv3_1));
    current_row_indices_11_fu_2937_p3 <= 
        current_row_indices_5_reg_3963 when (icmp_ln155_1_fu_2913_p2(0) = '1') else 
        current_row_indices_4_reg_3957;
    current_row_indices_1_fu_2156_p3 <= 
        ap_const_lv3_1 when (compute_odd(0) = '1') else 
        ap_const_lv3_5;
    current_row_indices_2_fu_2164_p3 <= 
        ap_const_lv3_2 when (compute_odd(0) = '1') else 
        ap_const_lv3_6;
    current_row_indices_3_fu_2172_p3 <= 
        ap_const_lv3_3 when (compute_odd(0) = '1') else 
        ap_const_lv3_7;
    current_row_indices_4_fu_2180_p3 <= 
        ap_const_lv3_4 when (compute_odd(0) = '1') else 
        ap_const_lv3_0;
    current_row_indices_5_fu_2188_p3 <= 
        ap_const_lv3_5 when (compute_odd(0) = '1') else 
        ap_const_lv3_1;
    current_row_indices_6_fu_2405_p3 <= 
        current_row_indices_1_reg_3937 when (icmp_ln155_fu_2395_p2(0) = '1') else 
        current_row_indices_s_reg_3932;
    current_row_indices_8_fu_2419_p3 <= 
        current_row_indices_3_reg_3950 when (icmp_ln155_reg_4262(0) = '1') else 
        current_row_indices_2_reg_3943;
    current_row_indices_9_fu_2923_p3 <= 
        current_row_indices_3_reg_3950 when (icmp_ln155_1_fu_2913_p2(0) = '1') else 
        current_row_indices_2_reg_3943;
    current_row_indices_s_fu_2148_p3 <= 
        ap_const_lv3_0 when (compute_odd(0) = '1') else 
        ap_const_lv3_4;
    grp_fu_1945_p2 <= std_logic_vector(unsigned(kernel_sums_q0) + unsigned(partial_sums_q1));
    grp_fu_1952_p2 <= std_logic_vector(unsigned(kernel_sums_q0) + unsigned(partial_sums_q0));
    grp_fu_1959_p2 <= "1" when (signed(kernel_sums_q0) > signed(maxes_q0)) else "0";
    grp_fu_1965_p3 <= 
        kernel_sums_q0 when (grp_fu_1959_p2(0) = '1') else 
        maxes_q0;
    grp_fu_1974_p2 <= std_logic_vector(unsigned(partial_sums_q0) + unsigned(kernel_sums_q0));
    grp_fu_1981_p2 <= std_logic_vector(unsigned(partial_sums_q1) + unsigned(kernel_sums_q0));
    grp_fu_3500_p0 <= zext_ln190_10_fu_2627_p1(8 - 1 downto 0);
    grp_fu_3509_p0 <= zext_ln190_10_fu_2627_p1(8 - 1 downto 0);
    grp_fu_3518_p0 <= zext_ln190_10_fu_2627_p1(8 - 1 downto 0);
    grp_fu_3526_p0 <= zext_ln190_10_fu_2627_p1(8 - 1 downto 0);
    grp_fu_3534_p0 <= zext_ln190_11_fu_2647_p1(8 - 1 downto 0);
    grp_fu_3542_p0 <= zext_ln190_11_fu_2647_p1(8 - 1 downto 0);
    grp_fu_3550_p0 <= zext_ln190_11_fu_2647_p1(8 - 1 downto 0);
    grp_fu_3558_p0 <= zext_ln190_11_fu_2647_p1(8 - 1 downto 0);
    grp_fu_3566_p0 <= zext_ln190_12_fu_2667_p1(8 - 1 downto 0);
    grp_fu_3574_p0 <= zext_ln190_12_fu_2667_p1(8 - 1 downto 0);
    grp_fu_3582_p0 <= zext_ln190_12_fu_2667_p1(8 - 1 downto 0);
    grp_fu_3590_p0 <= zext_ln190_12_fu_2667_p1(8 - 1 downto 0);
    grp_fu_3598_p0 <= zext_ln190_21_fu_3145_p1(8 - 1 downto 0);
    grp_fu_3607_p0 <= zext_ln190_21_fu_3145_p1(8 - 1 downto 0);
    grp_fu_3616_p0 <= zext_ln190_21_fu_3145_p1(8 - 1 downto 0);
    grp_fu_3624_p0 <= zext_ln190_21_fu_3145_p1(8 - 1 downto 0);
    grp_fu_3632_p0 <= zext_ln190_22_fu_3165_p1(8 - 1 downto 0);
    grp_fu_3640_p0 <= zext_ln190_22_fu_3165_p1(8 - 1 downto 0);
    grp_fu_3648_p0 <= zext_ln190_22_fu_3165_p1(8 - 1 downto 0);
    grp_fu_3656_p0 <= zext_ln190_22_fu_3165_p1(8 - 1 downto 0);
    grp_fu_3664_p0 <= zext_ln190_23_fu_3185_p1(8 - 1 downto 0);
    grp_fu_3672_p0 <= zext_ln190_23_fu_3185_p1(8 - 1 downto 0);
    grp_fu_3680_p0 <= zext_ln190_23_fu_3185_p1(8 - 1 downto 0);
    grp_fu_3688_p0 <= zext_ln190_23_fu_3185_p1(8 - 1 downto 0);
    i_1_fu_2118_p2 <= std_logic_vector(unsigned(i_0_reg_1424) + unsigned(ap_const_lv2_1));
    i_fu_2134_p2 <= std_logic_vector(unsigned(i1_0_reg_1436) + unsigned(ap_const_lv2_1));
    icmp_ln104_fu_2128_p2 <= "1" when (i1_0_reg_1436 = ap_const_lv2_3) else "0";
    icmp_ln108_fu_2264_p2 <= "1" when (j3_0_reg_1525 = ap_const_lv2_2) else "0";
    icmp_ln146_fu_2363_p2 <= "1" when (phi_ln146_1_reg_1614 = ap_const_lv2_3) else "0";
    icmp_ln153_1_fu_2891_p2 <= "1" when (i6_0_1_reg_1783 = ap_const_lv3_4) else "0";
    icmp_ln153_fu_2373_p2 <= "1" when (i6_0_0_reg_1625 = ap_const_lv3_4) else "0";
    icmp_ln155_1_fu_2913_p2 <= "0" when (tmp_54_fu_2903_p4 = ap_const_lv2_0) else "1";
    icmp_ln155_fu_2395_p2 <= "0" when (tmp_45_fu_2385_p4 = ap_const_lv2_0) else "1";
    icmp_ln174_1_fu_2484_p2 <= "1" when (phi_ln174_1_reg_1648 = ap_const_lv2_2) else "0";
    icmp_ln174_2_fu_2996_p2 <= "1" when (phi_ln174_5_reg_1818 = ap_const_lv2_3) else "0";
    icmp_ln174_3_fu_3002_p2 <= "1" when (phi_ln174_4_reg_1806 = ap_const_lv2_2) else "0";
    icmp_ln174_fu_2478_p2 <= "1" when (phi_ln174_2_reg_1660 = ap_const_lv2_3) else "0";
    icmp_ln177_1_fu_3012_p2 <= "1" when (l_0_1_reg_1829 = ap_const_lv2_3) else "0";
    icmp_ln177_fu_2494_p2 <= "1" when (l_0_0_reg_1671 = ap_const_lv2_3) else "0";
    icmp_ln180_1_fu_3089_p2 <= "1" when (m_0_1_reg_1841 = ap_const_lv2_3) else "0";
    icmp_ln180_fu_2571_p2 <= "1" when (m_0_0_reg_1683 = ap_const_lv2_3) else "0";
    icmp_ln196_1_fu_3226_p2 <= "1" when (phi_ln196_3_reg_1864 = ap_const_lv2_3) else "0";
    icmp_ln196_fu_2708_p2 <= "1" when (phi_ln196_1_reg_1706 = ap_const_lv2_3) else "0";
    icmp_ln202_1_fu_2739_p2 <= "1" when (j10_0_0_1_reg_1728 = ap_const_lv2_3) else "0";
    icmp_ln202_2_fu_3232_p2 <= "1" when (j10_0_1_0_reg_1875 = ap_const_lv2_3) else "0";
    icmp_ln202_3_fu_2774_p2 <= "1" when (j10_0_0_2_reg_1739 = ap_const_lv2_3) else "0";
    icmp_ln202_4_fu_3267_p2 <= "1" when (j10_0_1_1_reg_1886 = ap_const_lv2_3) else "0";
    icmp_ln202_5_fu_2809_p2 <= "1" when (j10_0_0_3_reg_1750 = ap_const_lv2_3) else "0";
    icmp_ln202_6_fu_3302_p2 <= "1" when (j10_0_1_2_reg_1897 = ap_const_lv2_3) else "0";
    icmp_ln202_7_fu_3337_p2 <= "1" when (j10_0_1_3_reg_1908 = ap_const_lv2_3) else "0";
    icmp_ln202_fu_2714_p2 <= "1" when (j10_0_0_0_reg_1717 = ap_const_lv2_3) else "0";
    icmp_ln209_1_fu_3372_p2 <= "1" when (j11_0_1_reg_1919 = ap_const_lv3_4) else "0";
    icmp_ln209_fu_2844_p2 <= "1" when (j11_0_0_reg_1761 = ap_const_lv3_4) else "0";
    icmp_ln216_1_fu_3396_p2 <= "1" when (i12_0_1_reg_1930 = ap_const_lv3_4) else "0";
    icmp_ln216_fu_2862_p2 <= "1" when (i12_0_0_reg_1772 = ap_const_lv3_4) else "0";
    icmp_ln225_fu_3435_p2 <= "1" when (add_ln224_fu_3423_p2 = ap_const_lv16_201) else "0";
    icmp_ln232_fu_3477_p2 <= "1" when (add_ln231_fu_3466_p2 = ap_const_lv16_200) else "0";
    icmp_ln80_fu_2096_p2 <= "1" when (b_0_reg_1413 = ap_const_lv3_4) else "0";
    icmp_ln85_fu_2112_p2 <= "1" when (i_0_reg_1424 = ap_const_lv2_3) else "0";
    icmp_ln89_fu_2196_p2 <= "1" when (j_0_reg_1448 = ap_const_lv2_2) else "0";

    inputs_0_0_V_blk_n_assign_proc : process(inputs_0_0_V_empty_n, ap_CS_fsm_state9, icmp_ln108_fu_2264_p2, i1_0_reg_1436, ap_CS_fsm_state4, icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0)))) then 
            inputs_0_0_V_blk_n <= inputs_0_0_V_empty_n;
        else 
            inputs_0_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_0_0_V_read_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9)
    begin
        if (((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op227_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op319_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            inputs_0_0_V_read <= ap_const_logic_1;
        else 
            inputs_0_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_0_1_V_blk_n_assign_proc : process(inputs_0_1_V_empty_n, ap_CS_fsm_state9, icmp_ln108_fu_2264_p2, i1_0_reg_1436, ap_CS_fsm_state4, icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0)))) then 
            inputs_0_1_V_blk_n <= inputs_0_1_V_empty_n;
        else 
            inputs_0_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_0_1_V_read_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9)
    begin
        if (((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op225_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op317_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            inputs_0_1_V_read <= ap_const_logic_1;
        else 
            inputs_0_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_0_2_V_blk_n_assign_proc : process(inputs_0_2_V_empty_n, ap_CS_fsm_state9, icmp_ln108_fu_2264_p2, i1_0_reg_1436, ap_CS_fsm_state4, icmp_ln89_fu_2196_p2, i_0_reg_1424)
    begin
        if (((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln89_fu_2196_p2 = ap_const_lv1_0)) or (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln108_fu_2264_p2 = ap_const_lv1_0)))) then 
            inputs_0_2_V_blk_n <= inputs_0_2_V_empty_n;
        else 
            inputs_0_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_0_2_V_read_assign_proc : process(inputs_0_0_V_empty_n, inputs_0_1_V_empty_n, inputs_0_2_V_empty_n, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_predicate_op225_read_state4, ap_predicate_op227_read_state4, ap_predicate_op229_read_state4, ap_predicate_op317_read_state9, ap_predicate_op319_read_state9, ap_predicate_op321_read_state9)
    begin
        if (((not((((ap_predicate_op229_read_state4 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op227_read_state4 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op225_read_state4 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op229_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op321_read_state9 = ap_const_boolean_1) and (inputs_0_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op319_read_state9 = ap_const_boolean_1) and (inputs_0_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op317_read_state9 = ap_const_boolean_1) and (inputs_0_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op321_read_state9 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            inputs_0_2_V_read <= ap_const_logic_1;
        else 
            inputs_0_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_1_0_V_blk_n_assign_proc : process(inputs_1_0_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_0_V_blk_n <= inputs_1_0_V_empty_n;
        else 
            inputs_1_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_1_0_V_read_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_predicate_op246_read_state5, ap_predicate_op338_read_state10)
    begin
        if (((not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_0_V_read <= ap_const_logic_1;
        else 
            inputs_1_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_1_1_V_blk_n_assign_proc : process(inputs_1_1_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_1_V_blk_n <= inputs_1_1_V_empty_n;
        else 
            inputs_1_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_1_1_V_read_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_predicate_op246_read_state5, ap_predicate_op338_read_state10)
    begin
        if (((not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_1_V_read <= ap_const_logic_1;
        else 
            inputs_1_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_1_2_V_blk_n_assign_proc : process(inputs_1_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5)
    begin
        if (((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_2_V_blk_n <= inputs_1_2_V_empty_n;
        else 
            inputs_1_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_1_2_V_read_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_predicate_op246_read_state5, ap_predicate_op338_read_state10)
    begin
        if (((not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op246_read_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op338_read_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            inputs_1_2_V_read <= ap_const_logic_1;
        else 
            inputs_1_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_2_0_V_blk_n_assign_proc : process(inputs_2_0_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_0_V_blk_n <= inputs_2_0_V_empty_n;
        else 
            inputs_2_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_2_0_V_read_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_predicate_op261_read_state6, ap_predicate_op353_read_state11)
    begin
        if (((not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_0_V_read <= ap_const_logic_1;
        else 
            inputs_2_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_2_1_V_blk_n_assign_proc : process(inputs_2_1_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_1_V_blk_n <= inputs_2_1_V_empty_n;
        else 
            inputs_2_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_2_1_V_read_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_predicate_op261_read_state6, ap_predicate_op353_read_state11)
    begin
        if (((not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_1_V_read <= ap_const_logic_1;
        else 
            inputs_2_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_2_2_V_blk_n_assign_proc : process(inputs_2_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6)
    begin
        if (((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_2_V_blk_n <= inputs_2_2_V_empty_n;
        else 
            inputs_2_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_2_2_V_read_assign_proc : process(inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_predicate_op261_read_state6, ap_predicate_op353_read_state11)
    begin
        if (((not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op261_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op353_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            inputs_2_2_V_read <= ap_const_logic_1;
        else 
            inputs_2_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_3_0_V_blk_n_assign_proc : process(inputs_3_0_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_0_V_blk_n <= inputs_3_0_V_empty_n;
        else 
            inputs_3_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_3_0_V_read_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op276_read_state7, ap_predicate_op368_read_state12)
    begin
        if (((not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_0_V_read <= ap_const_logic_1;
        else 
            inputs_3_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_3_1_V_blk_n_assign_proc : process(inputs_3_1_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_1_V_blk_n <= inputs_3_1_V_empty_n;
        else 
            inputs_3_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_3_1_V_read_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op276_read_state7, ap_predicate_op368_read_state12)
    begin
        if (((not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_1_V_read <= ap_const_logic_1;
        else 
            inputs_3_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inputs_3_2_V_blk_n_assign_proc : process(inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7)
    begin
        if (((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_2_V_blk_n <= inputs_3_2_V_empty_n;
        else 
            inputs_3_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_3_2_V_read_assign_proc : process(inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op276_read_state7, ap_predicate_op368_read_state12)
    begin
        if (((not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op276_read_state7 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op368_read_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            inputs_3_2_V_read <= ap_const_logic_1;
        else 
            inputs_3_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln80_fu_2096_p2)
    begin
        if (((icmp_ln80_fu_2096_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_1_fu_2202_p2 <= std_logic_vector(unsigned(j_0_reg_1448) + unsigned(ap_const_lv2_1));
    j_fu_2270_p2 <= std_logic_vector(unsigned(j3_0_reg_1525) + unsigned(ap_const_lv2_1));

    kernel_sums_address0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76, ap_CS_fsm_state78, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state75, ap_CS_fsm_state77, zext_ln196_fu_2703_p1, zext_ln211_fu_2856_p1, zext_ln196_1_fu_3221_p1, zext_ln211_1_fu_3390_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            kernel_sums_address0 <= zext_ln211_1_fu_3390_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            kernel_sums_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            kernel_sums_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            kernel_sums_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            kernel_sums_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            kernel_sums_address0 <= zext_ln196_1_fu_3221_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            kernel_sums_address0 <= zext_ln211_fu_2856_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            kernel_sums_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            kernel_sums_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            kernel_sums_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            kernel_sums_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            kernel_sums_address0 <= zext_ln196_fu_2703_p1(3 - 1 downto 0);
        else 
            kernel_sums_address0 <= "XXX";
        end if; 
    end process;


    kernel_sums_ce0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76, ap_CS_fsm_state78, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state75, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            kernel_sums_ce0 <= ap_const_logic_1;
        else 
            kernel_sums_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_sums_d0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state69, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state75, ap_CS_fsm_state77, grp_fu_1945_p2, grp_fu_1952_p2, grp_fu_1974_p2, grp_fu_1981_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            kernel_sums_d0 <= grp_fu_1981_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            kernel_sums_d0 <= grp_fu_1974_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            kernel_sums_d0 <= grp_fu_1952_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            kernel_sums_d0 <= grp_fu_1945_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            kernel_sums_d0 <= ap_const_lv32_0;
        else 
            kernel_sums_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_sums_we0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state69, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state75, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            kernel_sums_we0 <= ap_const_logic_1;
        else 
            kernel_sums_we0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_0_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_0_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_0_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_0_address0 <= "XXXX";
        end if; 
    end process;


    kernels_0_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_0_ce0 <= ap_const_logic_1;
        else 
            kernels_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_10_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_10_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_10_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_10_address0 <= "XXXX";
        end if; 
    end process;


    kernels_10_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_10_ce0 <= ap_const_logic_1;
        else 
            kernels_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_11_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_11_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_11_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_11_address0 <= "XXXX";
        end if; 
    end process;


    kernels_11_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_11_ce0 <= ap_const_logic_1;
        else 
            kernels_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_1_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_1_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_1_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_1_address0 <= "XXXX";
        end if; 
    end process;


    kernels_1_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_1_ce0 <= ap_const_logic_1;
        else 
            kernels_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_2_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_2_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_2_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_2_address0 <= "XXXX";
        end if; 
    end process;


    kernels_2_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_2_ce0 <= ap_const_logic_1;
        else 
            kernels_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_3_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_3_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_3_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_3_address0 <= "XXXX";
        end if; 
    end process;


    kernels_3_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_3_ce0 <= ap_const_logic_1;
        else 
            kernels_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_4_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_4_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_4_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_4_address0 <= "XXXX";
        end if; 
    end process;


    kernels_4_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_4_ce0 <= ap_const_logic_1;
        else 
            kernels_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_5_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_5_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_5_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_5_address0 <= "XXXX";
        end if; 
    end process;


    kernels_5_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_5_ce0 <= ap_const_logic_1;
        else 
            kernels_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_6_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_6_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_6_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_6_address0 <= "XXXX";
        end if; 
    end process;


    kernels_6_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_6_ce0 <= ap_const_logic_1;
        else 
            kernels_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_7_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_7_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_7_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_7_address0 <= "XXXX";
        end if; 
    end process;


    kernels_7_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_7_ce0 <= ap_const_logic_1;
        else 
            kernels_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_8_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_8_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_8_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_8_address0 <= "XXXX";
        end if; 
    end process;


    kernels_8_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_8_ce0 <= ap_const_logic_1;
        else 
            kernels_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernels_9_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, sext_ln190_fu_2602_p1, sext_ln190_37_fu_3120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            kernels_9_address0 <= sext_ln190_37_fu_3120_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            kernels_9_address0 <= sext_ln190_fu_2602_p1(4 - 1 downto 0);
        else 
            kernels_9_address0 <= "XXXX";
        end if; 
    end process;


    kernels_9_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            kernels_9_ce0 <= ap_const_logic_1;
        else 
            kernels_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_col_index_1_fu_2258_p2 <= std_logic_vector(signed(local_col_index_0_reg_1459) + signed(ap_const_lv17_1));
    local_col_index_fu_2332_p2 <= std_logic_vector(unsigned(local_col_index2_0_reg_1536) + unsigned(ap_const_lv17_1));

    local_row_indices_0_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            local_row_indices_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            local_row_indices_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            local_row_indices_0_address0 <= "XX";
        end if; 
    end process;


    local_row_indices_0_address1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state21, zext_ln190_fu_2506_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            local_row_indices_0_address1 <= zext_ln190_fu_2506_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            local_row_indices_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            local_row_indices_0_address1 <= "XX";
        end if; 
    end process;


    local_row_indices_0_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            local_row_indices_0_ce0 <= ap_const_logic_1;
        else 
            local_row_indices_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_0_ce1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            local_row_indices_0_ce1 <= ap_const_logic_1;
        else 
            local_row_indices_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_0_d0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, current_row_indices_6_fu_2405_p3, current_row_indices_8_fu_2419_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            local_row_indices_0_d0 <= current_row_indices_8_fu_2419_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            local_row_indices_0_d0 <= current_row_indices_6_fu_2405_p3;
        else 
            local_row_indices_0_d0 <= "XXX";
        end if; 
    end process;

    local_row_indices_0_d1 <= 
        current_row_indices_2_reg_3943 when (icmp_ln155_fu_2395_p2(0) = '1') else 
        current_row_indices_1_reg_3937;

    local_row_indices_0_we0_assign_proc : process(ap_CS_fsm_state16, icmp_ln153_fu_2373_p2, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln153_fu_2373_p2 = ap_const_lv1_0)))) then 
            local_row_indices_0_we0 <= ap_const_logic_1;
        else 
            local_row_indices_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_0_we1_assign_proc : process(ap_CS_fsm_state16, icmp_ln153_fu_2373_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln153_fu_2373_p2 = ap_const_lv1_0))) then 
            local_row_indices_0_we1 <= ap_const_logic_1;
        else 
            local_row_indices_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_1_address0_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            local_row_indices_1_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            local_row_indices_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            local_row_indices_1_address0 <= "XX";
        end if; 
    end process;


    local_row_indices_1_address1_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state54, zext_ln190_7_fu_3024_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            local_row_indices_1_address1 <= zext_ln190_7_fu_3024_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            local_row_indices_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            local_row_indices_1_address1 <= "XX";
        end if; 
    end process;


    local_row_indices_1_ce0_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            local_row_indices_1_ce0 <= ap_const_logic_1;
        else 
            local_row_indices_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_1_ce1_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            local_row_indices_1_ce1 <= ap_const_logic_1;
        else 
            local_row_indices_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_1_d0_assign_proc : process(ap_CS_fsm_state49, current_row_indices_11_reg_4597, ap_CS_fsm_state50, current_row_indices_9_fu_2923_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            local_row_indices_1_d0 <= current_row_indices_11_reg_4597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            local_row_indices_1_d0 <= current_row_indices_9_fu_2923_p3;
        else 
            local_row_indices_1_d0 <= "XXX";
        end if; 
    end process;

    local_row_indices_1_d1 <= 
        current_row_indices_4_reg_3957 when (icmp_ln155_1_fu_2913_p2(0) = '1') else 
        current_row_indices_3_reg_3950;

    local_row_indices_1_we0_assign_proc : process(ap_CS_fsm_state49, icmp_ln153_1_fu_2891_p2, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln153_1_fu_2891_p2 = ap_const_lv1_0)))) then 
            local_row_indices_1_we0 <= ap_const_logic_1;
        else 
            local_row_indices_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_row_indices_1_we1_assign_proc : process(ap_CS_fsm_state49, icmp_ln153_1_fu_2891_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln153_1_fu_2891_p2 = ap_const_lv1_0))) then 
            local_row_indices_1_we1 <= ap_const_logic_1;
        else 
            local_row_indices_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    maxes_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state45, maxes_addr_3_reg_4557, ap_CS_fsm_state47, ap_CS_fsm_state78, maxes_addr_4_reg_4887, ap_CS_fsm_state80, ap_CS_fsm_state46, ap_CS_fsm_state79, zext_ln146_fu_2358_p1, zext_ln211_fu_2856_p1, zext_ln218_fu_2874_p1, zext_ln211_1_fu_3390_p1, zext_ln218_1_fu_3414_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            maxes_address0 <= zext_ln218_1_fu_3414_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            maxes_address0 <= maxes_addr_4_reg_4887;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            maxes_address0 <= zext_ln211_1_fu_3390_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            maxes_address0 <= zext_ln218_fu_2874_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            maxes_address0 <= maxes_addr_3_reg_4557;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            maxes_address0 <= zext_ln211_fu_2856_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            maxes_address0 <= zext_ln146_fu_2358_p1(3 - 1 downto 0);
        else 
            maxes_address0 <= "XXX";
        end if; 
    end process;


    maxes_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state78, ap_CS_fsm_state80, ap_CS_fsm_state46, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            maxes_ce0 <= ap_const_logic_1;
        else 
            maxes_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    maxes_d0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state46, ap_CS_fsm_state79, grp_fu_1965_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            maxes_d0 <= grp_fu_1965_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            maxes_d0 <= ap_const_lv32_0;
        else 
            maxes_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    maxes_we0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state46, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            maxes_we0 <= ap_const_logic_1;
        else 
            maxes_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln204_1_fu_2794_p2 <= (tmp_32_fu_2786_p3 or ap_const_lv4_2);
    or_ln204_2_fu_2829_p2 <= (tmp_36_fu_2821_p3 or ap_const_lv4_3);
    or_ln204_fu_2759_p2 <= (tmp_28_fu_2751_p3 or ap_const_lv4_1);

    outputs_0_0_V_blk_n_assign_proc : process(outputs_0_0_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if (((trunc_ln182_reg_4580 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_0_V_blk_n <= outputs_0_0_V_full_n;
        else 
            outputs_0_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_0_0_V_din <= tmp_52_fu_2883_p1;

    outputs_0_0_V_write_assign_proc : process(outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_reg_4580 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_0_V_write <= ap_const_logic_1;
        else 
            outputs_0_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_0_1_V_blk_n_assign_proc : process(outputs_0_1_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if (((trunc_ln182_reg_4580 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_1_V_blk_n <= outputs_0_1_V_full_n;
        else 
            outputs_0_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_0_1_V_din <= tmp_52_fu_2883_p1;

    outputs_0_1_V_write_assign_proc : process(outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_reg_4580 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_1_V_write <= ap_const_logic_1;
        else 
            outputs_0_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_0_2_V_blk_n_assign_proc : process(outputs_0_2_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if (((trunc_ln182_reg_4580 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_2_V_blk_n <= outputs_0_2_V_full_n;
        else 
            outputs_0_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_0_2_V_din <= tmp_52_fu_2883_p1;

    outputs_0_2_V_write_assign_proc : process(outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_reg_4580 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_2_V_write <= ap_const_logic_1;
        else 
            outputs_0_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_0_3_V_blk_n_assign_proc : process(outputs_0_3_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if (((trunc_ln182_reg_4580 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_3_V_blk_n <= outputs_0_3_V_full_n;
        else 
            outputs_0_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_0_3_V_din <= tmp_52_fu_2883_p1;

    outputs_0_3_V_write_assign_proc : process(outputs_0_0_V_full_n, outputs_0_1_V_full_n, outputs_0_2_V_full_n, outputs_0_3_V_full_n, ap_CS_fsm_state48, trunc_ln182_reg_4580)
    begin
        if ((not((((trunc_ln182_reg_4580 = ap_const_lv2_3) and (outputs_0_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_2) and (outputs_0_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_1) and (outputs_0_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_reg_4580 = ap_const_lv2_0) and (outputs_0_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_reg_4580 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            outputs_0_3_V_write <= ap_const_logic_1;
        else 
            outputs_0_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_0_V_blk_n_assign_proc : process(outputs_1_0_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if (((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_0_V_blk_n <= outputs_1_0_V_full_n;
        else 
            outputs_1_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_1_0_V_din <= tmp_61_fu_3452_p1;

    outputs_1_0_V_write_assign_proc : process(outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_0_V_write <= ap_const_logic_1;
        else 
            outputs_1_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_1_V_blk_n_assign_proc : process(outputs_1_1_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if (((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_1_V_blk_n <= outputs_1_1_V_full_n;
        else 
            outputs_1_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_1_1_V_din <= tmp_61_fu_3452_p1;

    outputs_1_1_V_write_assign_proc : process(outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_1_V_write <= ap_const_logic_1;
        else 
            outputs_1_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_2_V_blk_n_assign_proc : process(outputs_1_2_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if (((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_2_V_blk_n <= outputs_1_2_V_full_n;
        else 
            outputs_1_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_1_2_V_din <= tmp_61_fu_3452_p1;

    outputs_1_2_V_write_assign_proc : process(outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_2_V_write <= ap_const_logic_1;
        else 
            outputs_1_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    outputs_1_3_V_blk_n_assign_proc : process(outputs_1_3_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if (((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_3_V_blk_n <= outputs_1_3_V_full_n;
        else 
            outputs_1_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputs_1_3_V_din <= tmp_61_fu_3452_p1;

    outputs_1_3_V_write_assign_proc : process(outputs_1_0_V_full_n, outputs_1_1_V_full_n, outputs_1_2_V_full_n, outputs_1_3_V_full_n, ap_CS_fsm_state81, trunc_ln182_4_reg_4910)
    begin
        if ((not((((trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (outputs_1_3_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_2) and (outputs_1_2_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_1) and (outputs_1_1_V_full_n = ap_const_logic_0)) or ((trunc_ln182_4_reg_4910 = ap_const_lv2_0) and (outputs_1_0_V_full_n = ap_const_logic_0)))) and (trunc_ln182_4_reg_4910 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            outputs_1_3_V_write <= ap_const_logic_1;
        else 
            outputs_1_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_address0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state57, ap_CS_fsm_state25, ap_CS_fsm_state58, ap_CS_fsm_state26, ap_CS_fsm_state59, ap_CS_fsm_state27, ap_CS_fsm_state60, ap_CS_fsm_state28, ap_CS_fsm_state61, ap_CS_fsm_state20, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state39, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state70, ap_CS_fsm_state74, ap_CS_fsm_state34, ap_CS_fsm_state67, zext_ln174_1_fu_2473_p1, tmp_30_fu_2765_p3, tmp_37_fu_2835_p3, zext_ln204_2_fu_3262_p1, zext_ln204_6_fu_3332_p1, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            partial_sums_address0 <= zext_ln204_6_fu_3332_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            partial_sums_address0 <= zext_ln204_2_fu_3262_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            partial_sums_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            partial_sums_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            partial_sums_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            partial_sums_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            partial_sums_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            partial_sums_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            partial_sums_address0 <= tmp_37_fu_2835_p3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            partial_sums_address0 <= tmp_30_fu_2765_p3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            partial_sums_address0 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            partial_sums_address0 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            partial_sums_address0 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            partial_sums_address0 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            partial_sums_address0 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            partial_sums_address0 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            partial_sums_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            partial_sums_address0 <= zext_ln174_1_fu_2473_p1(5 - 1 downto 0);
        else 
            partial_sums_address0 <= "XXXXX";
        end if; 
    end process;


    partial_sums_address1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state57, ap_CS_fsm_state25, ap_CS_fsm_state58, ap_CS_fsm_state26, ap_CS_fsm_state59, ap_CS_fsm_state27, ap_CS_fsm_state60, ap_CS_fsm_state28, ap_CS_fsm_state61, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state34, ap_CS_fsm_state67, zext_ln204_fu_2734_p1, tmp_34_fu_2800_p3, zext_ln174_3_fu_2991_p1, zext_ln204_4_fu_3297_p1, zext_ln204_8_fu_3367_p1, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            partial_sums_address1 <= zext_ln204_8_fu_3367_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            partial_sums_address1 <= zext_ln204_4_fu_3297_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            partial_sums_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            partial_sums_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            partial_sums_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            partial_sums_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            partial_sums_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            partial_sums_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            partial_sums_address1 <= zext_ln174_3_fu_2991_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            partial_sums_address1 <= tmp_34_fu_2800_p3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            partial_sums_address1 <= zext_ln204_fu_2734_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            partial_sums_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            partial_sums_address1 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            partial_sums_address1 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            partial_sums_address1 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            partial_sums_address1 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            partial_sums_address1 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            partial_sums_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            partial_sums_address1 <= "XXXXX";
        end if; 
    end process;


    partial_sums_ce0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state57, ap_CS_fsm_state25, ap_CS_fsm_state58, ap_CS_fsm_state26, ap_CS_fsm_state59, ap_CS_fsm_state27, ap_CS_fsm_state60, ap_CS_fsm_state28, ap_CS_fsm_state61, ap_CS_fsm_state20, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state39, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state70, ap_CS_fsm_state74, ap_CS_fsm_state34, ap_CS_fsm_state67, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            partial_sums_ce0 <= ap_const_logic_1;
        else 
            partial_sums_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_ce1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state57, ap_CS_fsm_state25, ap_CS_fsm_state58, ap_CS_fsm_state26, ap_CS_fsm_state59, ap_CS_fsm_state27, ap_CS_fsm_state60, ap_CS_fsm_state28, ap_CS_fsm_state61, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state72, ap_CS_fsm_state76, ap_CS_fsm_state34, ap_CS_fsm_state67, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            partial_sums_ce1 <= ap_const_logic_1;
        else 
            partial_sums_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state29, add_ln190_4_reg_4439, add_ln190_6_reg_4449, add_ln190_8_reg_4459, add_ln190_10_reg_4469, add_ln190_12_reg_4479, add_ln190_16_reg_4764, ap_CS_fsm_state62, add_ln190_18_reg_4774, add_ln190_20_reg_4784, add_ln190_22_reg_4794, add_ln190_24_reg_4804, ap_CS_fsm_state34, ap_CS_fsm_state67, grp_fu_3509_p3, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, grp_fu_3598_p3, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            partial_sums_d0 <= add_ln190_24_reg_4804;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            partial_sums_d0 <= add_ln190_22_reg_4794;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            partial_sums_d0 <= add_ln190_20_reg_4784;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            partial_sums_d0 <= add_ln190_18_reg_4774;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            partial_sums_d0 <= add_ln190_16_reg_4764;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            partial_sums_d0 <= grp_fu_3598_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            partial_sums_d0 <= add_ln190_12_reg_4479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            partial_sums_d0 <= add_ln190_10_reg_4469;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            partial_sums_d0 <= add_ln190_8_reg_4459;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            partial_sums_d0 <= add_ln190_6_reg_4449;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            partial_sums_d0 <= add_ln190_4_reg_4439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            partial_sums_d0 <= grp_fu_3509_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            partial_sums_d0 <= ap_const_lv32_0;
        else 
            partial_sums_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_d1_assign_proc : process(add_ln190_3_reg_4434, ap_CS_fsm_state29, add_ln190_5_reg_4444, add_ln190_7_reg_4454, add_ln190_9_reg_4464, add_ln190_11_reg_4474, ap_CS_fsm_state53, ap_CS_fsm_state62, add_ln190_17_reg_4769, add_ln190_19_reg_4779, add_ln190_21_reg_4789, add_ln190_23_reg_4799, add_ln190_25_reg_4809, ap_CS_fsm_state34, ap_CS_fsm_state67, grp_fu_3500_p3, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, grp_fu_3607_p3, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            partial_sums_d1 <= add_ln190_25_reg_4809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            partial_sums_d1 <= add_ln190_23_reg_4799;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            partial_sums_d1 <= add_ln190_21_reg_4789;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            partial_sums_d1 <= add_ln190_19_reg_4779;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            partial_sums_d1 <= add_ln190_17_reg_4769;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            partial_sums_d1 <= grp_fu_3607_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            partial_sums_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            partial_sums_d1 <= add_ln190_11_reg_4474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            partial_sums_d1 <= add_ln190_9_reg_4464;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            partial_sums_d1 <= add_ln190_7_reg_4454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            partial_sums_d1 <= add_ln190_5_reg_4444;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            partial_sums_d1 <= add_ln190_3_reg_4434;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            partial_sums_d1 <= grp_fu_3500_p3;
        else 
            partial_sums_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_we0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state62, ap_CS_fsm_state34, ap_CS_fsm_state67, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            partial_sums_we0 <= ap_const_logic_1;
        else 
            partial_sums_we0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_we1_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state53, ap_CS_fsm_state62, ap_CS_fsm_state34, ap_CS_fsm_state67, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            partial_sums_we1 <= ap_const_logic_1;
        else 
            partial_sums_we1 <= ap_const_logic_0;
        end if; 
    end process;

    read_odd_load_load_fu_2108_p1 <= read_odd;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln174_1_fu_2955_p3 <= 
        ap_const_lv3_3 when (phi_ln174_3_reg_1794(0) = '1') else 
        ap_const_lv3_0;
    select_ln174_fu_2437_p3 <= 
        ap_const_lv3_3 when (phi_ln174_reg_1636(0) = '1') else 
        ap_const_lv3_0;
        sext_ln106_fu_2140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(read_col_index),17));

        sext_ln114_1_fu_2299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln114_1_fu_2293_p2),64));

        sext_ln114_2_fu_2312_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln114_2_fu_2306_p2),64));

        sext_ln114_3_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln114_3_fu_2319_p2),64));

        sext_ln114_fu_2286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln114_fu_2280_p2),64));

        sext_ln190_37_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln190_30_reg_4679),64));

        sext_ln190_fu_2602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln190_27_reg_4349),64));

        sext_ln87_fu_2124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(read_col_index),17));

        sext_ln95_1_fu_2225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln95_fu_2219_p2),64));

        sext_ln95_2_fu_2238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln95_1_fu_2232_p2),64));

        sext_ln95_3_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln95_2_fu_2245_p2),64));

        sext_ln95_fu_2208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(local_col_index_0_reg_1459),64));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, zext_ln190_9_fu_2617_p1, zext_ln190_20_fu_3135_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stripes_0_address0 <= zext_ln190_20_fu_3135_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stripes_0_address0 <= zext_ln190_9_fu_2617_p1(13 - 1 downto 0);
        else 
            stripes_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_0_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, stripes_0_addr_1_reg_3976, stripes_0_addr_3_reg_3981, stripes_0_addr_5_reg_3986, stripes_0_addr_7_reg_3991, ap_CS_fsm_state8, stripes_0_addr_reg_4109, stripes_0_addr_2_reg_4114, stripes_0_addr_4_reg_4119, stripes_0_addr_6_reg_4124, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_0_address1 <= stripes_0_addr_6_reg_4124;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_0_address1 <= stripes_0_addr_4_reg_4119;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_0_address1 <= stripes_0_addr_2_reg_4114;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_0_address1 <= stripes_0_addr_reg_4109;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_0_address1 <= stripes_0_addr_7_reg_3991;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_0_address1 <= stripes_0_addr_5_reg_3986;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_0_address1 <= stripes_0_addr_3_reg_3981;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_0_address1 <= stripes_0_addr_1_reg_3976;
        else 
            stripes_0_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_0_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            stripes_0_ce0 <= ap_const_logic_1;
        else 
            stripes_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_ce1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_0_ce1 <= ap_const_logic_1;
        else 
            stripes_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_d1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state13, tmp_2_0_reg_1469, tmp_2_1_reg_1483, tmp_2_2_reg_1497, tmp_2_3_reg_1511, tmp_0_reg_1546, tmp_11366_reg_1560, tmp_21367_reg_1574, tmp_31368_reg_1588)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_0_d1 <= tmp_31368_reg_1588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_0_d1 <= tmp_21367_reg_1574;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_0_d1 <= tmp_11366_reg_1560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_0_d1 <= tmp_0_reg_1546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_0_d1 <= tmp_2_3_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_0_d1 <= tmp_2_2_reg_1497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_0_d1 <= tmp_2_1_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_0_d1 <= tmp_2_0_reg_1469;
        else 
            stripes_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    stripes_0_we1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_0_we1 <= ap_const_logic_1;
        else 
            stripes_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, zext_ln190_9_fu_2617_p1, zext_ln190_20_fu_3135_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stripes_1_address0 <= zext_ln190_20_fu_3135_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stripes_1_address0 <= zext_ln190_9_fu_2617_p1(13 - 1 downto 0);
        else 
            stripes_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_1_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, stripes_1_addr_1_reg_3996, stripes_1_addr_3_reg_4001, stripes_1_addr_5_reg_4006, stripes_1_addr_7_reg_4011, ap_CS_fsm_state8, stripes_1_addr_reg_4129, stripes_1_addr_2_reg_4134, stripes_1_addr_4_reg_4139, stripes_1_addr_6_reg_4144, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_1_address1 <= stripes_1_addr_6_reg_4144;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_1_address1 <= stripes_1_addr_4_reg_4139;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_1_address1 <= stripes_1_addr_2_reg_4134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_1_address1 <= stripes_1_addr_reg_4129;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_1_address1 <= stripes_1_addr_7_reg_4011;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_1_address1 <= stripes_1_addr_5_reg_4006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_1_address1 <= stripes_1_addr_3_reg_4001;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_1_address1 <= stripes_1_addr_1_reg_3996;
        else 
            stripes_1_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_1_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            stripes_1_ce0 <= ap_const_logic_1;
        else 
            stripes_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_ce1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_1_ce1 <= ap_const_logic_1;
        else 
            stripes_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_d1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state13, tmp_2_0_reg_1469, tmp_2_1_reg_1483, tmp_2_2_reg_1497, tmp_2_3_reg_1511, tmp_0_reg_1546, tmp_11366_reg_1560, tmp_21367_reg_1574, tmp_31368_reg_1588)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_1_d1 <= tmp_31368_reg_1588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_1_d1 <= tmp_21367_reg_1574;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_1_d1 <= tmp_11366_reg_1560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_1_d1 <= tmp_0_reg_1546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_1_d1 <= tmp_2_3_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_1_d1 <= tmp_2_2_reg_1497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_1_d1 <= tmp_2_1_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_1_d1 <= tmp_2_0_reg_1469;
        else 
            stripes_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    stripes_1_we1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if ((((i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1424 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1436 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_1_we1 <= ap_const_logic_1;
        else 
            stripes_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60, zext_ln190_9_fu_2617_p1, zext_ln190_20_fu_3135_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stripes_2_address0 <= zext_ln190_20_fu_3135_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stripes_2_address0 <= zext_ln190_9_fu_2617_p1(13 - 1 downto 0);
        else 
            stripes_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_2_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, stripes_2_addr_1_reg_4016, stripes_2_addr_3_reg_4021, stripes_2_addr_5_reg_4026, stripes_2_addr_7_reg_4031, ap_CS_fsm_state8, stripes_2_addr_reg_4149, stripes_2_addr_2_reg_4154, stripes_2_addr_4_reg_4159, stripes_2_addr_6_reg_4164, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_2_address1 <= stripes_2_addr_6_reg_4164;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_2_address1 <= stripes_2_addr_4_reg_4159;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_2_address1 <= stripes_2_addr_2_reg_4154;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_2_address1 <= stripes_2_addr_reg_4149;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_2_address1 <= stripes_2_addr_7_reg_4031;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_2_address1 <= stripes_2_addr_5_reg_4026;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_2_address1 <= stripes_2_addr_3_reg_4021;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_2_address1 <= stripes_2_addr_1_reg_4016;
        else 
            stripes_2_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    stripes_2_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            stripes_2_ce0 <= ap_const_logic_1;
        else 
            stripes_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_ce1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_2_ce1 <= ap_const_logic_1;
        else 
            stripes_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_d1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state13, tmp_2_0_reg_1469, tmp_2_1_reg_1483, tmp_2_2_reg_1497, tmp_2_3_reg_1511, tmp_0_reg_1546, tmp_11366_reg_1560, tmp_21367_reg_1574, tmp_31368_reg_1588)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stripes_2_d1 <= tmp_31368_reg_1588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            stripes_2_d1 <= tmp_21367_reg_1574;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stripes_2_d1 <= tmp_11366_reg_1560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            stripes_2_d1 <= tmp_0_reg_1546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stripes_2_d1 <= tmp_2_3_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stripes_2_d1 <= tmp_2_2_reg_1497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_2_d1 <= tmp_2_1_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            stripes_2_d1 <= tmp_2_0_reg_1469;
        else 
            stripes_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    stripes_2_we1_assign_proc : process(inputs_1_0_V_empty_n, inputs_1_1_V_empty_n, inputs_1_2_V_empty_n, inputs_2_0_V_empty_n, inputs_2_1_V_empty_n, inputs_2_2_V_empty_n, inputs_3_0_V_empty_n, inputs_3_1_V_empty_n, inputs_3_2_V_empty_n, i1_0_reg_1436, i_0_reg_1424, ap_CS_fsm_state10, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_predicate_op246_read_state5, ap_predicate_op261_read_state6, ap_predicate_op276_read_state7, ap_CS_fsm_state8, ap_predicate_op338_read_state10, ap_predicate_op353_read_state11, ap_predicate_op368_read_state12, ap_CS_fsm_state13)
    begin
        if (((not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((ap_predicate_op276_read_state7 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((ap_predicate_op261_read_state6 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op246_read_state5 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1424 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and not((i_0_reg_1424 = ap_const_lv2_1)) and not((i_0_reg_1424 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not((((ap_predicate_op368_read_state12 = ap_const_boolean_1) and (inputs_3_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_3_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_3_0_V_empty_n = ap_const_logic_0)))) and not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((ap_predicate_op353_read_state11 = ap_const_boolean_1) and (inputs_2_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_2_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_2_0_V_empty_n = ap_const_logic_0)))) and not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((ap_predicate_op338_read_state10 = ap_const_boolean_1) and (inputs_1_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_1) and (inputs_1_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1436 = ap_const_lv2_0) and (inputs_1_0_V_empty_n = ap_const_logic_0)))) and not((i1_0_reg_1436 = ap_const_lv2_1)) and not((i1_0_reg_1436 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            stripes_2_we1 <= ap_const_logic_1;
        else 
            stripes_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln190_1_fu_3045_p2 <= std_logic_vector(unsigned(zext_ln190_14_fu_3041_p1) - unsigned(zext_ln190_13_fu_3029_p1));
    sub_ln190_fu_2527_p2 <= std_logic_vector(unsigned(zext_ln190_2_fu_2523_p1) - unsigned(zext_ln190_1_fu_2511_p1));
    tmp_10_fu_2533_p3 <= (local_row_indices_0_q1 & ap_const_lv9_0);
    tmp_11_fu_2545_p3 <= (local_row_indices_0_q1 & ap_const_lv1_0);
    tmp_23_fu_3033_p3 <= (l_0_1_reg_1829 & ap_const_lv2_0);
    tmp_25_fu_3051_p3 <= (local_row_indices_1_q1 & ap_const_lv9_0);
    tmp_26_fu_3063_p3 <= (local_row_indices_1_q1 & ap_const_lv1_0);
    tmp_27_fu_2726_p3 <= (j10_0_0_0_reg_1717 & ap_const_lv2_0);
    tmp_28_fu_2751_p3 <= (j10_0_0_1_reg_1728 & ap_const_lv2_0);
    tmp_2_fu_2350_p3 <= (phi_ln146_reg_1602 & phi_ln146_1_reg_1614);
    tmp_30_fu_2765_p3 <= (ap_const_lv60_0 & or_ln204_fu_2759_p2);
    tmp_31_fu_3244_p3 <= (j10_0_1_0_reg_1875 & ap_const_lv2_0);
    tmp_32_fu_2786_p3 <= (j10_0_0_2_reg_1739 & ap_const_lv2_0);
    tmp_34_fu_2800_p3 <= (ap_const_lv60_0 & or_ln204_1_fu_2794_p2);
    tmp_35_fu_3279_p3 <= (j10_0_1_1_reg_1886 & ap_const_lv2_0);
    tmp_36_fu_2821_p3 <= (j10_0_0_3_reg_1750 & ap_const_lv2_0);
    tmp_37_fu_2835_p3 <= (ap_const_lv60_0 & or_ln204_2_fu_2829_p2);
    tmp_38_fu_3314_p3 <= (j10_0_1_2_reg_1897 & ap_const_lv2_0);
    tmp_39_fu_3349_p3 <= (j10_0_1_3_reg_1908 & ap_const_lv2_0);
    tmp_45_fu_2385_p4 <= i6_0_0_reg_1625(2 downto 1);
    tmp_52_fu_2883_p1 <= maxes_q0(16 - 1 downto 0);
    tmp_53_fu_2466_p3 <= (add_ln174_4_reg_4297 & phi_ln174_2_reg_1660);
    tmp_54_fu_2903_p4 <= i6_0_1_reg_1783(2 downto 1);
    tmp_61_fu_3452_p1 <= maxes_q0(16 - 1 downto 0);
    tmp_62_fu_2984_p3 <= (add_ln174_5_reg_4627 & phi_ln174_5_reg_1818);
    tmp_69_fu_2695_p3 <= (phi_ln196_reg_1694 & phi_ln196_1_reg_1706);
    tmp_70_fu_3213_p3 <= (phi_ln196_2_reg_1852 & phi_ln196_3_reg_1864);
    tmp_9_fu_2515_p3 <= (l_0_0_reg_1671 & ap_const_lv2_0);
    trunc_ln114_fu_2276_p1 <= local_col_index2_0_reg_1536(14 - 1 downto 0);
    trunc_ln158_fu_2919_p1 <= i6_0_1_reg_1783(1 - 1 downto 0);
    trunc_ln160_fu_2401_p1 <= i6_0_0_reg_1625(1 - 1 downto 0);
    trunc_ln172_1_fu_2946_p1 <= compute_col_index_lo_reg_4247(14 - 1 downto 0);
    trunc_ln172_fu_2428_p1 <= compute_col_index_lo_reg_4247(14 - 1 downto 0);
    trunc_ln182_4_fu_3419_p1 <= i12_0_1_reg_1930(2 - 1 downto 0);
    trunc_ln182_fu_2879_p1 <= i12_0_0_reg_1772(2 - 1 downto 0);
    trunc_ln95_fu_2215_p1 <= local_col_index_0_reg_1459(14 - 1 downto 0);
    xor_ln146_fu_2338_p2 <= (phi_ln146_reg_1602 xor ap_const_lv1_1);
    xor_ln174_1_fu_2949_p2 <= (phi_ln174_3_reg_1794 xor ap_const_lv1_1);
    xor_ln174_fu_2431_p2 <= (phi_ln174_reg_1636 xor ap_const_lv1_1);
    xor_ln196_1_fu_3201_p2 <= (phi_ln196_2_reg_1852 xor ap_const_lv1_1);
    xor_ln196_fu_2683_p2 <= (phi_ln196_reg_1694 xor ap_const_lv1_1);
    xor_ln211_fu_3384_p2 <= (j11_0_1_reg_1919 xor ap_const_lv3_4);
    xor_ln218_fu_3408_p2 <= (i12_0_1_reg_1930 xor ap_const_lv3_4);
    xor_ln228_fu_3441_p2 <= (read_odd_load_reg_3896 xor ap_const_lv1_1);
    xor_ln235_fu_3483_p2 <= (compute_odd_load_reg_3927 xor ap_const_lv1_1);
    zext_ln146_fu_2358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_2350_p3),64));
    zext_ln172_1_fu_2943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln158_reg_4592),14));
    zext_ln172_fu_2425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln160_reg_4267),14));
    zext_ln174_1_fu_2473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_2466_p3),64));
    zext_ln174_2_fu_2969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln174_4_reg_1806),3));
    zext_ln174_3_fu_2991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_2984_p3),64));
    zext_ln174_fu_2451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln174_1_reg_1648),3));
    zext_ln190_10_fu_2627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2030),15));
    zext_ln190_11_fu_2647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2050),15));
    zext_ln190_12_fu_2667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2070),15));
    zext_ln190_13_fu_3029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_1_reg_1829),5));
    zext_ln190_14_fu_3041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_3033_p3),5));
    zext_ln190_15_fu_3059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_3051_p3),13));
    zext_ln190_16_fu_3071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_3063_p3),13));
    zext_ln190_17_fu_3081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln190_29_fu_3075_p2),14));
    zext_ln190_18_fu_3085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_1_reg_1841),14));
    zext_ln190_19_fu_3101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_1_reg_1841),5));
    zext_ln190_1_fu_2511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_0_reg_1671),5));
    zext_ln190_20_fu_3135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln190_31_reg_4684),64));
    zext_ln190_21_fu_3145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2030),15));
    zext_ln190_22_fu_3165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2050),15));
    zext_ln190_23_fu_3185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_2070),15));
    zext_ln190_2_fu_2523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_2515_p3),5));
    zext_ln190_3_fu_2541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_2533_p3),13));
    zext_ln190_4_fu_2553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_2545_p3),13));
    zext_ln190_5_fu_2563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln190_26_fu_2557_p2),14));
    zext_ln190_6_fu_2567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_0_reg_1683),14));
    zext_ln190_7_fu_3024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_1_reg_1829),64));
    zext_ln190_8_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_0_reg_1683),5));
    zext_ln190_9_fu_2617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln190_28_reg_4354),64));
    zext_ln190_fu_2506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_0_reg_1671),64));
    zext_ln196_1_fu_3221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_3213_p3),64));
    zext_ln196_fu_2703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_2695_p3),64));
    zext_ln204_1_fu_3252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_3244_p3),5));
    zext_ln204_2_fu_3262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln204_8_fu_3256_p2),64));
    zext_ln204_3_fu_3287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_3279_p3),5));
    zext_ln204_4_fu_3297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln204_9_fu_3291_p2),64));
    zext_ln204_5_fu_3322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_3314_p3),5));
    zext_ln204_6_fu_3332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln204_10_fu_3326_p2),64));
    zext_ln204_7_fu_3357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_3349_p3),5));
    zext_ln204_8_fu_3367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln204_11_fu_3361_p2),64));
    zext_ln204_fu_2734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_2726_p3),64));
    zext_ln211_1_fu_3390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln211_fu_3384_p2),64));
    zext_ln211_fu_2856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j11_0_0_reg_1761),64));
    zext_ln218_1_fu_3414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln218_fu_3408_p2),64));
    zext_ln218_fu_2874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i12_0_0_reg_1772),64));
end behav;
