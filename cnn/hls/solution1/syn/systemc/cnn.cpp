// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> cnn::ap_ST_fsm_state1 = "1";
const sc_lv<35> cnn::ap_ST_fsm_state2 = "10";
const sc_lv<35> cnn::ap_ST_fsm_state3 = "100";
const sc_lv<35> cnn::ap_ST_fsm_state4 = "1000";
const sc_lv<35> cnn::ap_ST_fsm_state5 = "10000";
const sc_lv<35> cnn::ap_ST_fsm_state6 = "100000";
const sc_lv<35> cnn::ap_ST_fsm_state7 = "1000000";
const sc_lv<35> cnn::ap_ST_fsm_state8 = "10000000";
const sc_lv<35> cnn::ap_ST_fsm_state9 = "100000000";
const sc_lv<35> cnn::ap_ST_fsm_state10 = "1000000000";
const sc_lv<35> cnn::ap_ST_fsm_state11 = "10000000000";
const sc_lv<35> cnn::ap_ST_fsm_state12 = "100000000000";
const sc_lv<35> cnn::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<35> cnn::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<32> cnn::ap_const_lv32_2 = "10";
const sc_lv<32> cnn::ap_const_lv32_21 = "100001";
const sc_lv<32> cnn::ap_const_lv32_1 = "1";
const sc_lv<32> cnn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cnn::ap_const_lv32_22 = "100010";
const bool cnn::ap_const_boolean_1 = true;

cnn::cnn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_kernel_fu_226 = new kernel("grp_kernel_fu_226");
    grp_kernel_fu_226->ap_clk(ap_clk);
    grp_kernel_fu_226->ap_rst(ap_rst_n_inv);
    grp_kernel_fu_226->ap_start(grp_kernel_fu_226_ap_start);
    grp_kernel_fu_226->ap_done(grp_kernel_fu_226_ap_done);
    grp_kernel_fu_226->ap_idle(grp_kernel_fu_226_ap_idle);
    grp_kernel_fu_226->ap_ready(grp_kernel_fu_226_ap_ready);
    grp_kernel_fu_226->in_r_TDATA(in_r_TDATA_int);
    grp_kernel_fu_226->in_r_TVALID(in_r_TVALID_int);
    grp_kernel_fu_226->in_r_TREADY(grp_kernel_fu_226_in_r_TREADY);
    grp_kernel_fu_226->in_r_TKEEP(in_r_TKEEP_int);
    grp_kernel_fu_226->in_r_TSTRB(in_r_TSTRB_int);
    grp_kernel_fu_226->in_r_TLAST(in_r_TLAST_int);
    grp_kernel_fu_226->weights_TDATA(weights_TDATA_int);
    grp_kernel_fu_226->weights_TVALID(weights_TVALID_int);
    grp_kernel_fu_226->weights_TREADY(grp_kernel_fu_226_weights_TREADY);
    grp_kernel_fu_226->weights_TKEEP(weights_TKEEP_int);
    grp_kernel_fu_226->weights_TSTRB(weights_TSTRB_int);
    grp_kernel_fu_226->weights_TLAST(weights_TLAST_int);
    grp_kernel_fu_226->out_r_TDATA(grp_kernel_fu_226_out_r_TDATA);
    grp_kernel_fu_226->out_r_TVALID(grp_kernel_fu_226_out_r_TVALID);
    grp_kernel_fu_226->out_r_TREADY(grp_kernel_fu_226_out_r_TREADY);
    grp_kernel_fu_226->out_r_TKEEP(grp_kernel_fu_226_out_r_TKEEP);
    grp_kernel_fu_226->out_r_TSTRB(grp_kernel_fu_226_out_r_TSTRB);
    grp_kernel_fu_226->out_r_TLAST(grp_kernel_fu_226_out_r_TLAST);
    grp_kernel_fu_226->in_r_TDATA_blk_n(grp_kernel_fu_226_in_r_TDATA_blk_n);
    grp_kernel_fu_226->weights_TDATA_blk_n(grp_kernel_fu_226_weights_TDATA_blk_n);
    grp_kernel_fu_226->out_r_TDATA_blk_n(grp_kernel_fu_226_out_r_TDATA_blk_n);
    grp_kernel_fu_226->ap_ce(grp_kernel_fu_226_ap_ce);
    regslice_both_in_V_data_V_U = new regslice_both<64>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<8>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<8>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);
    regslice_both_weights_V_data_V_U = new regslice_both<128>("regslice_both_weights_V_data_V_U");
    regslice_both_weights_V_data_V_U->ap_clk(ap_clk);
    regslice_both_weights_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_weights_V_data_V_U->data_in(weights_TDATA);
    regslice_both_weights_V_data_V_U->vld_in(weights_TVALID);
    regslice_both_weights_V_data_V_U->ack_in(regslice_both_weights_V_data_V_U_ack_in);
    regslice_both_weights_V_data_V_U->data_out(weights_TDATA_int);
    regslice_both_weights_V_data_V_U->vld_out(weights_TVALID_int);
    regslice_both_weights_V_data_V_U->ack_out(weights_TREADY_int);
    regslice_both_weights_V_data_V_U->apdone_blk(regslice_both_weights_V_data_V_U_apdone_blk);
    regslice_both_weights_V_keep_V_U = new regslice_both<16>("regslice_both_weights_V_keep_V_U");
    regslice_both_weights_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_weights_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_weights_V_keep_V_U->data_in(weights_TKEEP);
    regslice_both_weights_V_keep_V_U->vld_in(weights_TVALID);
    regslice_both_weights_V_keep_V_U->ack_in(regslice_both_weights_V_keep_V_U_ack_in);
    regslice_both_weights_V_keep_V_U->data_out(weights_TKEEP_int);
    regslice_both_weights_V_keep_V_U->vld_out(regslice_both_weights_V_keep_V_U_vld_out);
    regslice_both_weights_V_keep_V_U->ack_out(weights_TREADY_int);
    regslice_both_weights_V_keep_V_U->apdone_blk(regslice_both_weights_V_keep_V_U_apdone_blk);
    regslice_both_weights_V_strb_V_U = new regslice_both<16>("regslice_both_weights_V_strb_V_U");
    regslice_both_weights_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_weights_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_weights_V_strb_V_U->data_in(weights_TSTRB);
    regslice_both_weights_V_strb_V_U->vld_in(weights_TVALID);
    regslice_both_weights_V_strb_V_U->ack_in(regslice_both_weights_V_strb_V_U_ack_in);
    regslice_both_weights_V_strb_V_U->data_out(weights_TSTRB_int);
    regslice_both_weights_V_strb_V_U->vld_out(regslice_both_weights_V_strb_V_U_vld_out);
    regslice_both_weights_V_strb_V_U->ack_out(weights_TREADY_int);
    regslice_both_weights_V_strb_V_U->apdone_blk(regslice_both_weights_V_strb_V_U_apdone_blk);
    regslice_both_weights_V_last_V_U = new regslice_both<1>("regslice_both_weights_V_last_V_U");
    regslice_both_weights_V_last_V_U->ap_clk(ap_clk);
    regslice_both_weights_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_weights_V_last_V_U->data_in(weights_TLAST);
    regslice_both_weights_V_last_V_U->vld_in(weights_TVALID);
    regslice_both_weights_V_last_V_U->ack_in(regslice_both_weights_V_last_V_U_ack_in);
    regslice_both_weights_V_last_V_U->data_out(weights_TLAST_int);
    regslice_both_weights_V_last_V_U->vld_out(regslice_both_weights_V_last_V_U_vld_out);
    regslice_both_weights_V_last_V_U->ack_out(weights_TREADY_int);
    regslice_both_weights_V_last_V_U->apdone_blk(regslice_both_weights_V_last_V_U_apdone_blk);
    regslice_both_out_V_data_V_U = new regslice_both<512>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_data_V_U->data_in(grp_kernel_fu_226_out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_in(grp_kernel_fu_226_out_r_TVALID);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<64>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_keep_V_U->data_in(grp_kernel_fu_226_out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_in(grp_kernel_fu_226_out_r_TVALID);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<64>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_strb_V_U->data_in(grp_kernel_fu_226_out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_in(grp_kernel_fu_226_out_r_TVALID);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_last_V_U->data_in(grp_kernel_fu_226_out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_in(grp_kernel_fu_226_out_r_TVALID);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state2);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( grp_kernel_fu_226_in_r_TDATA_blk_n );
    sensitive << ( grp_kernel_fu_226_weights_TDATA_blk_n );
    sensitive << ( grp_kernel_fu_226_out_r_TDATA_blk_n );

    SC_METHOD(thread_ap_block_state34);
    sensitive << ( grp_kernel_fu_226_in_r_TDATA_blk_n );
    sensitive << ( grp_kernel_fu_226_weights_TDATA_blk_n );
    sensitive << ( grp_kernel_fu_226_out_r_TDATA_blk_n );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_kernel_fu_226_ap_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_kernel_fu_226_ap_start);
    sensitive << ( grp_kernel_fu_226_ap_start_reg );

    SC_METHOD(thread_grp_kernel_fu_226_out_r_TREADY);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( grp_kernel_fu_226_in_r_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_kernel_fu_226_in_r_TREADY );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_kernel_fu_226_out_r_TDATA_blk_n );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_weights_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_kernel_fu_226_weights_TDATA_blk_n );

    SC_METHOD(thread_weights_TREADY);
    sensitive << ( weights_TVALID );
    sensitive << ( regslice_both_weights_V_data_V_U_ack_in );

    SC_METHOD(thread_weights_TREADY_int);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_kernel_fu_226_weights_TREADY );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( grp_kernel_fu_226_in_r_TDATA_blk_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_kernel_fu_226_weights_TDATA_blk_n );
    sensitive << ( grp_kernel_fu_226_out_r_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000000000000000000000001";
    grp_kernel_fu_226_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, weights_TDATA, "(port)weights_TDATA");
    sc_trace(mVcdFile, weights_TVALID, "(port)weights_TVALID");
    sc_trace(mVcdFile, weights_TREADY, "(port)weights_TREADY");
    sc_trace(mVcdFile, weights_TKEEP, "(port)weights_TKEEP");
    sc_trace(mVcdFile, weights_TSTRB, "(port)weights_TSTRB");
    sc_trace(mVcdFile, weights_TLAST, "(port)weights_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, grp_kernel_fu_226_in_r_TDATA_blk_n, "grp_kernel_fu_226_in_r_TDATA_blk_n");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_kernel_fu_226_weights_TDATA_blk_n, "grp_kernel_fu_226_weights_TDATA_blk_n");
    sc_trace(mVcdFile, weights_TDATA_blk_n, "weights_TDATA_blk_n");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TDATA_blk_n, "grp_kernel_fu_226_out_r_TDATA_blk_n");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_start, "grp_kernel_fu_226_ap_start");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_done, "grp_kernel_fu_226_ap_done");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_idle, "grp_kernel_fu_226_ap_idle");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_ready, "grp_kernel_fu_226_ap_ready");
    sc_trace(mVcdFile, grp_kernel_fu_226_in_r_TREADY, "grp_kernel_fu_226_in_r_TREADY");
    sc_trace(mVcdFile, grp_kernel_fu_226_weights_TREADY, "grp_kernel_fu_226_weights_TREADY");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TDATA, "grp_kernel_fu_226_out_r_TDATA");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TVALID, "grp_kernel_fu_226_out_r_TVALID");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TREADY, "grp_kernel_fu_226_out_r_TREADY");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TKEEP, "grp_kernel_fu_226_out_r_TKEEP");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TSTRB, "grp_kernel_fu_226_out_r_TSTRB");
    sc_trace(mVcdFile, grp_kernel_fu_226_out_r_TLAST, "grp_kernel_fu_226_out_r_TLAST");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_ce, "grp_kernel_fu_226_ap_ce");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state34, "ap_block_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_kernel_fu_226_ap_start_reg, "grp_kernel_fu_226_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state2, "ap_NS_fsm_state2");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_weights_V_data_V_U_apdone_blk, "regslice_both_weights_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, weights_TDATA_int, "weights_TDATA_int");
    sc_trace(mVcdFile, weights_TVALID_int, "weights_TVALID_int");
    sc_trace(mVcdFile, weights_TREADY_int, "weights_TREADY_int");
    sc_trace(mVcdFile, regslice_both_weights_V_data_V_U_ack_in, "regslice_both_weights_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_weights_V_keep_V_U_apdone_blk, "regslice_both_weights_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, weights_TKEEP_int, "weights_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_weights_V_keep_V_U_vld_out, "regslice_both_weights_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_weights_V_keep_V_U_ack_in, "regslice_both_weights_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_weights_V_strb_V_U_apdone_blk, "regslice_both_weights_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, weights_TSTRB_int, "weights_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_weights_V_strb_V_U_vld_out, "regslice_both_weights_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_weights_V_strb_V_U_ack_in, "regslice_both_weights_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_weights_V_last_V_U_apdone_blk, "regslice_both_weights_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, weights_TLAST_int, "weights_TLAST_int");
    sc_trace(mVcdFile, regslice_both_weights_V_last_V_U_vld_out, "regslice_both_weights_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_weights_V_last_V_U_ack_in, "regslice_both_weights_V_last_V_U_ack_in");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("cnn.hdltvin.dat");
    mHdltvoutHandle.open("cnn.hdltvout.dat");
}

cnn::~cnn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_kernel_fu_226;
    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
    delete regslice_both_weights_V_data_V_U;
    delete regslice_both_weights_V_keep_V_U;
    delete regslice_both_weights_V_strb_V_U;
    delete regslice_both_weights_V_last_V_U;
    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void cnn::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_kernel_fu_226_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state2.read()))) {
            grp_kernel_fu_226_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_kernel_fu_226_ap_ready.read())) {
            grp_kernel_fu_226_ap_start_reg = ap_const_logic_0;
        }
    }
}

void cnn::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cnn::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cnn::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void cnn::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void cnn::thread_ap_NS_fsm_state2() {
    ap_NS_fsm_state2 = ap_NS_fsm.read()[1];
}

void cnn::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_in_r_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_weights_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_out_r_TDATA_blk_n.read()));
}

void cnn::thread_ap_block_state34() {
    ap_block_state34 = (esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_in_r_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_weights_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_out_r_TDATA_blk_n.read()));
}

void cnn::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn::thread_grp_kernel_fu_226_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        grp_kernel_fu_226_ap_ce = ap_const_logic_0;
    } else {
        grp_kernel_fu_226_ap_ce = ap_const_logic_1;
    }
}

void cnn::thread_grp_kernel_fu_226_ap_start() {
    grp_kernel_fu_226_ap_start = grp_kernel_fu_226_ap_start_reg.read();
}

void cnn::thread_grp_kernel_fu_226_out_r_TREADY() {
    grp_kernel_fu_226_out_r_TREADY = (ap_CS_fsm_state34.read() & out_r_TREADY_int.read());
}

void cnn::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        in_r_TDATA_blk_n = grp_kernel_fu_226_in_r_TDATA_blk_n.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void cnn::thread_in_r_TREADY_int() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_r_TREADY_int = grp_kernel_fu_226_in_r_TREADY.read();
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void cnn::thread_out_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        out_r_TDATA_blk_n = grp_kernel_fu_226_out_r_TDATA_blk_n.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void cnn::thread_weights_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        weights_TDATA_blk_n = grp_kernel_fu_226_weights_TDATA_blk_n.read();
    } else {
        weights_TDATA_blk_n = ap_const_logic_1;
    }
}

void cnn::thread_weights_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, weights_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_weights_V_data_V_U_ack_in.read()))) {
        weights_TREADY = ap_const_logic_1;
    } else {
        weights_TREADY = ap_const_logic_0;
    }
}

void cnn::thread_weights_TREADY_int() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        weights_TREADY_int = grp_kernel_fu_226_weights_TREADY.read();
    } else {
        weights_TREADY_int = ap_const_logic_0;
    }
}

void cnn::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_in_r_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_weights_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_out_r_TDATA_blk_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_in_r_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_weights_TDATA_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_kernel_fu_226_out_r_TDATA_blk_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void cnn::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weights_TDATA\" :  \"" << weights_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weights_TVALID\" :  \"" << weights_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"weights_TREADY\" :  \"" << weights_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weights_TKEEP\" :  \"" << weights_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weights_TSTRB\" :  \"" << weights_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"weights_TLAST\" :  \"" << weights_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

