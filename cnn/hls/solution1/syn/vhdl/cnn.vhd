-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=29,HLS_SYN_TPT=9,HLS_SYN_MEM=42,HLS_SYN_DSP=35,HLS_SYN_FF=22175,HLS_SYN_LUT=37147,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal grp_kernel_fu_194_in_r_TDATA_blk_n : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_kernel_fu_194_out_r_TDATA_blk_n : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter2 : BOOLEAN;
    signal regslice_both_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state30_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_kernel_fu_194_ap_start : STD_LOGIC;
    signal grp_kernel_fu_194_ap_done : STD_LOGIC;
    signal grp_kernel_fu_194_ap_idle : STD_LOGIC;
    signal grp_kernel_fu_194_ap_ready : STD_LOGIC;
    signal grp_kernel_fu_194_ap_ce : STD_LOGIC;
    signal grp_kernel_fu_194_in_r_TREADY : STD_LOGIC;
    signal grp_kernel_fu_194_out_r_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_kernel_fu_194_out_r_TVALID : STD_LOGIC;
    signal grp_kernel_fu_194_out_r_TREADY : STD_LOGIC;
    signal grp_kernel_fu_194_out_r_TKEEP : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_kernel_fu_194_out_r_TSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_kernel_fu_194_out_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter3_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp31 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter3_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp32 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp33 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp34 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp35 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state25_pp0_stage6_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp36 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state26_pp0_stage7_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp37 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state18_pp0_stage8_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state27_pp0_stage8_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage8_11001_ignoreCallOp38 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter3_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp39 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal grp_kernel_fu_194_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal in_r_TVALID_int : STD_LOGIC;
    signal in_r_TREADY_int : STD_LOGIC;
    signal regslice_both_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_last_V_U_ack_in : STD_LOGIC;
    signal out_r_TREADY_int : STD_LOGIC;
    signal regslice_both_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_vld_out : STD_LOGIC;

    component kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TVALID : IN STD_LOGIC;
        in_r_TREADY : OUT STD_LOGIC;
        in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        in_r_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        out_r_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_r_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        in_r_TDATA_blk_n : OUT STD_LOGIC;
        out_r_TDATA_blk_n : OUT STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_kernel_fu_194 : component kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_fu_194_ap_start,
        ap_done => grp_kernel_fu_194_ap_done,
        ap_idle => grp_kernel_fu_194_ap_idle,
        ap_ready => grp_kernel_fu_194_ap_ready,
        ap_ce => grp_kernel_fu_194_ap_ce,
        in_r_TDATA => in_r_TDATA_int,
        in_r_TVALID => in_r_TVALID_int,
        in_r_TREADY => grp_kernel_fu_194_in_r_TREADY,
        in_r_TKEEP => in_r_TKEEP_int,
        in_r_TSTRB => in_r_TSTRB_int,
        in_r_TLAST => in_r_TLAST_int,
        out_r_TDATA => grp_kernel_fu_194_out_r_TDATA,
        out_r_TVALID => grp_kernel_fu_194_out_r_TVALID,
        out_r_TREADY => grp_kernel_fu_194_out_r_TREADY,
        out_r_TKEEP => grp_kernel_fu_194_out_r_TKEEP,
        out_r_TSTRB => grp_kernel_fu_194_out_r_TSTRB,
        out_r_TLAST => grp_kernel_fu_194_out_r_TLAST,
        in_r_TDATA_blk_n => grp_kernel_fu_194_in_r_TDATA_blk_n,
        out_r_TDATA_blk_n => grp_kernel_fu_194_out_r_TDATA_blk_n);

    regslice_both_in_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_data_V_U_ack_in,
        data_out => in_r_TDATA_int,
        vld_out => in_r_TVALID_int,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_V_data_V_U_apdone_blk);

    regslice_both_in_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TKEEP,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_keep_V_U_ack_in,
        data_out => in_r_TKEEP_int,
        vld_out => regslice_both_in_V_keep_V_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_V_keep_V_U_apdone_blk);

    regslice_both_in_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TSTRB,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_strb_V_U_ack_in,
        data_out => in_r_TSTRB_int,
        vld_out => regslice_both_in_V_strb_V_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_V_strb_V_U_apdone_blk);

    regslice_both_in_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TLAST,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_last_V_U_ack_in,
        data_out => in_r_TLAST_int,
        vld_out => regslice_both_in_V_last_V_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_V_last_V_U_apdone_blk);

    regslice_both_out_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_kernel_fu_194_out_r_TDATA,
        vld_in => grp_kernel_fu_194_out_r_TVALID,
        ack_in => out_r_TREADY_int,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_V_data_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_data_V_U_apdone_blk);

    regslice_both_out_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_kernel_fu_194_out_r_TKEEP,
        vld_in => grp_kernel_fu_194_out_r_TVALID,
        ack_in => regslice_both_out_V_keep_V_U_ack_in_dummy,
        data_out => out_r_TKEEP,
        vld_out => regslice_both_out_V_keep_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_keep_V_U_apdone_blk);

    regslice_both_out_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_kernel_fu_194_out_r_TSTRB,
        vld_in => grp_kernel_fu_194_out_r_TVALID,
        ack_in => regslice_both_out_V_strb_V_U_ack_in_dummy,
        data_out => out_r_TSTRB,
        vld_out => regslice_both_out_V_strb_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_strb_V_U_apdone_blk);

    regslice_both_out_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_kernel_fu_194_out_r_TLAST,
        vld_in => grp_kernel_fu_194_out_r_TVALID,
        ack_in => regslice_both_out_V_last_V_U_ack_in_dummy,
        data_out => out_r_TLAST,
        vld_out => regslice_both_out_V_last_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_fu_194_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_fu_194_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_kernel_fu_194_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_fu_194_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_fu_194_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage8_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, ap_enable_reg_pp0_iter3, grp_kernel_fu_194_out_r_TDATA_blk_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1_11001_ignoreCallOp31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, ap_enable_reg_pp0_iter3, grp_kernel_fu_194_out_r_TDATA_blk_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, ap_enable_reg_pp0_iter3, grp_kernel_fu_194_out_r_TDATA_blk_n, regslice_both_out_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage2_11001 <= (((regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_const_logic_1) and ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp32_assign_proc : process(ap_enable_reg_pp0_iter3, regslice_both_out_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp32 <= ((regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, ap_enable_reg_pp0_iter3, grp_kernel_fu_194_out_r_TDATA_blk_n, regslice_both_out_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage2_subdone <= (((regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_const_logic_1) and ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001_ignoreCallOp35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001_ignoreCallOp36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001_ignoreCallOp37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001_ignoreCallOp38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage8_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage3_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage4_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage5_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage6_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage7_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage8_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter3_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_pp0_stage1_iter3_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, grp_kernel_fu_194_out_r_TDATA_blk_n)
    begin
                ap_block_state29_pp0_stage1_iter3 <= ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0));
    end process;

        ap_block_state29_pp0_stage1_iter3_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage2_iter3_assign_proc : process(regslice_both_out_V_data_V_U_apdone_blk)
    begin
                ap_block_state30_pp0_stage2_iter3 <= (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state30_pp0_stage2_iter3_ignore_call17_assign_proc : process(regslice_both_out_V_data_V_U_apdone_blk)
    begin
                ap_block_state30_pp0_stage2_iter3_ignore_call17 <= (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, grp_kernel_fu_194_out_r_TDATA_blk_n)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((grp_kernel_fu_194_out_r_TDATA_blk_n = ap_const_logic_0) or (grp_kernel_fu_194_in_r_TDATA_blk_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage2_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_kernel_fu_194_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage1_11001_ignoreCallOp31, ap_block_pp0_stage2_11001_ignoreCallOp32, ap_block_pp0_stage3_11001_ignoreCallOp33, ap_block_pp0_stage4_11001_ignoreCallOp34, ap_block_pp0_stage5_11001_ignoreCallOp35, ap_block_pp0_stage6_11001_ignoreCallOp36, ap_block_pp0_stage7_11001_ignoreCallOp37, ap_block_pp0_stage8_11001_ignoreCallOp38, ap_block_pp0_stage0_11001_ignoreCallOp39, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001_ignoreCallOp38)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp31)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp32)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp39)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp37)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp36)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp35)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp34)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp33)))) then 
            grp_kernel_fu_194_ap_ce <= ap_const_logic_1;
        else 
            grp_kernel_fu_194_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_kernel_fu_194_ap_start <= grp_kernel_fu_194_ap_start_reg;
    grp_kernel_fu_194_out_r_TREADY <= (out_r_TREADY_int and ap_CS_fsm_pp0_stage1);

    in_r_TDATA_blk_n_assign_proc : process(grp_kernel_fu_194_in_r_TDATA_blk_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            in_r_TDATA_blk_n <= grp_kernel_fu_194_in_r_TDATA_blk_n;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, regslice_both_in_V_data_V_U_ack_in)
    begin
        if (((in_r_TVALID = ap_const_logic_1) and (regslice_both_in_V_data_V_U_ack_in = ap_const_logic_1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_kernel_fu_194_in_r_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            in_r_TREADY_int <= grp_kernel_fu_194_in_r_TREADY;
        else 
            in_r_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_block_pp0_stage1, grp_kernel_fu_194_out_r_TDATA_blk_n)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_r_TDATA_blk_n <= grp_kernel_fu_194_out_r_TDATA_blk_n;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_V_data_V_U_vld_out;
end behav;
