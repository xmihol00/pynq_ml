-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbVr_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbVr_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0001110", 1 => "0000010", 2 => "1111100", 3 => "0000111", 
    4 => "1101101", 5 => "1101111", 6 => "0010010", 7 => "0000010", 
    8 => "0001100", 9 => "0000011", 10 => "1110010", 11 => "1111000", 
    12 => "0000001", 13 => "0011000", 14 => "0000001", 15 => "0000010", 
    16 => "0000011", 17 => "0000100", 18 => "0001100", 19 => "0001101", 
    20 => "1111011", 21 => "0001001", 22 => "1111000", 23 => "0000101", 
    24 => "0001111", 25 => "0001100", 26 => "0010000", 27 => "1111101", 
    28 => "1111001", 29 => "1110001", 30 => "0001010", 31 => "1111001", 
    32 => "0010010", 33 => "0000111", 34 => "0000110", 35 => "1111001", 
    36 => "1111100", 37 => "0010000", 38 => "1111110", 39 => "0100110", 
    40 => "0000110", 41 => "0011011", 42 => "1111101", 43 => "0000110", 
    44 => "0011111", 45 => "0010001", 46 => "0001100", 47 => "0011001", 
    48 => "0011101", 49 => "1101001", 50 => "1101000", 51 => "0001111", 
    52 => "0001000", 53 => "0000001", 54 => "0001000", 55 => "1110011", 
    56 => "0001010", 57 => "1101111", 58 => "0000111", 59 to 60=> "1101101", 
    61 => "0001110", 62 => "0011011", 63 => "0000010", 64 => "0010011", 
    65 => "0111010", 66 => "0110000", 67 => "0101000", 68 => "0101110", 
    69 => "0001111", 70 => "0011101", 71 to 72=> "0010100", 73 => "0000110", 
    74 => "1100101", 75 => "1101011", 76 => "1101110", 77 to 78=> "0000110", 
    79 => "0001110", 80 => "0001001", 81 => "0011101", 82 => "1110011", 
    83 => "1110111", 84 => "0000110", 85 => "1111110", 86 => "0001011", 
    87 => "1101110", 88 => "0000110", 89 => "1110001", 90 => "0011001", 
    91 => "0000000", 92 => "0000001", 93 => "0010000", 94 => "1111001", 
    95 => "0001101", 96 => "1111001", 97 => "0000011", 98 => "0101000", 
    99 => "0000011", 100 => "0011110", 101 => "1110100", 102 => "1101010", 
    103 => "0000010", 104 => "1110111", 105 => "1100101", 106 => "1100000", 
    107 => "1111110", 108 => "0010010", 109 => "0000101", 110 => "0011001", 
    111 => "1110001", 112 => "0001110", 113 => "1110011", 114 => "0000001", 
    115 => "1110100", 116 => "0000100", 117 => "0001011", 118 => "0100011", 
    119 => "0010101", 120 => "0001010", 121 => "1111110", 122 => "0010001", 
    123 => "0001101", 124 to 125=> "0000100", 126 => "0001011", 127 => "0001110", 
    128 => "0000101", 129 => "0010111", 130 => "0000000", 131 => "0011001", 
    132 to 133=> "1111100", 134 => "0000111", 135 => "1110010", 136 => "1110011", 
    137 => "1011110", 138 => "1101101", 139 => "0001101", 140 => "0010000", 
    141 => "1111101", 142 => "0011111", 143 => "0001111", 144 => "0000001", 
    145 => "0001000", 146 => "0001110", 147 => "0000010", 148 => "0010000", 
    149 => "1111011", 150 to 151=> "1111110", 152 => "1100111", 153 => "0000000", 
    154 => "1101011", 155 => "0001100", 156 => "0001011", 157 => "0001110", 
    158 => "0011011", 159 => "0010100", 160 => "0001010", 161 => "0001000", 
    162 => "0000011", 163 => "0011001", 164 => "0000101", 165 => "0010111", 
    166 => "0011000", 167 => "0011001", 168 => "0000001", 169 => "0001001", 
    170 => "0001010", 171 => "1101110", 172 => "1111110", 173 => "1110011", 
    174 => "1110001", 175 => "1011010", 176 => "1101101", 177 => "1101010", 
    178 => "1110101", 179 => "1101011", 180 => "1110001", 181 => "1110011", 
    182 => "1100100", 183 => "1110110", 184 => "0010010", 185 => "0001011", 
    186 => "1111110", 187 => "0000000", 188 => "1110111", 189 => "0001010", 
    190 => "0010111", 191 => "1110001", 192 => "0000100", 193 => "0001101", 
    194 => "1111100", 195 => "0000011", 196 => "1111011", 197 => "0001011", 
    198 => "1110011", 199 => "1101010", 200 => "0100010", 201 => "1011000", 
    202 => "1101010", 203 => "1011100", 204 => "1100110", 205 => "1111110", 
    206 => "1111000", 207 => "0000010", 208 => "0000110", 209 => "1110101", 
    210 => "1101101", 211 => "1101110", 212 => "0000110", 213 => "0000000", 
    214 => "0001100", 215 => "0010000", 216 => "1111100", 217 => "1111001", 
    218 => "0001111", 219 => "0001010", 220 => "0001001", 221 => "0000000", 
    222 => "1110110", 223 => "0000100", 224 => "0001001", 225 => "0000000", 
    226 => "0010100", 227 => "1111001", 228 => "0000011", 229 to 230=> "1111001", 
    231 => "1100000", 232 => "1101101", 233 => "1101011", 234 => "0010000", 
    235 => "0001000", 236 => "1111010", 237 => "0000001", 238 => "1111011", 
    239 => "1100101", 240 => "1111010", 241 => "0010011", 242 => "1111110", 
    243 => "1110110", 244 => "1110111", 245 => "1110011", 246 => "1101100", 
    247 => "0000010", 248 => "0001000", 249 => "1110000", 250 => "1100001", 
    251 => "1110001", 252 => "0000111", 253 => "1110001", 254 => "0001110", 
    255 => "0000111", 256 => "1111101", 257 => "0001001", 258 => "1100110", 
    259 => "1111100", 260 => "1110100", 261 => "0001000", 262 => "0001011", 
    263 => "1110111", 264 => "1110000", 265 => "1110110", 266 => "1101000", 
    267 => "1110000", 268 => "0000101", 269 to 270=> "0001000", 271 => "0010110", 
    272 => "0000110", 273 => "1110101", 274 to 275=> "1101000", 276 => "1010101", 
    277 => "1000101", 278 => "1011100", 279 => "1110100", 280 => "0000000", 
    281 => "1101101", 282 => "0000100", 283 => "1111100", 284 => "1110100", 
    285 => "0011100", 286 => "0010010", 287 => "1111001", 288 => "1110001", 
    289 => "1110000", 290 => "1101111", 291 => "1110101", 292 => "1101011", 
    293 => "1010100", 294 => "1101000", 295 => "1111101", 296 => "0000010", 
    297 => "0000101", 298 => "0011000", 299 => "0000000", 300 => "1110111", 
    301 => "1100101", 302 => "1101011", 303 => "1110011", 304 => "1100011", 
    305 => "1011001", 306 => "1101100", 307 => "1110001", 308 => "1110000", 
    309 => "0001011", 310 => "1110011", 311 => "1101101", 312 => "1111100", 
    313 => "0011101", 314 => "0100010", 315 => "1110110", 316 => "1101101", 
    317 => "1111100", 318 => "1111010", 319 => "1101001", 320 => "1011000", 
    321 => "1100101", 322 => "1011100", 323 => "0000001", 324 => "0000011", 
    325 => "0001000", 326 => "0010110", 327 => "0011001", 328 => "1110110", 
    329 => "0001010", 330 => "0000000", 331 => "1110100", 332 => "1111000", 
    333 => "0001010", 334 => "1010101", 335 => "1100011", 336 => "1110011", 
    337 => "1101000", 338 => "1110110", 339 => "0001000", 340 => "1111110", 
    341 => "1111101", 342 => "0010010", 343 => "1111001", 344 => "0000100", 
    345 => "1110101", 346 => "1111111", 347 => "1111100", 348 => "1011011", 
    349 => "1011110", 350 => "1101001", 351 => "1111000", 352 => "1110101", 
    353 => "1111110", 354 => "0000101", 355 => "0001101", 356 => "1101000", 
    357 => "0001111", 358 => "1111011", 359 => "1101100", 360 => "1101011", 
    361 => "0010001", 362 to 363=> "1110111", 364 => "1111100", 365 => "0000011", 
    366 => "0000100", 367 => "1111101", 368 => "0001110", 369 => "1101001", 
    370 => "0001000", 371 => "1111010", 372 => "0010001", 373 => "0001101", 
    374 => "1111000", 375 => "1110011", 376 => "1110101", 377 => "0001111", 
    378 => "1110000", 379 => "1101001", 380 => "1110100", 381 => "1111100", 
    382 => "0001001", 383 => "1111011", 384 => "0000101", 385 => "0011000", 
    386 => "0011001", 387 => "1110111", 388 => "1111100", 389 => "0001000", 
    390 => "1110101", 391 => "0001011", 392 => "0011001", 393 => "0000001", 
    394 => "1010100", 395 => "0011111", 396 => "0010001", 397 => "0011010", 
    398 => "0010110", 399 => "0011010", 400 => "0010101", 401 => "0000011", 
    402 => "0010011", 403 => "0100010", 404 => "0010011", 405 => "0010101", 
    406 => "1110000", 407 => "1101110", 408 => "0001100", 409 => "0010000", 
    410 => "0010110", 411 => "1101001", 412 => "1110001", 413 => "0011001", 
    414 => "0001111", 415 => "0000101", 416 => "1111111", 417 => "0011111", 
    418 => "0100101", 419 => "0000100", 420 => "0001011", 421 => "0001101", 
    422 => "0010011", 423 => "0001010", 424 => "1111010", 425 => "0011010", 
    426 => "0001001", 427 => "1111001", 428 => "0010100", 429 => "0011100", 
    430 => "0100100", 431 to 433=> "0011100", 434 => "1110100", 435 => "0000000", 
    436 => "1110010", 437 => "0001001", 438 => "1101111", 439 => "0010101", 
    440 => "0001001", 441 => "1110100", 442 => "0001010", 443 => "1110110", 
    444 => "0000001", 445 => "0011101", 446 => "0010110", 447 => "0001010", 
    448 => "0010010", 449 => "1111011", 450 => "0010100", 451 => "0010010", 
    452 => "1111011", 453 => "0000000", 454 => "1101111", 455 => "0000111", 
    456 => "0001101", 457 => "0010111", 458 => "0011011", 459 => "0101110", 
    460 => "0100001", 461 => "0010000", 462 => "0000110", 463 => "1111011", 
    464 => "0001100", 465 => "0001111", 466 => "1111001", 467 => "0000110", 
    468 => "0000011", 469 => "0001100", 470 => "1111011", 471 => "1110011", 
    472 => "0000010", 473 => "0111010", 474 => "0011011", 475 => "0001011", 
    476 => "1110011", 477 => "1110111", 478 => "1110110", 479 => "1111100", 
    480 => "0001110", 481 => "0001010", 482 => "1100111", 483 => "0001011", 
    484 => "1110111", 485 => "0000001", 486 => "0010110", 487 => "0011111", 
    488 => "0010111", 489 => "1111101", 490 => "0001000", 491 => "0010011", 
    492 => "0001111", 493 => "0010001", 494 => "0001010", 495 => "1110000", 
    496 => "1111111", 497 to 498=> "0001011", 499 => "0001000", 500 => "1110100", 
    501 => "0011011", 502 => "0011001", 503 => "0110010", 504 => "0000001", 
    505 => "0000100", 506 => "1110001", 507 => "0100010", 508 => "0000001", 
    509 => "0000100", 510 => "0000110", 511 => "1110110", 512 => "0001010", 
    513 => "0010000", 514 => "0100000", 515 => "1111111", 516 => "0010000", 
    517 => "0010101", 518 => "1111100", 519 => "0000010", 520 => "1101110", 
    521 => "1110100", 522 => "1111010", 523 => "0000101", 524 => "1110100", 
    525 => "0000110", 526 => "0010100", 527 => "0000000", 528 => "0001000", 
    529 => "0010101", 530 => "1110011", 531 => "0101001", 532 => "0001000", 
    533 => "1110000", 534 => "0000010", 535 => "1111110", 536 => "0011101", 
    537 => "0000100", 538 => "0000101", 539 to 540=> "1110101", 541 to 542=> "0001001", 
    543 => "0011000", 544 => "0010010", 545 => "1110111", 546 => "0010110", 
    547 => "0001010", 548 => "0001111", 549 => "1110000", 550 => "0000011", 
    551 => "0000110", 552 => "1110111", 553 => "0000100", 554 => "0011100", 
    555 => "0001000", 556 => "1110100", 557 => "0001011", 558 => "0010011", 
    559 => "0001101", 560 => "1111001", 561 => "1111000", 562 => "0001010", 
    563 => "0010111", 564 => "0011101", 565 => "0011001", 566 => "1110110", 
    567 => "0010110", 568 => "0001010", 569 => "0000110", 570 => "0011010", 
    571 => "0000110", 572 => "0001111", 573 => "1110101", 574 => "0010010", 
    575 => "0011001", 576 => "1111110", 577 => "0001001", 578 to 579=> "0001100", 
    580 => "0001110", 581 => "0011001", 582 => "0010010", 583 => "0001110", 
    584 => "0000001", 585 => "0000111", 586 => "0010001", 587 => "0001100", 
    588 => "1111010", 589 => "0001100", 590 => "0011000", 591 => "0011100", 
    592 => "0101101", 593 => "0000100", 594 => "1110101", 595 => "1111100", 
    596 => "0011010", 597 => "0010001", 598 => "0001100", 599 => "0001000", 
    600 => "0010011", 601 => "1111010", 602 => "0001111", 603 => "0001110", 
    604 => "0100110", 605 => "0100000", 606 => "0010010", 607 => "0001100", 
    608 => "0000010", 609 => "0000110", 610 => "0011000", 611 => "0101010", 
    612 => "0001100", 613 => "0000011", 614 => "0111010", 615 => "1111001", 
    616 => "0000010", 617 => "0000101", 618 => "0000010", 619 to 620=> "0100100", 
    621 => "0101100", 622 => "0001101", 623 => "1111101", 624 => "0001111", 
    625 => "1110110", 626 => "0010100", 627 => "0011010", 628 => "0001010", 
    629 => "1111101", 630 => "1111011", 631 => "1110111", 632 => "0001011", 
    633 to 634=> "1110111", 635 => "0010001", 636 => "0000111", 637 => "0010001", 
    638 => "0001011", 639 => "0010100", 640 => "1101110", 641 => "0001101", 
    642 => "0110100", 643 => "1110000", 644 => "1111111", 645 => "0001111", 
    646 => "0000011", 647 to 648=> "0000101", 649 => "1110000", 650 => "1111011", 
    651 => "0000101", 652 => "1111111", 653 => "0000011", 654 => "1111000", 
    655 => "1110100", 656 => "1111111", 657 => "0000011", 658 => "0000111", 
    659 => "1101010", 660 => "1101110", 661 => "1101001", 662 => "1110111", 
    663 => "0000101", 664 => "0000111", 665 => "0010110", 666 => "0010011", 
    667 => "0001110", 668 => "1101111", 669 => "0001111", 670 => "0001011", 
    671 => "0010000", 672 => "1111011", 673 => "1111110", 674 => "1111000", 
    675 => "0001110", 676 => "0001001", 677 => "1100001", 678 => "1011100", 
    679 => "1100101", 680 => "1101110", 681 => "0000101", 682 => "0000111", 
    683 => "1101001", 684 => "1101010", 685 => "1010000", 686 => "1110011", 
    687 => "1110100", 688 => "1111001", 689 => "1110101", 690 to 691=> "1110010", 
    692 => "1110000", 693 => "0000011", 694 => "0000001", 695 to 696=> "0001001", 
    697 => "0001100", 698 => "0000011", 699 => "1111100", 700 => "0000011", 
    701 => "1111111", 702 => "0101101", 703 => "1101110", 704 => "1000111", 
    705 => "1011110", 706 => "1011011", 707 => "1100101", 708 => "1100111", 
    709 => "1011011", 710 => "1001010", 711 => "1010111", 712 => "1110010", 
    713 => "1101110", 714 => "1110010", 715 => "0000010", 716 => "1101100", 
    717 => "1100111", 718 => "1100000", 719 => "1110010", 720 => "1110100", 
    721 => "1110101", 722 => "1101101", 723 => "1110101", 724 => "1101100", 
    725 => "1111000", 726 => "1111100", 727 => "1111101", 728 => "1110001", 
    729 => "1111100", 730 => "1101101", 731 => "0000110", 732 => "0010010", 
    733 => "0000110", 734 => "1111111", 735 => "0001001", 736 => "0011000", 
    737 => "0001000", 738 => "1100010", 739 => "1111011", 740 => "0100010", 
    741 => "1111011", 742 => "1100110", 743 => "1010110", 744 => "1111001", 
    745 => "1101011", 746 to 747=> "1110011", 748 => "0001010", 749 => "0000001", 
    750 => "1011000", 751 => "1111110", 752 to 753=> "0010001", 754 => "0000101", 
    755 => "0000011", 756 => "0001100", 757 => "0000100", 758 => "0000110", 
    759 => "0010001", 760 => "0000110", 761 => "0001100", 762 => "0001000", 
    763 => "0000111", 764 => "1111010", 765 => "0010100", 766 to 767=> "0000001", 
    768 => "0011000", 769 => "1101101", 770 => "0001111", 771 => "1011011", 
    772 => "1011111", 773 => "1100010", 774 => "0011011", 775 => "0001000", 
    776 => "0010111", 777 => "1101011", 778 => "1111000", 779 => "1011101", 
    780 => "0000110", 781 => "1111001", 782 => "0001111", 783 => "1111001" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbVr is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbVr is
    component mlp_l1_l1_weightsbVr_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbVr_rom_U :  component mlp_l1_l1_weightsbVr_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


