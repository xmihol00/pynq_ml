-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbwn_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbwn_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110100", 1 => "1111110", 2 => "1111101", 3 => "0000000", 
    4 => "1110001", 5 => "1110111", 6 => "1111101", 7 => "0000001", 
    8 => "1110010", 9 => "0001101", 10 => "1111110", 11 => "1111000", 
    12 => "0000000", 13 => "0001110", 14 => "0010110", 15 => "0000010", 
    16 => "1110110", 17 => "0001111", 18 => "1101110", 19 => "0001101", 
    20 => "0001111", 21 => "1111100", 22 => "1111000", 23 => "1111101", 
    24 => "1110110", 25 => "0000001", 26 => "1110001", 27 => "1110000", 
    28 => "1111101", 29 => "1111010", 30 => "0010010", 31 => "1101110", 
    32 => "1111110", 33 => "1111010", 34 => "0001100", 35 => "1111000", 
    36 => "0010110", 37 => "1110011", 38 => "0010011", 39 => "0000000", 
    40 => "1100001", 41 => "1111001", 42 => "0011111", 43 => "0010011", 
    44 => "0100111", 45 => "0100000", 46 => "1110110", 47 => "0100000", 
    48 => "0001001", 49 => "0010000", 50 => "1110110", 51 => "0001100", 
    52 => "0000000", 53 => "1101111", 54 => "0000110", 55 => "0000000", 
    56 => "1110101", 57 => "1111010", 58 => "1101111", 59 => "0000101", 
    60 => "1101100", 61 => "0001100", 62 => "0010010", 63 => "0001110", 
    64 => "0011010", 65 => "0011001", 66 => "0001110", 67 => "0011111", 
    68 => "0100110", 69 => "0110000", 70 => "0011011", 71 => "0011001", 
    72 => "0100010", 73 => "0100000", 74 => "0110100", 75 => "0011101", 
    76 => "0010001", 77 => "0011010", 78 => "1111000", 79 => "0001010", 
    80 => "0011010", 81 => "0010001", 82 => "0001100", 83 => "0010001", 
    84 => "0000100", 85 => "1111101", 86 => "1101111", 87 => "0000110", 
    88 => "1110111", 89 => "1111001", 90 => "0011001", 91 => "0010110", 
    92 => "0000101", 93 => "0101001", 94 => "0000011", 95 => "0001110", 
    96 => "0001111", 97 => "0011101", 98 => "1111101", 99 => "0000010", 
    100 => "0010010", 101 => "0001010", 102 => "0010100", 103 => "0110011", 
    104 => "0001000", 105 => "1110011", 106 => "0001001", 107 => "0001111", 
    108 => "0001101", 109 => "1111111", 110 => "0000101", 111 => "0000010", 
    112 => "1111000", 113 => "1111111", 114 => "0000101", 115 => "1100010", 
    116 => "1101011", 117 => "1110001", 118 => "0001000", 119 => "0100010", 
    120 => "0101110", 121 => "0111001", 122 => "0101101", 123 to 124=> "0001001", 
    125 => "1110111", 126 => "1111110", 127 => "0010010", 128 => "0001100", 
    129 => "0010101", 130 => "0000101", 131 => "0100011", 132 => "0000110", 
    133 => "1111001", 134 => "1100001", 135 => "1111010", 136 to 137=> "1100000", 
    138 => "1111111", 139 => "1101101", 140 => "0010010", 141 => "0001000", 
    142 => "0101001", 143 => "0000100", 144 => "0001100", 145 => "0000101", 
    146 to 147=> "1111011", 148 => "1111101", 149 => "1111100", 150 => "1101101", 
    151 => "0000110", 152 => "0001000", 153 => "0000001", 154 => "1111010", 
    155 => "1110100", 156 => "0010110", 157 => "0001110", 158 => "0011011", 
    159 => "0000010", 160 => "0100010", 161 => "0010001", 162 => "0010010", 
    163 => "1111111", 164 => "0011111", 165 => "0001001", 166 => "0011010", 
    167 => "1101011", 168 => "1110101", 169 => "0000100", 170 => "1100010", 
    171 => "1110100", 172 => "1111111", 173 => "1101101", 174 => "0000110", 
    175 => "1110100", 176 => "1110111", 177 => "1110000", 178 => "0000010", 
    179 => "0000001", 180 => "0001010", 181 => "1111110", 182 => "0000100", 
    183 => "0000000", 184 => "1111100", 185 => "0001011", 186 => "1111000", 
    187 => "1111001", 188 => "0000111", 189 => "0000000", 190 => "0010011", 
    191 => "0011110", 192 => "0001011", 193 => "0100101", 194 => "0001110", 
    195 => "0000101", 196 => "1110011", 197 => "0100011", 198 => "1011110", 
    199 => "0000011", 200 => "0011111", 201 => "1111110", 202 => "1111011", 
    203 => "0010100", 204 => "1111000", 205 => "0001010", 206 => "1101111", 
    207 => "1110111", 208 => "0010111", 209 => "1111111", 210 => "1111110", 
    211 => "0000000", 212 => "0011011", 213 => "1101000", 214 => "0010101", 
    215 => "1101110", 216 => "1101111", 217 => "1111111", 218 => "0001011", 
    219 => "0001010", 220 => "0000000", 221 => "1111101", 222 => "1110110", 
    223 => "0011010", 224 => "1101101", 225 => "1111111", 226 => "1111100", 
    227 => "1111101", 228 => "0001000", 229 => "1111101", 230 => "0000111", 
    231 => "0001110", 232 => "1110010", 233 => "1110100", 234 => "1110101", 
    235 => "1110010", 236 => "0001000", 237 => "1110101", 238 => "1111111", 
    239 => "0010010", 240 => "1111000", 241 => "0000111", 242 => "0001000", 
    243 => "0010010", 244 => "0001011", 245 => "1110011", 246 => "1110111", 
    247 => "0011001", 248 => "1100111", 249 => "1101000", 250 => "0100010", 
    251 => "0010000", 252 => "1111000", 253 => "1110010", 254 => "0001100", 
    255 => "0001101", 256 => "1111010", 257 => "1110011", 258 => "0000110", 
    259 => "1111110", 260 => "1110100", 261 => "1100011", 262 => "1110111", 
    263 => "1101010", 264 => "1111111", 265 => "1101000", 266 => "0000000", 
    267 => "0000010", 268 => "0100010", 269 => "0010110", 270 => "1100100", 
    271 => "1111001", 272 => "1101001", 273 => "1110000", 274 => "1111110", 
    275 => "0001101", 276 => "1111011", 277 => "0000010", 278 => "1111010", 
    279 => "1100101", 280 => "1111001", 281 => "0000000", 282 => "1101100", 
    283 => "1100010", 284 => "1110010", 285 => "1110001", 286 => "0001010", 
    287 => "0000110", 288 => "0000000", 289 => "1110001", 290 => "1110101", 
    291 to 292=> "1110011", 293 => "1100000", 294 => "0000101", 295 => "0001110", 
    296 => "0010001", 297 => "1111011", 298 => "1111111", 299 => "0001010", 
    300 => "1100111", 301 => "0001111", 302 => "1111100", 303 => "0001110", 
    304 => "1100110", 305 => "1011001", 306 => "0000100", 307 => "1110001", 
    308 => "1110111", 309 => "1111101", 310 => "1011100", 311 => "1011101", 
    312 => "0000111", 313 => "1101110", 314 => "1101111", 315 => "1111111", 
    316 => "0000110", 317 => "1101001", 318 => "1111001", 319 => "1110001", 
    320 => "0001001", 321 => "0001011", 322 => "0001001", 323 => "0000110", 
    324 => "0010101", 325 => "0000100", 326 => "0000101", 327 => "1111100", 
    328 => "0010010", 329 => "0000101", 330 => "1111111", 331 => "0000100", 
    332 => "0001010", 333 => "0001111", 334 => "0100100", 335 => "1111001", 
    336 => "1101011", 337 => "1110101", 338 => "1011111", 339 => "1110110", 
    340 => "1101101", 341 => "1111101", 342 => "1111000", 343 => "0010010", 
    344 => "1101101", 345 => "0010111", 346 => "1111100", 347 => "1101101", 
    348 => "0010100", 349 => "0011110", 350 => "0011001", 351 => "1101100", 
    352 => "0001010", 353 => "1110101", 354 to 355=> "0000110", 356 => "1110101", 
    357 => "1111100", 358 => "1110011", 359 => "1111010", 360 => "0011010", 
    361 => "0000101", 362 => "1100100", 363 => "1100011", 364 => "0001011", 
    365 => "1110000", 366 => "1101010", 367 => "0001110", 368 => "1100110", 
    369 => "0001010", 370 => "1111011", 371 => "1110010", 372 => "0000111", 
    373 to 374=> "1111110", 375 => "0000100", 376 => "1111110", 377 => "0001010", 
    378 to 379=> "1111010", 380 => "1101101", 381 => "0001010", 382 => "0000010", 
    383 => "1111111", 384 => "0000111", 385 => "1110110", 386 => "1110100", 
    387 => "1100011", 388 => "1111101", 389 => "1101000", 390 => "0000100", 
    391 => "0000101", 392 => "0010010", 393 => "1111011", 394 => "1101110", 
    395 => "1111011", 396 => "1011011", 397 => "1101110", 398 => "0000001", 
    399 => "0001001", 400 => "1111011", 401 => "1011110", 402 => "1110101", 
    403 to 404=> "1110110", 405 => "0010111", 406 => "0000010", 407 => "0000101", 
    408 => "0000111", 409 => "1011111", 410 => "1110110", 411 => "1111111", 
    412 => "1110100", 413 => "0000001", 414 => "0000010", 415 => "1100110", 
    416 => "1111111", 417 => "0000001", 418 => "0101001", 419 => "0000110", 
    420 => "1110010", 421 => "0000101", 422 => "0011011", 423 => "0000010", 
    424 to 425=> "1110101", 426 => "0000101", 427 => "1110010", 428 => "1101110", 
    429 => "1011110", 430 => "1100110", 431 => "1111000", 432 => "0010100", 
    433 => "0001101", 434 => "0100101", 435 => "0000110", 436 => "1111000", 
    437 => "1100101", 438 => "1100000", 439 => "1101101", 440 => "1101111", 
    441 => "1101011", 442 => "1110010", 443 => "1101001", 444 => "1111100", 
    445 => "0001010", 446 => "0000000", 447 => "0011001", 448 => "1100110", 
    449 => "1101101", 450 => "0001111", 451 => "1110011", 452 => "1110100", 
    453 => "1110001", 454 => "1111111", 455 => "1101001", 456 => "1110001", 
    457 => "1101001", 458 => "1110101", 459 => "1110000", 460 => "0010101", 
    461 => "0011011", 462 => "0011000", 463 => "1110100", 464 => "0001011", 
    465 => "1101100", 466 => "1111111", 467 => "1111000", 468 => "1010111", 
    469 => "0010001", 470 => "0010010", 471 => "0000101", 472 => "0010010", 
    473 => "0011111", 474 => "0001001", 475 => "0001111", 476 => "1111010", 
    477 => "0001011", 478 => "1111110", 479 => "1110111", 480 => "1101110", 
    481 => "1110011", 482 => "0001100", 483 => "0001000", 484 => "1111111", 
    485 => "0001000", 486 => "0001011", 487 => "0010011", 488 => "0001111", 
    489 => "0010101", 490 => "1111000", 491 => "0000011", 492 => "1101000", 
    493 => "1111110", 494 => "1110111", 495 => "0010001", 496 => "0000011", 
    497 => "1110110", 498 => "0000011", 499 => "0000111", 500 => "0010101", 
    501 => "0110110", 502 => "0001010", 503 => "0101100", 504 => "1101111", 
    505 => "0000000", 506 => "1110010", 507 => "0011001", 508 => "0000101", 
    509 => "1111110", 510 => "1110111", 511 => "1110110", 512 => "0000001", 
    513 => "0001010", 514 => "1111000", 515 => "1111001", 516 => "0010100", 
    517 => "1111010", 518 => "0001001", 519 => "0000100", 520 => "1110110", 
    521 => "0010101", 522 => "1111110", 523 => "0000011", 524 => "0001011", 
    525 => "1110110", 526 => "1101111", 527 => "1111111", 528 => "0010011", 
    529 => "0010111", 530 => "0000111", 531 => "0000010", 532 => "0010011", 
    533 => "1011111", 534 => "1101001", 535 => "0000100", 536 => "1111111", 
    537 => "0000110", 538 => "1110111", 539 => "0001101", 540 => "0001011", 
    541 => "0010110", 542 => "0001001", 543 => "0001110", 544 => "0000011", 
    545 => "0000111", 546 => "0000101", 547 => "0011100", 548 => "0100011", 
    549 => "0100010", 550 => "0100001", 551 => "0001011", 552 => "0011011", 
    553 => "0011001", 554 => "0010110", 555 => "0001000", 556 => "0000010", 
    557 => "0100010", 558 => "0010000", 559 => "1111101", 560 => "1111011", 
    561 => "1111010", 562 => "1111001", 563 => "0010101", 564 => "1110001", 
    565 => "1101101", 566 => "0000111", 567 => "0011001", 568 => "0010101", 
    569 => "0010100", 570 => "0100001", 571 => "0001100", 572 => "0011011", 
    573 => "0010100", 574 => "0011001", 575 => "0100111", 576 => "0011100", 
    577 => "0011010", 578 => "0001101", 579 => "0011110", 580 => "0010111", 
    581 => "0101000", 582 => "0000011", 583 => "0101000", 584 => "0001001", 
    585 => "0011001", 586 => "1111010", 587 => "1101110", 588 => "0001100", 
    589 => "1111101", 590 => "0001111", 591 => "0010110", 592 => "0001000", 
    593 => "1110001", 594 => "0000100", 595 => "0010110", 596 => "0001011", 
    597 => "0011010", 598 => "0001111", 599 => "0001011", 600 => "0011101", 
    601 => "0100011", 602 => "0010111", 603 => "0011100", 604 => "0001110", 
    605 => "0000000", 606 => "0001111", 607 => "0000011", 608 => "1111011", 
    609 => "0001011", 610 => "0010101", 611 => "0010100", 612 => "0001100", 
    613 => "0010110", 614 => "0011001", 615 => "0001010", 616 => "0010111", 
    617 => "1110100", 618 => "1101110", 619 => "0001011", 620 => "0000101", 
    621 => "0000110", 622 => "1111100", 623 => "0001100", 624 => "0001110", 
    625 => "0010110", 626 => "0100000", 627 => "0000100", 628 => "0010010", 
    629 => "0000011", 630 => "1111101", 631 => "0000010", 632 => "1110001", 
    633 => "0000110", 634 => "0001100", 635 => "0011010", 636 => "0000010", 
    637 => "0001000", 638 => "1110000", 639 => "0010000", 640 => "0001101", 
    641 => "1111100", 642 => "0100100", 643 => "1101100", 644 => "0001000", 
    645 => "1110110", 646 => "0100000", 647 => "0010000", 648 => "0010010", 
    649 => "1101011", 650 => "0000100", 651 => "1110001", 652 => "0010001", 
    653 => "0000001", 654 => "1111011", 655 => "0011100", 656 => "0101011", 
    657 => "0001011", 658 => "0000111", 659 => "0001011", 660 => "0011011", 
    661 => "1111001", 662 => "0011011", 663 => "0001111", 664 => "0010001", 
    665 => "0010010", 666 to 667=> "0011000", 668 => "1111011", 669 => "0000110", 
    670 => "0100100", 671 => "1110000", 672 => "0000111", 673 => "1110110", 
    674 => "1110100", 675 => "0000111", 676 => "1101001", 677 => "1010111", 
    678 to 679=> "1101010", 680 => "1111101", 681 => "1101011", 682 => "1110101", 
    683 => "0001010", 684 => "0011111", 685 => "0001000", 686 => "0011011", 
    687 => "0010011", 688 => "1110111", 689 => "1111011", 690 => "0011000", 
    691 => "0010101", 692 to 693=> "1111000", 694 => "1011101", 695 => "1100000", 
    696 => "0011011", 697 => "0000110", 698 => "0010001", 699 => "1111100", 
    700 => "0000010", 701 => "0010011", 702 => "0010000", 703 => "1100101", 
    704 => "1010101", 705 => "1011000", 706 => "1101100", 707 => "1111110", 
    708 => "1110100", 709 => "1010110", 710 => "1111010", 711 => "1011000", 
    712 => "1111100", 713 => "1111111", 714 => "1110000", 715 => "1111110", 
    716 => "1111011", 717 => "0010001", 718 to 719=> "0000001", 720 => "1111111", 
    721 => "1111000", 722 => "1011011", 723 => "1110101", 724 => "0001010", 
    725 => "0000100", 726 => "1111111", 727 => "1110110", 728 => "0001001", 
    729 => "1110011", 730 => "0000100", 731 => "0000111", 732 => "1110110", 
    733 => "1011101", 734 => "1100010", 735 => "1100111", 736 => "1010101", 
    737 => "1011001", 738 => "1101110", 739 => "1111011", 740 => "1100101", 
    741 => "1011001", 742 => "1100110", 743 => "1111101", 744 => "0001110", 
    745 => "0010011", 746 => "0011000", 747 to 748=> "1011110", 749 => "1110001", 
    750 => "1100111", 751 => "0000100", 752 => "0010001", 753 => "0000001", 
    754 => "1101110", 755 => "1110000", 756 => "0001100", 757 => "0010000", 
    758 => "0001101", 759 => "1101111", 760 => "0000011", 761 => "1110001", 
    762 => "1111010", 763 to 764=> "1100110", 765 => "1010110", 766 => "1100010", 
    767 => "1011111", 768 => "1101001", 769 => "1011100", 770 => "1100100", 
    771 => "1111110", 772 => "1111000", 773 => "1100010", 774 => "1011010", 
    775 => "1110100", 776 => "1111101", 777 => "1110101", 778 => "1100111", 
    779 => "1111001", 780 => "1110100", 781 => "0001000", 782 => "0000101", 
    783 => "0000010" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbwn is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbwn is
    component mlp_l1_l1_weightsbwn_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbwn_rom_U :  component mlp_l1_l1_weightsbwn_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


