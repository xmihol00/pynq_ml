-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsKfY_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsKfY_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111010", 1 => "0001010", 2 => "0000001", 3 => "0010001", 
    4 => "1111010", 5 => "0010000", 6 => "1110001", 7 => "1111101", 
    8 => "0000101", 9 => "0001100", 10 => "0000111", 11 => "0001101", 
    12 => "1111111", 13 => "1111100", 14 => "1110000", 15 => "1110011", 
    16 => "0000110", 17 => "1111100", 18 => "1110101", 19 => "0000011", 
    20 => "1110000", 21 => "0010001", 22 => "1111101", 23 => "1111010", 
    24 => "1110000", 25 => "1111001", 26 => "1110010", 27 => "0000000", 
    28 => "0001100", 29 => "0000111", 30 => "0000010", 31 to 32=> "1110010", 
    33 => "0001111", 34 => "1100101", 35 => "1110100", 36 => "1101011", 
    37 => "1110000", 38 => "0000010", 39 => "0000001", 40 => "0011010", 
    41 => "0011001", 42 => "1011111", 43 => "1100001", 44 => "0000001", 
    45 => "0010101", 46 => "0000001", 47 => "1111110", 48 => "1100000", 
    49 => "0000110", 50 => "1110111", 51 => "1101001", 52 => "1110000", 
    53 => "0001100", 54 => "1111100", 55 => "0000111", 56 => "0010000", 
    57 => "1110100", 58 => "0001011", 59 => "1110100", 60 => "1101000", 
    61 => "1101110", 62 => "1111101", 63 => "1111001", 64 => "1100011", 
    65 => "0000011", 66 => "1110101", 67 => "1101100", 68 => "0000011", 
    69 => "0000010", 70 => "0000100", 71 => "1111000", 72 => "1100010", 
    73 to 74=> "1101000", 75 => "1110010", 76 => "0010000", 77 => "0011100", 
    78 => "0000000", 79 => "1111010", 80 => "1111001", 81 => "1110011", 
    82 => "0001011", 83 => "1110010", 84 => "1111011", 85 => "1110000", 
    86 => "0001001", 87 => "1110110", 88 => "1111111", 89 => "0100011", 
    90 => "1111000", 91 => "0000100", 92 => "1011110", 93 => "1111111", 
    94 => "1110011", 95 => "1111000", 96 => "1101100", 97 => "1101010", 
    98 => "0010010", 99 => "0010110", 100 => "0000110", 101 => "0010110", 
    102 => "1110010", 103 => "1100001", 104 => "0010100", 105 => "0100011", 
    106 => "1111011", 107 => "0001011", 108 => "1111011", 109 => "1111100", 
    110 => "0001001", 111 => "1110110", 112 => "1111000", 113 => "1111110", 
    114 => "0100101", 115 => "0000100", 116 => "0100011", 117 => "0010010", 
    118 => "0010101", 119 => "1110011", 120 => "1110100", 121 => "1011111", 
    122 => "1101001", 123 => "1110110", 124 => "0000001", 125 => "0001110", 
    126 to 127=> "0000110", 128 => "1101100", 129 => "0000000", 130 => "1110110", 
    131 => "1101100", 132 => "0010010", 133 => "0001010", 134 => "0001100", 
    135 => "0001111", 136 => "0010110", 137 => "0001000", 138 => "0011010", 
    139 => "0010111", 140 => "1110010", 141 => "1111001", 142 => "0001000", 
    143 => "1101101", 144 => "0000110", 145 => "0000100", 146 => "0000001", 
    147 => "1111010", 148 => "1111111", 149 => "1101100", 150 => "1101111", 
    151 => "1111101", 152 => "0100100", 153 => "0011101", 154 => "0010111", 
    155 => "0000011", 156 => "1111100", 157 => "0001101", 158 => "1111100", 
    159 => "0001010", 160 => "1111110", 161 => "1110010", 162 => "1111010", 
    163 => "1110100", 164 => "0100100", 165 => "0101000", 166 => "0011000", 
    167 => "0000101", 168 => "0000110", 169 => "1110111", 170 => "1101010", 
    171 => "1110110", 172 => "0010010", 173 => "0010100", 174 => "1111000", 
    175 => "1111100", 176 => "0000011", 177 => "1111110", 178 => "0000111", 
    179 => "0000011", 180 => "1111011", 181 => "0000001", 182 => "1111010", 
    183 => "0000000", 184 to 185=> "0001100", 186 => "0001001", 187 => "0000111", 
    188 => "1111000", 189 => "1111101", 190 => "0011011", 191 => "1111011", 
    192 => "1110000", 193 => "1111010", 194 => "0001000", 195 => "0001110", 
    196 => "1111001", 197 => "1101110", 198 to 199=> "0000000", 200 => "0010011", 
    201 => "0011101", 202 => "1110000", 203 => "1101100", 204 => "1101010", 
    205 => "0000101", 206 => "0001010", 207 => "0010010", 208 => "1111111", 
    209 => "0000101", 210 => "1100000", 211 => "1111000", 212 => "1110001", 
    213 => "0010001", 214 => "1111101", 215 => "0010100", 216 => "0000101", 
    217 => "0010010", 218 => "0011010", 219 => "0001110", 220 => "0100000", 
    221 => "0010011", 222 => "1111010", 223 => "0010110", 224 => "0010000", 
    225 => "1011110", 226 => "0001001", 227 to 228=> "1110110", 229 => "1111011", 
    230 => "1011101", 231 => "1101001", 232 => "0000001", 233 => "0010111", 
    234 => "0010001", 235 => "0001101", 236 => "1110110", 237 => "0000011", 
    238 => "1101101", 239 => "1101111", 240 => "1111100", 241 => "1110010", 
    242 => "0001011", 243 => "1111110", 244 => "1111101", 245 => "0100110", 
    246 => "0010101", 247 => "0001101", 248 => "0001000", 249 => "0010001", 
    250 => "0000100", 251 => "1111000", 252 => "1111100", 253 => "1110000", 
    254 => "1101110", 255 => "1101010", 256 => "1011100", 257 => "1110110", 
    258 => "1111000", 259 => "1111001", 260 => "0000101", 261 => "0000001", 
    262 => "1111111", 263 => "1100011", 264 => "1100100", 265 => "1111010", 
    266 => "1110101", 267 => "1110111", 268 => "1101111", 269 => "0000010", 
    270 => "1100011", 271 => "1110110", 272 => "0100011", 273 => "0011101", 
    274 => "0010011", 275 => "0001101", 276 => "0100101", 277 => "1101101", 
    278 => "1111111", 279 => "1100110", 280 => "0001101", 281 => "1111011", 
    282 => "1111100", 283 => "1111001", 284 => "1110100", 285 => "1110110", 
    286 => "1101011", 287 to 288=> "1111000", 289 => "0000101", 290 => "1100110", 
    291 => "1100000", 292 => "1110011", 293 => "1100101", 294 => "1111110", 
    295 => "1111001", 296 => "1111000", 297 => "1111001", 298 => "1111110", 
    299 => "0000100", 300 => "0010011", 301 => "0011010", 302 => "0011011", 
    303 => "0101101", 304 => "0001001", 305 => "1110011", 306 => "1110010", 
    307 => "1011110", 308 => "0000110", 309 => "1110110", 310 => "1111000", 
    311 => "1111101", 312 => "1101100", 313 => "1010011", 314 => "1101110", 
    315 => "1110010", 316 => "0010111", 317 => "0000111", 318 => "1110001", 
    319 => "0000001", 320 => "0000111", 321 => "1101011", 322 => "1110011", 
    323 => "1101100", 324 => "1100110", 325 => "1111110", 326 => "1101101", 
    327 => "1111011", 328 to 329=> "0010000", 330 => "0010100", 331 => "0011000", 
    332 => "0100011", 333 => "0100111", 334 => "0011001", 335 => "1101111", 
    336 => "0010010", 337 => "1101110", 338 => "1111001", 339 => "1100010", 
    340 => "1101000", 341 => "1111001", 342 => "1101101", 343 => "1111101", 
    344 => "0001011", 345 => "0011000", 346 => "0101100", 347 => "0101010", 
    348 => "0010100", 349 => "1111001", 350 => "1101101", 351 => "1110000", 
    352 => "0000111", 353 => "1101001", 354 => "0000000", 355 => "1111011", 
    356 => "0000111", 357 => "0011000", 358 => "0100011", 359 => "0110001", 
    360 => "0110111", 361 => "0010001", 362 => "1111011", 363 => "1101111", 
    364 => "0001011", 365 => "1111000", 366 => "1100011", 367 => "1101101", 
    368 => "1101000", 369 => "0000101", 370 => "1111111", 371 => "0000000", 
    372 => "1111010", 373 => "0010101", 374 => "0100011", 375 => "0101111", 
    376 => "0001111", 377 => "0000100", 378 => "0000000", 379 => "0001000", 
    380 => "1110111", 381 => "1101000", 382 => "0100000", 383 => "0011000", 
    384 => "0001001", 385 => "0000101", 386 => "0011011", 387 => "0010010", 
    388 => "0000010", 389 => "0011000", 390 => "1110011", 391 => "0001001", 
    392 => "1101101", 393 => "0000011", 394 => "1110010", 395 => "1010101", 
    396 => "0000100", 397 => "0100100", 398 => "0011001", 399 => "0000101", 
    400 => "1111011", 401 => "0000101", 402 => "0100100", 403 => "0100101", 
    404 => "0100011", 405 => "0100100", 406 => "0001101", 407 => "0001000", 
    408 => "1101110", 409 => "0010001", 410 => "0100000", 411 => "0000100", 
    412 => "1110110", 413 => "0100010", 414 => "0001000", 415 => "0001011", 
    416 => "1110110", 417 => "0000110", 418 => "1011101", 419 => "1111111", 
    420 to 421=> "0001111", 422 => "0001010", 423 => "1101011", 424 => "0000100", 
    425 => "0000001", 426 => "0010100", 427 => "1101110", 428 => "1111010", 
    429 => "1101100", 430 => "1111010", 431 => "0000111", 432 => "1111011", 
    433 => "1110111", 434 => "0000111", 435 => "0000110", 436 => "1111001", 
    437 => "0011011", 438 => "0101001", 439 => "0100100", 440 => "0010010", 
    441 => "0000100", 442 => "0001100", 443 => "0000010", 444 => "1111011", 
    445 => "0000110", 446 => "0001101", 447 => "1101111", 448 => "0000110", 
    449 => "0001001", 450 => "0011000", 451 => "1101111", 452 => "1101100", 
    453 => "1111000", 454 => "0000001", 455 => "0001011", 456 => "1110000", 
    457 => "1100000", 458 => "0000101", 459 => "0010001", 460 => "0001010", 
    461 => "0000101", 462 => "0001001", 463 => "1111100", 464 => "0011000", 
    465 => "0010101", 466 => "0011000", 467 => "0010001", 468 => "0010000", 
    469 => "0001011", 470 => "1110111", 471 => "1101100", 472 => "1110100", 
    473 => "0000011", 474 => "1101110", 475 => "0000000", 476 => "0000101", 
    477 => "0000010", 478 => "1111011", 479 => "1111000", 480 => "0001101", 
    481 => "1111101", 482 => "0001010", 483 => "0010101", 484 => "0000010", 
    485 => "1111100", 486 => "1100101", 487 => "1110110", 488 => "1101110", 
    489 => "1100111", 490 => "1111110", 491 => "1101111", 492 => "0010000", 
    493 => "0101010", 494 => "0011110", 495 => "0010000", 496 => "1110000", 
    497 => "1110101", 498 => "0001011", 499 => "0010000", 500 => "1110110", 
    501 => "1100111", 502 => "1110111", 503 => "1110011", 504 => "1111110", 
    505 => "0000111", 506 => "1111111", 507 => "1101001", 508 => "1111010", 
    509 => "0000100", 510 => "0001011", 511 => "0000010", 512 => "0001111", 
    513 => "1011111", 514 => "1010010", 515 => "1011100", 516 => "0000000", 
    517 => "1111100", 518 => "1110110", 519 => "0010100", 520 => "0001011", 
    521 => "0011101", 522 => "0001111", 523 => "1110010", 524 => "1110100", 
    525 => "1110110", 526 => "0000111", 527 => "1111111", 528 => "0010110", 
    529 => "1100100", 530 => "1110110", 531 to 532=> "1101110", 533 => "0011110", 
    534 => "0001010", 535 => "0010100", 536 => "0010111", 537 => "0010110", 
    538 => "0011110", 539 => "0100100", 540 => "0010110", 541 => "0000001", 
    542 => "1101001", 543 => "1101110", 544 => "1100111", 545 => "1101100", 
    546 => "1111011", 547 => "0001011", 548 => "1101111", 549 => "1111011", 
    550 => "0000000", 551 => "1101110", 552 => "1111101", 553 => "0000110", 
    554 => "0001100", 555 => "0010100", 556 => "1101101", 557 => "1011111", 
    558 => "1100110", 559 => "1110110", 560 => "0000001", 561 => "0100001", 
    562 => "0000101", 563 => "0010110", 564 => "0000000", 565 => "0101011", 
    566 to 567=> "0100001", 568 => "0001000", 569 => "0011000", 570 => "1111011", 
    571 => "1101011", 572 => "1111111", 573 => "0000001", 574 => "1111110", 
    575 => "0000000", 576 => "1110011", 577 => "0000100", 578 => "1110100", 
    579 => "1011101", 580 => "1110011", 581 => "1101110", 582 => "1111110", 
    583 to 584=> "1100111", 585 => "1011100", 586 => "1110000", 587 => "0001111", 
    588 => "0000010", 589 => "0000001", 590 => "0001010", 591 => "0000000", 
    592 => "0011000", 593 => "0011100", 594 => "0010101", 595 => "0001000", 
    596 => "0010101", 597 => "0011011", 598 => "1110110", 599 => "0000000", 
    600 => "0000101", 601 => "0000111", 602 => "0000010", 603 => "1111101", 
    604 => "1100000", 605 => "1111000", 606 => "1011001", 607 => "1111010", 
    608 => "1010111", 609 => "1011101", 610 => "0001101", 611 => "1110110", 
    612 => "1011011", 613 => "1110000", 614 => "0101001", 615 => "1110011", 
    616 => "1101100", 617 => "0001110", 618 => "0010111", 619 => "0011101", 
    620 => "1100111", 621 => "1100011", 622 => "0010011", 623 => "0010101", 
    624 => "0000111", 625 => "0001100", 626 => "0100011", 627 => "0010001", 
    628 => "0001100", 629 => "0010011", 630 => "1111101", 631 => "1110101", 
    632 => "0001010", 633 => "1101011", 634 => "1101110", 635 => "1101010", 
    636 => "1011111", 637 => "1110100", 638 => "0010000", 639 => "0001110", 
    640 => "1101101", 641 => "1101110", 642 => "0010011", 643 => "0001111", 
    644 => "1111111", 645 => "0001000", 646 => "0001101", 647 => "0100111", 
    648 => "1110110", 649 => "1111000", 650 => "1110110", 651 => "0010010", 
    652 => "0001110", 653 => "0000011", 654 => "0100110", 655 => "0001101", 
    656 => "0001010", 657 => "0010011", 658 => "0010000", 659 => "0000010", 
    660 => "1110101", 661 => "0000110", 662 => "1111001", 663 => "0000000", 
    664 => "1010001", 665 => "0000001", 666 => "0000110", 667 => "1111000", 
    668 => "1111100", 669 => "1101011", 670 => "1100010", 671 => "0001011", 
    672 => "1111011", 673 => "0001000", 674 => "0000011", 675 => "0011100", 
    676 => "0001000", 677 => "0000101", 678 => "0000110", 679 => "0000101", 
    680 => "0000111", 681 => "0001011", 682 => "0000110", 683 => "0010010", 
    684 => "0001101", 685 => "0010101", 686 => "0011010", 687 => "0100100", 
    688 => "0010100", 689 => "1111111", 690 => "0000011", 691 => "1100100", 
    692 => "0000110", 693 => "1101100", 694 => "1111101", 695 => "0001111", 
    696 => "1111111", 697 => "1101110", 698 => "1110000", 699 => "1111101", 
    700 => "0010001", 701 to 702=> "0001101", 703 => "1101011", 704 => "1100110", 
    705 => "1110010", 706 to 707=> "1111100", 708 => "1110111", 709 => "1101110", 
    710 => "0011001", 711 => "0000001", 712 => "1010111", 713 => "0000011", 
    714 => "1111001", 715 => "0010001", 716 => "0000111", 717 => "0001000", 
    718 => "0001010", 719 => "0000010", 720 => "0000110", 721 => "0000100", 
    722 => "0001100", 723 => "0000100", 724 => "1101011", 725 => "1110011", 
    726 => "1110100", 727 => "0000000", 728 => "1110100", 729 => "0001110", 
    730 => "1110011", 731 => "0000000", 732 => "0010100", 733 => "0001001", 
    734 to 735=> "1111110", 736 => "0000110", 737 to 738=> "0000101", 739 => "1111011", 
    740 => "1110111", 741 => "1001111", 742 => "1110000", 743 => "1110001", 
    744 => "0000010", 745 => "1111110", 746 => "0011011", 747 => "1010111", 
    748 => "1110111", 749 => "1110010", 750 => "1100110", 751 => "0000011", 
    752 => "0000101", 753 => "1101110", 754 => "0001010", 755 => "1101111", 
    756 => "0000111", 757 => "1111111", 758 => "0001110", 759 => "0000001", 
    760 => "1110010", 761 => "1010110", 762 => "1110100", 763 => "1111101", 
    764 => "1100111", 765 => "1100100", 766 => "1001111", 767 => "1110001", 
    768 => "1110011", 769 => "0000110", 770 => "1011011", 771 => "1110110", 
    772 => "1100101", 773 => "1110111", 774 => "1101001", 775 => "1111011", 
    776 => "1110000", 777 => "1111111", 778 => "1111011", 779 => "0000101", 
    780 => "0000111", 781 => "0001111", 782 => "0010010", 783 => "0010000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsKfY is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsKfY is
    component mlp_l1_l1_weightsKfY_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsKfY_rom_U :  component mlp_l1_l1_weightsKfY_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


