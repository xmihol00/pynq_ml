-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbun_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbun_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0001001", 1 => "0000011", 2 => "0000110", 3 => "0000111", 
    4 => "0010011", 5 => "1110110", 6 => "1110001", 7 => "0000110", 
    8 => "1111111", 9 => "1111101", 10 => "1110000", 11 => "1110011", 
    12 => "0000000", 13 => "0010011", 14 => "0001011", 15 => "1110000", 
    16 => "0000101", 17 to 18=> "0001000", 19 => "0000000", 20 => "1110101", 
    21 => "1110010", 22 => "1110110", 23 => "1111001", 24 => "0000111", 
    25 => "1111110", 26 => "1111101", 27 => "1110101", 28 => "1110001", 
    29 => "1110010", 30 => "1110111", 31 => "1111100", 32 => "0000001", 
    33 => "0010000", 34 => "0011110", 35 => "0000011", 36 => "0000101", 
    37 => "0011100", 38 => "0000100", 39 => "0101110", 40 => "0100001", 
    41 => "0011011", 42 => "0011000", 43 => "0010111", 44 => "0010000", 
    45 => "0110010", 46 => "0010111", 47 => "0010110", 48 => "0010011", 
    49 => "1101011", 50 => "1111011", 51 => "1110011", 52 => "0001111", 
    53 => "1111001", 54 => "1111010", 55 => "0000000", 56 => "0001101", 
    57 => "0001000", 58 => "0010010", 59 => "0010000", 60 => "0001101", 
    61 => "0010000", 62 => "0010101", 63 => "0010000", 64 => "0001101", 
    65 => "0000110", 66 => "0011100", 67 => "0000111", 68 => "0001110", 
    69 => "0000110", 70 => "0000100", 71 => "0010100", 72 => "0010111", 
    73 => "0000101", 74 => "0001101", 75 => "1111001", 76 => "1100101", 
    77 => "1111010", 78 => "1111101", 79 => "0001111", 80 => "1111001", 
    81 => "0001110", 82 => "0001101", 83 => "1110101", 84 => "0000001", 
    85 => "0010001", 86 => "0010010", 87 => "0011011", 88 => "0010100", 
    89 => "1110010", 90 => "1110100", 91 => "1110011", 92 => "1111100", 
    93 => "0000000", 94 => "1110011", 95 => "0000000", 96 => "1110110", 
    97 => "1111110", 98 => "1110001", 99 => "1110111", 100 => "0101100", 
    101 => "0100001", 102 => "0000000", 103 => "1011111", 104 => "1110100", 
    105 => "1111000", 106 => "0010010", 107 => "0100101", 108 => "0000011", 
    109 => "1110010", 110 => "1111001", 111 => "1111010", 112 => "0001000", 
    113 => "1110001", 114 => "1111111", 115 => "1101110", 116 => "1101111", 
    117 => "1110110", 118 => "1111011", 119 => "1111000", 120 => "1110110", 
    121 => "0001110", 122 => "0001011", 123 => "0010011", 124 => "1110110", 
    125 => "1111000", 126 => "0001111", 127 => "0001101", 128 => "0001000", 
    129 => "0011000", 130 => "0000011", 131 => "1111000", 132 => "0010011", 
    133 to 134=> "1111111", 135 => "0000000", 136 => "1101101", 137 => "1110100", 
    138 => "1101010", 139 => "1111100", 140 => "0001001", 141 => "0001000", 
    142 => "1111111", 143 => "1110011", 144 => "1111101", 145 => "1101010", 
    146 => "0001001", 147 => "1101100", 148 => "1111111", 149 => "1111001", 
    150 => "0000110", 151 => "1111100", 152 => "1111000", 153 => "1110001", 
    154 => "1111000", 155 => "0001000", 156 => "0000001", 157 => "1101100", 
    158 => "1110100", 159 => "0000000", 160 => "0000100", 161 => "0000001", 
    162 => "1101110", 163 => "1011110", 164 => "1101100", 165 => "1111111", 
    166 => "0000110", 167 => "1111100", 168 => "0010010", 169 => "0000110", 
    170 => "0001000", 171 => "0001011", 172 => "1101101", 173 => "1010100", 
    174 => "1011011", 175 to 176=> "1110010", 177 => "1110000", 178 => "1111001", 
    179 => "0001110", 180 => "0001111", 181 => "0010100", 182 => "1111111", 
    183 => "1110010", 184 => "0000100", 185 => "1101001", 186 => "0000011", 
    187 => "1111010", 188 => "1100111", 189 => "1110101", 190 => "0010011", 
    191 => "1101010", 192 => "1100111", 193 => "1111011", 194 => "0000001", 
    195 => "1111100", 196 => "1111010", 197 => "1111111", 198 => "0100000", 
    199 => "1111000", 200 => "1100110", 201 => "1010101", 202 to 203=> "1011111", 
    204 => "1111100", 205 => "1110010", 206 => "0000101", 207 => "0000010", 
    208 => "0001101", 209 => "1101101", 210 => "1111111", 211 => "0000111", 
    212 => "1111000", 213 => "0010011", 214 => "1110111", 215 => "1101111", 
    216 => "1101010", 217 => "0000100", 218 => "0001110", 219 => "0000110", 
    220 => "1011100", 221 => "1101011", 222 => "0001001", 223 => "0001000", 
    224 => "1110110", 225 => "1110101", 226 => "1110110", 227 => "1110010", 
    228 to 229=> "1111101", 230 => "0010011", 231 => "0011011", 232 => "1111101", 
    233 => "0001100", 234 => "0001011", 235 => "1110001", 236 => "0001011", 
    237 => "0000100", 238 => "0010111", 239 => "0001000", 240 => "0010100", 
    241 to 242=> "1110110", 243 to 244=> "1110111", 245 => "0001000", 246 => "1110000", 
    247 => "1110100", 248 => "1011110", 249 => "1111000", 250 => "1111101", 
    251 => "0000111", 252 => "0001001", 253 => "1100010", 254 => "1110101", 
    255 => "1101011", 256 => "1110010", 257 => "1011111", 258 => "0010001", 
    259 => "0000010", 260 => "0010101", 261 => "0000001", 262 to 263=> "1111001", 
    264 => "1101111", 265 => "0000111", 266 => "0000010", 267 => "0010010", 
    268 => "1111000", 269 => "1111101", 270 => "0001110", 271 => "0000010", 
    272 => "0010001", 273 => "0001010", 274 => "1011001", 275 => "1110000", 
    276 => "1111011", 277 => "1110000", 278 => "1101010", 279 => "1011100", 
    280 => "1110010", 281 => "1100101", 282 => "0011001", 283 => "0000110", 
    284 => "0001011", 285 => "0010011", 286 => "0001100", 287 => "0010000", 
    288 => "0010110", 289 => "0001100", 290 => "0010011", 291 => "1111011", 
    292 to 293=> "0000101", 294 => "0011001", 295 => "0001001", 296 => "1110100", 
    297 => "1110001", 298 => "0001000", 299 => "1100111", 300 => "1100001", 
    301 => "1110000", 302 => "0001011", 303 => "1111110", 304 => "0010100", 
    305 => "1001111", 306 => "1100011", 307 => "1111001", 308 => "0001000", 
    309 => "0000011", 310 => "0000010", 311 to 313=> "0000111", 314 => "0000100", 
    315 => "0001101", 316 => "1111101", 317 => "0001111", 318 => "0001010", 
    319 => "1110100", 320 => "1100101", 321 => "1111101", 322 => "0001010", 
    323 => "0010000", 324 => "0000010", 325 => "1111111", 326 => "1101100", 
    327 => "1110100", 328 => "0000100", 329 => "0010110", 330 => "0001000", 
    331 => "0011100", 332 => "0100111", 333 => "0000010", 334 => "0100110", 
    335 => "1101011", 336 => "1111101", 337 => "1101110", 338 => "0000111", 
    339 => "0010000", 340 => "0000111", 341 => "0000011", 342 => "0010111", 
    343 => "0001011", 344 => "0001000", 345 => "1111101", 346 => "1110010", 
    347 => "1110011", 348 => "1101000", 349 => "1100101", 350 => "1101110", 
    351 => "1111001", 352 => "0001010", 353 => "0000010", 354 => "1101100", 
    355 => "1111101", 356 => "0000111", 357 => "0010000", 358 => "0101101", 
    359 => "0100111", 360 => "0111110", 361 => "1110100", 362 => "1110010", 
    363 => "1011111", 364 => "0010010", 365 => "1101100", 366 => "1111101", 
    367 => "0001101", 368 => "0000100", 369 => "0010111", 370 => "0000110", 
    371 => "0000101", 372 => "0000010", 373 => "0001111", 374 => "1101101", 
    375 => "0000100", 376 => "1110001", 377 => "1100111", 378 => "1110001", 
    379 => "0011001", 380 => "0001101", 381 => "0010111", 382 => "1110011", 
    383 => "0011000", 384 => "1111011", 385 => "0101000", 386 => "0111100", 
    387 => "0111111", 388 => "0101001", 389 => "0010100", 390 => "0000010", 
    391 => "1111100", 392 to 393=> "1111010", 394 => "1100100", 395 => "0000101", 
    396 => "0000010", 397 => "0011011", 398 => "0010100", 399 => "0000100", 
    400 => "1111001", 401 => "0011001", 402 => "0001101", 403 => "1111111", 
    404 => "0011001", 405 => "0000001", 406 => "0001101", 407 => "1111110", 
    408 => "0001100", 409 => "0001000", 410 => "1110111", 411 => "0010010", 
    412 => "1111110", 413 => "0101000", 414 => "0100111", 415 => "0101010", 
    416 => "0001010", 417 => "0100110", 418 => "1111111", 419 => "0010010", 
    420 => "0000111", 421 => "1111001", 422 => "1111010", 423 => "0011000", 
    424 => "1111010", 425 => "0001101", 426 => "0000111", 427 => "1111000", 
    428 => "0001110", 429 => "0011111", 430 => "0001111", 431 => "0001011", 
    432 => "0100110", 433 => "0001010", 434 => "0011101", 435 => "0001011", 
    436 => "0010111", 437 => "0010000", 438 => "1110110", 439 => "0000110", 
    440 => "1111101", 441 => "0010000", 442 => "0010111", 443 to 444=> "0000011", 
    445 => "0101101", 446 => "0000011", 447 => "0000100", 448 => "1110111", 
    449 => "1101100", 450 => "1111111", 451 => "1101111", 452 => "0000001", 
    453 => "0010110", 454 => "0000100", 455 => "1111101", 456 => "0010011", 
    457 => "0001000", 458 => "0010011", 459 => "0011000", 460 => "0010110", 
    461 => "1111111", 462 => "0000111", 463 => "1111110", 464 => "0010110", 
    465 => "0001111", 466 to 467=> "0001010", 468 => "1111100", 469 => "0001001", 
    470 => "0010010", 471 => "0010001", 472 => "0000010", 473 => "0110111", 
    474 => "0001110", 475 => "0000000", 476 => "1110000", 477 => "0000010", 
    478 => "1110011", 479 => "0000100", 480 => "1101111", 481 => "0010011", 
    482 => "0000101", 483 => "1110110", 484 => "1101110", 485 => "0010010", 
    486 => "0000010", 487 => "0101010", 488 => "0011010", 489 => "0010111", 
    490 => "0001000", 491 => "0001111", 492 => "0011111", 493 => "1101100", 
    494 => "1100111", 495 => "1110111", 496 => "0010011", 497 => "0000001", 
    498 => "0000110", 499 => "1101101", 500 => "0011011", 501 => "0100100", 
    502 => "1101000", 503 => "0011011", 504 => "0000010", 505 => "1111110", 
    506 => "1101011", 507 => "1111011", 508 => "1111000", 509 => "1101111", 
    510 => "0001000", 511 => "0000110", 512 to 513=> "1111011", 514 => "0000000", 
    515 => "1110110", 516 => "0011001", 517 => "1111111", 518 => "1111010", 
    519 => "0001100", 520 => "1111101", 521 => "0000010", 522 => "1110000", 
    523 => "1110111", 524 => "1111101", 525 => "1110100", 526 => "1111101", 
    527 => "1101110", 528 => "0000010", 529 => "0100000", 530 => "1010110", 
    531 => "1101111", 532 => "1111101", 533 => "0001010", 534 => "1110011", 
    535 => "0000011", 536 => "1101110", 537 to 538=> "1110111", 539 => "1101010", 
    540 => "1111000", 541 => "0010101", 542 => "1111010", 543 => "1101100", 
    544 => "1111100", 545 => "0000110", 546 => "1101000", 547 => "0001110", 
    548 => "1110111", 549 => "0011000", 550 => "0010011", 551 => "0001101", 
    552 => "1110100", 553 => "1101100", 554 => "1111010", 555 => "1110101", 
    556 => "1110100", 557 => "0000111", 558 => "1110100", 559 => "1100000", 
    560 => "0001010", 561 => "0010110", 562 => "1111010", 563 => "1101010", 
    564 => "0010011", 565 => "1111011", 566 => "1110000", 567 => "1111110", 
    568 => "0010100", 569 => "0001100", 570 => "1111110", 571 => "0011001", 
    572 => "0001111", 573 => "1110001", 574 => "1110000", 575 => "0010010", 
    576 => "0001101", 577 => "0011000", 578 => "0010100", 579 => "1101001", 
    580 => "1111011", 581 => "1111110", 582 => "0010000", 583 => "0000111", 
    584 => "1100111", 585 => "0010001", 586 => "0001001", 587 to 588=> "0010000", 
    589 => "1110110", 590 => "1011111", 591 => "0001100", 592 => "1110100", 
    593 => "1111110", 594 => "1110100", 595 => "0001111", 596 => "0000011", 
    597 => "0011000", 598 to 599=> "0001010", 600 => "1111100", 601 => "0000111", 
    602 => "0000101", 603 => "0000010", 604 => "1111111", 605 => "1101110", 
    606 => "1111011", 607 => "0000101", 608 => "0001010", 609 => "1110010", 
    610 => "1111011", 611 => "1110111", 612 => "0000100", 613 => "1111110", 
    614 => "0111011", 615 => "0001100", 616 => "0001001", 617 => "0001011", 
    618 => "1111111", 619 => "1111100", 620 => "0001000", 621 => "0010101", 
    622 => "0000010", 623 => "1111010", 624 => "0001011", 625 => "0010001", 
    626 => "1111010", 627 => "0010000", 628 => "1111001", 629 => "1111101", 
    630 => "1101010", 631 => "1101000", 632 => "0000111", 633 => "1111110", 
    634 => "1111100", 635 => "0000010", 636 => "1100111", 637 => "0000011", 
    638 => "0001000", 639 => "1111100", 640 => "1100101", 641 => "0000011", 
    642 => "0100001", 643 => "1111100", 644 => "1111000", 645 => "0010000", 
    646 => "0000001", 647 => "1110111", 648 => "1100001", 649 => "1011110", 
    650 to 652=> "1110011", 653 => "0000111", 654 => "1110000", 655 => "1110100", 
    656 => "0001100", 657 => "0010010", 658 => "0000001", 659 => "1110011", 
    660 => "0000011", 661 => "1111011", 662 => "1110100", 663 => "1110111", 
    664 => "1101101", 665 => "0000001", 666 => "1110100", 667 => "1101011", 
    668 => "1000101", 669 => "1111011", 670 => "1110100", 671 => "0001101", 
    672 => "1111010", 673 => "0000010", 674 => "0001010", 675 => "1011101", 
    676 => "1011100", 677 => "1111010", 678 => "1011100", 679 => "1100111", 
    680 => "1111101", 681 => "1111000", 682 => "1111100", 683 => "0010111", 
    684 => "0011111", 685 => "1111010", 686 => "1110001", 687 => "1111001", 
    688 => "1111000", 689 => "1011011", 690 to 691=> "1100100", 692 => "1101101", 
    693 => "1101001", 694 => "1111001", 695 => "1110010", 696 => "1101011", 
    697 => "1110100", 698 => "1111110", 699 => "1110000", 700 => "0010000", 
    701 => "0001101", 702 => "0000100", 703 => "1111011", 704 => "1010110", 
    705 => "1101100", 706 => "1101111", 707 => "0000100", 708 => "1011110", 
    709 to 710=> "1101100", 711 to 712=> "0000001", 713 => "1101110", 714 => "0000110", 
    715 to 716=> "1010110", 717 => "1010010", 718 => "1011011", 719 => "1100101", 
    720 => "1101101", 721 => "1101100", 722 => "1011101", 723 => "1110000", 
    724 => "1110111", 725 => "0000010", 726 => "0010011", 727 => "0001010", 
    728 => "0000000", 729 => "0010000", 730 => "0000101", 731 => "1110110", 
    732 => "1110001", 733 => "0001000", 734 => "0100000", 735 => "1110100", 
    736 => "1101110", 737 => "1100010", 738 => "1011011", 739 => "0001010", 
    740 => "1111100", 741 => "1111101", 742 => "1010001", 743 => "1001111", 
    744 => "1010101", 745 => "1101100", 746 => "1101110", 747 => "1011001", 
    748 => "1111101", 749 => "1011000", 750 => "1100101", 751 => "1110010", 
    752 => "0000111", 753 => "0001111", 754 => "0001110", 755 => "1101111", 
    756 => "0010000", 757 => "0000000", 758 => "0000111", 759 => "1101111", 
    760 => "1110000", 761 => "1101011", 762 => "1111010", 763 => "0001101", 
    764 => "1111101", 765 => "0000010", 766 => "1101010", 767 => "0000010", 
    768 => "1111110", 769 => "1101100", 770 => "1110010", 771 => "1101010", 
    772 => "1100010", 773 => "1101110", 774 => "1101001", 775 => "1111000", 
    776 => "1101011", 777 => "1111001", 778 => "1110011", 779 => "1011010", 
    780 => "1110011", 781 => "1110111", 782 => "1111100", 783 => "0000100" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbun is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbun is
    component mlp_l1_l1_weightsbun_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbun_rom_U :  component mlp_l1_l1_weightsbun_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


