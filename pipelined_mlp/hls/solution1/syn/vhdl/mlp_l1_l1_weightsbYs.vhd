-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbYs_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbYs_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110100", 1 => "0010000", 2 => "1110101", 3 => "0000011", 
    4 => "0010000", 5 => "1111000", 6 => "0000111", 7 => "1111101", 
    8 => "0001010", 9 => "1111011", 10 => "0010000", 11 => "0001010", 
    12 => "1110010", 13 => "1110001", 14 => "0000100", 15 => "1111111", 
    16 => "0001000", 17 => "0001001", 18 => "1110001", 19 => "0001101", 
    20 => "0010001", 21 to 22=> "0001111", 23 => "1110110", 24 => "0001111", 
    25 => "0000110", 26 => "1111111", 27 => "1110010", 28 => "1110110", 
    29 => "0001011", 30 => "0010001", 31 => "1111110", 32 => "0000000", 
    33 => "0000101", 34 => "1111101", 35 => "1100110", 36 => "1011111", 
    37 => "1111100", 38 => "1110110", 39 => "1111100", 40 => "1010011", 
    41 => "1100001", 42 => "0000000", 43 => "1110101", 44 => "1100011", 
    45 => "1100010", 46 => "1101011", 47 => "1101111", 48 => "1110110", 
    49 => "1101110", 50 => "1111011", 51 => "1101101", 52 => "0001101", 
    53 => "0000101", 54 => "1111111", 55 => "1110001", 56 => "1111110", 
    57 => "1111101", 58 => "0010001", 59 => "1111000", 60 => "1100011", 
    61 => "1100111", 62 => "1110111", 63 => "1101110", 64 => "0000101", 
    65 => "0001100", 66 => "1111010", 67 => "1100001", 68 => "1111001", 
    69 => "1111010", 70 => "1101000", 71 => "1111100", 72 => "1100100", 
    73 => "0000101", 74 => "0001010", 75 => "1110011", 76 to 77=> "1100101", 
    78 => "1011111", 79 => "1010111", 80 => "1110000", 81 => "1110110", 
    82 => "1111001", 83 => "0000011", 84 => "1101110", 85 => "0000111", 
    86 => "0000110", 87 => "1110000", 88 => "1011111", 89 => "1110110", 
    90 => "1100010", 91 => "1010110", 92 => "1101010", 93 => "1101101", 
    94 => "0001010", 95 => "1110101", 96 to 97=> "1101100", 98 => "1010110", 
    99 => "1110001", 100 => "1011111", 101 => "1101101", 102 => "1110110", 
    103 => "1111010", 104 => "1110001", 105 => "0011100", 106 => "0000111", 
    107 => "0011001", 108 => "1100110", 109 => "1110010", 110 => "1110011", 
    111 => "1111100", 112 => "0000001", 113 => "0001110", 114 => "1110010", 
    115 => "1100010", 116 => "1101111", 117 => "1101001", 118 => "1101101", 
    119 to 120=> "1100111", 121 => "0010000", 122 => "0000100", 123 to 124=> "1111001", 
    125 => "1101110", 126 => "1110011", 127 => "1110101", 128 => "0010010", 
    129 => "0010101", 130 => "1110101", 131 => "1111001", 132 => "0000101", 
    133 => "0001100", 134 => "0100010", 135 => "0011111", 136 => "0110011", 
    137 => "0100011", 138 => "0000010", 139 => "1110000", 140 => "0000111", 
    141 => "0000001", 142 => "1111011", 143 => "1101100", 144 => "1101000", 
    145 => "1011001", 146 => "1110001", 147 => "0000100", 148 => "1111111", 
    149 => "1110100", 150 => "0000101", 151 => "1111110", 152 => "0000010", 
    153 => "0001111", 154 => "0001010", 155 => "0001100", 156 => "0001111", 
    157 => "0011010", 158 => "0001010", 159 => "0000101", 160 => "0000010", 
    161 => "0011101", 162 => "0011010", 163 => "0000011", 164 => "0100010", 
    165 => "0110001", 166 => "0011110", 167 => "1101100", 168 => "1111001", 
    169 => "0001001", 170 => "1110111", 171 => "1100100", 172 => "1110001", 
    173 => "1011100", 174 => "1110101", 175 => "0001100", 176 => "0001000", 
    177 to 178=> "0001001", 179 => "1111001", 180 => "0000110", 181 => "1111001", 
    182 => "0000111", 183 => "1111110", 184 => "1111010", 185 => "0001111", 
    186 => "1110011", 187 => "0010001", 188 => "0000111", 189 => "1110101", 
    190 => "0000001", 191 => "0011101", 192 => "0100011", 193 => "0110110", 
    194 => "0001110", 195 => "1111001", 196 => "0010000", 197 => "1100001", 
    198 => "1100101", 199 => "0001100", 200 => "0010011", 201 => "0001001", 
    202 => "1111011", 203 => "0000010", 204 => "0001110", 205 => "0011011", 
    206 => "1111110", 207 => "1111010", 208 => "0001001", 209 => "0000101", 
    210 => "1110011", 211 => "0011100", 212 => "1111101", 213 => "1110101", 
    214 => "1101110", 215 => "1101010", 216 => "0001001", 217 => "1110110", 
    218 => "1111101", 219 => "0010010", 220 => "0010100", 221 => "0100110", 
    222 => "0100010", 223 => "0001111", 224 => "1110000", 225 => "1100000", 
    226 => "0010001", 227 => "0100011", 228 => "0011001", 229 => "0000011", 
    230 => "0000010", 231 => "0010010", 232 => "1111000", 233 => "0010110", 
    234 => "0001110", 235 => "1111011", 236 => "0001111", 237 => "0000100", 
    238 => "1110100", 239 => "0000011", 240 => "1110110", 241 => "1100101", 
    242 => "1101110", 243 => "1111110", 244 => "0001110", 245 => "0000001", 
    246 => "0000000", 247 => "0000001", 248 => "0010101", 249 => "0100011", 
    250 => "0101100", 251 => "0000110", 252 => "1101100", 253 => "1010111", 
    254 => "0000111", 255 => "1111111", 256 => "1101010", 257 => "0000100", 
    258 => "0000011", 259 => "0001100", 260 => "0010000", 261 => "0001101", 
    262 => "0000101", 263 => "0011111", 264 => "1111111", 265 => "0001010", 
    266 => "1110001", 267 => "1111010", 268 => "0000101", 269 => "1110110", 
    270 => "1111001", 271 => "0000000", 272 => "1111111", 273 => "1111101", 
    274 => "1111000", 275 => "0000001", 276 => "0011001", 277 => "0011000", 
    278 => "0001100", 279 => "1011111", 280 => "0001010", 281 => "1011000", 
    282 => "1100010", 283 => "1101100", 284 => "0001101", 285 to 286=> "0010110", 
    287 => "1111111", 288 => "1110101", 289 => "0011000", 290 => "0011011", 
    291 => "0001011", 292 => "0001001", 293 => "0000111", 294 => "1111101", 
    295 => "1101100", 296 => "1111010", 297 => "1111000", 298 => "0001010", 
    299 => "0010010", 300 => "0000101", 301 => "1110100", 302 => "1101111", 
    303 => "0001001", 304 => "0001100", 305 => "1110000", 306 => "0001110", 
    307 => "1110110", 308 => "0001111", 309 => "1110110", 310 => "1010011", 
    311 => "1101010", 312 => "1111011", 313 => "0000001", 314 => "0001100", 
    315 => "1111101", 316 => "0010101", 317 => "0010111", 318 => "1110111", 
    319 => "0001000", 320 => "0011011", 321 => "0001001", 322 to 323=> "0010001", 
    324 => "0000100", 325 => "1111110", 326 => "0001101", 327 => "0000011", 
    328 => "1111100", 329 => "1111000", 330 => "1101111", 331 => "0000000", 
    332 => "1111001", 333 => "0011110", 334 => "0111010", 335 => "1101111", 
    336 => "1101110", 337 => "1111010", 338 => "0000010", 339 => "0001111", 
    340 => "0001101", 341 => "0000111", 342 => "0001001", 343 => "1111011", 
    344 => "0000100", 345 => "1110110", 346 => "1111000", 347 => "0001011", 
    348 => "0000110", 349 => "1111110", 350 => "0010001", 351 => "0010000", 
    352 => "1111000", 353 => "0000000", 354 => "1110100", 355 => "0000100", 
    356 => "0000000", 357 => "0000110", 358 => "1101110", 359 => "0000001", 
    360 => "0010100", 361 => "1111010", 362 => "1111001", 363 => "1010111", 
    364 => "1110111", 365 => "0000010", 366 => "1110100", 367 => "0001100", 
    368 => "1111010", 369 => "0001001", 370 => "0000100", 371 => "0010000", 
    372 => "1101111", 373 => "1110100", 374 => "1101111", 375 => "1110101", 
    376 => "0011001", 377 => "0001111", 378 => "0011011", 379 => "0001101", 
    380 => "0011011", 381 => "1111101", 382 => "1111100", 383 => "0000001", 
    384 => "1111110", 385 => "1111010", 386 => "1111101", 387 => "0000010", 
    388 => "1101110", 389 => "1110010", 390 => "0001101", 391 => "0100001", 
    392 => "0010000", 393 => "0000110", 394 => "1101101", 395 => "1101010", 
    396 => "0001100", 397 => "0000000", 398 => "0000111", 399 => "0010000", 
    400 => "0001001", 401 => "1100010", 402 => "1110101", 403 => "0001001", 
    404 => "0001101", 405 => "0010011", 406 => "0001011", 407 => "1110111", 
    408 => "0000100", 409 => "0010111", 410 => "1110000", 411 => "1111001", 
    412 => "1110110", 413 => "1110000", 414 => "1111011", 415 => "1101101", 
    416 => "1110101", 417 => "0001011", 418 => "0000101", 419 to 420=> "0001111", 
    421 => "1110001", 422 => "1100011", 423 => "0001110", 424 => "0010000", 
    425 => "1101110", 426 => "0010101", 427 => "0001001", 428 => "0011100", 
    429 => "1110011", 430 => "0000101", 431 => "1110011", 432 => "0000010", 
    433 => "0010001", 434 => "0010011", 435 => "1111011", 436 => "0010001", 
    437 => "0000111", 438 => "0001010", 439 => "1101100", 440 => "0000001", 
    441 => "1101011", 442 => "1110010", 443 => "1111000", 444 => "1101001", 
    445 => "0000100", 446 => "0001101", 447 => "0010001", 448 => "0000100", 
    449 => "1101001", 450 => "0000110", 451 => "0001101", 452 => "1110000", 
    453 => "1100111", 454 => "0001101", 455 => "1110100", 456 => "0000111", 
    457 => "1111110", 458 => "0010001", 459 => "0001011", 460 => "0000101", 
    461 => "0010100", 462 => "0001101", 463 => "1111100", 464 => "0000001", 
    465 => "0000000", 466 => "1111011", 467 => "1111101", 468 => "0000111", 
    469 => "1111100", 470 => "1100101", 471 => "0000110", 472 => "1110000", 
    473 => "0011010", 474 => "0001111", 475 => "0000011", 476 => "1111101", 
    477 => "1101110", 478 => "1111010", 479 => "1111111", 480 => "0000111", 
    481 => "1110000", 482 => "0000010", 483 => "0010010", 484 => "1110011", 
    485 => "0000001", 486 => "0001010", 487 => "0010100", 488 => "0010000", 
    489 => "0010011", 490 => "0010110", 491 => "0001010", 492 => "0010001", 
    493 => "0001110", 494 => "0000101", 495 => "1111111", 496 => "1111000", 
    497 => "0001110", 498 => "0000000", 499 => "1110001", 500 => "0001000", 
    501 => "1101101", 502 => "1101110", 503 => "0000000", 504 => "0000101", 
    505 => "0000000", 506 => "1110110", 507 => "0011111", 508 => "0010010", 
    509 => "0011001", 510 => "0001110", 511 => "0000100", 512 => "1111010", 
    513 => "0010011", 514 => "0000001", 515 => "1111110", 516 => "1111101", 
    517 => "1110100", 518 => "0011011", 519 => "1110101", 520 => "0001001", 
    521 => "0001010", 522 => "0000110", 523 => "1110110", 524 => "0001010", 
    525 => "0001001", 526 => "1111011", 527 => "1101110", 528 => "1111100", 
    529 => "0001000", 530 => "1111000", 531 => "0000100", 532 => "1111011", 
    533 => "1100100", 534 => "1101010", 535 => "0001111", 536 => "1110000", 
    537 => "1110110", 538 => "1111100", 539 => "1101010", 540 => "1111100", 
    541 => "0000101", 542 => "1101101", 543 => "1111101", 544 => "1110011", 
    545 => "0001000", 546 => "1111010", 547 => "0001111", 548 => "0001110", 
    549 => "0000111", 550 => "1111110", 551 => "0000001", 552 => "0001111", 
    553 => "0001100", 554 => "1110001", 555 => "1111110", 556 => "0100000", 
    557 => "0010000", 558 => "0000000", 559 to 560=> "1111101", 561 => "1101000", 
    562 => "0001001", 563 => "0000101", 564 => "1111110", 565 => "0000001", 
    566 to 567=> "0000110", 568 => "0000111", 569 => "1101111", 570 => "0000111", 
    571 => "1101001", 572 => "1110000", 573 => "1110101", 574 => "0000001", 
    575 => "0001001", 576 => "1111001", 577 => "1111101", 578 => "1110110", 
    579 => "0011010", 580 => "0011000", 581 => "0010000", 582 => "1111111", 
    583 => "0100011", 584 => "0100010", 585 => "1111101", 586 => "1101000", 
    587 => "1110101", 588 => "0001011", 589 => "1110101", 590 => "1110010", 
    591 => "1111110", 592 => "1101101", 593 => "1111110", 594 => "0001111", 
    595 => "1111110", 596 => "1111001", 597 => "1110001", 598 => "0000001", 
    599 => "0001001", 600 => "1111111", 601 => "0001000", 602 => "0010001", 
    603 => "0001010", 604 => "0000000", 605 => "0010011", 606 => "0000010", 
    607 => "0000100", 608 to 609=> "0010100", 610 => "0010010", 611 => "0100011", 
    612 => "0100101", 613 => "1111100", 614 => "1011001", 615 => "1101101", 
    616 => "1111110", 617 => "0001100", 618 => "1111001", 619 => "0001001", 
    620 => "1111010", 621 => "1111000", 622 => "0000000", 623 => "1111011", 
    624 => "1100111", 625 => "1111111", 626 => "0000111", 627 => "0011111", 
    628 => "0001000", 629 => "0001100", 630 => "1111010", 631 => "0010011", 
    632 => "1111100", 633 => "1110001", 634 => "0000111", 635 => "1111101", 
    636 => "1110111", 637 => "0010100", 638 => "0011010", 639 => "0100110", 
    640 => "0111010", 641 => "1111100", 642 => "1010100", 643 => "1110010", 
    644 => "0000100", 645 => "1111110", 646 => "0000111", 647 => "0001011", 
    648 => "1111011", 649 => "1101001", 650 => "1011110", 651 => "1101000", 
    652 => "1111010", 653 => "1111100", 654 => "0000101", 655 => "0011010", 
    656 => "0100010", 657 => "0011000", 658 => "0011011", 659 => "1110110", 
    660 => "0001101", 661 => "1111001", 662 => "0001111", 663 => "0000110", 
    664 => "0010100", 665 => "0010111", 666 => "0111111", 667 => "0101010", 
    668 => "0001011", 669 => "0000110", 670 to 671=> "0000001", 672 => "1111001", 
    673 => "0001111", 674 => "0000010", 675 => "1111111", 676 => "1011101", 
    677 => "1010110", 678 => "1101110", 679 => "0000001", 680 => "1111111", 
    681 => "1111110", 682 => "0000010", 683 => "1111111", 684 => "0101101", 
    685 => "0000110", 686 => "0001011", 687 => "0001010", 688 => "0001110", 
    689 => "1111011", 690 => "0010100", 691 => "0000100", 692 => "0001000", 
    693 => "0010000", 694 => "0000111", 695 to 696=> "0001101", 697 => "1110110", 
    698 => "0000101", 699 => "1111000", 700 => "1110110", 701 => "1111011", 
    702 => "0101000", 703 => "1111001", 704 => "1010000", 705 => "1100000", 
    706 => "1101110", 707 => "1101111", 708 => "1100010", 709 => "0000101", 
    710 => "0001001", 711 => "0000011", 712 => "1101010", 713 => "0000101", 
    714 => "0001000", 715 => "0011101", 716 => "0001000", 717 => "0100100", 
    718 => "0000000", 719 => "0000010", 720 => "0100001", 721 => "0010000", 
    722 => "0000100", 723 => "0001010", 724 => "1110011", 725 => "1101101", 
    726 => "0000101", 727 => "0001101", 728 => "1110000", 729 => "1110100", 
    730 => "1111010", 731 => "0011000", 732 => "0001100", 733 => "0000001", 
    734 => "0000100", 735 => "1101100", 736 => "1100101", 737 => "0000001", 
    738 => "1101010", 739 => "0000011", 740 => "0000110", 741 => "1100010", 
    742 to 743=> "1111010", 744 => "0000001", 745 => "0000110", 746 => "0010001", 
    747 => "1010011", 748 => "1101011", 749 => "0010010", 750 => "1100101", 
    751 => "1111001", 752 => "0000000", 753 => "1111001", 754 => "0000101", 
    755 => "1110000", 756 => "0001000", 757 => "0010000", 758 => "0001010", 
    759 => "1111100", 760 => "1101010", 761 => "1110110", 762 => "1101000", 
    763 => "1111001", 764 => "0000010", 765 => "1111010", 766 => "1001011", 
    767 => "1110111", 768 => "1111001", 769 => "1111100", 770 => "1101110", 
    771 => "0001101", 772 => "1101000", 773 => "1010001", 774 => "1100001", 
    775 => "1100010", 776 => "0001010", 777 => "1110110", 778 => "1111011", 
    779 => "1011011", 780 => "1110111", 781 => "0001001", 782 => "1110111", 
    783 => "0000100" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbYs is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbYs is
    component mlp_l1_l1_weightsbYs_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbYs_rom_U :  component mlp_l1_l1_weightsbYs_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


