-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsIfE_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsIfE_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000011", 1 => "0001111", 2 => "0001010", 3 => "1110100", 
    4 => "0001000", 5 to 6=> "1110100", 7 => "0000110", 8 => "1111011", 
    9 to 10=> "0000011", 11 => "1110100", 12 => "1110011", 13 => "1110001", 
    14 => "1111001", 15 => "0001100", 16 => "0000000", 17 => "1111110", 
    18 => "0001101", 19 => "0000101", 20 => "1110111", 21 => "0001111", 
    22 => "0000000", 23 => "1110011", 24 => "1110101", 25 => "1110011", 
    26 => "0000111", 27 => "1110110", 28 => "0000001", 29 => "1111011", 
    30 => "0000010", 31 => "0001100", 32 => "1111010", 33 => "1111101", 
    34 => "0000111", 35 => "0001000", 36 => "1101100", 37 => "1111010", 
    38 => "1110101", 39 => "0000001", 40 => "0010000", 41 => "0001010", 
    42 => "1011000", 43 => "1011100", 44 => "1111101", 45 => "1110110", 
    46 => "0011000", 47 => "1101110", 48 => "0001001", 49 => "1111111", 
    50 => "0010001", 51 => "0001001", 52 => "0010000", 53 => "1110110", 
    54 => "0000010", 55 => "1110001", 56 => "1110110", 57 => "0010000", 
    58 => "0001001", 59 => "1110101", 60 => "1111111", 61 => "1101111", 
    62 => "1110111", 63 => "1110100", 64 => "0011100", 65 => "0001101", 
    66 => "0011011", 67 => "0001101", 68 => "0010100", 69 => "1111010", 
    70 => "0001111", 71 => "1111110", 72 => "1110101", 73 => "1101101", 
    74 => "1101010", 75 => "1100110", 76 => "0001000", 77 => "0000110", 
    78 => "0001111", 79 => "1101111", 80 => "0001110", 81 => "1111101", 
    82 => "0001111", 83 => "0001010", 84 => "1110101", 85 => "1111110", 
    86 to 87=> "1101111", 88 => "1110110", 89 => "0001000", 90 => "0000010", 
    91 => "0011101", 92 => "0010100", 93 => "0010111", 94 => "0011000", 
    95 => "0100011", 96 => "0011000", 97 => "1111001", 98 => "0010010", 
    99 => "0000111", 100 => "0010110", 101 => "1110010", 102 => "1100101", 
    103 => "1111000", 104 => "0001011", 105 => "0000111", 106 => "1111000", 
    107 => "1110111", 108 => "1111000", 109 => "1100111", 110 => "0000000", 
    111 => "0001101", 112 => "0001011", 113 => "0000100", 114 => "0010001", 
    115 => "0010101", 116 => "0010000", 117 => "0101111", 118 => "0000100", 
    119 => "0011011", 120 => "0011010", 121 => "1111111", 122 => "0011011", 
    123 => "1111110", 124 => "1111000", 125 => "1111110", 126 => "1111000", 
    127 => "0001000", 128 => "1101111", 129 => "1100011", 130 => "1100000", 
    131 => "1101101", 132 => "1110111", 133 => "0000111", 134 => "0001110", 
    135 => "0001100", 136 => "0000001", 137 => "0001110", 138 => "0000010", 
    139 => "0000111", 140 => "1101110", 141 => "1110100", 142 => "1111000", 
    143 => "0001001", 144 => "0010101", 145 => "0010100", 146 => "1110101", 
    147 => "0001010", 148 => "0000100", 149 => "0001101", 150 => "0011101", 
    151 => "1111101", 152 => "1110001", 153 => "1111100", 154 => "0000101", 
    155 => "1111001", 156 => "0000100", 157 => "0000101", 158 => "1101011", 
    159 => "0001011", 160 => "0000011", 161 => "1011111", 162 => "1011011", 
    163 => "0010011", 164 => "0001011", 165 => "0000001", 166 => "0000110", 
    167 => "0010000", 168 => "0000000", 169 => "0001101", 170 => "0001110", 
    171 => "1111111", 172 => "0100010", 173 => "1111111", 174 => "1111100", 
    175 => "0000101", 176 => "1111001", 177 => "0100011", 178 => "0001011", 
    179 => "1110010", 180 => "1110000", 181 => "1011110", 182 => "0000111", 
    183 => "0011001", 184 => "0000011", 185 => "1111011", 186 => "1110010", 
    187 => "1101110", 188 => "0000011", 189 => "1100111", 190 => "1110110", 
    191 => "1101010", 192 => "0000010", 193 => "1111010", 194 => "0001110", 
    195 => "0011001", 196 => "0001100", 197 => "1110100", 198 => "0011011", 
    199 => "0000000", 200 => "1111011", 201 => "0001000", 202 => "0000000", 
    203 => "1111010", 204 to 205=> "1110011", 206 => "1101010", 207 => "1110100", 
    208 => "1110101", 209 => "0000101", 210 => "0000110", 211 => "0010110", 
    212 => "1111011", 213 => "0001001", 214 => "1111000", 215 => "0000000", 
    216 => "1100101", 217 => "1100001", 218 => "1101011", 219 => "1011111", 
    220 => "0010000", 221 => "0010100", 222 => "0001101", 223 => "0001111", 
    224 => "1110000", 225 => "1111000", 226 => "0011101", 227 => "1100110", 
    228 => "0001011", 229 => "0011001", 230 => "1101111", 231 => "1101100", 
    232 => "1111110", 233 => "1101001", 234 => "1110000", 235 => "1110011", 
    236 => "1111011", 237 => "1110111", 238 => "1111111", 239 => "0000011", 
    240 => "0000111", 241 => "0001101", 242 => "0000111", 243 => "1101110", 
    244 => "1100110", 245 => "0001110", 246 => "1101100", 247 => "1011011", 
    248 => "1100001", 249 => "1110100", 250 => "1111001", 251 => "1100111", 
    252 => "1111111", 253 => "1011001", 254 => "1110101", 255 => "0001100", 
    256 => "0010011", 257 => "0011100", 258 => "0000010", 259 => "1110100", 
    260 => "1100111", 261 => "1110110", 262 => "1111100", 263 => "1100111", 
    264 => "0000110", 265 => "0000011", 266 => "0011000", 267 => "0001001", 
    268 => "1111011", 269 => "0000001", 270 => "0000100", 271 => "1110001", 
    272 => "0011110", 273 => "1111000", 274 => "1101001", 275 => "1101000", 
    276 => "1110011", 277 => "1011110", 278 => "1111110", 279 => "0001011", 
    280 => "0000100", 281 => "1101010", 282 => "1100111", 283 => "0100101", 
    284 => "0010010", 285 => "0010111", 286 => "0010100", 287 => "1111010", 
    288 => "0001110", 289 => "0000000", 290 => "0000100", 291 => "1111000", 
    292 => "0001100", 293 => "1111110", 294 => "1101011", 295 => "1111101", 
    296 => "1110100", 297 => "0001010", 298 => "0001110", 299 => "1111000", 
    300 => "0001110", 301 => "1101100", 302 => "1111100", 303 => "1110010", 
    304 => "1100101", 305 => "1101100", 306 => "1101010", 307 => "1101011", 
    308 => "1111111", 309 => "0000100", 310 => "1101011", 311 => "0000100", 
    312 => "1110011", 313 => "0000110", 314 => "0001000", 315 => "1111110", 
    316 => "0000111", 317 => "0011001", 318 => "1111000", 319 => "1111111", 
    320 => "1110001", 321 => "1110010", 322 => "1101010", 323 => "1011110", 
    324 => "0010111", 325 => "0011110", 326 => "0010011", 327 => "0100000", 
    328 => "0010011", 329 to 330=> "1100001", 331 => "1101110", 332 => "1001111", 
    333 => "1111001", 334 => "1011001", 335 => "1101001", 336 => "1111101", 
    337 => "0000101", 338 => "1111000", 339 => "1110011", 340 => "1110111", 
    341 => "1111101", 342 => "1111100", 343 => "1110011", 344 => "0000100", 
    345 => "1110000", 346 => "1111011", 347 => "0000011", 348 => "1100100", 
    349 => "1111100", 350 => "1101011", 351 => "0000001", 352 => "0010111", 
    353 => "0000000", 354 => "0011111", 355 => "0011010", 356 => "0001010", 
    357 => "0001001", 358 => "1111110", 359 => "0010010", 360 => "1110000", 
    361 => "1011111", 362 => "1100100", 363 => "1010100", 364 => "1100111", 
    365 => "1101100", 366 => "1111110", 367 => "1100000", 368 => "0000101", 
    369 => "0000011", 370 => "0001111", 371 => "0000111", 372 => "0010100", 
    373 => "1110101", 374 => "0000000", 375 => "1100100", 376 => "1111110", 
    377 => "0010000", 378 => "1110110", 379 => "0010000", 380 => "0001111", 
    381 => "0100100", 382 => "0000111", 383 => "0001110", 384 => "0001101", 
    385 => "0000111", 386 => "0100011", 387 => "0010110", 388 => "1111101", 
    389 => "1101000", 390 => "0000001", 391 => "0011110", 392 => "0000010", 
    393 => "1111110", 394 => "1011011", 395 => "0000101", 396 => "0000100", 
    397 => "0000110", 398 => "0001110", 399 => "0000101", 400 => "0010000", 
    401 => "0010001", 402 => "1111011", 403 => "0001001", 404 => "0001011", 
    405 => "0000011", 406 => "0000101", 407 => "0010101", 408 => "0010110", 
    409 => "0000000", 410 => "0010111", 411 => "0011001", 412 => "0001001", 
    413 => "0001000", 414 => "0001101", 415 => "1111011", 416 => "1111110", 
    417 => "0101011", 418 => "1111010", 419 => "1101010", 420 => "0001000", 
    421 => "0011010", 422 => "1101001", 423 => "0001001", 424 => "0000110", 
    425 => "0010011", 426 => "0001101", 427 => "1111100", 428 => "1111110", 
    429 => "1110000", 430 => "1101111", 431 => "1110111", 432 => "0000010", 
    433 => "0001110", 434 => "1110011", 435 => "0010000", 436 => "0000110", 
    437 => "0010111", 438 => "0001010", 439 => "0100011", 440 => "0000110", 
    441 => "0001100", 442 => "0000000", 443 => "1110101", 444 => "0000111", 
    445 => "0110001", 446 => "0011001", 447 => "0011110", 448 => "0011010", 
    449 => "0001000", 450 => "0100001", 451 => "0010100", 452 => "0010000", 
    453 => "0001110", 454 => "0010100", 455 => "0010001", 456 => "0001000", 
    457 => "0000001", 458 => "1110011", 459 => "0011000", 460 => "0000101", 
    461 => "1111110", 462 => "1100110", 463 => "1111110", 464 => "0000011", 
    465 => "0001111", 466 => "0010100", 467 => "0001001", 468 => "0011000", 
    469 => "0000110", 470 => "0011000", 471 => "1110010", 472 => "0010110", 
    473 => "0101111", 474 => "1111101", 475 => "1110111", 476 => "1110000", 
    477 => "1111100", 478 => "0011000", 479 => "0010100", 480 => "0010011", 
    481 => "1111101", 482 => "0000000", 483 => "0000110", 484 => "0010000", 
    485 => "1110100", 486 => "0000001", 487 => "0010001", 488 => "0001101", 
    489 => "1111011", 490 => "0000011", 491 => "1111000", 492 => "0000000", 
    493 => "0011100", 494 => "0010001", 495 => "0100001", 496 => "0000000", 
    497 => "0010010", 498 => "0010111", 499 => "1110001", 500 => "1010010", 
    501 => "0010111", 502 => "1111000", 503 => "1111110", 504 => "0010010", 
    505 => "0000000", 506 => "0000011", 507 => "0100010", 508 => "0001011", 
    509 => "0000101", 510 => "1111011", 511 => "0000100", 512 => "1111000", 
    513 => "1111011", 514 => "1110100", 515 => "0000001", 516 => "0001011", 
    517 => "0000011", 518 => "0000111", 519 => "0100100", 520 => "0011111", 
    521 => "0010011", 522 => "0001000", 523 => "1111010", 524 => "1101011", 
    525 => "0010001", 526 => "1111110", 527 => "0000011", 528 => "1100110", 
    529 => "1101011", 530 => "1100001", 531 to 532=> "1111110", 533 => "1110100", 
    534 => "1101001", 535 => "0011111", 536 => "0100110", 537 => "0110001", 
    538 => "0010110", 539 => "0011011", 540 => "1111100", 541 => "0001100", 
    542 => "0001011", 543 => "0010000", 544 => "0001011", 545 => "1111111", 
    546 => "0010001", 547 => "0010110", 548 => "0011100", 549 => "0010010", 
    550 => "0011011", 551 => "0001001", 552 => "1111110", 553 => "1111011", 
    554 => "0001110", 555 => "0011110", 556 => "0000000", 557 => "1110011", 
    558 => "0001101", 559 => "0001100", 560 => "0000010", 561 => "0001001", 
    562 => "1111111", 563 => "0101011", 564 => "0010110", 565 => "0001011", 
    566 => "0000000", 567 to 568=> "1111111", 569 => "0010010", 570 => "1111100", 
    571 => "0010011", 572 => "0001100", 573 => "0001111", 574 => "0101000", 
    575 => "0010100", 576 => "0001100", 577 => "0010011", 578 => "0010010", 
    579 => "1111111", 580 => "0000001", 581 => "0001111", 582 => "1111001", 
    583 => "0000011", 584 to 585=> "1111101", 586 => "1111011", 587 => "1101111", 
    588 => "0000100", 589 => "0001100", 590 => "0100101", 591 => "0001110", 
    592 => "0001111", 593 => "1111100", 594 => "0001000", 595 => "0010110", 
    596 => "0011110", 597 => "0000000", 598 => "1110110", 599 => "1101110", 
    600 => "0000111", 601 => "0100011", 602 => "0010011", 603 => "1111100", 
    604 => "0001110", 605 => "1100101", 606 => "1101111", 607 => "0000100", 
    608 => "0000111", 609 => "1110100", 610 => "1111111", 611 => "1110011", 
    612 => "1110101", 613 => "1101101", 614 => "1011111", 615 => "1110001", 
    616 => "1111101", 617 => "1110010", 618 to 619=> "0010010", 620 => "1111001", 
    621 => "0000111", 622 => "1100010", 623 => "1111001", 624 => "1101110", 
    625 => "0000001", 626 => "1101110", 627 => "0001000", 628 => "1110011", 
    629 => "1111011", 630 to 631=> "0000010", 632 => "1111111", 633 => "0000100", 
    634 => "1101001", 635 => "0000000", 636 => "1101011", 637 => "0001000", 
    638 => "0010010", 639 => "0000100", 640 => "1110011", 641 => "1110000", 
    642 => "1101000", 643 => "0000001", 644 => "1110101", 645 => "0001001", 
    646 => "0001100", 647 => "0011100", 648 => "1101111", 649 => "1100010", 
    650 => "1110100", 651 => "1110001", 652 => "1101100", 653 => "1110001", 
    654 => "1101100", 655 => "0000000", 656 => "1101101", 657 => "1110110", 
    658 => "1101111", 659 => "0000111", 660 => "1101010", 661 => "1111101", 
    662 => "0010100", 663 => "1111111", 664 => "0000100", 665 => "0010101", 
    666 => "0001110", 667 => "0000010", 668 => "0010101", 669 => "1111111", 
    670 => "0001000", 671 => "0001100", 672 => "0000101", 673 => "1111100", 
    674 => "0000101", 675 => "0101001", 676 to 677=> "0001101", 678 => "0100011", 
    679 => "0001110", 680 => "1111110", 681 => "0001011", 682 => "0001000", 
    683 => "1111000", 684 => "1101100", 685 => "1111110", 686 => "0000000", 
    687 => "1100101", 688 => "1111101", 689 => "1110110", 690 => "1110111", 
    691 => "1110101", 692 => "0010001", 693 => "0010100", 694 => "0001111", 
    695 => "0000110", 696 => "1111000", 697 => "0001001", 698 => "1111101", 
    699 => "1111011", 700 => "0001010", 701 => "0001000", 702 => "0100101", 
    703 => "1110110", 704 => "1111101", 705 => "0011001", 706 => "0010000", 
    707 => "0000111", 708 => "0010011", 709 => "1111000", 710 => "0010100", 
    711 => "1111001", 712 => "1101111", 713 => "1101110", 714 => "1110101", 
    715 => "1110000", 716 => "0000010", 717 => "1110001", 718 => "1110100", 
    719 => "0001001", 720 => "0001011", 721 => "0001000", 722 => "1111000", 
    723 => "1100110", 724 => "1100010", 725 => "0010100", 726 => "0000111", 
    727 => "1111100", 728 => "1110110", 729 => "0001101", 730 => "1111000", 
    731 => "0000000", 732 => "0000010", 733 => "0100110", 734 => "0100100", 
    735 => "0010111", 736 => "1111110", 737 => "0000001", 738 => "0010011", 
    739 => "0000100", 740 => "1101100", 741 => "0010000", 742 => "0010001", 
    743 => "0000110", 744 => "1111010", 745 => "1110010", 746 => "1110000", 
    747 => "0000000", 748 => "1111000", 749 => "1111001", 750 => "1111110", 
    751 => "1110111", 752 => "0001010", 753 => "1101000", 754 => "1111000", 
    755 => "1111100", 756 to 758=> "0010010", 759 => "1110000", 760 => "1110001", 
    761 => "1100011", 762 => "0010001", 763 => "0010010", 764 => "0000010", 
    765 => "1110001", 766 => "1100111", 767 => "0010011", 768 => "0010100", 
    769 => "0000001", 770 => "0010010", 771 => "0101100", 772 => "1110011", 
    773 => "0000000", 774 => "0001010", 775 => "0000110", 776 => "1111011", 
    777 => "0000000", 778 => "1111110", 779 => "1100000", 780 => "0000001", 
    781 => "0001000", 782 => "1110101", 783 => "0000101" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsIfE is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsIfE is
    component mlp_l1_l1_weightsIfE_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsIfE_rom_U :  component mlp_l1_l1_weightsIfE_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


