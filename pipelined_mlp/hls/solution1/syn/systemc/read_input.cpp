// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_input.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_input::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_input::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> read_input::ap_ST_fsm_state1 = "1";
const sc_lv<4> read_input::ap_ST_fsm_state2 = "10";
const sc_lv<4> read_input::ap_ST_fsm_state3 = "100";
const sc_lv<4> read_input::ap_ST_fsm_state4 = "1000";
const sc_lv<32> read_input::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> read_input::ap_const_lv32_1 = "1";
const sc_lv<1> read_input::ap_const_lv1_0 = "0";
const sc_lv<32> read_input::ap_const_lv32_3 = "11";
const sc_lv<32> read_input::ap_const_lv32_2 = "10";
const sc_lv<6> read_input::ap_const_lv6_0 = "000000";
const sc_lv<1> read_input::ap_const_lv1_1 = "1";
const sc_lv<8> read_input::ap_const_lv8_0 = "00000000";
const sc_lv<8> read_input::ap_const_lv8_7 = "111";
const sc_lv<5> read_input::ap_const_lv5_0 = "00000";
const sc_lv<6> read_input::ap_const_lv6_31 = "110001";
const sc_lv<6> read_input::ap_const_lv6_1 = "1";
const sc_lv<5> read_input::ap_const_lv5_10 = "10000";
const sc_lv<5> read_input::ap_const_lv5_1 = "1";
const sc_lv<32> read_input::ap_const_lv32_7F = "1111111";
const sc_lv<8> read_input::ap_const_lv8_7F = "1111111";
const sc_lv<8> read_input::ap_const_lv8_8 = "1000";
const sc_lv<128> read_input::ap_const_lv128_lc_1 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const bool read_input::ap_const_boolean_1 = true;

read_input::read_input(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_in_V_data_V_U = new regslice_both<128>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<16>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<16>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_high_fu_253_p2);
    sensitive << ( Hi_assign_reg_125 );

    SC_METHOD(thread_i_fu_153_p2);
    sensitive << ( i_0_reg_103 );

    SC_METHOD(thread_icmp_ln32_fu_147_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( i_0_reg_103 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln39_fu_163_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_136 );

    SC_METHOD(thread_icmp_ln681_fu_175_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln39_fu_163_p2 );
    sensitive << ( Lo_assign_reg_114 );
    sensitive << ( Hi_assign_reg_125 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_j_fu_169_p2);
    sensitive << ( j_0_reg_136 );

    SC_METHOD(thread_l1_in_V_blk_n);
    sensitive << ( l1_in_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_l1_in_V_din);
    sensitive << ( l1_in_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Result_s_fu_268_p2 );

    SC_METHOD(thread_l1_in_V_write);
    sensitive << ( l1_in_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_low_fu_247_p2);
    sensitive << ( Lo_assign_reg_114 );

    SC_METHOD(thread_lshr_ln681_1_fu_262_p2);
    sensitive << ( zext_ln681_1_fu_259_p1 );

    SC_METHOD(thread_lshr_ln681_fu_241_p2);
    sensitive << ( select_ln681_1_fu_216_p3 );
    sensitive << ( zext_ln681_fu_237_p1 );

    SC_METHOD(thread_p_Result_s_fu_268_p2);
    sensitive << ( lshr_ln681_reg_305 );
    sensitive << ( lshr_ln681_1_fu_262_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln681_1_fu_216_p3);
    sensitive << ( tmp_data_V_reg_286 );
    sensitive << ( icmp_ln681_fu_175_p2 );
    sensitive << ( tmp_fu_181_p4 );

    SC_METHOD(thread_select_ln681_2_fu_223_p3);
    sensitive << ( Lo_assign_reg_114 );
    sensitive << ( icmp_ln681_fu_175_p2 );
    sensitive << ( sub_ln681_1_fu_196_p2 );

    SC_METHOD(thread_select_ln681_fu_208_p3);
    sensitive << ( icmp_ln681_fu_175_p2 );
    sensitive << ( sub_ln681_fu_190_p2 );
    sensitive << ( sub_ln681_2_fu_202_p2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln681_1_fu_196_p2);
    sensitive << ( Lo_assign_reg_114 );

    SC_METHOD(thread_sub_ln681_2_fu_202_p2);
    sensitive << ( Lo_assign_reg_114 );
    sensitive << ( Hi_assign_reg_125 );

    SC_METHOD(thread_sub_ln681_3_fu_231_p2);
    sensitive << ( select_ln681_fu_208_p3 );

    SC_METHOD(thread_sub_ln681_fu_190_p2);
    sensitive << ( Lo_assign_reg_114 );
    sensitive << ( Hi_assign_reg_125 );

    SC_METHOD(thread_tmp_fu_181_p4);
    sensitive << ( tmp_data_V_reg_286 );

    SC_METHOD(thread_zext_ln681_1_fu_259_p1);
    sensitive << ( sub_ln681_3_reg_300 );

    SC_METHOD(thread_zext_ln681_fu_237_p1);
    sensitive << ( select_ln681_2_fu_223_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( l1_in_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln32_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln39_fu_163_p2 );
    sensitive << ( in_r_TVALID_int );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_input_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, l1_in_V_din, "(port)l1_in_V_din");
    sc_trace(mVcdFile, l1_in_V_full_n, "(port)l1_in_V_full_n");
    sc_trace(mVcdFile, l1_in_V_write, "(port)l1_in_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln32_fu_147_p2, "icmp_ln32_fu_147_p2");
    sc_trace(mVcdFile, l1_in_V_blk_n, "l1_in_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_153_p2, "i_fu_153_p2");
    sc_trace(mVcdFile, i_reg_281, "i_reg_281");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_V_reg_286, "tmp_data_V_reg_286");
    sc_trace(mVcdFile, j_fu_169_p2, "j_fu_169_p2");
    sc_trace(mVcdFile, j_reg_295, "j_reg_295");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln681_3_fu_231_p2, "sub_ln681_3_fu_231_p2");
    sc_trace(mVcdFile, sub_ln681_3_reg_300, "sub_ln681_3_reg_300");
    sc_trace(mVcdFile, icmp_ln39_fu_163_p2, "icmp_ln39_fu_163_p2");
    sc_trace(mVcdFile, lshr_ln681_fu_241_p2, "lshr_ln681_fu_241_p2");
    sc_trace(mVcdFile, lshr_ln681_reg_305, "lshr_ln681_reg_305");
    sc_trace(mVcdFile, low_fu_247_p2, "low_fu_247_p2");
    sc_trace(mVcdFile, low_reg_310, "low_reg_310");
    sc_trace(mVcdFile, high_fu_253_p2, "high_fu_253_p2");
    sc_trace(mVcdFile, high_reg_315, "high_reg_315");
    sc_trace(mVcdFile, i_0_reg_103, "i_0_reg_103");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, Lo_assign_reg_114, "Lo_assign_reg_114");
    sc_trace(mVcdFile, Hi_assign_reg_125, "Hi_assign_reg_125");
    sc_trace(mVcdFile, j_0_reg_136, "j_0_reg_136");
    sc_trace(mVcdFile, icmp_ln681_fu_175_p2, "icmp_ln681_fu_175_p2");
    sc_trace(mVcdFile, sub_ln681_fu_190_p2, "sub_ln681_fu_190_p2");
    sc_trace(mVcdFile, sub_ln681_2_fu_202_p2, "sub_ln681_2_fu_202_p2");
    sc_trace(mVcdFile, tmp_fu_181_p4, "tmp_fu_181_p4");
    sc_trace(mVcdFile, sub_ln681_1_fu_196_p2, "sub_ln681_1_fu_196_p2");
    sc_trace(mVcdFile, select_ln681_fu_208_p3, "select_ln681_fu_208_p3");
    sc_trace(mVcdFile, select_ln681_2_fu_223_p3, "select_ln681_2_fu_223_p3");
    sc_trace(mVcdFile, select_ln681_1_fu_216_p3, "select_ln681_1_fu_216_p3");
    sc_trace(mVcdFile, zext_ln681_fu_237_p1, "zext_ln681_fu_237_p1");
    sc_trace(mVcdFile, zext_ln681_1_fu_259_p1, "zext_ln681_1_fu_259_p1");
    sc_trace(mVcdFile, lshr_ln681_1_fu_262_p2, "lshr_ln681_1_fu_262_p2");
    sc_trace(mVcdFile, p_Result_s_fu_268_p2, "p_Result_s_fu_268_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
#endif

    }
}

read_input::~read_input() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
}

void read_input::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(l1_in_V_full_n.read(), ap_const_logic_1))) {
        Hi_assign_reg_125 = high_reg_315.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Hi_assign_reg_125 = ap_const_lv8_7;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(l1_in_V_full_n.read(), ap_const_logic_1))) {
        Lo_assign_reg_114 = low_reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Lo_assign_reg_114 = ap_const_lv8_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_1) && 
                    !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln39_fu_163_p2.read(), ap_const_lv1_1))) {
        i_0_reg_103 = i_reg_281.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_103 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(l1_in_V_full_n.read(), ap_const_logic_1))) {
        j_0_reg_136 = j_reg_295.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        j_0_reg_136 = ap_const_lv5_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_163_p2.read()))) {
        high_reg_315 = high_fu_253_p2.read();
        low_reg_310 = low_fu_247_p2.read();
        lshr_ln681_reg_305 = lshr_ln681_fu_241_p2.read();
        sub_ln681_3_reg_300 = sub_ln681_3_fu_231_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_281 = i_fu_153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_295 = j_fu_169_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        tmp_data_V_reg_286 = in_r_TDATA_int.read();
    }
}

void read_input::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_input::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void read_input::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void read_input::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void read_input::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void read_input::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void read_input::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void read_input::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_input::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void read_input::thread_high_fu_253_p2() {
    high_fu_253_p2 = (!ap_const_lv8_8.is_01() || !Hi_assign_reg_125.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_8) + sc_biguint<8>(Hi_assign_reg_125.read()));
}

void read_input::thread_i_fu_153_p2() {
    i_fu_153_p2 = (!i_0_reg_103.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_103.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void read_input::thread_icmp_ln32_fu_147_p2() {
    icmp_ln32_fu_147_p2 = (!i_0_reg_103.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_103.read() == ap_const_lv6_31);
}

void read_input::thread_icmp_ln39_fu_163_p2() {
    icmp_ln39_fu_163_p2 = (!j_0_reg_136.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_136.read() == ap_const_lv5_10);
}

void read_input::thread_icmp_ln681_fu_175_p2() {
    icmp_ln681_fu_175_p2 = (!Lo_assign_reg_114.read().is_01() || !Hi_assign_reg_125.read().is_01())? sc_lv<1>(): (sc_biguint<8>(Lo_assign_reg_114.read()) > sc_biguint<8>(Hi_assign_reg_125.read()));
}

void read_input::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void read_input::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void read_input::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void read_input::thread_j_fu_169_p2() {
    j_fu_169_p2 = (!j_0_reg_136.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_136.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void read_input::thread_l1_in_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        l1_in_V_blk_n = l1_in_V_full_n.read();
    } else {
        l1_in_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_l1_in_V_din() {
    l1_in_V_din = p_Result_s_fu_268_p2.read().range(8-1, 0);
}

void read_input::thread_l1_in_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(l1_in_V_full_n.read(), ap_const_logic_1))) {
        l1_in_V_write = ap_const_logic_1;
    } else {
        l1_in_V_write = ap_const_logic_0;
    }
}

void read_input::thread_low_fu_247_p2() {
    low_fu_247_p2 = (!ap_const_lv8_8.is_01() || !Lo_assign_reg_114.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_8) + sc_biguint<8>(Lo_assign_reg_114.read()));
}

void read_input::thread_lshr_ln681_1_fu_262_p2() {
    lshr_ln681_1_fu_262_p2 = (!zext_ln681_1_fu_259_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 >> (unsigned short)zext_ln681_1_fu_259_p1.read().to_uint();
}

void read_input::thread_lshr_ln681_fu_241_p2() {
    lshr_ln681_fu_241_p2 = (!zext_ln681_fu_237_p1.read().is_01())? sc_lv<128>(): select_ln681_1_fu_216_p3.read() >> (unsigned short)zext_ln681_fu_237_p1.read().to_uint();
}

void read_input::thread_p_Result_s_fu_268_p2() {
    p_Result_s_fu_268_p2 = (lshr_ln681_reg_305.read() & lshr_ln681_1_fu_262_p2.read());
}

void read_input::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void read_input::thread_select_ln681_1_fu_216_p3() {
    select_ln681_1_fu_216_p3 = (!icmp_ln681_fu_175_p2.read()[0].is_01())? sc_lv<128>(): ((icmp_ln681_fu_175_p2.read()[0].to_bool())? tmp_fu_181_p4.read(): tmp_data_V_reg_286.read());
}

void read_input::thread_select_ln681_2_fu_223_p3() {
    select_ln681_2_fu_223_p3 = (!icmp_ln681_fu_175_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_175_p2.read()[0].to_bool())? sub_ln681_1_fu_196_p2.read(): Lo_assign_reg_114.read());
}

void read_input::thread_select_ln681_fu_208_p3() {
    select_ln681_fu_208_p3 = (!icmp_ln681_fu_175_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_175_p2.read()[0].to_bool())? sub_ln681_fu_190_p2.read(): sub_ln681_2_fu_202_p2.read());
}

void read_input::thread_start_out() {
    start_out = real_start.read();
}

void read_input::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void read_input::thread_sub_ln681_1_fu_196_p2() {
    sub_ln681_1_fu_196_p2 = (!ap_const_lv8_7F.is_01() || !Lo_assign_reg_114.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(Lo_assign_reg_114.read()));
}

void read_input::thread_sub_ln681_2_fu_202_p2() {
    sub_ln681_2_fu_202_p2 = (!Hi_assign_reg_125.read().is_01() || !Lo_assign_reg_114.read().is_01())? sc_lv<8>(): (sc_biguint<8>(Hi_assign_reg_125.read()) - sc_biguint<8>(Lo_assign_reg_114.read()));
}

void read_input::thread_sub_ln681_3_fu_231_p2() {
    sub_ln681_3_fu_231_p2 = (!ap_const_lv8_7F.is_01() || !select_ln681_fu_208_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(select_ln681_fu_208_p3.read()));
}

void read_input::thread_sub_ln681_fu_190_p2() {
    sub_ln681_fu_190_p2 = (!Lo_assign_reg_114.read().is_01() || !Hi_assign_reg_125.read().is_01())? sc_lv<8>(): (sc_biguint<8>(Lo_assign_reg_114.read()) - sc_biguint<8>(Hi_assign_reg_125.read()));
}

void read_input::thread_tmp_fu_181_p4() {
    tmp_fu_181_p4 = tmp_data_V_reg_286.read().range(0, 127);
}

void read_input::thread_zext_ln681_1_fu_259_p1() {
    zext_ln681_1_fu_259_p1 = esl_zext<128,8>(sub_ln681_3_reg_300.read());
}

void read_input::thread_zext_ln681_fu_237_p1() {
    zext_ln681_fu_237_p1 = esl_zext<128,8>(select_ln681_2_fu_223_p3.read());
}

void read_input::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln32_fu_147_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln39_fu_163_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(l1_in_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

