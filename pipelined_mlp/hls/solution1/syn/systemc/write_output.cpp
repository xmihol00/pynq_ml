// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "write_output.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic write_output::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic write_output::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> write_output::ap_ST_fsm_state1 = "1";
const sc_lv<5> write_output::ap_ST_fsm_state2 = "10";
const sc_lv<5> write_output::ap_ST_fsm_state3 = "100";
const sc_lv<5> write_output::ap_ST_fsm_state4 = "1000";
const sc_lv<5> write_output::ap_ST_fsm_state5 = "10000";
const sc_lv<32> write_output::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool write_output::ap_const_boolean_1 = true;
const sc_lv<32> write_output::ap_const_lv32_2 = "10";
const sc_lv<1> write_output::ap_const_lv1_0 = "0";
const sc_lv<1> write_output::ap_const_lv1_1 = "1";
const sc_lv<32> write_output::ap_const_lv32_4 = "100";
const sc_lv<32> write_output::ap_const_lv32_1 = "1";
const sc_lv<32> write_output::ap_const_lv32_3 = "11";
const sc_lv<3> write_output::ap_const_lv3_0 = "000";
const sc_lv<7> write_output::ap_const_lv7_0 = "0000000";
const sc_lv<7> write_output::ap_const_lv7_1F = "11111";
const sc_lv<2> write_output::ap_const_lv2_0 = "00";
const sc_lv<8> write_output::ap_const_lv8_FF = "11111111";
const sc_lv<8> write_output::ap_const_lv8_0 = "00000000";
const sc_lv<3> write_output::ap_const_lv3_5 = "101";
const sc_lv<3> write_output::ap_const_lv3_1 = "1";
const sc_lv<2> write_output::ap_const_lv2_2 = "10";
const sc_lv<2> write_output::ap_const_lv2_1 = "1";
const sc_lv<7> write_output::ap_const_lv7_3F = "111111";
const sc_lv<32> write_output::ap_const_lv32_3F = "111111";
const sc_lv<64> write_output::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<7> write_output::ap_const_lv7_20 = "100000";

write_output::write_output(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_out_V_data_V_U = new regslice_both<64>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst);
    regslice_both_out_V_data_V_U->data_in(tmp_data_V_fu_90);
    regslice_both_out_V_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<8>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_out_V_keep_V_U->data_in(ap_var_for_const0);
    regslice_both_out_V_keep_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<8>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_out_V_strb_V_U->data_in(ap_var_for_const1);
    regslice_both_out_V_strb_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst);
    regslice_both_out_V_last_V_U->data_in(ap_var_for_const2);
    regslice_both_out_V_last_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln391_1_fu_298_p2);
    sensitive << ( tmp_data_V_fu_90 );
    sensitive << ( xor_ln391_fu_292_p2 );

    SC_METHOD(thread_and_ln391_2_fu_304_p2);
    sensitive << ( and_ln391_fu_286_p2 );
    sensitive << ( select_ln391_3_fu_266_p3 );

    SC_METHOD(thread_and_ln391_fu_286_p2);
    sensitive << ( shl_ln391_1_fu_274_p2 );
    sensitive << ( lshr_ln391_fu_280_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( icmp_ln63_fu_181_p2 );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln56_fu_169_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln56_fu_169_p2 );

    SC_METHOD(thread_high_fu_322_p2);
    sensitive << ( Hi_assign_reg_142 );

    SC_METHOD(thread_i_fu_175_p2);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_icmp_ln391_fu_196_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( Lo_assign_reg_130 );
    sensitive << ( Hi_assign_reg_142 );

    SC_METHOD(thread_icmp_ln56_fu_169_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_icmp_ln63_fu_181_p2);
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_j_fu_187_p2);
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_l3_out_V_blk_n);
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );

    SC_METHOD(thread_l3_out_V_read);
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_low_fu_316_p2);
    sensitive << ( Lo_assign_reg_130 );

    SC_METHOD(thread_lshr_ln391_fu_280_p2);
    sensitive << ( zext_ln391_2_fu_246_p1 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_p_Result_s_fu_310_p2);
    sensitive << ( and_ln391_1_fu_298_p2 );
    sensitive << ( and_ln391_2_fu_304_p2 );

    SC_METHOD(thread_select_ln391_1_fu_216_p3);
    sensitive << ( Lo_assign_reg_130 );
    sensitive << ( Hi_assign_reg_142 );
    sensitive << ( icmp_ln391_fu_196_p2 );

    SC_METHOD(thread_select_ln391_2_fu_224_p3);
    sensitive << ( Lo_assign_reg_130 );
    sensitive << ( icmp_ln391_fu_196_p2 );
    sensitive << ( sub_ln391_fu_202_p2 );

    SC_METHOD(thread_select_ln391_3_fu_266_p3);
    sensitive << ( icmp_ln391_fu_196_p2 );
    sensitive << ( shl_ln391_fu_250_p2 );
    sensitive << ( tmp_2_fu_256_p4 );

    SC_METHOD(thread_select_ln391_fu_208_p3);
    sensitive << ( Lo_assign_reg_130 );
    sensitive << ( Hi_assign_reg_142 );
    sensitive << ( icmp_ln391_fu_196_p2 );

    SC_METHOD(thread_shl_ln391_1_fu_274_p2);
    sensitive << ( zext_ln391_1_fu_242_p1 );

    SC_METHOD(thread_shl_ln391_fu_250_p2);
    sensitive << ( tmp_V_fu_193_p1 );
    sensitive << ( zext_ln391_fu_238_p1 );

    SC_METHOD(thread_sub_ln391_1_fu_232_p2);
    sensitive << ( select_ln391_fu_208_p3 );

    SC_METHOD(thread_sub_ln391_fu_202_p2);
    sensitive << ( Lo_assign_reg_130 );

    SC_METHOD(thread_tmp_2_fu_256_p4);
    sensitive << ( shl_ln391_fu_250_p2 );

    SC_METHOD(thread_tmp_V_fu_193_p1);
    sensitive << ( tmp_reg_355 );

    SC_METHOD(thread_xor_ln391_fu_292_p2);
    sensitive << ( and_ln391_fu_286_p2 );

    SC_METHOD(thread_zext_ln391_1_fu_242_p1);
    sensitive << ( select_ln391_1_fu_216_p3 );

    SC_METHOD(thread_zext_ln391_2_fu_246_p1);
    sensitive << ( sub_ln391_1_fu_232_p2 );

    SC_METHOD(thread_zext_ln391_fu_238_p1);
    sensitive << ( select_ln391_2_fu_224_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( l3_out_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );
    sensitive << ( icmp_ln56_fu_169_p2 );
    sensitive << ( out_r_TREADY_int );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "write_output_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, l3_out_V_dout, "(port)l3_out_V_dout");
    sc_trace(mVcdFile, l3_out_V_empty_n, "(port)l3_out_V_empty_n");
    sc_trace(mVcdFile, l3_out_V_read, "(port)l3_out_V_read");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, l3_out_V_blk_n, "l3_out_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln63_fu_181_p2, "icmp_ln63_fu_181_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_fu_175_p2, "i_fu_175_p2");
    sc_trace(mVcdFile, i_reg_342, "i_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, j_fu_187_p2, "j_fu_187_p2");
    sc_trace(mVcdFile, j_reg_350, "j_reg_350");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, tmp_reg_355, "tmp_reg_355");
    sc_trace(mVcdFile, low_fu_316_p2, "low_fu_316_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, high_fu_322_p2, "high_fu_322_p2");
    sc_trace(mVcdFile, i_0_reg_119, "i_0_reg_119");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, Lo_assign_reg_130, "Lo_assign_reg_130");
    sc_trace(mVcdFile, icmp_ln56_fu_169_p2, "icmp_ln56_fu_169_p2");
    sc_trace(mVcdFile, Hi_assign_reg_142, "Hi_assign_reg_142");
    sc_trace(mVcdFile, j_0_reg_154, "j_0_reg_154");
    sc_trace(mVcdFile, tmp_data_V_fu_90, "tmp_data_V_fu_90");
    sc_trace(mVcdFile, p_Result_s_fu_310_p2, "p_Result_s_fu_310_p2");
    sc_trace(mVcdFile, icmp_ln391_fu_196_p2, "icmp_ln391_fu_196_p2");
    sc_trace(mVcdFile, sub_ln391_fu_202_p2, "sub_ln391_fu_202_p2");
    sc_trace(mVcdFile, select_ln391_fu_208_p3, "select_ln391_fu_208_p3");
    sc_trace(mVcdFile, select_ln391_2_fu_224_p3, "select_ln391_2_fu_224_p3");
    sc_trace(mVcdFile, select_ln391_1_fu_216_p3, "select_ln391_1_fu_216_p3");
    sc_trace(mVcdFile, sub_ln391_1_fu_232_p2, "sub_ln391_1_fu_232_p2");
    sc_trace(mVcdFile, tmp_V_fu_193_p1, "tmp_V_fu_193_p1");
    sc_trace(mVcdFile, zext_ln391_fu_238_p1, "zext_ln391_fu_238_p1");
    sc_trace(mVcdFile, shl_ln391_fu_250_p2, "shl_ln391_fu_250_p2");
    sc_trace(mVcdFile, tmp_2_fu_256_p4, "tmp_2_fu_256_p4");
    sc_trace(mVcdFile, zext_ln391_1_fu_242_p1, "zext_ln391_1_fu_242_p1");
    sc_trace(mVcdFile, zext_ln391_2_fu_246_p1, "zext_ln391_2_fu_246_p1");
    sc_trace(mVcdFile, shl_ln391_1_fu_274_p2, "shl_ln391_1_fu_274_p2");
    sc_trace(mVcdFile, lshr_ln391_fu_280_p2, "lshr_ln391_fu_280_p2");
    sc_trace(mVcdFile, and_ln391_fu_286_p2, "and_ln391_fu_286_p2");
    sc_trace(mVcdFile, xor_ln391_fu_292_p2, "xor_ln391_fu_292_p2");
    sc_trace(mVcdFile, select_ln391_3_fu_266_p3, "select_ln391_3_fu_266_p3");
    sc_trace(mVcdFile, and_ln391_1_fu_298_p2, "and_ln391_1_fu_298_p2");
    sc_trace(mVcdFile, and_ln391_2_fu_304_p2, "and_ln391_2_fu_304_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
#endif

    }
}

write_output::~write_output() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void write_output::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv1_0;
}

void write_output::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv8_FF;
}

void write_output::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_0;
}

void write_output::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Hi_assign_reg_142 = high_fu_322_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_169_p2.read()))) {
        Hi_assign_reg_142 = ap_const_lv7_1F;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Lo_assign_reg_130 = low_fu_316_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_169_p2.read()))) {
        Lo_assign_reg_130 = ap_const_lv7_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_169_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
        i_0_reg_119 = i_reg_342.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_119 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_154 = j_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_169_p2.read()))) {
        j_0_reg_154 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        i_reg_342 = i_fu_175_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        j_reg_350 = j_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_data_V_fu_90 = p_Result_s_fu_310_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        tmp_reg_355 = l3_out_V_dout.read();
    }
}

void write_output::thread_and_ln391_1_fu_298_p2() {
    and_ln391_1_fu_298_p2 = (tmp_data_V_fu_90.read() & xor_ln391_fu_292_p2.read());
}

void write_output::thread_and_ln391_2_fu_304_p2() {
    and_ln391_2_fu_304_p2 = (select_ln391_3_fu_266_p3.read() & and_ln391_fu_286_p2.read());
}

void write_output::thread_and_ln391_fu_286_p2() {
    and_ln391_fu_286_p2 = (shl_ln391_1_fu_274_p2.read() & lshr_ln391_fu_280_p2.read());
}

void write_output::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void write_output::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void write_output::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void write_output::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void write_output::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void write_output::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void write_output::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read()));
}

void write_output::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void write_output::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_169_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void write_output::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void write_output::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_169_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void write_output::thread_high_fu_322_p2() {
    high_fu_322_p2 = (!Hi_assign_reg_142.read().is_01() || !ap_const_lv7_20.is_01())? sc_lv<7>(): (sc_biguint<7>(Hi_assign_reg_142.read()) + sc_biguint<7>(ap_const_lv7_20));
}

void write_output::thread_i_fu_175_p2() {
    i_fu_175_p2 = (!i_0_reg_119.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_119.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void write_output::thread_icmp_ln391_fu_196_p2() {
    icmp_ln391_fu_196_p2 = (!Lo_assign_reg_130.read().is_01() || !Hi_assign_reg_142.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_reg_130.read()) > sc_biguint<7>(Hi_assign_reg_142.read()));
}

void write_output::thread_icmp_ln56_fu_169_p2() {
    icmp_ln56_fu_169_p2 = (!i_0_reg_119.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_119.read() == ap_const_lv3_5);
}

void write_output::thread_icmp_ln63_fu_181_p2() {
    icmp_ln63_fu_181_p2 = (!j_0_reg_154.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_154.read() == ap_const_lv2_2);
}

void write_output::thread_j_fu_187_p2() {
    j_fu_187_p2 = (!j_0_reg_154.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_154.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void write_output::thread_l3_out_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0))) {
        l3_out_V_blk_n = l3_out_V_empty_n.read();
    } else {
        l3_out_V_blk_n = ap_const_logic_1;
    }
}

void write_output::thread_l3_out_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        l3_out_V_read = ap_const_logic_1;
    } else {
        l3_out_V_read = ap_const_logic_0;
    }
}

void write_output::thread_low_fu_316_p2() {
    low_fu_316_p2 = (!Lo_assign_reg_130.read().is_01() || !ap_const_lv7_20.is_01())? sc_lv<7>(): (sc_biguint<7>(Lo_assign_reg_130.read()) + sc_biguint<7>(ap_const_lv7_20));
}

void write_output::thread_lshr_ln391_fu_280_p2() {
    lshr_ln391_fu_280_p2 = (!zext_ln391_2_fu_246_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln391_2_fu_246_p1.read().to_uint();
}

void write_output::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void write_output::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void write_output::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void write_output::thread_p_Result_s_fu_310_p2() {
    p_Result_s_fu_310_p2 = (and_ln391_1_fu_298_p2.read() | and_ln391_2_fu_304_p2.read());
}

void write_output::thread_select_ln391_1_fu_216_p3() {
    select_ln391_1_fu_216_p3 = (!icmp_ln391_fu_196_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_196_p2.read()[0].to_bool())? Hi_assign_reg_142.read(): Lo_assign_reg_130.read());
}

void write_output::thread_select_ln391_2_fu_224_p3() {
    select_ln391_2_fu_224_p3 = (!icmp_ln391_fu_196_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_196_p2.read()[0].to_bool())? sub_ln391_fu_202_p2.read(): Lo_assign_reg_130.read());
}

void write_output::thread_select_ln391_3_fu_266_p3() {
    select_ln391_3_fu_266_p3 = (!icmp_ln391_fu_196_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln391_fu_196_p2.read()[0].to_bool())? tmp_2_fu_256_p4.read(): shl_ln391_fu_250_p2.read());
}

void write_output::thread_select_ln391_fu_208_p3() {
    select_ln391_fu_208_p3 = (!icmp_ln391_fu_196_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_196_p2.read()[0].to_bool())? Lo_assign_reg_130.read(): Hi_assign_reg_142.read());
}

void write_output::thread_shl_ln391_1_fu_274_p2() {
    shl_ln391_1_fu_274_p2 = (!zext_ln391_1_fu_242_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF << (unsigned short)zext_ln391_1_fu_242_p1.read().to_uint();
}

void write_output::thread_shl_ln391_fu_250_p2() {
    shl_ln391_fu_250_p2 = (!zext_ln391_fu_238_p1.read().is_01())? sc_lv<64>(): tmp_V_fu_193_p1.read() << (unsigned short)zext_ln391_fu_238_p1.read().to_uint();
}

void write_output::thread_sub_ln391_1_fu_232_p2() {
    sub_ln391_1_fu_232_p2 = (!ap_const_lv7_3F.is_01() || !select_ln391_fu_208_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln391_fu_208_p3.read()));
}

void write_output::thread_sub_ln391_fu_202_p2() {
    sub_ln391_fu_202_p2 = (!ap_const_lv7_3F.is_01() || !Lo_assign_reg_130.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(Lo_assign_reg_130.read()));
}

void write_output::thread_tmp_2_fu_256_p4() {
    tmp_2_fu_256_p4 = shl_ln391_fu_250_p2.read().range(0, 63);
}

void write_output::thread_tmp_V_fu_193_p1() {
    tmp_V_fu_193_p1 = esl_sext<64,32>(tmp_reg_355.read());
}

void write_output::thread_xor_ln391_fu_292_p2() {
    xor_ln391_fu_292_p2 = (and_ln391_fu_286_p2.read() ^ ap_const_lv64_FFFFFFFFFFFFFFFF);
}

void write_output::thread_zext_ln391_1_fu_242_p1() {
    zext_ln391_1_fu_242_p1 = esl_zext<64,7>(select_ln391_1_fu_216_p3.read());
}

void write_output::thread_zext_ln391_2_fu_246_p1() {
    zext_ln391_2_fu_246_p1 = esl_zext<64,7>(sub_ln391_1_fu_232_p2.read());
}

void write_output::thread_zext_ln391_fu_238_p1() {
    zext_ln391_fu_238_p1 = esl_zext<64,7>(select_ln391_2_fu_224_p3.read());
}

void write_output::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_169_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_169_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(icmp_ln63_fu_181_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, l3_out_V_empty_n.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

