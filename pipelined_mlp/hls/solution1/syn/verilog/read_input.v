// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module read_input (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        l1_in_0_V_din,
        l1_in_0_V_full_n,
        l1_in_0_V_write,
        l1_in_1_V_din,
        l1_in_1_V_full_n,
        l1_in_1_V_write
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_pp0_stage0 = 18'd2;
parameter    ap_ST_fsm_pp0_stage1 = 18'd4;
parameter    ap_ST_fsm_pp0_stage2 = 18'd8;
parameter    ap_ST_fsm_pp0_stage3 = 18'd16;
parameter    ap_ST_fsm_pp0_stage4 = 18'd32;
parameter    ap_ST_fsm_pp0_stage5 = 18'd64;
parameter    ap_ST_fsm_pp0_stage6 = 18'd128;
parameter    ap_ST_fsm_pp0_stage7 = 18'd256;
parameter    ap_ST_fsm_pp0_stage8 = 18'd512;
parameter    ap_ST_fsm_pp0_stage9 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 18'd65536;
parameter    ap_ST_fsm_state19 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [15:0] in_r_TKEEP;
input  [15:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [7:0] l1_in_0_V_din;
input   l1_in_0_V_full_n;
output   l1_in_0_V_write;
output  [7:0] l1_in_1_V_din;
input   l1_in_1_V_full_n;
output   l1_in_1_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_r_TREADY;
reg[7:0] l1_in_0_V_din;
reg l1_in_0_V_write;
reg[7:0] l1_in_1_V_din;
reg l1_in_1_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_r_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln13_reg_349;
reg    l1_in_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    l1_in_1_V_blk_n;
reg   [5:0] i_0_reg_166;
wire   [0:0] icmp_ln13_fu_177_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] i_fu_183_p2;
reg   [5:0] i_reg_353;
reg   [7:0] tmp_4_reg_358;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] tmp_5_reg_364;
reg   [7:0] tmp_6_reg_370;
reg   [7:0] tmp_7_reg_376;
reg   [7:0] tmp_8_reg_382;
reg   [7:0] tmp_9_reg_388;
reg   [7:0] tmp_10_reg_394;
reg   [7:0] tmp_11_reg_400;
reg   [7:0] tmp_12_reg_406;
reg   [7:0] tmp_13_reg_412;
reg   [7:0] tmp_14_reg_418;
reg   [7:0] tmp_15_reg_424;
reg   [7:0] tmp_16_reg_430;
reg   [7:0] tmp_17_reg_436;
reg   [7:0] tmp_18_reg_442;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_subdone;
reg   [5:0] ap_phi_mux_i_0_phi_fu_170_p4;
wire   [7:0] tmp_fu_193_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_01001;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_state19;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_V_data_V_U_apdone_blk;
wire   [127:0] in_r_TDATA_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_V_data_V_U_ack_in;
wire    regslice_both_in_V_keep_V_U_apdone_blk;
wire   [15:0] in_r_TKEEP_int;
wire    regslice_both_in_V_keep_V_U_vld_out;
wire    regslice_both_in_V_keep_V_U_ack_in;
wire    regslice_both_in_V_strb_V_U_apdone_blk;
wire   [15:0] in_r_TSTRB_int;
wire    regslice_both_in_V_strb_V_U_vld_out;
wire    regslice_both_in_V_strb_V_U_ack_in;
wire    regslice_both_in_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    regslice_both_in_V_last_V_U_vld_out;
wire    regslice_both_in_V_last_V_U_ack_in;
reg    ap_condition_367;
reg    ap_condition_373;
reg    ap_condition_379;
reg    ap_condition_385;
reg    ap_condition_391;
reg    ap_condition_397;
reg    ap_condition_403;
reg    ap_condition_409;
reg    ap_condition_415;
reg    ap_condition_421;
reg    ap_condition_427;
reg    ap_condition_433;
reg    ap_condition_439;
reg    ap_condition_445;
reg    ap_condition_450;
reg    ap_condition_455;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

regslice_both #(
    .DataWidth( 128 ))
regslice_both_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int),
    .vld_out(regslice_both_in_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int),
    .vld_out(regslice_both_in_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(regslice_both_in_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_166 <= i_reg_353;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_166 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_353 <= i_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_349 <= icmp_ln13_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_reg_394 <= {{in_r_TDATA_int[63:56]}};
        tmp_11_reg_400 <= {{in_r_TDATA_int[71:64]}};
        tmp_12_reg_406 <= {{in_r_TDATA_int[79:72]}};
        tmp_13_reg_412 <= {{in_r_TDATA_int[87:80]}};
        tmp_14_reg_418 <= {{in_r_TDATA_int[95:88]}};
        tmp_15_reg_424 <= {{in_r_TDATA_int[103:96]}};
        tmp_16_reg_430 <= {{in_r_TDATA_int[111:104]}};
        tmp_17_reg_436 <= {{in_r_TDATA_int[119:112]}};
        tmp_18_reg_442 <= {{in_r_TDATA_int[127:120]}};
        tmp_4_reg_358 <= {{in_r_TDATA_int[15:8]}};
        tmp_5_reg_364 <= {{in_r_TDATA_int[23:16]}};
        tmp_6_reg_370 <= {{in_r_TDATA_int[31:24]}};
        tmp_7_reg_376 <= {{in_r_TDATA_int[39:32]}};
        tmp_8_reg_382 <= {{in_r_TDATA_int[47:40]}};
        tmp_9_reg_388 <= {{in_r_TDATA_int[55:48]}};
    end
end

always @ (*) begin
    if ((icmp_ln13_fu_177_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_170_p4 = i_reg_353;
    end else begin
        ap_phi_mux_i_0_phi_fu_170_p4 = i_0_reg_166;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_in_V_data_V_U_ack_in == 1'b1) & (in_r_TVALID == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln13_reg_349 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        l1_in_0_V_blk_n = l1_in_0_V_full_n;
    end else begin
        l1_in_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln13_reg_349 == 1'd0)) begin
        if ((1'b1 == ap_condition_455)) begin
            l1_in_0_V_din = tmp_18_reg_442;
        end else if ((1'b1 == ap_condition_450)) begin
            l1_in_0_V_din = tmp_17_reg_436;
        end else if ((1'b1 == ap_condition_445)) begin
            l1_in_0_V_din = tmp_16_reg_430;
        end else if ((1'b1 == ap_condition_439)) begin
            l1_in_0_V_din = tmp_15_reg_424;
        end else if ((1'b1 == ap_condition_433)) begin
            l1_in_0_V_din = tmp_14_reg_418;
        end else if ((1'b1 == ap_condition_427)) begin
            l1_in_0_V_din = tmp_13_reg_412;
        end else if ((1'b1 == ap_condition_421)) begin
            l1_in_0_V_din = tmp_12_reg_406;
        end else if ((1'b1 == ap_condition_415)) begin
            l1_in_0_V_din = tmp_11_reg_400;
        end else if ((1'b1 == ap_condition_409)) begin
            l1_in_0_V_din = tmp_10_reg_394;
        end else if ((1'b1 == ap_condition_403)) begin
            l1_in_0_V_din = tmp_9_reg_388;
        end else if ((1'b1 == ap_condition_397)) begin
            l1_in_0_V_din = tmp_8_reg_382;
        end else if ((1'b1 == ap_condition_391)) begin
            l1_in_0_V_din = tmp_7_reg_376;
        end else if ((1'b1 == ap_condition_385)) begin
            l1_in_0_V_din = tmp_6_reg_370;
        end else if ((1'b1 == ap_condition_379)) begin
            l1_in_0_V_din = tmp_5_reg_364;
        end else if ((1'b1 == ap_condition_373)) begin
            l1_in_0_V_din = tmp_4_reg_358;
        end else if ((1'b1 == ap_condition_367)) begin
            l1_in_0_V_din = tmp_fu_193_p1;
        end else begin
            l1_in_0_V_din = 'bx;
        end
    end else begin
        l1_in_0_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        l1_in_0_V_write = 1'b1;
    end else begin
        l1_in_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln13_reg_349 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln13_reg_349 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        l1_in_1_V_blk_n = l1_in_1_V_full_n;
    end else begin
        l1_in_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln13_reg_349 == 1'd0)) begin
        if ((1'b1 == ap_condition_455)) begin
            l1_in_1_V_din = tmp_18_reg_442;
        end else if ((1'b1 == ap_condition_450)) begin
            l1_in_1_V_din = tmp_17_reg_436;
        end else if ((1'b1 == ap_condition_445)) begin
            l1_in_1_V_din = tmp_16_reg_430;
        end else if ((1'b1 == ap_condition_439)) begin
            l1_in_1_V_din = tmp_15_reg_424;
        end else if ((1'b1 == ap_condition_433)) begin
            l1_in_1_V_din = tmp_14_reg_418;
        end else if ((1'b1 == ap_condition_427)) begin
            l1_in_1_V_din = tmp_13_reg_412;
        end else if ((1'b1 == ap_condition_421)) begin
            l1_in_1_V_din = tmp_12_reg_406;
        end else if ((1'b1 == ap_condition_415)) begin
            l1_in_1_V_din = tmp_11_reg_400;
        end else if ((1'b1 == ap_condition_409)) begin
            l1_in_1_V_din = tmp_10_reg_394;
        end else if ((1'b1 == ap_condition_403)) begin
            l1_in_1_V_din = tmp_9_reg_388;
        end else if ((1'b1 == ap_condition_397)) begin
            l1_in_1_V_din = tmp_8_reg_382;
        end else if ((1'b1 == ap_condition_391)) begin
            l1_in_1_V_din = tmp_7_reg_376;
        end else if ((1'b1 == ap_condition_385)) begin
            l1_in_1_V_din = tmp_6_reg_370;
        end else if ((1'b1 == ap_condition_379)) begin
            l1_in_1_V_din = tmp_5_reg_364;
        end else if ((1'b1 == ap_condition_373)) begin
            l1_in_1_V_din = tmp_4_reg_358;
        end else if ((1'b1 == ap_condition_367)) begin
            l1_in_1_V_din = tmp_fu_193_p1;
        end else begin
            l1_in_1_V_din = 'bx;
        end
    end else begin
        l1_in_1_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln13_reg_349 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        l1_in_1_V_write = 1'b1;
    end else begin
        l1_in_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln13_fu_177_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln13_fu_177_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = (((icmp_ln13_reg_349 == 1'd0) & (l1_in_1_V_full_n == 1'b0)) | ((icmp_ln13_reg_349 == 1'd0) & (l1_in_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_367 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_373 = ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_379 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_385 = ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_391 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_397 = ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_403 = ((1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_409 = ((1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_415 = ((1'b0 == ap_block_pp0_stage9_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_421 = ((1'b0 == ap_block_pp0_stage10_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_427 = ((1'b0 == ap_block_pp0_stage11_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_433 = ((1'b0 == ap_block_pp0_stage12_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12));
end

always @ (*) begin
    ap_condition_439 = ((1'b0 == ap_block_pp0_stage13_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13));
end

always @ (*) begin
    ap_condition_445 = ((1'b0 == ap_block_pp0_stage14_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14));
end

always @ (*) begin
    ap_condition_450 = ((1'b0 == ap_block_pp0_stage15_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15));
end

always @ (*) begin
    ap_condition_455 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign i_fu_183_p2 = (ap_phi_mux_i_0_phi_fu_170_p4 + 6'd1);

assign icmp_ln13_fu_177_p2 = ((ap_phi_mux_i_0_phi_fu_170_p4 == 6'd49) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign tmp_fu_193_p1 = in_r_TDATA_int[7:0];

endmodule //read_input
