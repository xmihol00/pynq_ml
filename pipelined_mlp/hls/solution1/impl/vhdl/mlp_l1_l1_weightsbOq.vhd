-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbOq_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbOq_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000001", 1 => "1110110", 2 => "1101111", 3 => "1110010", 
    4 => "0010000", 5 => "0001110", 6 => "0001001", 7 => "1110111", 
    8 => "1101101", 9 => "1111100", 10 to 11=> "1101110", 12 => "0010011", 
    13 => "0001110", 14 => "1111010", 15 => "0000110", 16 => "1111011", 
    17 to 18=> "0000010", 19 => "1111110", 20 => "0000010", 21 => "1111001", 
    22 to 23=> "1111100", 24 => "1110111", 25 => "1111000", 26 => "1110000", 
    27 => "0000101", 28 => "0010010", 29 => "0001010", 30 => "0001101", 
    31 => "0000000", 32 => "1110101", 33 to 35=> "0000110", 36 => "0001101", 
    37 => "0001100", 38 => "0010011", 39 => "0010001", 40 => "0000111", 
    41 => "0001101", 42 => "0000110", 43 => "1111010", 44 => "0100110", 
    45 => "0010000", 46 => "0000001", 47 => "0001011", 48 to 49=> "0010011", 
    50 => "1110011", 51 => "0001111", 52 => "0000100", 53 => "0000110", 
    54 => "1110000", 55 => "1110100", 56 => "1110101", 57 => "1111111", 
    58 => "1110001", 59 => "1110100", 60 => "1111001", 61 => "0010000", 
    62 => "1111001", 63 => "0011110", 64 => "0100100", 65 => "0010101", 
    66 => "0011011", 67 => "0010000", 68 => "0000011", 69 => "0001101", 
    70 => "0001100", 71 => "0010101", 72 => "1111111", 73 => "0000000", 
    74 => "0011000", 75 => "0000110", 76 => "0000001", 77 => "0100011", 
    78 => "0000011", 79 => "0000101", 80 to 81=> "0010010", 82 => "1111101", 
    83 => "1110001", 84 => "0010011", 85 => "1111100", 86 => "0000011", 
    87 => "1111010", 88 => "0010100", 89 => "1110101", 90 => "0000011", 
    91 => "0010010", 92 => "1110100", 93 => "0100000", 94 => "1111110", 
    95 => "0001101", 96 => "0010111", 97 => "0011001", 98 => "0000000", 
    99 => "0000010", 100 => "1101110", 101 => "0001001", 102 => "0011011", 
    103 => "0011000", 104 => "0000011", 105 => "1101110", 106 => "1111110", 
    107 => "1110011", 108 => "0101000", 109 => "0011110", 110 => "0010111", 
    111 => "0000001", 112 => "1111011", 113 => "0001001", 114 => "1100101", 
    115 => "1101011", 116 => "1110000", 117 => "1101101", 118 => "1110001", 
    119 => "0000101", 120 => "0001011", 121 => "1111111", 122 => "1110011", 
    123 => "0011101", 124 => "1111110", 125 => "1110110", 126 => "0000100", 
    127 => "0001011", 128 => "1110010", 129 => "0000011", 130 => "1111110", 
    131 => "0000100", 132 to 133=> "1111100", 134 to 135=> "1101100", 136 => "1110101", 
    137 => "1100011", 138 => "0001010", 139 => "0001011", 140 => "0001111", 
    141 => "0000000", 142 => "0000110", 143 => "1111000", 144 => "1100101", 
    145 => "1111101", 146 => "0000001", 147 => "1110010", 148 to 149=> "1110100", 
    150 => "1111001", 151 => "1101001", 152 => "0001011", 153 => "0001000", 
    154 => "0010110", 155 => "0001000", 156 => "0000000", 157 => "0001111", 
    158 => "1111011", 159 => "1101010", 160 => "1111000", 161 => "1110110", 
    162 => "0000110", 163 => "0001110", 164 => "1111110", 165 => "1011110", 
    166 => "0011011", 167 => "0000000", 168 => "0010000", 169 => "1111010", 
    170 => "1111101", 171 => "0001000", 172 => "1111101", 173 => "0000111", 
    174 => "0001011", 175 => "0001010", 176 => "0000111", 177 => "1111100", 
    178 => "0011010", 179 => "0000100", 180 => "1111110", 181 => "0000000", 
    182 => "0010101", 183 => "0000000", 184 => "0001011", 185 => "1110100", 
    186 => "1111101", 187 => "0010000", 188 => "0001110", 189 => "1111111", 
    190 => "0010010", 191 => "1111110", 192 => "0010000", 193 => "0001111", 
    194 => "0000100", 195 => "0010110", 196 => "0000100", 197 => "0011111", 
    198 => "1110111", 199 => "0010001", 200 => "1110101", 201 => "0001100", 
    202 => "1111101", 203 => "0011100", 204 => "0001001", 205 => "0000010", 
    206 => "0010000", 207 => "0100010", 208 => "1111101", 209 => "1111111", 
    210 => "1111110", 211 => "1111111", 212 => "1111010", 213 => "0000000", 
    214 => "0001011", 215 => "1111000", 216 => "0001110", 217 => "0010101", 
    218 => "0100001", 219 => "0010100", 220 => "1111111", 221 => "1110000", 
    222 => "0000101", 223 => "1111111", 224 => "0001010", 225 => "1111100", 
    226 => "1111111", 227 => "1110011", 228 => "1111110", 229 => "0001011", 
    230 => "1101100", 231 => "1111110", 232 => "0001010", 233 => "0010111", 
    234 => "0100100", 235 => "0010100", 236 => "0001111", 237 => "0010011", 
    238 => "0011110", 239 => "1111001", 240 => "0000011", 241 => "0001000", 
    242 => "1110011", 243 => "0000101", 244 to 245=> "0000001", 246 => "0011010", 
    247 => "0001010", 248 to 249=> "1111110", 250 => "1110001", 251 => "1111011", 
    252 => "0001000", 253 to 254=> "0001111", 255 => "0000100", 256 => "0000110", 
    257 => "1111110", 258 => "0001010", 259 => "1110100", 260 => "0000001", 
    261 => "0000011", 262 => "0010000", 263 => "1111110", 264 => "1101011", 
    265 => "0001100", 266 => "0001111", 267 => "0010110", 268 => "0000010", 
    269 => "0000000", 270 => "1111001", 271 => "1101110", 272 => "0000000", 
    273 => "1110110", 274 => "0001110", 275 => "0100001", 276 => "0000110", 
    277 => "0011000", 278 => "1111110", 279 => "1101110", 280 => "0000111", 
    281 => "0001001", 282 => "0011001", 283 => "0000101", 284 => "0000110", 
    285 => "1110101", 286 => "0001101", 287 => "0001010", 288 => "1110100", 
    289 => "1100001", 290 => "1110101", 291 => "1111010", 292 => "0000001", 
    293 => "0000101", 294 => "0011010", 295 => "1111101", 296 => "1111000", 
    297 => "1110010", 298 => "1110111", 299 => "1111001", 300 => "1101000", 
    301 => "1111001", 302 => "0000010", 303 => "0011011", 304 => "0100001", 
    305 => "1111100", 306 => "0000001", 307 => "1110011", 308 => "0001100", 
    309 => "1111110", 310 => "0000110", 311 => "1111011", 312 => "1101001", 
    313 => "1111001", 314 => "0001101", 315 => "1110011", 316 => "0000110", 
    317 => "1100111", 318 => "1101000", 319 => "1111111", 320 => "1110000", 
    321 => "1100111", 322 => "0001000", 323 => "0010011", 324 => "1111000", 
    325 => "1110001", 326 => "1100111", 327 => "1111000", 328 => "1100101", 
    329 => "1111110", 330 => "0001111", 331 => "0010110", 332 => "0001000", 
    333 => "0011011", 334 => "0011001", 335 => "0010101", 336 => "1110011", 
    337 => "0000111", 338 => "0000110", 339 => "1110001", 340 => "1010100", 
    341 => "1011000", 342 => "1111001", 343 => "1101110", 344 => "0000101", 
    345 => "0001101", 346 => "1101011", 347 => "0010001", 348 => "1110110", 
    349 to 350=> "1100101", 351 => "1011011", 352 => "1110011", 353 => "1110110", 
    354 => "1100111", 355 => "1101001", 356 => "1101111", 357 => "0011001", 
    358 => "1111111", 359 => "1111000", 360 => "0010101", 361 => "0010001", 
    362 => "0011011", 363 => "1111010", 364 => "0000111", 365 => "1110110", 
    366 => "1111110", 367 => "1100110", 368 => "1011100", 369 => "1100011", 
    370 => "1111111", 371 => "0000000", 372 => "1111100", 373 => "1110011", 
    374 => "0010110", 375 => "1110110", 376 => "0000011", 377 => "1101100", 
    378 => "1111101", 379 to 380=> "1101100", 381 => "1111011", 382 => "0000110", 
    383 => "1111000", 384 => "0001101", 385 => "0000010", 386 => "0001010", 
    387 => "1110010", 388 => "0001001", 389 => "0011110", 390 => "0001001", 
    391 => "1111111", 392 => "0000001", 393 => "1110100", 394 => "1110000", 
    395 => "1101010", 396 => "1011111", 397 => "0000011", 398 => "0010000", 
    399 => "1110111", 400 to 401=> "0000110", 402 => "0000010", 403 => "0011101", 
    404 => "0010111", 405 => "1101001", 406 => "1101100", 407 => "1111111", 
    408 => "1010111", 409 => "1111110", 410 => "1111000", 411 => "1110100", 
    412 => "1111101", 413 => "1111110", 414 => "0011001", 415 => "1110110", 
    416 => "0010010", 417 => "0000001", 418 => "0010000", 419 to 420=> "0000110", 
    421 => "1111011", 422 => "1101100", 423 => "0001110", 424 => "1101101", 
    425 => "0100011", 426 => "0001110", 427 => "0000110", 428 => "0001010", 
    429 => "0000000", 430 => "0010111", 431 => "0001101", 432 => "0001011", 
    433 => "0000111", 434 => "1111110", 435 => "1110000", 436 => "1111011", 
    437 => "0001000", 438 => "1101101", 439 => "1110011", 440 => "1111010", 
    441 => "1111111", 442 => "1111101", 443 => "0000111", 444 => "0011011", 
    445 => "0001011", 446 => "0000101", 447 => "1111001", 448 => "0001000", 
    449 => "0010001", 450 => "1101110", 451 => "0011101", 452 => "1111111", 
    453 => "0010011", 454 => "1111110", 455 => "1101111", 456 => "1111100", 
    457 => "0000011", 458 => "0100000", 459 => "0011111", 460 => "1111010", 
    461 => "1110001", 462 => "1010111", 463 => "1110010", 464 => "1110100", 
    465 => "1111000", 466 => "0001010", 467 => "1111111", 468 => "1101100", 
    469 => "0000101", 470 => "1110111", 471 => "0001010", 472 => "0010010", 
    473 => "1111101", 474 => "0000010", 475 => "0011000", 476 => "1110000", 
    477 => "0000100", 478 => "1110100", 479 => "0100110", 480 => "0001010", 
    481 => "0010001", 482 => "1111011", 483 => "0001100", 484 => "0001000", 
    485 => "0000100", 486 => "0010110", 487 to 488=> "0000100", 489 => "1101110", 
    490 => "1100000", 491 => "1101001", 492 => "1101011", 493 => "1110111", 
    494 => "1101101", 495 => "1101111", 496 => "1111010", 497 => "0010101", 
    498 => "0001010", 499 => "1111000", 500 => "1110011", 501 => "0010000", 
    502 => "0001001", 503 => "0000100", 504 => "1111010", 505 => "0000110", 
    506 => "1110011", 507 => "0011110", 508 => "0000011", 509 => "0001010", 
    510 => "0001011", 511 => "0000111", 512 => "1111110", 513 => "1110111", 
    514 => "1111100", 515 => "1101001", 516 => "1100110", 517 => "1001010", 
    518 => "1101010", 519 => "1101011", 520 to 521=> "1110000", 522 => "0000101", 
    523 => "1111110", 524 => "1110111", 525 => "0010000", 526 => "0000011", 
    527 => "1101011", 528 => "1101110", 529 => "0001011", 530 => "0000010", 
    531 => "0100010", 532 => "1111000", 533 => "0010001", 534 => "0010101", 
    535 => "1110110", 536 => "1110100", 537 => "1101100", 538 => "1101010", 
    539 => "0001011", 540 => "0001101", 541 => "1101101", 542 => "0000101", 
    543 => "1101110", 544 => "1101000", 545 => "1111001", 546 => "1100010", 
    547 => "0000101", 548 => "0000100", 549 => "0010001", 550 to 551=> "1110110", 
    552 => "0011110", 553 => "0010110", 554 => "0001010", 555 => "1101111", 
    556 => "1110010", 557 => "0000111", 558 => "0011101", 559 => "0011011", 
    560 => "1110000", 561 => "0000100", 562 to 563=> "0011010", 564 => "0001110", 
    565 => "1110011", 566 => "1111011", 567 => "0001111", 568 => "0011001", 
    569 => "0000100", 570 => "1110000", 571 => "1111011", 572 => "1111000", 
    573 => "0000100", 574 => "0000001", 575 => "1111011", 576 => "1111000", 
    577 => "0000010", 578 => "1111111", 579 => "0001100", 580 to 581=> "0011001", 
    582 => "0001110", 583 => "0011011", 584 => "1101001", 585 => "1101111", 
    586 => "0000001", 587 => "1110101", 588 => "0001100", 589 => "1110101", 
    590 => "0001100", 591 => "0110010", 592 => "0001100", 593 => "0000110", 
    594 => "1110101", 595 => "0010101", 596 => "0000011", 597 => "0010000", 
    598 => "1111111", 599 => "0011101", 600 => "0010111", 601 => "0011101", 
    602 => "0010000", 603 => "1111101", 604 => "1110001", 605 => "1111111", 
    606 => "0010001", 607 => "0000001", 608 => "0000110", 609 => "1111000", 
    610 => "0101100", 611 => "0110110", 612 => "0000111", 613 => "1110111", 
    614 => "0011110", 615 => "0000000", 616 => "1110011", 617 => "1110101", 
    618 => "0101000", 619 => "0101010", 620 => "0010101", 621 => "0100100", 
    622 => "0010001", 623 => "0011001", 624 => "0010001", 625 => "0011100", 
    626 => "0100011", 627 => "0001010", 628 => "0010101", 629 => "0001111", 
    630 => "0000100", 631 => "0000010", 632 => "1111111", 633 => "0000111", 
    634 => "0001101", 635 => "0000101", 636 => "0000000", 637 => "0001010", 
    638 => "0011101", 639 => "0001111", 640 => "1111001", 641 => "1110000", 
    642 => "1111110", 643 => "0001110", 644 => "0000011", 645 => "0010001", 
    646 => "0001110", 647 => "0000011", 648 => "0011111", 649 => "0001010", 
    650 => "0010011", 651 => "0000010", 652 => "0011100", 653 => "0110011", 
    654 => "0011011", 655 => "0000111", 656 => "0001110", 657 => "0010110", 
    658 => "0010100", 659 => "0011011", 660 => "0000100", 661 => "1111111", 
    662 => "1111110", 663 => "1110111", 664 => "0001011", 665 => "0010000", 
    666 => "0011011", 667 => "0101011", 668 => "0001011", 669 => "0001100", 
    670 => "0000100", 671 => "1111010", 672 => "0001000", 673 to 674=> "1110111", 
    675 => "0001110", 676 => "0001011", 677 => "0010111", 678 => "0000101", 
    679 => "0010010", 680 => "0011010", 681 => "0001110", 682 => "0001101", 
    683 => "0000000", 684 => "0010100", 685 => "0010110", 686 => "1111100", 
    687 => "0001010", 688 => "0011100", 689 => "0010001", 690 => "0011100", 
    691 => "1101110", 692 => "1110010", 693 => "1110100", 694 => "0010100", 
    695 => "0001010", 696 => "0100001", 697 => "0001000", 698 => "1111010", 
    699 => "0010001", 700 => "0000011", 701 => "1111100", 702 => "0000100", 
    703 => "0001000", 704 => "0000100", 705 => "0000110", 706 => "0011010", 
    707 => "0010110", 708 => "1101101", 709 to 711=> "1111101", 712 => "0000100", 
    713 => "1111001", 714 => "1110111", 715 => "0000000", 716 => "1111101", 
    717 => "0001010", 718 => "1111011", 719 => "0101010", 720 => "1110001", 
    721 => "0010101", 722 => "0010000", 723 => "0010111", 724 => "0010011", 
    725 => "1110100", 726 => "0000011", 727 => "1110111", 728 => "0001011", 
    729 => "0001100", 730 to 731=> "0000101", 732 => "1110100", 733 => "1110111", 
    734 => "1101100", 735 => "1011001", 736 => "1110111", 737 => "1011101", 
    738 => "1111111", 739 => "1111001", 740 => "0000000", 741 => "0001110", 
    742 => "1100101", 743 => "0010000", 744 => "0110111", 745 => "1110111", 
    746 => "1110110", 747 => "0010010", 748 => "0001111", 749 => "0000011", 
    750 => "0010010", 751 => "0010101", 752 => "1110011", 753 => "0000101", 
    754 => "1101101", 755 => "0001110", 756 => "0000011", 757 => "1110011", 
    758 => "0000010", 759 => "1101110", 760 => "1111100", 761 => "0000111", 
    762 => "0001101", 763 => "0010011", 764 => "0001101", 765 => "0001000", 
    766 => "0011000", 767 => "0000010", 768 => "1111000", 769 => "0001011", 
    770 => "1111111", 771 => "1110110", 772 => "1111010", 773 => "1110100", 
    774 => "1101101", 775 => "1110001", 776 => "0000000", 777 => "1100101", 
    778 => "1011111", 779 => "0000001", 780 => "1110100", 781 => "0001101", 
    782 => "1110010", 783 => "1110011" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbOq is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbOq is
    component mlp_l1_l1_weightsbOq_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbOq_rom_U :  component mlp_l1_l1_weightsbOq_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


