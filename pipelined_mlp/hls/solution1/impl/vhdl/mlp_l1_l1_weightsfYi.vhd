-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsfYi_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsfYi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111101", 1 => "1110010", 2 => "1110001", 3 => "0001100", 
    4 => "1110001", 5 => "0010000", 6 to 7=> "1111111", 8 => "0001111", 
    9 => "1110000", 10 => "1111110", 11 => "0000010", 12 => "1111011", 
    13 => "1110010", 14 => "1101101", 15 => "0001001", 16 => "1110000", 
    17 => "1111011", 18 => "0001110", 19 => "1110000", 20 => "0000000", 
    21 => "1110001", 22 => "1101101", 23 => "0001001", 24 => "1110110", 
    25 => "0001010", 26 => "0001101", 27 => "0000111", 28 => "0001001", 
    29 => "0001100", 30 => "1111100", 31 => "0000111", 32 => "0001100", 
    33 => "0001111", 34 => "1011111", 35 => "1100110", 36 => "1110010", 
    37 => "0000110", 38 => "1111011", 39 => "1101110", 40 to 41=> "1101101", 
    42 => "1100100", 43 => "1001110", 44 => "1110100", 45 => "1110000", 
    46 => "1111111", 47 => "1111110", 48 => "1100101", 49 => "1101000", 
    50 => "1100111", 51 => "1111101", 52 => "1110101", 53 => "0000000", 
    54 => "1110100", 55 to 56=> "0001101", 57 => "0010010", 58 => "1111011", 
    59 to 60=> "1110110", 61 => "1111101", 62 => "1101110", 63 => "1100011", 
    64 => "0000001", 65 => "0010111", 66 => "1110010", 67 => "0000010", 
    68 => "0010000", 69 => "1111001", 70 => "0001000", 71 => "1111011", 
    72 => "1100111", 73 => "1110000", 74 => "0000011", 75 => "1011010", 
    76 => "1101101", 77 => "1110100", 78 => "1101100", 79 => "1011010", 
    80 => "1110001", 81 => "0000001", 82 => "1111101", 83 => "0001110", 
    84 => "0000101", 85 => "1110110", 86 => "0010010", 87 => "1100011", 
    88 => "1011110", 89 => "0001000", 90 => "1101001", 91 => "0011001", 
    92 => "0100110", 93 => "0000011", 94 => "0011110", 95 => "0101101", 
    96 => "0011001", 97 => "0001011", 98 => "0010011", 99 => "0010000", 
    100 => "0011101", 101 => "0001011", 102 => "1110101", 103 => "0000011", 
    104 => "0000110", 105 => "0101010", 106 => "0100010", 107 => "0001101", 
    108 => "1101110", 109 => "1101100", 110 => "1110100", 111 => "0001001", 
    112 => "0000111", 113 => "0000101", 114 => "0011111", 115 => "1111001", 
    116 => "0001100", 117 => "0011101", 118 => "0010010", 119 => "0001001", 
    120 => "0001111", 121 => "0011100", 122 => "0010010", 123 => "0011101", 
    124 => "0011011", 125 => "0001111", 126 => "0000000", 127 => "0010100", 
    128 => "0010010", 129 => "0011010", 130 => "0000000", 131 => "0010010", 
    132 => "0010011", 133 => "0011001", 134 => "0100011", 135 => "0010101", 
    136 => "0100111", 137 => "0010011", 138 => "0011000", 139 => "1110011", 
    140 => "1110001", 141 => "0001111", 142 => "0010010", 143 => "0100011", 
    144 => "0001101", 145 => "1110100", 146 => "0000110", 147 to 148=> "0010101", 
    149 => "0010100", 150 => "1111101", 151 => "0001100", 152 => "0010000", 
    153 to 154=> "0001010", 155 => "1110101", 156 => "0001101", 157 to 158=> "0000011", 
    159 => "0000001", 160 => "0010010", 161 => "0000110", 162 => "0001111", 
    163 => "0000100", 164 to 165=> "0100101", 166 => "0000101", 167 => "1101001", 
    168 => "0000100", 169 => "0000111", 170 => "0000000", 171 => "0001100", 
    172 => "0011101", 173 => "0000010", 174 => "1111111", 175 => "0001111", 
    176 => "0001001", 177 => "0011101", 178 => "0000001", 179 => "0000010", 
    180 => "1111000", 181 => "1110000", 182 => "0010001", 183 => "0001011", 
    184 => "0010110", 185 => "0000011", 186 => "1101111", 187 => "1111011", 
    188 => "0000001", 189 => "1100001", 190 => "0000110", 191 => "0001101", 
    192 => "0001001", 193 => "0001000", 194 => "1110110", 195 => "0001101", 
    196 => "1111010", 197 => "0001001", 198 => "1111100", 199 => "0000000", 
    200 => "0010100", 201 => "0001101", 202 => "1111100", 203 => "0000101", 
    204 => "1111101", 205 => "0001100", 206 => "0001111", 207 => "1110001", 
    208 => "0000100", 209 => "0001010", 210 => "0000100", 211 => "0001001", 
    212 => "0000110", 213 => "1100110", 214 => "1101010", 215 => "1100101", 
    216 => "1100000", 217 => "1101100", 218 => "1110100", 219 => "0000000", 
    220 => "0001110", 221 => "0000011", 222 => "0000100", 223 => "1110000", 
    224 => "1111000", 225 => "1101101", 226 => "0010101", 227 => "0011000", 
    228 => "0001101", 229 => "0010000", 230 => "0000001", 231 => "0001011", 
    232 => "0000011", 233 => "0000110", 234 => "0001000", 235 => "0000001", 
    236 => "0001101", 237 => "1111100", 238 => "1111101", 239 => "1101111", 
    240 => "0000110", 241 => "1010101", 242 => "1111101", 243 => "1110100", 
    244 => "1110111", 245 to 246=> "1111001", 247 => "0001111", 248 => "0010011", 
    249 => "0001111", 250 => "0010011", 251 => "0010000", 252 => "0000100", 
    253 => "1010001", 254 => "0000000", 255 => "1111101", 256 => "1110100", 
    257 => "0000010", 258 => "1110011", 259 => "1110110", 260 => "1110011", 
    261 => "0001110", 262 => "0000100", 263 => "1110000", 264 => "1110110", 
    265 => "0010010", 266 => "0000111", 267 => "1011111", 268 => "1111010", 
    269 => "1101001", 270 => "0000001", 271 => "1111011", 272 => "1110111", 
    273 => "0001100", 274 => "0000111", 275 => "0000110", 276 => "0000011", 
    277 => "0001111", 278 => "0010101", 279 => "1101101", 280 => "0001110", 
    281 => "0000001", 282 => "1111110", 283 => "0000100", 284 => "1110000", 
    285 => "0000011", 286 => "1111101", 287 => "1101000", 288 => "1110100", 
    289 => "1111100", 290 => "0000010", 291 => "0001000", 292 => "0010010", 
    293 => "1111100", 294 => "1111000", 295 => "1011111", 296 => "1110110", 
    297 => "0000010", 298 => "1111111", 299 => "0010010", 300 => "0001011", 
    301 => "1110001", 302 => "0010011", 303 => "1111110", 304 => "1111101", 
    305 => "1111100", 306 => "1101011", 307 => "1010110", 308 => "0001101", 
    309 => "1111110", 310 => "1101111", 311 => "0000111", 312 => "1110110", 
    313 => "0010001", 314 => "0001010", 315 => "0000111", 316 => "0001001", 
    317 => "0001011", 318 => "1101111", 319 => "0001100", 320 => "0011010", 
    321 => "0010010", 322 => "1110101", 323 => "1101010", 324 => "1110101", 
    325 => "1111010", 326 => "1110010", 327 => "0010000", 328 => "0010011", 
    329 => "0001000", 330 => "1111000", 331 => "0010010", 332 => "0000001", 
    333 => "0011110", 334 => "0001111", 335 => "1110000", 336 => "1110011", 
    337 => "1101001", 338 => "1101110", 339 => "1110011", 340 => "1100111", 
    341 => "0011000", 342 => "0010000", 343 => "1101101", 344 => "0001000", 
    345 => "1111111", 346 => "1111000", 347 => "1111011", 348 => "0001000", 
    349 => "0010110", 350 => "0000011", 351 => "0000100", 352 => "0001000", 
    353 => "0000011", 354 => "1111110", 355 => "0000110", 356 => "0000001", 
    357 => "0010001", 358 => "0001010", 359 => "0001110", 360 => "0011101", 
    361 => "1111001", 362 => "1110001", 363 => "1010011", 364 => "0001010", 
    365 => "0001000", 366 => "1110110", 367 => "1100101", 368 => "0000011", 
    369 => "0010101", 370 => "1111010", 371 => "1110010", 372 => "0000001", 
    373 => "0000110", 374 => "0000111", 375 => "0010101", 376 => "0100001", 
    377 => "0010011", 378 => "0011011", 379 => "0010110", 380 => "1111110", 
    381 => "0010001", 382 => "0010101", 383 => "0011000", 384 => "1101111", 
    385 => "1101100", 386 => "0000101", 387 => "0001001", 388 => "0001101", 
    389 => "1110001", 390 => "1111010", 391 => "0010100", 392 => "0000101", 
    393 => "0000011", 394 => "1111000", 395 => "1100000", 396 => "0000000", 
    397 => "0000010", 398 => "1111001", 399 to 400=> "0001000", 401 => "0000101", 
    402 => "1111111", 403 => "0011001", 404 => "0010110", 405 => "0010101", 
    406 => "0010111", 407 => "0001111", 408 => "1111011", 409 => "1111111", 
    410 => "1101011", 411 => "1101111", 412 => "1110010", 413 => "1100101", 
    414 => "1110011", 415 => "1110101", 416 => "1100111", 417 => "0010100", 
    418 => "0000110", 419 => "0000001", 420 => "1110100", 421 => "0001011", 
    422 => "0010001", 423 => "1110101", 424 => "0011110", 425 => "1111100", 
    426 => "0000110", 427 => "0010100", 428 => "1111011", 429 => "0001100", 
    430 => "1101010", 431 => "0000011", 432 => "1110001", 433 => "0001011", 
    434 => "0010100", 435 => "0001110", 436 => "0010010", 437 => "0001001", 
    438 => "1100101", 439 => "1110100", 440 => "1100010", 441 => "0001001", 
    442 => "0001100", 443 => "0000100", 444 => "1111001", 445 => "0010000", 
    446 => "0001011", 447 => "0001000", 448 => "1110000", 449 => "0000010", 
    450 => "1110111", 451 to 452=> "0001110", 453 => "1111010", 454 => "0010100", 
    455 to 456=> "0000101", 457 => "1111011", 458 => "0001001", 459 => "1111000", 
    460 => "0011100", 461 => "0010101", 462 => "0010100", 463 => "0001011", 
    464 => "0001100", 465 => "0001001", 466 => "1111001", 467 => "1111000", 
    468 => "0000110", 469 => "1110111", 470 => "1110000", 471 => "1110011", 
    472 => "1101111", 473 => "0001111", 474 => "1110110", 475 to 476=> "0001001", 
    477 => "1101011", 478 => "0010110", 479 => "0011100", 480 => "0010011", 
    481 => "1110001", 482 => "1111111", 483 => "0000000", 484 => "1110111", 
    485 to 486=> "1111011", 487 => "0001111", 488 => "0010000", 489 => "0011101", 
    490 => "1111010", 491 => "1111001", 492 => "1101100", 493 => "0001001", 
    494 => "1100101", 495 => "1110100", 496 => "1111000", 497 => "0000011", 
    498 => "1110000", 499 => "1110010", 500 => "1101111", 501 => "0010000", 
    502 => "1110011", 503 => "1110101", 504 => "1100011", 505 => "0010010", 
    506 => "0001000", 507 => "0110011", 508 => "0011001", 509 => "0000110", 
    510 => "0011000", 511 => "1110010", 512 => "0000001", 513 => "1111001", 
    514 => "0010000", 515 => "0010001", 516 => "0011110", 517 => "0001100", 
    518 => "0000101", 519 => "0000011", 520 => "1110010", 521 => "1101100", 
    522 => "1110100", 523 => "0001001", 524 => "1111001", 525 => "1110111", 
    526 => "1111100", 527 => "0000101", 528 => "1111010", 529 to 530=> "1101001", 
    531 => "0100101", 532 => "1111001", 533 => "1111011", 534 => "1100011", 
    535 => "0110010", 536 => "0011000", 537 => "0100010", 538 => "1111100", 
    539 => "0000111", 540 to 541=> "0000000", 542 => "1110001", 543 => "0000011", 
    544 => "1101001", 545 => "0000001", 546 => "1111101", 547 => "1110100", 
    548 => "0000001", 549 => "1110010", 550 => "0010010", 551 => "0000001", 
    552 => "1111101", 553 => "0001111", 554 => "0001000", 555 to 556=> "1111011", 
    557 => "1100001", 558 => "0011110", 559 => "0010010", 560 => "0001011", 
    561 to 562=> "0001001", 563 => "0100010", 564 => "0010100", 565 => "0001011", 
    566 => "0010101", 567 => "1111111", 568 => "1111101", 569 => "1110001", 
    570 => "1111110", 571 => "1110110", 572 => "1110000", 573 => "0000000", 
    574 => "0000010", 575 => "1110101", 576 => "1111101", 577 => "0001111", 
    578 => "0010011", 579 => "0011001", 580 => "0010111", 581 => "0011011", 
    582 => "0000111", 583 => "0001011", 584 => "1101110", 585 => "1100001", 
    586 => "1110010", 587 => "0000110", 588 => "1101111", 589 => "0000111", 
    590 => "0011100", 591 => "0010110", 592 => "0000011", 593 => "0000101", 
    594 => "0100010", 595 => "0001110", 596 => "1110110", 597 => "0001010", 
    598 => "1110000", 599 => "0010000", 600 => "1110110", 601 => "1111001", 
    602 => "1110111", 603 => "0001010", 604 => "1101110", 605 => "1111101", 
    606 => "0000110", 607 => "0010101", 608 => "1111011", 609 => "0011111", 
    610 => "0011101", 611 => "0010000", 612 => "1011010", 613 => "1011110", 
    614 => "1001110", 615 => "1110110", 616 => "0000101", 617 => "1111010", 
    618 => "1110001", 619 => "0010111", 620 => "0000001", 621 => "1101001", 
    622 => "1111100", 623 => "0001011", 624 => "1110011", 625 => "1111000", 
    626 => "0000101", 627 => "0011101", 628 => "0000001", 629 => "1111001", 
    630 => "1101101", 631 to 633=> "1110101", 634 => "0001000", 635 => "0000011", 
    636 => "0000010", 637 => "0101101", 638 => "0100010", 639 => "1101100", 
    640 => "1110010", 641 => "1101001", 642 => "1001110", 643 => "1110010", 
    644 => "0001100", 645 => "0000010", 646 => "0100100", 647 => "0101010", 
    648 => "1111001", 649 => "0001000", 650 => "1101000", 651 => "0000100", 
    652 => "0010010", 653 => "1111110", 654 => "0001010", 655 => "0010001", 
    656 => "1101111", 657 => "0010010", 658 => "1101011", 659 => "0000010", 
    660 => "0001100", 661 => "0001110", 662 => "0101101", 663 => "0010110", 
    664 => "0011111", 665 => "0010110", 666 => "0010100", 667 => "1111110", 
    668 => "0001101", 669 => "1101111", 670 => "1111011", 671 => "1110101", 
    672 => "1110000", 673 => "0001011", 674 => "1111001", 675 => "0100011", 
    676 => "0000010", 677 => "1011111", 678 => "1110111", 679 => "0010000", 
    680 => "0001110", 681 => "0011100", 682 => "0011101", 683 => "0011110", 
    684 => "0000110", 685 => "0000101", 686 => "0001110", 687 => "1101001", 
    688 => "0001101", 689 => "1110001", 690 => "0000101", 691 => "0010100", 
    692 => "0010010", 693 => "1110101", 694 => "0011010", 695 => "1111010", 
    696 => "1110000", 697 => "1111000", 698 => "1101101", 699 => "0001001", 
    700 => "0010000", 701 => "1110010", 702 => "0011100", 703 => "1011111", 
    704 => "1100000", 705 => "1100001", 706 => "0010010", 707 => "0001001", 
    708 => "1110011", 709 => "1101110", 710 => "0100011", 711 => "0001000", 
    712 => "1111110", 713 => "0011011", 714 => "0010000", 715 => "0100000", 
    716 => "0001100", 717 => "0001101", 718 => "0011110", 719 => "1110101", 
    720 => "0001110", 721 => "0000100", 722 => "1101101", 723 => "0000000", 
    724 => "1101011", 725 => "1101111", 726 => "0000001", 727 => "1111001", 
    728 => "0001110", 729 => "0000101", 730 => "0001011", 731 => "1111010", 
    732 => "0000001", 733 => "1011101", 734 => "1100111", 735 => "0000001", 
    736 => "0000111", 737 => "1110001", 738 => "1101101", 739 => "1111110", 
    740 => "0001101", 741 => "1110101", 742 => "1011110", 743 => "1100111", 
    744 => "1100110", 745 => "1110010", 746 => "1111101", 747 => "1010101", 
    748 => "1010001", 749 => "1100001", 750 => "1011101", 751 => "0001101", 
    752 => "0001001", 753 => "0000010", 754 => "1110110", 755 => "1111001", 
    756 => "0001111", 757 => "0000010", 758 => "0000011", 759 => "1111001", 
    760 => "1111000", 761 => "1111110", 762 to 763=> "1111111", 764 => "1100111", 
    765 => "0000111", 766 => "1011011", 767 => "0000011", 768 => "0010000", 
    769 => "0001011", 770 => "1111111", 771 => "0100000", 772 => "0000000", 
    773 => "1100010", 774 => "0000001", 775 => "1110100", 776 => "1110011", 
    777 => "1101000", 778 to 779=> "1100010", 780 => "0000011", 781 => "0001000", 
    782 => "1111100", 783 => "1111101" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsfYi is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsfYi is
    component mlp_l1_l1_weightsfYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsfYi_rom_U :  component mlp_l1_l1_weightsfYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


