-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsMgi_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsMgi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000010", 1 => "1111011", 2 => "0001010", 3 => "0000100", 
    4 => "1101110", 5 => "1110111", 6 => "0000011", 7 => "0000110", 
    8 => "1111110", 9 => "1111010", 10 => "1110000", 11 => "0000111", 
    12 => "0001101", 13 => "0001010", 14 => "0100011", 15 => "0001101", 
    16 => "1110010", 17 => "0001011", 18 => "1110100", 19 => "1110101", 
    20 => "0001101", 21 => "0010001", 22 => "0001101", 23 => "1101110", 
    24 => "1111011", 25 => "0000100", 26 => "0000101", 27 => "0001101", 
    28 => "0001011", 29 => "1111110", 30 => "0001010", 31 => "0010011", 
    32 => "1110000", 33 => "1111100", 34 => "0000100", 35 => "0000111", 
    36 => "1101101", 37 => "1111101", 38 => "0001011", 39 => "0001001", 
    40 => "1110101", 41 => "0001001", 42 => "1111101", 43 => "0010100", 
    44 => "0100110", 45 => "0011010", 46 => "0000000", 47 => "1111101", 
    48 => "0010011", 49 => "0001001", 50 => "0001011", 51 => "1111001", 
    52 => "0000111", 53 => "0001111", 54 => "0010001", 55 => "0000101", 
    56 => "0010000", 57 => "1110000", 58 => "0001011", 59 => "0001000", 
    60 => "0011100", 61 => "1111110", 62 => "1101011", 63 => "1111000", 
    64 => "1100011", 65 => "1111100", 66 => "1110101", 67 to 68=> "1111000", 
    69 => "1110000", 70 => "1111001", 71 => "1110011", 72 => "0000001", 
    73 => "0010011", 74 => "0010111", 75 => "0011001", 76 => "0000111", 
    77 => "0001100", 78 => "0001000", 79 => "1110001", 80 => "1110110", 
    81 => "1111011", 82 to 83=> "0000001", 84 => "0001010", 85 => "0001100", 
    86 => "1110100", 87 => "0001011", 88 => "1111111", 89 => "1111001", 
    90 => "1011010", 91 => "1100101", 92 => "0010011", 93 => "0100110", 
    94 => "0000010", 95 => "0010000", 96 => "0010111", 97 => "1111111", 
    98 => "1011001", 99 => "1101011", 100 => "1100111", 101 => "0000110", 
    102 => "1111000", 103 => "0010111", 104 => "1110001", 105 => "1101110", 
    106 => "1110000", 107 => "1101100", 108 => "0000111", 109 => "0010100", 
    110 => "0000001", 111 => "0000000", 112 => "0001101", 113 => "1110011", 
    114 => "1100111", 115 => "1100001", 116 => "1100100", 117 => "1111010", 
    118 => "1111001", 119 => "0001000", 120 => "0001100", 121 => "0010000", 
    122 => "0010110", 123 => "0001110", 124 => "0000111", 125 => "1110001", 
    126 => "1101111", 127 => "1111011", 128 to 129=> "0000100", 130 => "0011001", 
    131 => "1111101", 132 => "1111000", 133 => "0000111", 134 => "1101111", 
    135 => "0000000", 136 => "0000010", 137 => "0001010", 138 => "0001011", 
    139 => "1100000", 140 => "1111001", 141 => "0001101", 142 => "0000000", 
    143 => "0000001", 144 => "1110101", 145 => "1111011", 146 => "1111000", 
    147 => "0000101", 148 => "1101110", 149 => "0001000", 150 => "1101111", 
    151 => "0010100", 152 => "1111100", 153 => "0011000", 154 => "1110101", 
    155 => "1111101", 156 to 157=> "1110110", 158 => "1011111", 159 => "1111001", 
    160 => "1111101", 161 => "0001110", 162 => "0010100", 163 => "0001100", 
    164 => "1110000", 165 => "1101001", 166 => "1111001", 167 => "1111101", 
    168 => "1101111", 169 => "0011000", 170 => "1101000", 171 => "1110011", 
    172 => "1111100", 173 => "0010100", 174 => "0000010", 175 => "0010110", 
    176 => "1110010", 177 => "1111110", 178 => "1101011", 179 => "1110110", 
    180 => "1111111", 181 => "1111001", 182 => "1110111", 183 => "1110001", 
    184 => "1100110", 185 => "1111100", 186 => "1100010", 187 => "0000001", 
    188 => "0001100", 189 => "1110001", 190 => "1110100", 191 => "0010111", 
    192 => "0000111", 193 => "1110111", 194 => "0001011", 195 => "1100100", 
    196 => "0001011", 197 => "0101001", 198 => "1110011", 199 => "1111001", 
    200 => "1110000", 201 => "1100010", 202 => "1111111", 203 => "0011001", 
    204 => "0010011", 205 => "1110011", 206 => "0000101", 207 => "0001000", 
    208 => "0000100", 209 => "1101010", 210 => "0000101", 211 => "1110001", 
    212 => "1100000", 213 => "1011011", 214 => "1101110", 215 => "1111010", 
    216 => "0000010", 217 => "0000100", 218 => "0001111", 219 => "1111000", 
    220 => "0000001", 221 => "1101111", 222 => "0100000", 223 => "0000000", 
    224 => "0000001", 225 => "0000011", 226 => "1110010", 227 => "1110100", 
    228 => "1101000", 229 => "1111100", 230 => "0000110", 231 => "0000111", 
    232 => "1110110", 233 => "1110100", 234 => "0010111", 235 to 236=> "0001110", 
    237 => "1110101", 238 => "1110010", 239 => "0001000", 240 => "1111110", 
    241 => "0000011", 242 => "1111100", 243 => "0000010", 244 => "0000111", 
    245 => "0001101", 246 => "0000001", 247 => "0001010", 248 => "1110111", 
    249 => "0000011", 250 => "0001011", 251 => "1111010", 252 => "1111110", 
    253 => "1011100", 254 => "1110111", 255 => "1110100", 256 => "1100010", 
    257 => "1111011", 258 => "0011001", 259 => "0011100", 260 => "0010100", 
    261 => "1110000", 262 => "0010100", 263 => "0000111", 264 => "0010111", 
    265 => "0010010", 266 => "0010101", 267 => "1111101", 268 => "0001010", 
    269 => "0001000", 270 => "0011000", 271 => "1111011", 272 => "0000010", 
    273 => "0010100", 274 => "0000111", 275 => "0000101", 276 => "0010101", 
    277 => "1111010", 278 => "1110000", 279 => "1101001", 280 => "0010001", 
    281 => "0010000", 282 => "1110110", 283 => "0000111", 284 => "0011000", 
    285 => "0001110", 286 => "0011100", 287 => "0010001", 288 => "1111111", 
    289 => "0010110", 290 => "1111110", 291 => "0001100", 292 => "0000100", 
    293 => "0100111", 294 to 295=> "0011101", 296 => "0011011", 297 => "0011000", 
    298 => "0001101", 299 => "0001110", 300 => "0000001", 301 => "1111000", 
    302 => "0001011", 303 => "0001001", 304 => "0010110", 305 to 306=> "0011000", 
    307 => "1111101", 308 => "1110010", 309 => "1110111", 310 => "1110000", 
    311 => "1111000", 312 => "0010110", 313 => "0001110", 314 to 315=> "0010111", 
    316 => "0010001", 317 => "1110101", 318 => "1110100", 319 => "1111010", 
    320 => "1101011", 321 => "1101001", 322 => "1111111", 323 => "1110011", 
    324 => "1101010", 325 => "1111000", 326 => "0000001", 327 => "1101111", 
    328 => "1101000", 329 => "1110010", 330 => "1100101", 331 => "1101001", 
    332 => "1101111", 333 => "0101010", 334 => "0001010", 335 => "1111011", 
    336 => "1101101", 337 => "0001101", 338 => "1101111", 339 => "0011000", 
    340 => "0001100", 341 => "0001111", 342 => "0000001", 343 => "1110111", 
    344 => "1110100", 345 => "1110001", 346 => "1011110", 347 => "1101010", 
    348 => "1110010", 349 => "1100011", 350 => "1110010", 351 => "1100011", 
    352 => "1011110", 353 => "1101110", 354 => "1110000", 355 => "1110001", 
    356 => "1111000", 357 => "0001100", 358 => "1100011", 359 => "1011101", 
    360 to 361=> "0001101", 362 => "0100101", 363 => "1110111", 364 => "0001000", 
    365 => "0100111", 366 => "0001010", 367 => "0011010", 368 to 369=> "1110000", 
    370 => "0001111", 371 => "0001000", 372 => "1110011", 373 => "1110010", 
    374 => "1100011", 375 => "0000111", 376 => "0001110", 377 => "0000110", 
    378 => "0000001", 379 => "1011111", 380 => "1110001", 381 => "1111111", 
    382 => "0001000", 383 => "1111111", 384 => "0011011", 385 => "1110000", 
    386 => "1111001", 387 => "0000111", 388 => "0000010", 389 => "1101110", 
    390 => "0010100", 391 => "0011110", 392 => "0000111", 393 => "1111000", 
    394 => "0001100", 395 => "0000111", 396 => "1111010", 397 => "1111001", 
    398 => "1100111", 399 => "0000010", 400 => "1101011", 401 => "1110111", 
    402 => "0000111", 403 => "0000100", 404 => "1111111", 405 => "1111101", 
    406 => "0001101", 407 to 408=> "1110100", 409 => "1111001", 410 => "0000110", 
    411 => "0000101", 412 => "1101011", 413 => "1110001", 414 => "1110110", 
    415 => "1101110", 416 => "0001101", 417 => "1110000", 418 => "0101010", 
    419 => "0001010", 420 => "1110111", 421 => "0000111", 422 => "0011011", 
    423 => "1101111", 424 => "0001101", 425 => "0001000", 426 => "1110101", 
    427 => "1111001", 428 => "1100111", 429 => "0001010", 430 => "1111111", 
    431 => "0000101", 432 => "1111000", 433 => "0010100", 434 => "0010110", 
    435 => "1111110", 436 => "1110001", 437 => "1101110", 438 => "0000011", 
    439 => "1110101", 440 => "1110000", 441 => "1100110", 442 => "1111111", 
    443 => "0001110", 444 => "0011110", 445 to 446=> "0100000", 447 => "1110111", 
    448 => "1110101", 449 => "1111110", 450 => "0001010", 451 => "0010110", 
    452 => "1111110", 453 => "1111100", 454 => "0001010", 455 => "1111011", 
    456 => "1101101", 457 => "1111111", 458 => "1111011", 459 => "1101010", 
    460 => "0001111", 461 => "1111000", 462 => "0010000", 463 => "1111101", 
    464 => "0001111", 465 => "0010010", 466 => "1110110", 467 => "1111111", 
    468 => "0001010", 469 => "0000001", 470 => "0010011", 471 => "0010111", 
    472 => "0010011", 473 to 474=> "0110001", 475 => "0100111", 476 => "1111000", 
    477 => "1111010", 478 => "1101101", 479 => "0001011", 480 => "0011001", 
    481 => "0010000", 482 => "1111111", 483 => "1101101", 484 => "0000110", 
    485 => "0000001", 486 => "0000100", 487 => "1101110", 488 => "0000110", 
    489 => "1110000", 490 => "0000011", 491 => "0010011", 492 => "0000001", 
    493 => "1110111", 494 => "0011110", 495 => "1111110", 496 => "1111001", 
    497 => "1111101", 498 => "0000010", 499 => "1111000", 500 => "1101110", 
    501 => "0100001", 502 => "0011100", 503 => "0011001", 504 => "1111011", 
    505 => "1110010", 506 => "1100110", 507 => "0001111", 508 => "1111111", 
    509 => "0011111", 510 => "0010010", 511 => "0001000", 512 => "1111100", 
    513 => "0000101", 514 => "1111101", 515 => "0000001", 516 => "1111101", 
    517 => "0010110", 518 => "0100001", 519 => "0011101", 520 => "0010000", 
    521 => "0000001", 522 => "1111011", 523 => "0000000", 524 => "0001011", 
    525 => "1100111", 526 => "0000110", 527 => "1111111", 528 => "0010101", 
    529 => "0010111", 530 => "1101000", 531 => "0001110", 532 => "1110010", 
    533 => "0001001", 534 => "1101001", 535 => "1110011", 536 => "1111100", 
    537 => "0011100", 538 => "0010101", 539 => "1111001", 540 => "1111111", 
    541 => "0000010", 542 => "0010010", 543 => "0001101", 544 => "0100000", 
    545 => "0011100", 546 => "0001010", 547 => "0000010", 548 => "1111110", 
    549 => "0000010", 550 => "0011011", 551 => "1110110", 552 => "1111001", 
    553 => "0010001", 554 => "1110001", 555 => "0001010", 556 => "0001101", 
    557 => "0100000", 558 => "0010000", 559 => "0001000", 560 => "1101111", 
    561 => "1110111", 562 => "1111010", 563 => "1100100", 564 => "0000110", 
    565 => "0001111", 566 => "0001100", 567 => "0000011", 568 => "0001001", 
    569 => "0001101", 570 => "0011111", 571 => "0010101", 572 => "0000010", 
    573 => "0001101", 574 => "0001011", 575 => "0000100", 576 => "0001000", 
    577 to 578=> "1111100", 579 => "1110111", 580 => "1110110", 581 => "0010001", 
    582 => "0001101", 583 => "0011110", 584 => "1110101", 585 => "0001110", 
    586 => "0001011", 587 => "1110110", 588 => "0001110", 589 => "1110101", 
    590 => "0010001", 591 => "0010000", 592 => "1110111", 593 => "1111011", 
    594 => "0000001", 595 => "1111110", 596 => "0001001", 597 => "0010001", 
    598 => "0010110", 599 => "0011100", 600 => "0000011", 601 => "0010000", 
    602 => "0011010", 603 => "0001100", 604 => "0010000", 605 => "0000000", 
    606 => "0000110", 607 => "1101111", 608 => "0000110", 609 => "0000100", 
    610 => "0000011", 611 => "0100100", 612 => "0011000", 613 => "0100111", 
    614 => "0010111", 615 => "1111010", 616 => "0001100", 617 => "1111110", 
    618 => "1110110", 619 => "1111011", 620 => "0010010", 621 => "0001111", 
    622 => "1111111", 623 => "1111000", 624 => "0000010", 625 => "0010010", 
    626 => "0010011", 627 to 628=> "0011101", 629 => "0010011", 630 => "0001111", 
    631 => "0000110", 632 => "1110111", 633 => "0000110", 634 => "0000100", 
    635 => "1111100", 636 => "1110110", 637 => "1111110", 638 => "1100111", 
    639 => "0001010", 640 => "0011010", 641 => "0000011", 642 => "0101110", 
    643 => "1110000", 644 => "0001111", 645 => "0010010", 646 => "0011001", 
    647 => "0100001", 648 => "0011000", 649 => "1101100", 650 => "1101011", 
    651 => "1100101", 652 => "0010001", 653 => "0011101", 654 => "1111010", 
    655 => "1111110", 656 => "0001110", 657 => "1101011", 658 => "0001011", 
    659 => "0001101", 660 => "1111001", 661 => "1111100", 662 => "1111101", 
    663 => "0010011", 664 => "0000111", 665 => "1110100", 666 => "1111111", 
    667 => "0100000", 668 => "1111011", 669 => "0001111", 670 => "0100010", 
    671 => "1110101", 672 to 673=> "1111100", 674 => "0000000", 675 => "0010011", 
    676 => "1110011", 677 => "1110010", 678 => "1010111", 679 => "1010100", 
    680 => "1011100", 681 => "0001100", 682 => "1101010", 683 => "1110010", 
    684 => "1100100", 685 => "1100010", 686 => "1101010", 687 => "1100101", 
    688 => "1100000", 689 => "1110010", 690 => "0000010", 691 => "0011101", 
    692 => "1110101", 693 to 694=> "0001001", 695 => "1111010", 696 => "0011111", 
    697 => "1110101", 698 => "0000001", 699 => "1110001", 700 => "0001100", 
    701 => "1101111", 702 => "0010001", 703 => "1100110", 704 => "1100011", 
    705 => "1010110", 706 => "1010100", 707 => "1001110", 708 => "1100010", 
    709 => "1100011", 710 => "1011011", 711 => "1001010", 712 => "1011001", 
    713 => "1101101", 714 => "1000101", 715 => "1001000", 716 => "1100000", 
    717 => "1100100", 718 => "0010001", 719 => "0001101", 720 => "1110011", 
    721 => "0001110", 722 => "1111100", 723 => "0010101", 724 => "0010011", 
    725 => "0001111", 726 => "0001011", 727 => "1111100", 728 => "1111001", 
    729 to 730=> "1111100", 731 => "1101110", 732 => "1111111", 733 => "1010100", 
    734 => "1011111", 735 => "1011100", 736 => "1101011", 737 => "1100100", 
    738 => "1111101", 739 => "1011111", 740 => "1101000", 741 to 742=> "1010100", 
    743 => "1100111", 744 => "1100101", 745 => "1101100", 746 => "1111010", 
    747 => "1110110", 748 => "1101111", 749 => "1101000", 750 => "1110010", 
    751 => "1101010", 752 => "0001011", 753 => "1111010", 754 => "0001101", 
    755 => "1111000", 756 => "0010010", 757 => "1110101", 758 => "1111011", 
    759 => "0010000", 760 => "1110111", 761 => "0000110", 762 => "1101110", 
    763 => "1110110", 764 => "0000000", 765 => "1111110", 766 => "1001100", 
    767 => "1100111", 768 => "1100001", 769 => "1011100", 770 => "1100001", 
    771 => "1110101", 772 => "1011100", 773 => "1101110", 774 => "1101011", 
    775 => "1101101", 776 => "1100011", 777 => "1110100", 778 => "1110001", 
    779 => "1110111", 780 => "1111111", 781 => "0000001", 782 => "1111111", 
    783 => "0000001" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsMgi is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsMgi is
    component mlp_l1_l1_weightsMgi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsMgi_rom_U :  component mlp_l1_l1_weightsMgi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


