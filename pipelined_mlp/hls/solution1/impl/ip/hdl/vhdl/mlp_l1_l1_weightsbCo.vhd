-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mlp_l1_l1_weightsbCo_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mlp_l1_l1_weightsbCo_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0001000", 1 => "1111001", 2 => "1111010", 3 => "0000001", 
    4 => "1111011", 5 => "1110101", 6 => "1111100", 7 => "0010010", 
    8 => "1110100", 9 => "1111110", 10 => "1110101", 11 => "0001110", 
    12 => "1111100", 13 => "1101101", 14 => "0000100", 15 => "0000000", 
    16 => "0000111", 17 => "1111101", 18 => "1110000", 19 => "0001011", 
    20 => "0001110", 21 => "0000000", 22 => "0010000", 23 => "1111011", 
    24 => "0010000", 25 => "0001101", 26 => "0010001", 27 => "0001010", 
    28 => "0001101", 29 => "1110111", 30 => "0001001", 31 => "1110010", 
    32 => "1111011", 33 => "0000000", 34 => "1101111", 35 => "1110111", 
    36 => "0001101", 37 => "1111000", 38 => "0001100", 39 => "1110101", 
    40 => "1101110", 41 => "1100011", 42 => "1010000", 43 => "1010101", 
    44 => "1111000", 45 => "0100010", 46 => "0010010", 47 => "1101001", 
    48 => "1101111", 49 => "1110110", 50 => "0001000", 51 => "1111001", 
    52 => "0001110", 53 => "0000010", 54 => "1101111", 55 => "1110010", 
    56 => "1101111", 57 => "0001110", 58 => "1111000", 59 => "1101011", 
    60 => "1100100", 61 => "0011100", 62 => "1111011", 63 => "0000011", 
    64 => "0011000", 65 => "0011001", 66 => "0000100", 67 => "1110010", 
    68 => "1110110", 69 => "0000100", 70 => "0010111", 71 => "1101000", 
    72 => "1110011", 73 => "0011011", 74 => "1101110", 75 => "1110101", 
    76 => "0011001", 77 => "0010100", 78 => "0010111", 79 => "0001111", 
    80 => "1111111", 81 => "0000111", 82 => "0001011", 83 => "1110111", 
    84 => "1101111", 85 => "1110010", 86 => "1111101", 87 => "1100110", 
    88 => "1110101", 89 => "0011010", 90 => "0010100", 91 => "1101101", 
    92 => "1111101", 93 => "0000111", 94 => "1100111", 95 => "1110101", 
    96 => "0000000", 97 => "1111001", 98 => "0111001", 99 => "0100001", 
    100 => "0010101", 101 => "0000001", 102 => "0001001", 103 => "1110010", 
    104 => "0001101", 105 => "0101000", 106 => "0001011", 107 => "1111010", 
    108 => "0011000", 109 => "0000100", 110 => "0000111", 111 to 112=> "1110001", 
    113 => "1111000", 114 => "0000100", 115 => "0000000", 116 => "1111110", 
    117 => "0001000", 118 => "0000100", 119 => "1110010", 120 => "1100101", 
    121 => "1101001", 122 => "0001000", 123 => "1110000", 124 => "1111101", 
    125 => "1101010", 126 => "0000011", 127 => "0000101", 128 => "1110110", 
    129 => "1111001", 130 => "0001010", 131 => "0010010", 132 => "0011011", 
    133 => "0010100", 134 => "0010010", 135 => "0000111", 136 => "0010101", 
    137 => "0000111", 138 => "1110001", 139 => "0001000", 140 => "1110100", 
    141 => "0000011", 142 => "1111100", 143 => "1101111", 144 => "0010011", 
    145 => "0010001", 146 => "1111100", 147 => "1011111", 148 => "1110110", 
    149 => "1111110", 150 => "1101101", 151 => "1100111", 152 => "1101100", 
    153 => "1101001", 154 => "1111101", 155 => "0000011", 156 => "1111100", 
    157 => "1111110", 158 => "0001000", 159 => "0001100", 160 => "0010100", 
    161 => "0001111", 162 => "0010000", 163 => "0011000", 164 => "0101101", 
    165 => "0001011", 166 => "0100111", 167 => "0100011", 168 => "1111001", 
    169 => "1101111", 170 => "1111100", 171 => "0010000", 172 => "0011101", 
    173 => "1111101", 174 => "1101110", 175 => "1011101", 176 => "0000000", 
    177 => "1011010", 178 => "1011110", 179 => "1010010", 180 => "1011111", 
    181 => "0000000", 182 => "0000001", 183 => "1110010", 184 => "0010001", 
    185 => "1101010", 186 => "1111010", 187 => "0000111", 188 => "1110111", 
    189 => "0001010", 190 => "0001000", 191 => "0000001", 192 => "0010000", 
    193 => "0011001", 194 => "0010000", 195 => "0010110", 196 => "0000100", 
    197 => "1101011", 198 => "1111011", 199 => "1111001", 200 => "1111111", 
    201 => "0010100", 202 => "0100001", 203 => "1110001", 204 => "0000000", 
    205 => "0000010", 206 => "1010110", 207 => "1100101", 208 => "1011100", 
    209 => "1101010", 210 => "1101100", 211 => "1101101", 212 => "1110100", 
    213 to 214=> "0000110", 215 => "1101101", 216 => "0010111", 217 => "0001000", 
    218 => "0011101", 219 => "1111010", 220 => "0100001", 221 => "0100011", 
    222 => "0011011", 223 => "0000110", 224 => "1110101", 225 => "1100001", 
    226 => "0000000", 227 => "1101010", 228 => "1100011", 229 => "1110101", 
    230 => "0000110", 231 => "1100100", 232 => "1101101", 233 => "1110001", 
    234 => "1010001", 235 => "1100110", 236 => "1101111", 237 => "0000000", 
    238 => "1110010", 239 => "1111001", 240 to 241=> "0000111", 242 => "1111111", 
    243 => "1110111", 244 => "1100111", 245 => "1111000", 246 => "1110101", 
    247 => "1011101", 248 => "0001100", 249 => "0001001", 250 => "1110111", 
    251 => "1101111", 252 => "0010001", 253 => "1100101", 254 => "0001110", 
    255 => "1111000", 256 => "1110110", 257 => "0000100", 258 => "1100111", 
    259 => "1110010", 260 => "1100011", 261 => "1010000", 262 => "1110101", 
    263 => "0000111", 264 => "1101110", 265 => "1111100", 266 => "1111111", 
    267 => "0001010", 268 => "1110111", 269 => "1101101", 270 => "1101000", 
    271 => "1111110", 272 => "0000010", 273 => "1111001", 274 => "1101000", 
    275 => "1011100", 276 => "1100100", 277 => "1011011", 278 => "1110101", 
    279 => "1100011", 280 => "0000000", 281 => "1111111", 282 => "0000000", 
    283 to 284=> "1110011", 285 => "0000101", 286 => "1111010", 287 => "1111110", 
    288 => "1100110", 289 => "1100011", 290 => "1011101", 291 => "1110011", 
    292 => "0001000", 293 => "1111011", 294 => "1100110", 295 => "0001101", 
    296 => "1100110", 297 => "1110011", 298 => "1110100", 299 => "1101100", 
    300 => "1111000", 301 => "1111010", 302 => "1101000", 303 => "1010100", 
    304 => "1011100", 305 => "1111001", 306 => "1101101", 307 => "1110110", 
    308 => "0001101", 309 => "1110011", 310 => "0000010", 311 => "1111000", 
    312 => "1001001", 313 => "1110010", 314 => "1101111", 315 => "0000001", 
    316 => "0001010", 317 => "1111110", 318 => "1101111", 319 => "0011001", 
    320 to 321=> "0000011", 322 => "1110100", 323 => "0000101", 324 => "1101010", 
    325 => "1110100", 326 => "1111110", 327 => "1111001", 328 => "1110010", 
    329 => "1100100", 330 => "1110100", 331 => "1001010", 332 => "1000101", 
    333 => "1100110", 334 => "1000100", 335 => "1111000", 336 => "0000011", 
    337 => "1110011", 338 => "0001100", 339 => "1101011", 340 => "1011010", 
    341 => "1100100", 342 => "1111010", 343 => "1111011", 344 => "0001010", 
    345 => "0001110", 346 => "0011100", 347 => "0010110", 348 => "0100101", 
    349 => "1111100", 350 => "0001111", 351 => "1111001", 352 => "1111111", 
    353 => "1101010", 354 => "1101101", 355 => "0010001", 356 => "1111010", 
    357 => "1100110", 358 => "1101101", 359 => "1011001", 360 => "1101010", 
    361 => "1110000", 362 => "1010111", 363 => "1010110", 364 => "1111111", 
    365 => "0000011", 366 => "1101001", 367 => "1111111", 368 => "1110111", 
    369 => "1110010", 370 => "0001111", 371 => "0100000", 372 => "0011101", 
    373 => "0000110", 374 => "0011000", 375 => "0011100", 376 => "0011111", 
    377 => "0000111", 378 => "0000101", 379 => "1110110", 380 => "0000001", 
    381 => "0011100", 382 => "0010110", 383 => "0010010", 384 => "1011110", 
    385 => "1101110", 386 => "0000000", 387 => "0000111", 388 => "1101001", 
    389 => "1001101", 390 => "1011101", 391 => "0001101", 392 to 393=> "1101110", 
    394 => "1110101", 395 => "0001110", 396 => "0000001", 397 => "0001111", 
    398 => "0010010", 399 => "0101000", 400 => "1110001", 401 => "0011110", 
    402 => "0010011", 403 => "0000101", 404 => "0010010", 405 => "1101110", 
    406 => "1111100", 407 => "1111101", 408 => "0010101", 409 => "0010001", 
    410 => "0001100", 411 => "0000111", 412 => "1110111", 413 => "1011110", 
    414 => "1110000", 415 => "0000010", 416 => "0000101", 417 => "1110111", 
    418 => "0000110", 419 => "0000010", 420 => "0001111", 421 => "1110000", 
    422 => "0010100", 423 => "0000100", 424 => "1111000", 425 => "1111110", 
    426 => "0010001", 427 => "0010010", 428 => "1111010", 429 => "0001101", 
    430 => "0001010", 431 => "0010010", 432 => "0011001", 433 => "0001001", 
    434 => "1111001", 435 => "0011011", 436 => "0001011", 437 => "0100000", 
    438 => "0000110", 439 => "0010000", 440 => "0000010", 441 => "0000101", 
    442 => "0010111", 443 => "0001010", 444 => "0001011", 445 => "0011111", 
    446 => "1111111", 447 => "0100111", 448 => "1110100", 449 => "1100010", 
    450 => "1111011", 451 => "1110110", 452 => "1100100", 453 => "1101100", 
    454 => "0000001", 455 => "0011010", 456 => "0000011", 457 => "1111000", 
    458 => "0011100", 459 => "0100010", 460 => "0001011", 461 => "1110010", 
    462 => "0000001", 463 => "0110010", 464 => "0100010", 465 => "0111000", 
    466 to 467=> "0011000", 468 => "0001001", 469 => "0101011", 470 => "0011001", 
    471 => "0100111", 472 => "0001010", 473 to 474=> "0011100", 475 => "0001000", 
    476 => "1110010", 477 => "0000100", 478 => "0001100", 479 => "1101110", 
    480 => "0001000", 481 => "1111111", 482 => "0001101", 483 to 484=> "0011100", 
    485 => "0100011", 486 => "0010010", 487 => "1111000", 488 => "1111101", 
    489 => "0000001", 490 => "0001111", 491 => "0100101", 492 => "0110001", 
    493 => "0101101", 494 => "0011011", 495 => "0011101", 496 => "0001011", 
    497 => "0100100", 498 => "0000010", 499 => "1110011", 500 => "1100001", 
    501 => "0000110", 502 => "0001101", 503 => "0001010", 504 => "1111111", 
    505 => "0001110", 506 => "1111010", 507 => "0010010", 508 => "0010101", 
    509 => "0010010", 510 => "0001100", 511 => "0001101", 512 => "0011110", 
    513 => "0010000", 514 => "0000010", 515 => "1101111", 516 => "0010010", 
    517 => "0000001", 518 => "0001101", 519 => "0110001", 520 => "0011101", 
    521 => "0010011", 522 => "0001100", 523 => "0010100", 524 => "1111100", 
    525 => "1110110", 526 => "0000000", 527 => "0010100", 528 => "1111000", 
    529 => "1001110", 530 => "1001100", 531 => "1110011", 532 => "0001100", 
    533 => "1111011", 534 => "1101000", 535 => "0000101", 536 => "0011001", 
    537 => "0101111", 538 => "1111101", 539 => "0000100", 540 => "0000111", 
    541 => "1111011", 542 => "1101001", 543 => "1111000", 544 => "0000110", 
    545 => "1111100", 546 => "0010100", 547 => "0001011", 548 => "0011001", 
    549 => "1101100", 550 => "1110110", 551 => "1110101", 552 => "1111000", 
    553 => "1110000", 554 => "0010010", 555 => "0000111", 556 => "1110001", 
    557 => "1011001", 558 => "0000111", 559 => "1110010", 560 => "0001111", 
    561 => "1111000", 562 => "0011010", 563 => "0010011", 564 => "0011101", 
    565 => "1110101", 566 => "1111001", 567 => "0010000", 568 => "0000101", 
    569 => "0001111", 570 => "0000011", 571 => "0000101", 572 to 573=> "0001000", 
    574 => "1111110", 575 => "1100001", 576 => "1111010", 577 => "1100100", 
    578 => "1111000", 579 => "0001000", 580 => "1100010", 581 => "0000010", 
    582 => "1110100", 583 => "0010111", 584 => "1111111", 585 => "1111010", 
    586 => "0000001", 587 => "0010011", 588 => "1111100", 589 => "0001000", 
    590 => "0011001", 591 => "0011000", 592 => "0010110", 593 => "0101001", 
    594 => "1110000", 595 => "0000001", 596 => "0001010", 597 => "0000000", 
    598 => "0001001", 599 => "1110111", 600 => "1111111", 601 => "0000011", 
    602 => "1110001", 603 => "1001110", 604 => "0000110", 605 => "0001011", 
    606 => "1111111", 607 => "1111101", 608 => "0000010", 609 => "0000001", 
    610 => "0011101", 611 => "0011000", 612 => "1111100", 613 => "1100100", 
    614 => "0101010", 615 => "0001100", 616 => "0000111", 617 to 618=> "1110111", 
    619 => "1110000", 620 => "1110100", 621 => "0000010", 622 => "1110010", 
    623 => "1111101", 624 => "1101101", 625 => "1111101", 626 => "1111100", 
    627 => "0000011", 628 => "0001001", 629 => "1111100", 630 => "1110000", 
    631 => "1101110", 632 => "1110100", 633 => "0000110", 634 => "1110000", 
    635 => "1110100", 636 => "1101011", 637 => "0001011", 638 => "1110110", 
    639 => "0001010", 640 => "0001001", 641 => "1110100", 642 => "0011000", 
    643 => "0010010", 644 => "0010000", 645 => "0001100", 646 => "0000010", 
    647 => "0010100", 648 => "1110111", 649 => "1011101", 650 => "1101011", 
    651 to 652=> "1111110", 653 => "1101100", 654 => "1111100", 655 => "1110000", 
    656 => "1110110", 657 => "1110001", 658 => "0000100", 659 => "1111100", 
    660 => "1100110", 661 => "1111010", 662 => "0001101", 663 => "1101001", 
    664 => "0000001", 665 to 666=> "1111001", 667 => "1111011", 668 => "0000001", 
    669 => "1101101", 670 => "1110001", 671 => "0001001", 672 => "1111001", 
    673 => "0000011", 674 => "1110110", 675 => "0010111", 676 => "1101111", 
    677 => "1101011", 678 => "1101001", 679 => "1001010", 680 => "1011110", 
    681 => "1101101", 682 => "1010101", 683 => "1101000", 684 => "1010010", 
    685 => "1010101", 686 => "1111101", 687 => "1111000", 688 => "0011000", 
    689 => "0101001", 690 => "0001111", 691 => "1110100", 692 => "0001001", 
    693 => "0010110", 694 => "0000110", 695 => "1111100", 696 => "1111011", 
    697 => "0011111", 698 => "0011110", 699 => "0001001", 700 => "0000101", 
    701 => "1111101", 702 => "0001000", 703 => "0000010", 704 to 705=> "1111100", 
    706 => "0010010", 707 => "0010100", 708 => "1111011", 709 => "1111101", 
    710 => "1110100", 711 => "0011010", 712 => "1011111", 713 => "1111010", 
    714 => "1110011", 715 => "1111000", 716 to 717=> "0001010", 718 => "0010011", 
    719 => "1101100", 720 => "0000000", 721 => "0000101", 722 => "1101001", 
    723 => "1101100", 724 => "1111010", 725 => "0011001", 726 => "0001010", 
    727 => "1110000", 728 => "0001111", 729 => "0000100", 730 => "1110000", 
    731 => "0000011", 732 => "0100000", 733 => "1111010", 734 => "0001001", 
    735 => "0001100", 736 => "1111100", 737 => "1110011", 738 => "1101111", 
    739 => "0100001", 740 => "1111100", 741 => "1101000", 742 => "1100011", 
    743 => "1101011", 744 => "0011110", 745 => "1111111", 746 => "0001010", 
    747 => "1011100", 748 => "1001001", 749 => "1110010", 750 => "0000000", 
    751 => "0000110", 752 => "0001000", 753 => "0000111", 754 => "0001010", 
    755 => "0000110", 756 => "0001101", 757 => "0001001", 758 => "0000011", 
    759 => "0001111", 760 => "0000110", 761 => "0000010", 762 => "1111101", 
    763 => "1100010", 764 => "1100100", 765 => "1100110", 766 => "1100111", 
    767 => "1111101", 768 => "1111100", 769 => "1110011", 770 => "1111000", 
    771 => "1001111", 772 => "1111011", 773 => "1101100", 774 => "1111001", 
    775 => "1101100", 776 => "0000111", 777 => "1111111", 778 => "1101100", 
    779 => "0000101", 780 => "0001010", 781 => "0000110", 782 => "0010011", 
    783 => "1110101" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity mlp_l1_l1_weightsbCo is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mlp_l1_l1_weightsbCo is
    component mlp_l1_l1_weightsbCo_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mlp_l1_l1_weightsbCo_rom_U :  component mlp_l1_l1_weightsbCo_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


