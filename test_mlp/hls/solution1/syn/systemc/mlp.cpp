// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> mlp::ap_ST_fsm_state1 = "1";
const sc_lv<10> mlp::ap_ST_fsm_state2 = "10";
const sc_lv<10> mlp::ap_ST_fsm_state3 = "100";
const sc_lv<10> mlp::ap_ST_fsm_state4 = "1000";
const sc_lv<10> mlp::ap_ST_fsm_state5 = "10000";
const sc_lv<10> mlp::ap_ST_fsm_state6 = "100000";
const sc_lv<10> mlp::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> mlp::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> mlp::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> mlp::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> mlp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mlp::ap_const_lv32_1 = "1";
const sc_lv<1> mlp::ap_const_lv1_0 = "0";
const sc_lv<32> mlp::ap_const_lv32_7 = "111";
const sc_lv<1> mlp::ap_const_lv1_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_9 = "1001";
const int mlp::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mlp::ap_const_lv32_2 = "10";
const sc_lv<32> mlp::ap_const_lv32_4 = "100";
const sc_lv<32> mlp::ap_const_lv32_6 = "110";
const bool mlp::ap_const_boolean_0 = false;
const sc_lv<32> mlp::ap_const_lv32_8 = "1000";
const sc_lv<5> mlp::ap_const_lv5_0 = "00000";
const sc_lv<6> mlp::ap_const_lv6_0 = "000000";
const sc_lv<6> mlp::ap_const_lv6_7 = "111";
const sc_lv<3> mlp::ap_const_lv3_0 = "000";
const sc_lv<32> mlp::ap_const_lv32_5 = "101";
const sc_lv<6> mlp::ap_const_lv6_F = "1111";
const sc_lv<2> mlp::ap_const_lv2_0 = "00";
const sc_lv<32> mlp::ap_const_lv32_3 = "11";
const sc_lv<4> mlp::ap_const_lv4_F = "1111";
const sc_lv<4> mlp::ap_const_lv4_0 = "0000";
const sc_lv<3> mlp::ap_const_lv3_6 = "110";
const sc_lv<3> mlp::ap_const_lv3_5 = "101";
const sc_lv<3> mlp::ap_const_lv3_4 = "100";
const sc_lv<3> mlp::ap_const_lv3_3 = "11";
const sc_lv<3> mlp::ap_const_lv3_2 = "10";
const sc_lv<3> mlp::ap_const_lv3_1 = "1";
const sc_lv<3> mlp::ap_const_lv3_7 = "111";
const sc_lv<5> mlp::ap_const_lv5_10 = "10000";
const sc_lv<5> mlp::ap_const_lv5_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_1F = "11111";
const sc_lv<6> mlp::ap_const_lv6_1F = "11111";
const sc_lv<32> mlp::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<6> mlp::ap_const_lv6_8 = "1000";
const sc_lv<2> mlp::ap_const_lv2_2 = "10";
const sc_lv<2> mlp::ap_const_lv2_1 = "1";
const sc_lv<6> mlp::ap_const_lv6_10 = "10000";
const bool mlp::ap_const_boolean_1 = true;

mlp::mlp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mlp_control_s_axi_U = new mlp_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("mlp_control_s_axi_U");
    mlp_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    mlp_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    mlp_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    mlp_control_s_axi_U->WVALID(s_axi_control_WVALID);
    mlp_control_s_axi_U->WREADY(s_axi_control_WREADY);
    mlp_control_s_axi_U->WDATA(s_axi_control_WDATA);
    mlp_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    mlp_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    mlp_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    mlp_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    mlp_control_s_axi_U->RVALID(s_axi_control_RVALID);
    mlp_control_s_axi_U->RREADY(s_axi_control_RREADY);
    mlp_control_s_axi_U->RDATA(s_axi_control_RDATA);
    mlp_control_s_axi_U->RRESP(s_axi_control_RRESP);
    mlp_control_s_axi_U->BVALID(s_axi_control_BVALID);
    mlp_control_s_axi_U->BREADY(s_axi_control_BREADY);
    mlp_control_s_axi_U->BRESP(s_axi_control_BRESP);
    mlp_control_s_axi_U->ACLK(ap_clk);
    mlp_control_s_axi_U->ARESET(ap_rst_n_inv);
    mlp_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    mlp_control_s_axi_U->ap_start(ap_start);
    mlp_control_s_axi_U->interrupt(interrupt);
    mlp_control_s_axi_U->ap_ready(ap_ready);
    mlp_control_s_axi_U->ap_done(ap_done);
    mlp_control_s_axi_U->ap_idle(ap_idle);
    sample_0_U = new mlp_sample_0("sample_0_U");
    sample_0_U->clk(ap_clk);
    sample_0_U->reset(ap_rst_n_inv);
    sample_0_U->address0(sample_0_address0);
    sample_0_U->ce0(sample_0_ce0);
    sample_0_U->we0(sample_0_we0);
    sample_0_U->d0(trunc_ln392_3_fu_632_p1);
    sample_0_U->q0(sample_0_q0);
    sample_1_U = new mlp_sample_0("sample_1_U");
    sample_1_U->clk(ap_clk);
    sample_1_U->reset(ap_rst_n_inv);
    sample_1_U->address0(sample_1_address0);
    sample_1_U->ce0(sample_1_ce0);
    sample_1_U->we0(sample_1_we0);
    sample_1_U->d0(trunc_ln392_3_fu_632_p1);
    sample_1_U->q0(sample_1_q0);
    sample_2_U = new mlp_sample_0("sample_2_U");
    sample_2_U->clk(ap_clk);
    sample_2_U->reset(ap_rst_n_inv);
    sample_2_U->address0(sample_2_address0);
    sample_2_U->ce0(sample_2_ce0);
    sample_2_U->we0(sample_2_we0);
    sample_2_U->d0(trunc_ln392_3_fu_632_p1);
    sample_2_U->q0(sample_2_q0);
    sample_3_U = new mlp_sample_0("sample_3_U");
    sample_3_U->clk(ap_clk);
    sample_3_U->reset(ap_rst_n_inv);
    sample_3_U->address0(sample_3_address0);
    sample_3_U->ce0(sample_3_ce0);
    sample_3_U->we0(sample_3_we0);
    sample_3_U->d0(trunc_ln392_3_fu_632_p1);
    sample_3_U->q0(sample_3_q0);
    sample_4_U = new mlp_sample_0("sample_4_U");
    sample_4_U->clk(ap_clk);
    sample_4_U->reset(ap_rst_n_inv);
    sample_4_U->address0(sample_4_address0);
    sample_4_U->ce0(sample_4_ce0);
    sample_4_U->we0(sample_4_we0);
    sample_4_U->d0(trunc_ln392_3_fu_632_p1);
    sample_4_U->q0(sample_4_q0);
    sample_5_U = new mlp_sample_0("sample_5_U");
    sample_5_U->clk(ap_clk);
    sample_5_U->reset(ap_rst_n_inv);
    sample_5_U->address0(sample_5_address0);
    sample_5_U->ce0(sample_5_ce0);
    sample_5_U->we0(sample_5_we0);
    sample_5_U->d0(trunc_ln392_3_fu_632_p1);
    sample_5_U->q0(sample_5_q0);
    sample_6_U = new mlp_sample_0("sample_6_U");
    sample_6_U->clk(ap_clk);
    sample_6_U->reset(ap_rst_n_inv);
    sample_6_U->address0(sample_6_address0);
    sample_6_U->ce0(sample_6_ce0);
    sample_6_U->we0(sample_6_we0);
    sample_6_U->d0(trunc_ln392_3_fu_632_p1);
    sample_6_U->q0(sample_6_q0);
    sample_7_U = new mlp_sample_0("sample_7_U");
    sample_7_U->clk(ap_clk);
    sample_7_U->reset(ap_rst_n_inv);
    sample_7_U->address0(sample_7_address0);
    sample_7_U->ce0(sample_7_ce0);
    sample_7_U->we0(sample_7_we0);
    sample_7_U->d0(trunc_ln392_3_fu_632_p1);
    sample_7_U->q0(sample_7_q0);
    prediction_0_U = new mlp_prediction_0("prediction_0_U");
    prediction_0_U->clk(ap_clk);
    prediction_0_U->reset(ap_rst_n_inv);
    prediction_0_U->address0(prediction_0_address0);
    prediction_0_U->ce0(prediction_0_ce0);
    prediction_0_U->we0(prediction_0_we0);
    prediction_0_U->d0(grp_mlp_kernel_fu_436_prediction_0_d0);
    prediction_0_U->q0(prediction_0_q0);
    prediction_1_U = new mlp_prediction_0("prediction_1_U");
    prediction_1_U->clk(ap_clk);
    prediction_1_U->reset(ap_rst_n_inv);
    prediction_1_U->address0(prediction_1_address0);
    prediction_1_U->ce0(prediction_1_ce0);
    prediction_1_U->we0(prediction_1_we0);
    prediction_1_U->d0(grp_mlp_kernel_fu_436_prediction_1_d0);
    prediction_1_U->q0(prediction_1_q0);
    grp_mlp_kernel_fu_436 = new mlp_kernel("grp_mlp_kernel_fu_436");
    grp_mlp_kernel_fu_436->ap_clk(ap_clk);
    grp_mlp_kernel_fu_436->ap_rst(ap_rst_n_inv);
    grp_mlp_kernel_fu_436->ap_start(grp_mlp_kernel_fu_436_ap_start);
    grp_mlp_kernel_fu_436->ap_done(grp_mlp_kernel_fu_436_ap_done);
    grp_mlp_kernel_fu_436->ap_idle(grp_mlp_kernel_fu_436_ap_idle);
    grp_mlp_kernel_fu_436->ap_ready(grp_mlp_kernel_fu_436_ap_ready);
    grp_mlp_kernel_fu_436->sample_0_address0(grp_mlp_kernel_fu_436_sample_0_address0);
    grp_mlp_kernel_fu_436->sample_0_ce0(grp_mlp_kernel_fu_436_sample_0_ce0);
    grp_mlp_kernel_fu_436->sample_0_q0(sample_0_q0);
    grp_mlp_kernel_fu_436->sample_1_address0(grp_mlp_kernel_fu_436_sample_1_address0);
    grp_mlp_kernel_fu_436->sample_1_ce0(grp_mlp_kernel_fu_436_sample_1_ce0);
    grp_mlp_kernel_fu_436->sample_1_q0(sample_1_q0);
    grp_mlp_kernel_fu_436->sample_2_address0(grp_mlp_kernel_fu_436_sample_2_address0);
    grp_mlp_kernel_fu_436->sample_2_ce0(grp_mlp_kernel_fu_436_sample_2_ce0);
    grp_mlp_kernel_fu_436->sample_2_q0(sample_2_q0);
    grp_mlp_kernel_fu_436->sample_3_address0(grp_mlp_kernel_fu_436_sample_3_address0);
    grp_mlp_kernel_fu_436->sample_3_ce0(grp_mlp_kernel_fu_436_sample_3_ce0);
    grp_mlp_kernel_fu_436->sample_3_q0(sample_3_q0);
    grp_mlp_kernel_fu_436->sample_4_address0(grp_mlp_kernel_fu_436_sample_4_address0);
    grp_mlp_kernel_fu_436->sample_4_ce0(grp_mlp_kernel_fu_436_sample_4_ce0);
    grp_mlp_kernel_fu_436->sample_4_q0(sample_4_q0);
    grp_mlp_kernel_fu_436->sample_5_address0(grp_mlp_kernel_fu_436_sample_5_address0);
    grp_mlp_kernel_fu_436->sample_5_ce0(grp_mlp_kernel_fu_436_sample_5_ce0);
    grp_mlp_kernel_fu_436->sample_5_q0(sample_5_q0);
    grp_mlp_kernel_fu_436->sample_6_address0(grp_mlp_kernel_fu_436_sample_6_address0);
    grp_mlp_kernel_fu_436->sample_6_ce0(grp_mlp_kernel_fu_436_sample_6_ce0);
    grp_mlp_kernel_fu_436->sample_6_q0(sample_6_q0);
    grp_mlp_kernel_fu_436->sample_7_address0(grp_mlp_kernel_fu_436_sample_7_address0);
    grp_mlp_kernel_fu_436->sample_7_ce0(grp_mlp_kernel_fu_436_sample_7_ce0);
    grp_mlp_kernel_fu_436->sample_7_q0(sample_7_q0);
    grp_mlp_kernel_fu_436->prediction_0_address0(grp_mlp_kernel_fu_436_prediction_0_address0);
    grp_mlp_kernel_fu_436->prediction_0_ce0(grp_mlp_kernel_fu_436_prediction_0_ce0);
    grp_mlp_kernel_fu_436->prediction_0_we0(grp_mlp_kernel_fu_436_prediction_0_we0);
    grp_mlp_kernel_fu_436->prediction_0_d0(grp_mlp_kernel_fu_436_prediction_0_d0);
    grp_mlp_kernel_fu_436->prediction_1_address0(grp_mlp_kernel_fu_436_prediction_1_address0);
    grp_mlp_kernel_fu_436->prediction_1_ce0(grp_mlp_kernel_fu_436_prediction_1_ce0);
    grp_mlp_kernel_fu_436->prediction_1_we0(grp_mlp_kernel_fu_436_prediction_1_we0);
    grp_mlp_kernel_fu_436->prediction_1_d0(grp_mlp_kernel_fu_436_prediction_1_d0);
    regslice_both_in_V_data_V_U = new regslice_both<32>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<4>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<4>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);
    regslice_both_out_V_data_V_U = new regslice_both<32>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_data_V_U->data_in(tmp_data_V_fu_188);
    regslice_both_out_V_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<4>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_keep_V_U->data_in(ap_var_for_const1);
    regslice_both_out_V_keep_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<4>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_strb_V_U->data_in(ap_var_for_const2);
    regslice_both_out_V_strb_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_last_V_U->data_in(out_r_TLAST_int);
    regslice_both_out_V_last_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln392_1_fu_603_p2);
    sensitive << ( trunc_ln392_1_reg_903 );
    sensitive << ( j_0_reg_377 );

    SC_METHOD(thread_add_ln392_fu_598_p2);
    sensitive << ( shl_ln_reg_898 );
    sensitive << ( zext_ln390_fu_510_p1 );

    SC_METHOD(thread_add_ln413_fu_703_p2);
    sensitive << ( shl_ln2_reg_959 );
    sensitive << ( zext_ln411_fu_687_p1 );

    SC_METHOD(thread_and_ln389_1_fu_849_p2);
    sensitive << ( tmp_data_V_fu_188 );
    sensitive << ( xor_ln389_fu_843_p2 );

    SC_METHOD(thread_and_ln389_2_fu_855_p2);
    sensitive << ( and_ln389_fu_837_p2 );
    sensitive << ( select_ln389_3_fu_817_p3 );

    SC_METHOD(thread_and_ln389_fu_837_p2);
    sensitive << ( shl_ln389_1_fu_825_p2 );
    sensitive << ( lshr_ln389_fu_831_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state2_ignore_call1);
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( icmp_ln411_fu_691_p2 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln405_fu_667_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln405_fu_667_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_mlp_kernel_fu_436_ap_start);
    sensitive << ( grp_mlp_kernel_fu_436_ap_start_reg );

    SC_METHOD(thread_high_1_fu_873_p2);
    sensitive << ( Hi_assign_1_reg_412 );

    SC_METHOD(thread_high_fu_661_p2);
    sensitive << ( Hi_assign_reg_365 );

    SC_METHOD(thread_i_2_fu_673_p2);
    sensitive << ( i1_0_reg_388 );

    SC_METHOD(thread_i_fu_476_p2);
    sensitive << ( i_0_reg_342 );

    SC_METHOD(thread_icmp_ln384_fu_470_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( i_0_reg_342 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln389_fu_747_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( Lo_assign_1_reg_400 );
    sensitive << ( Hi_assign_1_reg_412 );

    SC_METHOD(thread_icmp_ln390_fu_514_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_377 );

    SC_METHOD(thread_icmp_ln405_fu_667_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( i1_0_reg_388 );

    SC_METHOD(thread_icmp_ln411_fu_691_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( j3_0_reg_424 );

    SC_METHOD(thread_icmp_ln681_fu_526_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln390_fu_514_p2 );
    sensitive << ( Lo_assign_reg_353 );
    sensitive << ( Hi_assign_reg_365 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_j_2_fu_520_p2);
    sensitive << ( j_0_reg_377 );

    SC_METHOD(thread_j_fu_697_p2);
    sensitive << ( j3_0_reg_424 );

    SC_METHOD(thread_low_1_fu_867_p2);
    sensitive << ( Lo_assign_1_reg_400 );

    SC_METHOD(thread_low_fu_655_p2);
    sensitive << ( Lo_assign_reg_353 );

    SC_METHOD(thread_lshr_ln389_fu_831_p2);
    sensitive << ( zext_ln389_2_fu_797_p1 );

    SC_METHOD(thread_lshr_ln4_fu_708_p4);
    sensitive << ( add_ln413_fu_703_p2 );

    SC_METHOD(thread_lshr_ln681_1_fu_621_p2);
    sensitive << ( zext_ln681_1_fu_618_p1 );

    SC_METHOD(thread_lshr_ln681_fu_592_p2);
    sensitive << ( select_ln681_1_fu_567_p3 );
    sensitive << ( zext_ln681_fu_588_p1 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln411_fu_691_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TLAST_int);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln411_fu_691_p2 );
    sensitive << ( i1_0_reg_388 );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln411_fu_691_p2 );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_p_Result_2_fu_861_p2);
    sensitive << ( and_ln389_1_fu_849_p2 );
    sensitive << ( and_ln389_2_fu_855_p2 );

    SC_METHOD(thread_p_Result_s_fu_627_p2);
    sensitive << ( lshr_ln681_reg_927 );
    sensitive << ( lshr_ln681_1_fu_621_p2 );

    SC_METHOD(thread_prediction_0_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_436_prediction_0_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln413_fu_718_p1 );

    SC_METHOD(thread_prediction_0_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( grp_mlp_kernel_fu_436_prediction_0_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_0_we0);
    sensitive << ( grp_mlp_kernel_fu_436_prediction_0_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_1_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_436_prediction_1_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln413_fu_718_p1 );

    SC_METHOD(thread_prediction_1_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( grp_mlp_kernel_fu_436_prediction_1_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_1_we0);
    sensitive << ( grp_mlp_kernel_fu_436_prediction_1_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_0_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_0_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_0_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_0_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_0_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_1_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_1_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_2_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_2_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_3_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_3_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_4_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_4_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_5_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_5_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_6_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_6_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_address0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_7_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln392_fu_644_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_ce0);
    sensitive << ( grp_mlp_kernel_fu_436_sample_7_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_we0);
    sensitive << ( add_ln392_1_reg_932 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln389_1_fu_767_p3);
    sensitive << ( Lo_assign_1_reg_400 );
    sensitive << ( Hi_assign_1_reg_412 );
    sensitive << ( icmp_ln389_fu_747_p2 );

    SC_METHOD(thread_select_ln389_2_fu_775_p3);
    sensitive << ( Lo_assign_1_reg_400 );
    sensitive << ( icmp_ln389_fu_747_p2 );
    sensitive << ( sub_ln389_fu_753_p2 );

    SC_METHOD(thread_select_ln389_3_fu_817_p3);
    sensitive << ( icmp_ln389_fu_747_p2 );
    sensitive << ( shl_ln389_fu_801_p2 );
    sensitive << ( tmp_5_fu_807_p4 );

    SC_METHOD(thread_select_ln389_fu_759_p3);
    sensitive << ( Lo_assign_1_reg_400 );
    sensitive << ( Hi_assign_1_reg_412 );
    sensitive << ( icmp_ln389_fu_747_p2 );

    SC_METHOD(thread_select_ln413_fu_735_p3);
    sensitive << ( prediction_0_q0 );
    sensitive << ( prediction_1_q0 );
    sensitive << ( trunc_ln413_fu_731_p1 );

    SC_METHOD(thread_select_ln681_1_fu_567_p3);
    sensitive << ( tmp_data_V_3_reg_892 );
    sensitive << ( icmp_ln681_fu_526_p2 );
    sensitive << ( tmp_4_fu_532_p4 );

    SC_METHOD(thread_select_ln681_2_fu_574_p3);
    sensitive << ( Lo_assign_reg_353 );
    sensitive << ( icmp_ln681_fu_526_p2 );
    sensitive << ( sub_ln681_1_fu_547_p2 );

    SC_METHOD(thread_select_ln681_fu_559_p3);
    sensitive << ( icmp_ln681_fu_526_p2 );
    sensitive << ( sub_ln681_fu_541_p2 );
    sensitive << ( sub_ln681_2_fu_553_p2 );

    SC_METHOD(thread_shl_ln2_fu_679_p3);
    sensitive << ( i1_0_reg_388 );

    SC_METHOD(thread_shl_ln389_1_fu_825_p2);
    sensitive << ( zext_ln389_1_fu_793_p1 );

    SC_METHOD(thread_shl_ln389_fu_801_p2);
    sensitive << ( tmp_V_fu_743_p1 );
    sensitive << ( zext_ln389_fu_789_p1 );

    SC_METHOD(thread_shl_ln_fu_490_p3);
    sensitive << ( trunc_ln392_fu_486_p1 );

    SC_METHOD(thread_sub_ln389_1_fu_783_p2);
    sensitive << ( select_ln389_fu_759_p3 );

    SC_METHOD(thread_sub_ln389_fu_753_p2);
    sensitive << ( Lo_assign_1_reg_400 );

    SC_METHOD(thread_sub_ln681_1_fu_547_p2);
    sensitive << ( Lo_assign_reg_353 );

    SC_METHOD(thread_sub_ln681_2_fu_553_p2);
    sensitive << ( Lo_assign_reg_353 );
    sensitive << ( Hi_assign_reg_365 );

    SC_METHOD(thread_sub_ln681_3_fu_582_p2);
    sensitive << ( select_ln681_fu_559_p3 );

    SC_METHOD(thread_sub_ln681_fu_541_p2);
    sensitive << ( Lo_assign_reg_353 );
    sensitive << ( Hi_assign_reg_365 );

    SC_METHOD(thread_tmp_4_fu_532_p4);
    sensitive << ( tmp_data_V_3_reg_892 );

    SC_METHOD(thread_tmp_5_fu_807_p4);
    sensitive << ( shl_ln389_fu_801_p2 );

    SC_METHOD(thread_tmp_V_fu_743_p1);
    sensitive << ( select_ln413_fu_735_p3 );

    SC_METHOD(thread_trunc_ln392_1_fu_502_p3);
    sensitive << ( trunc_ln392_2_fu_498_p1 );

    SC_METHOD(thread_trunc_ln392_2_fu_498_p1);
    sensitive << ( i_0_reg_342 );

    SC_METHOD(thread_trunc_ln392_3_fu_632_p1);
    sensitive << ( p_Result_s_fu_627_p2 );

    SC_METHOD(thread_trunc_ln392_fu_486_p1);
    sensitive << ( i_0_reg_342 );

    SC_METHOD(thread_trunc_ln413_fu_731_p1);
    sensitive << ( j3_0_reg_424 );

    SC_METHOD(thread_xor_ln389_fu_843_p2);
    sensitive << ( and_ln389_fu_837_p2 );

    SC_METHOD(thread_zext_ln389_1_fu_793_p1);
    sensitive << ( select_ln389_1_fu_767_p3 );

    SC_METHOD(thread_zext_ln389_2_fu_797_p1);
    sensitive << ( sub_ln389_1_fu_783_p2 );

    SC_METHOD(thread_zext_ln389_fu_789_p1);
    sensitive << ( select_ln389_2_fu_775_p3 );

    SC_METHOD(thread_zext_ln390_fu_510_p1);
    sensitive << ( j_0_reg_377 );

    SC_METHOD(thread_zext_ln392_fu_644_p1);
    sensitive << ( lshr_ln_reg_936 );

    SC_METHOD(thread_zext_ln411_fu_687_p1);
    sensitive << ( j3_0_reg_424 );

    SC_METHOD(thread_zext_ln413_fu_718_p1);
    sensitive << ( lshr_ln4_fu_708_p4 );

    SC_METHOD(thread_zext_ln681_1_fu_618_p1);
    sensitive << ( sub_ln681_3_reg_922 );

    SC_METHOD(thread_zext_ln681_fu_588_p1);
    sensitive << ( select_ln681_2_fu_574_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_470_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln411_fu_691_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln390_fu_514_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln405_fu_667_p2 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( grp_mlp_kernel_fu_436_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_r_TVALID_int );
    sensitive << ( out_r_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000001";
    grp_mlp_kernel_fu_436_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln384_fu_470_p2, "icmp_ln384_fu_470_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln411_fu_691_p2, "icmp_ln411_fu_691_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_fu_476_p2, "i_fu_476_p2");
    sc_trace(mVcdFile, i_reg_887, "i_reg_887");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_V_3_reg_892, "tmp_data_V_3_reg_892");
    sc_trace(mVcdFile, shl_ln_fu_490_p3, "shl_ln_fu_490_p3");
    sc_trace(mVcdFile, shl_ln_reg_898, "shl_ln_reg_898");
    sc_trace(mVcdFile, trunc_ln392_1_fu_502_p3, "trunc_ln392_1_fu_502_p3");
    sc_trace(mVcdFile, trunc_ln392_1_reg_903, "trunc_ln392_1_reg_903");
    sc_trace(mVcdFile, j_2_fu_520_p2, "j_2_fu_520_p2");
    sc_trace(mVcdFile, j_2_reg_917, "j_2_reg_917");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln681_3_fu_582_p2, "sub_ln681_3_fu_582_p2");
    sc_trace(mVcdFile, sub_ln681_3_reg_922, "sub_ln681_3_reg_922");
    sc_trace(mVcdFile, icmp_ln390_fu_514_p2, "icmp_ln390_fu_514_p2");
    sc_trace(mVcdFile, lshr_ln681_fu_592_p2, "lshr_ln681_fu_592_p2");
    sc_trace(mVcdFile, lshr_ln681_reg_927, "lshr_ln681_reg_927");
    sc_trace(mVcdFile, add_ln392_1_fu_603_p2, "add_ln392_1_fu_603_p2");
    sc_trace(mVcdFile, add_ln392_1_reg_932, "add_ln392_1_reg_932");
    sc_trace(mVcdFile, lshr_ln_reg_936, "lshr_ln_reg_936");
    sc_trace(mVcdFile, low_fu_655_p2, "low_fu_655_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, high_fu_661_p2, "high_fu_661_p2");
    sc_trace(mVcdFile, i_2_fu_673_p2, "i_2_fu_673_p2");
    sc_trace(mVcdFile, i_2_reg_954, "i_2_reg_954");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, shl_ln2_fu_679_p3, "shl_ln2_fu_679_p3");
    sc_trace(mVcdFile, shl_ln2_reg_959, "shl_ln2_reg_959");
    sc_trace(mVcdFile, icmp_ln405_fu_667_p2, "icmp_ln405_fu_667_p2");
    sc_trace(mVcdFile, j_fu_697_p2, "j_fu_697_p2");
    sc_trace(mVcdFile, j_reg_967, "j_reg_967");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, low_1_fu_867_p2, "low_1_fu_867_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, high_1_fu_873_p2, "high_1_fu_873_p2");
    sc_trace(mVcdFile, sample_0_address0, "sample_0_address0");
    sc_trace(mVcdFile, sample_0_ce0, "sample_0_ce0");
    sc_trace(mVcdFile, sample_0_we0, "sample_0_we0");
    sc_trace(mVcdFile, sample_0_q0, "sample_0_q0");
    sc_trace(mVcdFile, sample_1_address0, "sample_1_address0");
    sc_trace(mVcdFile, sample_1_ce0, "sample_1_ce0");
    sc_trace(mVcdFile, sample_1_we0, "sample_1_we0");
    sc_trace(mVcdFile, sample_1_q0, "sample_1_q0");
    sc_trace(mVcdFile, sample_2_address0, "sample_2_address0");
    sc_trace(mVcdFile, sample_2_ce0, "sample_2_ce0");
    sc_trace(mVcdFile, sample_2_we0, "sample_2_we0");
    sc_trace(mVcdFile, sample_2_q0, "sample_2_q0");
    sc_trace(mVcdFile, sample_3_address0, "sample_3_address0");
    sc_trace(mVcdFile, sample_3_ce0, "sample_3_ce0");
    sc_trace(mVcdFile, sample_3_we0, "sample_3_we0");
    sc_trace(mVcdFile, sample_3_q0, "sample_3_q0");
    sc_trace(mVcdFile, sample_4_address0, "sample_4_address0");
    sc_trace(mVcdFile, sample_4_ce0, "sample_4_ce0");
    sc_trace(mVcdFile, sample_4_we0, "sample_4_we0");
    sc_trace(mVcdFile, sample_4_q0, "sample_4_q0");
    sc_trace(mVcdFile, sample_5_address0, "sample_5_address0");
    sc_trace(mVcdFile, sample_5_ce0, "sample_5_ce0");
    sc_trace(mVcdFile, sample_5_we0, "sample_5_we0");
    sc_trace(mVcdFile, sample_5_q0, "sample_5_q0");
    sc_trace(mVcdFile, sample_6_address0, "sample_6_address0");
    sc_trace(mVcdFile, sample_6_ce0, "sample_6_ce0");
    sc_trace(mVcdFile, sample_6_we0, "sample_6_we0");
    sc_trace(mVcdFile, sample_6_q0, "sample_6_q0");
    sc_trace(mVcdFile, sample_7_address0, "sample_7_address0");
    sc_trace(mVcdFile, sample_7_ce0, "sample_7_ce0");
    sc_trace(mVcdFile, sample_7_we0, "sample_7_we0");
    sc_trace(mVcdFile, sample_7_q0, "sample_7_q0");
    sc_trace(mVcdFile, prediction_0_address0, "prediction_0_address0");
    sc_trace(mVcdFile, prediction_0_ce0, "prediction_0_ce0");
    sc_trace(mVcdFile, prediction_0_we0, "prediction_0_we0");
    sc_trace(mVcdFile, prediction_0_q0, "prediction_0_q0");
    sc_trace(mVcdFile, prediction_1_address0, "prediction_1_address0");
    sc_trace(mVcdFile, prediction_1_ce0, "prediction_1_ce0");
    sc_trace(mVcdFile, prediction_1_we0, "prediction_1_we0");
    sc_trace(mVcdFile, prediction_1_q0, "prediction_1_q0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_ap_start, "grp_mlp_kernel_fu_436_ap_start");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_ap_done, "grp_mlp_kernel_fu_436_ap_done");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_ap_idle, "grp_mlp_kernel_fu_436_ap_idle");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_ap_ready, "grp_mlp_kernel_fu_436_ap_ready");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_0_address0, "grp_mlp_kernel_fu_436_sample_0_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_0_ce0, "grp_mlp_kernel_fu_436_sample_0_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_1_address0, "grp_mlp_kernel_fu_436_sample_1_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_1_ce0, "grp_mlp_kernel_fu_436_sample_1_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_2_address0, "grp_mlp_kernel_fu_436_sample_2_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_2_ce0, "grp_mlp_kernel_fu_436_sample_2_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_3_address0, "grp_mlp_kernel_fu_436_sample_3_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_3_ce0, "grp_mlp_kernel_fu_436_sample_3_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_4_address0, "grp_mlp_kernel_fu_436_sample_4_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_4_ce0, "grp_mlp_kernel_fu_436_sample_4_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_5_address0, "grp_mlp_kernel_fu_436_sample_5_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_5_ce0, "grp_mlp_kernel_fu_436_sample_5_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_6_address0, "grp_mlp_kernel_fu_436_sample_6_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_6_ce0, "grp_mlp_kernel_fu_436_sample_6_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_7_address0, "grp_mlp_kernel_fu_436_sample_7_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_sample_7_ce0, "grp_mlp_kernel_fu_436_sample_7_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_0_address0, "grp_mlp_kernel_fu_436_prediction_0_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_0_ce0, "grp_mlp_kernel_fu_436_prediction_0_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_0_we0, "grp_mlp_kernel_fu_436_prediction_0_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_0_d0, "grp_mlp_kernel_fu_436_prediction_0_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_1_address0, "grp_mlp_kernel_fu_436_prediction_1_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_1_ce0, "grp_mlp_kernel_fu_436_prediction_1_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_1_we0, "grp_mlp_kernel_fu_436_prediction_1_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_prediction_1_d0, "grp_mlp_kernel_fu_436_prediction_1_d0");
    sc_trace(mVcdFile, i_0_reg_342, "i_0_reg_342");
    sc_trace(mVcdFile, Lo_assign_reg_353, "Lo_assign_reg_353");
    sc_trace(mVcdFile, Hi_assign_reg_365, "Hi_assign_reg_365");
    sc_trace(mVcdFile, j_0_reg_377, "j_0_reg_377");
    sc_trace(mVcdFile, i1_0_reg_388, "i1_0_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, Lo_assign_1_reg_400, "Lo_assign_1_reg_400");
    sc_trace(mVcdFile, Hi_assign_1_reg_412, "Hi_assign_1_reg_412");
    sc_trace(mVcdFile, j3_0_reg_424, "j3_0_reg_424");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_436_ap_start_reg, "grp_mlp_kernel_fu_436_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call1, "ap_block_state2_ignore_call1");
    sc_trace(mVcdFile, zext_ln392_fu_644_p1, "zext_ln392_fu_644_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln413_fu_718_p1, "zext_ln413_fu_718_p1");
    sc_trace(mVcdFile, tmp_data_V_fu_188, "tmp_data_V_fu_188");
    sc_trace(mVcdFile, p_Result_2_fu_861_p2, "p_Result_2_fu_861_p2");
    sc_trace(mVcdFile, trunc_ln392_3_fu_632_p1, "trunc_ln392_3_fu_632_p1");
    sc_trace(mVcdFile, trunc_ln392_fu_486_p1, "trunc_ln392_fu_486_p1");
    sc_trace(mVcdFile, trunc_ln392_2_fu_498_p1, "trunc_ln392_2_fu_498_p1");
    sc_trace(mVcdFile, icmp_ln681_fu_526_p2, "icmp_ln681_fu_526_p2");
    sc_trace(mVcdFile, sub_ln681_fu_541_p2, "sub_ln681_fu_541_p2");
    sc_trace(mVcdFile, sub_ln681_2_fu_553_p2, "sub_ln681_2_fu_553_p2");
    sc_trace(mVcdFile, tmp_4_fu_532_p4, "tmp_4_fu_532_p4");
    sc_trace(mVcdFile, sub_ln681_1_fu_547_p2, "sub_ln681_1_fu_547_p2");
    sc_trace(mVcdFile, select_ln681_fu_559_p3, "select_ln681_fu_559_p3");
    sc_trace(mVcdFile, select_ln681_2_fu_574_p3, "select_ln681_2_fu_574_p3");
    sc_trace(mVcdFile, select_ln681_1_fu_567_p3, "select_ln681_1_fu_567_p3");
    sc_trace(mVcdFile, zext_ln681_fu_588_p1, "zext_ln681_fu_588_p1");
    sc_trace(mVcdFile, zext_ln390_fu_510_p1, "zext_ln390_fu_510_p1");
    sc_trace(mVcdFile, add_ln392_fu_598_p2, "add_ln392_fu_598_p2");
    sc_trace(mVcdFile, zext_ln681_1_fu_618_p1, "zext_ln681_1_fu_618_p1");
    sc_trace(mVcdFile, lshr_ln681_1_fu_621_p2, "lshr_ln681_1_fu_621_p2");
    sc_trace(mVcdFile, p_Result_s_fu_627_p2, "p_Result_s_fu_627_p2");
    sc_trace(mVcdFile, zext_ln411_fu_687_p1, "zext_ln411_fu_687_p1");
    sc_trace(mVcdFile, add_ln413_fu_703_p2, "add_ln413_fu_703_p2");
    sc_trace(mVcdFile, lshr_ln4_fu_708_p4, "lshr_ln4_fu_708_p4");
    sc_trace(mVcdFile, trunc_ln413_fu_731_p1, "trunc_ln413_fu_731_p1");
    sc_trace(mVcdFile, select_ln413_fu_735_p3, "select_ln413_fu_735_p3");
    sc_trace(mVcdFile, icmp_ln389_fu_747_p2, "icmp_ln389_fu_747_p2");
    sc_trace(mVcdFile, sub_ln389_fu_753_p2, "sub_ln389_fu_753_p2");
    sc_trace(mVcdFile, select_ln389_fu_759_p3, "select_ln389_fu_759_p3");
    sc_trace(mVcdFile, select_ln389_2_fu_775_p3, "select_ln389_2_fu_775_p3");
    sc_trace(mVcdFile, select_ln389_1_fu_767_p3, "select_ln389_1_fu_767_p3");
    sc_trace(mVcdFile, sub_ln389_1_fu_783_p2, "sub_ln389_1_fu_783_p2");
    sc_trace(mVcdFile, tmp_V_fu_743_p1, "tmp_V_fu_743_p1");
    sc_trace(mVcdFile, zext_ln389_fu_789_p1, "zext_ln389_fu_789_p1");
    sc_trace(mVcdFile, shl_ln389_fu_801_p2, "shl_ln389_fu_801_p2");
    sc_trace(mVcdFile, tmp_5_fu_807_p4, "tmp_5_fu_807_p4");
    sc_trace(mVcdFile, zext_ln389_1_fu_793_p1, "zext_ln389_1_fu_793_p1");
    sc_trace(mVcdFile, zext_ln389_2_fu_797_p1, "zext_ln389_2_fu_797_p1");
    sc_trace(mVcdFile, shl_ln389_1_fu_825_p2, "shl_ln389_1_fu_825_p2");
    sc_trace(mVcdFile, lshr_ln389_fu_831_p2, "lshr_ln389_fu_831_p2");
    sc_trace(mVcdFile, and_ln389_fu_837_p2, "and_ln389_fu_837_p2");
    sc_trace(mVcdFile, xor_ln389_fu_843_p2, "xor_ln389_fu_843_p2");
    sc_trace(mVcdFile, select_ln389_3_fu_817_p3, "select_ln389_3_fu_817_p3");
    sc_trace(mVcdFile, and_ln389_1_fu_849_p2, "and_ln389_1_fu_849_p2");
    sc_trace(mVcdFile, and_ln389_2_fu_855_p2, "and_ln389_2_fu_855_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_r_TLAST_int, "out_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("mlp.hdltvin.dat");
    mHdltvoutHandle.open("mlp.hdltvout.dat");
}

mlp::~mlp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mlp_control_s_axi_U;
    delete sample_0_U;
    delete sample_1_U;
    delete sample_2_U;
    delete sample_3_U;
    delete sample_4_U;
    delete sample_5_U;
    delete sample_6_U;
    delete sample_7_U;
    delete prediction_0_U;
    delete prediction_1_U;
    delete grp_mlp_kernel_fu_436;
    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void mlp::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mlp::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv4_F;
}

void mlp::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv4_0;
}

void mlp::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Hi_assign_1_reg_412 = high_1_fu_873_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln405_fu_667_p2.read()))) {
        Hi_assign_1_reg_412 = ap_const_lv6_F;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Hi_assign_reg_365 = high_fu_661_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Hi_assign_reg_365 = ap_const_lv6_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Lo_assign_1_reg_400 = low_1_fu_867_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln405_fu_667_p2.read()))) {
        Lo_assign_1_reg_400 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Lo_assign_reg_353 = low_fu_655_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Lo_assign_reg_353 = ap_const_lv6_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_mlp_kernel_fu_436_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            grp_mlp_kernel_fu_436_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mlp_kernel_fu_436_ap_ready.read())) {
            grp_mlp_kernel_fu_436_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
        i1_0_reg_388 = i_2_reg_954.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_mlp_kernel_fu_436_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_388 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln390_fu_514_p2.read()))) {
        i_0_reg_342 = i_reg_887.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_342 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j3_0_reg_424 = j_reg_967.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln405_fu_667_p2.read()))) {
        j3_0_reg_424 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_377 = j_2_reg_917.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        j_0_reg_377 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln390_fu_514_p2.read()))) {
        add_ln392_1_reg_932 = add_ln392_1_fu_603_p2.read();
        lshr_ln681_reg_927 = lshr_ln681_fu_592_p2.read();
        lshr_ln_reg_936 = add_ln392_fu_598_p2.read().range(5, 3);
        sub_ln681_3_reg_922 = sub_ln681_3_fu_582_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        i_2_reg_954 = i_2_fu_673_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_887 = i_fu_476_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_2_reg_917 = j_2_fu_520_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0))) {
        j_reg_967 = j_fu_697_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln405_fu_667_p2.read()))) {
        shl_ln2_reg_959 = shl_ln2_fu_679_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        shl_ln_reg_898 = shl_ln_fu_490_p3.read();
        tmp_data_V_3_reg_892 = in_r_TDATA_int.read();
        trunc_ln392_1_reg_903 = trunc_ln392_1_fu_502_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_data_V_fu_188 = p_Result_2_fu_861_p2.read();
    }
}

void mlp::thread_add_ln392_1_fu_603_p2() {
    add_ln392_1_fu_603_p2 = (!trunc_ln392_1_reg_903.read().is_01() || !j_0_reg_377.read().is_01())? sc_lv<3>(): (sc_biguint<3>(trunc_ln392_1_reg_903.read()) + sc_biguint<3>(j_0_reg_377.read()));
}

void mlp::thread_add_ln392_fu_598_p2() {
    add_ln392_fu_598_p2 = (!zext_ln390_fu_510_p1.read().is_01() || !shl_ln_reg_898.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln390_fu_510_p1.read()) + sc_biguint<6>(shl_ln_reg_898.read()));
}

void mlp::thread_add_ln413_fu_703_p2() {
    add_ln413_fu_703_p2 = (!zext_ln411_fu_687_p1.read().is_01() || !shl_ln2_reg_959.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln411_fu_687_p1.read()) + sc_biguint<4>(shl_ln2_reg_959.read()));
}

void mlp::thread_and_ln389_1_fu_849_p2() {
    and_ln389_1_fu_849_p2 = (tmp_data_V_fu_188.read() & xor_ln389_fu_843_p2.read());
}

void mlp::thread_and_ln389_2_fu_855_p2() {
    and_ln389_2_fu_855_p2 = (select_ln389_3_fu_817_p3.read() & and_ln389_fu_837_p2.read());
}

void mlp::thread_and_ln389_fu_837_p2() {
    and_ln389_fu_837_p2 = (shl_ln389_1_fu_825_p2.read() & lshr_ln389_fu_831_p2.read());
}

void mlp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mlp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mlp::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mlp::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mlp::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mlp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mlp::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mlp::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mlp::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void mlp::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state2_ignore_call1() {
    ap_block_state2_ignore_call1 = (esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(icmp_ln411_fu_691_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln405_fu_667_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mlp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mlp::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln405_fu_667_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mlp::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mlp::thread_grp_mlp_kernel_fu_436_ap_start() {
    grp_mlp_kernel_fu_436_ap_start = grp_mlp_kernel_fu_436_ap_start_reg.read();
}

void mlp::thread_high_1_fu_873_p2() {
    high_1_fu_873_p2 = (!ap_const_lv6_10.is_01() || !Hi_assign_1_reg_412.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_10) + sc_biguint<6>(Hi_assign_1_reg_412.read()));
}

void mlp::thread_high_fu_661_p2() {
    high_fu_661_p2 = (!Hi_assign_reg_365.read().is_01() || !ap_const_lv6_8.is_01())? sc_lv<6>(): (sc_biguint<6>(Hi_assign_reg_365.read()) + sc_biguint<6>(ap_const_lv6_8));
}

void mlp::thread_i_2_fu_673_p2() {
    i_2_fu_673_p2 = (!i1_0_reg_388.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_0_reg_388.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp::thread_i_fu_476_p2() {
    i_fu_476_p2 = (!i_0_reg_342.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_342.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void mlp::thread_icmp_ln384_fu_470_p2() {
    icmp_ln384_fu_470_p2 = (!i_0_reg_342.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_342.read() == ap_const_lv5_10);
}

void mlp::thread_icmp_ln389_fu_747_p2() {
    icmp_ln389_fu_747_p2 = (!Lo_assign_1_reg_400.read().is_01() || !Hi_assign_1_reg_412.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_1_reg_400.read()) > sc_biguint<6>(Hi_assign_1_reg_412.read()));
}

void mlp::thread_icmp_ln390_fu_514_p2() {
    icmp_ln390_fu_514_p2 = (!j_0_reg_377.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_377.read() == ap_const_lv3_4);
}

void mlp::thread_icmp_ln405_fu_667_p2() {
    icmp_ln405_fu_667_p2 = (!i1_0_reg_388.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_388.read() == ap_const_lv3_5);
}

void mlp::thread_icmp_ln411_fu_691_p2() {
    icmp_ln411_fu_691_p2 = (!j3_0_reg_424.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_reg_424.read() == ap_const_lv2_2);
}

void mlp::thread_icmp_ln681_fu_526_p2() {
    icmp_ln681_fu_526_p2 = (!Lo_assign_reg_353.read().is_01() || !Hi_assign_reg_365.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_reg_353.read()) > sc_biguint<6>(Hi_assign_reg_365.read()));
}

void mlp::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void mlp::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void mlp::thread_j_2_fu_520_p2() {
    j_2_fu_520_p2 = (!j_0_reg_377.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_377.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp::thread_j_fu_697_p2() {
    j_fu_697_p2 = (!j3_0_reg_424.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j3_0_reg_424.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void mlp::thread_low_1_fu_867_p2() {
    low_1_fu_867_p2 = (!ap_const_lv6_10.is_01() || !Lo_assign_1_reg_400.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_10) + sc_biguint<6>(Lo_assign_1_reg_400.read()));
}

void mlp::thread_low_fu_655_p2() {
    low_fu_655_p2 = (!Lo_assign_reg_353.read().is_01() || !ap_const_lv6_8.is_01())? sc_lv<6>(): (sc_biguint<6>(Lo_assign_reg_353.read()) + sc_biguint<6>(ap_const_lv6_8));
}

void mlp::thread_lshr_ln389_fu_831_p2() {
    lshr_ln389_fu_831_p2 = (!zext_ln389_2_fu_797_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln389_2_fu_797_p1.read().to_uint();
}

void mlp::thread_lshr_ln4_fu_708_p4() {
    lshr_ln4_fu_708_p4 = add_ln413_fu_703_p2.read().range(3, 1);
}

void mlp::thread_lshr_ln681_1_fu_621_p2() {
    lshr_ln681_1_fu_621_p2 = (!zext_ln681_1_fu_618_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln681_1_fu_618_p1.read().to_uint();
}

void mlp::thread_lshr_ln681_fu_592_p2() {
    lshr_ln681_fu_592_p2 = (!zext_ln681_fu_588_p1.read().is_01())? sc_lv<32>(): select_ln681_1_fu_567_p3.read() >> (unsigned short)zext_ln681_fu_588_p1.read().to_uint();
}

void mlp::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln411_fu_691_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_out_r_TLAST_int() {
    out_r_TLAST_int = (!i1_0_reg_388.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_388.read() == ap_const_lv3_4);
}

void mlp::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void mlp::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln411_fu_691_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void mlp::thread_p_Result_2_fu_861_p2() {
    p_Result_2_fu_861_p2 = (and_ln389_1_fu_849_p2.read() | and_ln389_2_fu_855_p2.read());
}

void mlp::thread_p_Result_s_fu_627_p2() {
    p_Result_s_fu_627_p2 = (lshr_ln681_reg_927.read() & lshr_ln681_1_fu_621_p2.read());
}

void mlp::thread_prediction_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_0_address0 =  (sc_lv<3>) (zext_ln413_fu_718_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_address0 = grp_mlp_kernel_fu_436_prediction_0_address0.read();
    } else {
        prediction_0_address0 = "XXX";
    }
}

void mlp::thread_prediction_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0))) {
        prediction_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_ce0 = grp_mlp_kernel_fu_436_prediction_0_ce0.read();
    } else {
        prediction_0_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_we0 = grp_mlp_kernel_fu_436_prediction_0_we0.read();
    } else {
        prediction_0_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_1_address0 =  (sc_lv<3>) (zext_ln413_fu_718_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_address0 = grp_mlp_kernel_fu_436_prediction_1_address0.read();
    } else {
        prediction_1_address0 = "XXX";
    }
}

void mlp::thread_prediction_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0))) {
        prediction_1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_ce0 = grp_mlp_kernel_fu_436_prediction_1_ce0.read();
    } else {
        prediction_1_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_we0 = grp_mlp_kernel_fu_436_prediction_1_we0.read();
    } else {
        prediction_1_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_0_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_0_address0 = grp_mlp_kernel_fu_436_sample_0_address0.read();
    } else {
        sample_0_address0 = "XXX";
    }
}

void mlp::thread_sample_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_0_ce0 = grp_mlp_kernel_fu_436_sample_0_ce0.read();
    } else {
        sample_0_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_0))) {
        sample_0_we0 = ap_const_logic_1;
    } else {
        sample_0_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_1_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_1_address0 = grp_mlp_kernel_fu_436_sample_1_address0.read();
    } else {
        sample_1_address0 = "XXX";
    }
}

void mlp::thread_sample_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_1_ce0 = grp_mlp_kernel_fu_436_sample_1_ce0.read();
    } else {
        sample_1_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_1))) {
        sample_1_we0 = ap_const_logic_1;
    } else {
        sample_1_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_2_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_2_address0 = grp_mlp_kernel_fu_436_sample_2_address0.read();
    } else {
        sample_2_address0 = "XXX";
    }
}

void mlp::thread_sample_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_2_ce0 = grp_mlp_kernel_fu_436_sample_2_ce0.read();
    } else {
        sample_2_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_2))) {
        sample_2_we0 = ap_const_logic_1;
    } else {
        sample_2_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_3_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_3_address0 = grp_mlp_kernel_fu_436_sample_3_address0.read();
    } else {
        sample_3_address0 = "XXX";
    }
}

void mlp::thread_sample_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_3_ce0 = grp_mlp_kernel_fu_436_sample_3_ce0.read();
    } else {
        sample_3_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_3))) {
        sample_3_we0 = ap_const_logic_1;
    } else {
        sample_3_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_4_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_4_address0 = grp_mlp_kernel_fu_436_sample_4_address0.read();
    } else {
        sample_4_address0 = "XXX";
    }
}

void mlp::thread_sample_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_4_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_4_ce0 = grp_mlp_kernel_fu_436_sample_4_ce0.read();
    } else {
        sample_4_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_4))) {
        sample_4_we0 = ap_const_logic_1;
    } else {
        sample_4_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_5_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_5_address0 = grp_mlp_kernel_fu_436_sample_5_address0.read();
    } else {
        sample_5_address0 = "XXX";
    }
}

void mlp::thread_sample_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_5_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_5_ce0 = grp_mlp_kernel_fu_436_sample_5_ce0.read();
    } else {
        sample_5_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_5))) {
        sample_5_we0 = ap_const_logic_1;
    } else {
        sample_5_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_6_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_6_address0 = grp_mlp_kernel_fu_436_sample_6_address0.read();
    } else {
        sample_6_address0 = "XXX";
    }
}

void mlp::thread_sample_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_6_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_6_ce0 = grp_mlp_kernel_fu_436_sample_6_ce0.read();
    } else {
        sample_6_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_6))) {
        sample_6_we0 = ap_const_logic_1;
    } else {
        sample_6_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_7_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_7_address0 =  (sc_lv<3>) (zext_ln392_fu_644_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_7_address0 = grp_mlp_kernel_fu_436_sample_7_address0.read();
    } else {
        sample_7_address0 = "XXX";
    }
}

void mlp::thread_sample_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_7_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_7_ce0 = grp_mlp_kernel_fu_436_sample_7_ce0.read();
    } else {
        sample_7_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(add_ln392_1_reg_932.read(), ap_const_lv3_7))) {
        sample_7_we0 = ap_const_logic_1;
    } else {
        sample_7_we0 = ap_const_logic_0;
    }
}

void mlp::thread_select_ln389_1_fu_767_p3() {
    select_ln389_1_fu_767_p3 = (!icmp_ln389_fu_747_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln389_fu_747_p2.read()[0].to_bool())? Hi_assign_1_reg_412.read(): Lo_assign_1_reg_400.read());
}

void mlp::thread_select_ln389_2_fu_775_p3() {
    select_ln389_2_fu_775_p3 = (!icmp_ln389_fu_747_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln389_fu_747_p2.read()[0].to_bool())? sub_ln389_fu_753_p2.read(): Lo_assign_1_reg_400.read());
}

void mlp::thread_select_ln389_3_fu_817_p3() {
    select_ln389_3_fu_817_p3 = (!icmp_ln389_fu_747_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln389_fu_747_p2.read()[0].to_bool())? tmp_5_fu_807_p4.read(): shl_ln389_fu_801_p2.read());
}

void mlp::thread_select_ln389_fu_759_p3() {
    select_ln389_fu_759_p3 = (!icmp_ln389_fu_747_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln389_fu_747_p2.read()[0].to_bool())? Lo_assign_1_reg_400.read(): Hi_assign_1_reg_412.read());
}

void mlp::thread_select_ln413_fu_735_p3() {
    select_ln413_fu_735_p3 = (!trunc_ln413_fu_731_p1.read()[0].is_01())? sc_lv<16>(): ((trunc_ln413_fu_731_p1.read()[0].to_bool())? prediction_1_q0.read(): prediction_0_q0.read());
}

void mlp::thread_select_ln681_1_fu_567_p3() {
    select_ln681_1_fu_567_p3 = (!icmp_ln681_fu_526_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln681_fu_526_p2.read()[0].to_bool())? tmp_4_fu_532_p4.read(): tmp_data_V_3_reg_892.read());
}

void mlp::thread_select_ln681_2_fu_574_p3() {
    select_ln681_2_fu_574_p3 = (!icmp_ln681_fu_526_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln681_fu_526_p2.read()[0].to_bool())? sub_ln681_1_fu_547_p2.read(): Lo_assign_reg_353.read());
}

void mlp::thread_select_ln681_fu_559_p3() {
    select_ln681_fu_559_p3 = (!icmp_ln681_fu_526_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln681_fu_526_p2.read()[0].to_bool())? sub_ln681_fu_541_p2.read(): sub_ln681_2_fu_553_p2.read());
}

void mlp::thread_shl_ln2_fu_679_p3() {
    shl_ln2_fu_679_p3 = esl_concat<3,1>(i1_0_reg_388.read(), ap_const_lv1_0);
}

void mlp::thread_shl_ln389_1_fu_825_p2() {
    shl_ln389_1_fu_825_p2 = (!zext_ln389_1_fu_793_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF << (unsigned short)zext_ln389_1_fu_793_p1.read().to_uint();
}

void mlp::thread_shl_ln389_fu_801_p2() {
    shl_ln389_fu_801_p2 = (!zext_ln389_fu_789_p1.read().is_01())? sc_lv<32>(): tmp_V_fu_743_p1.read() << (unsigned short)zext_ln389_fu_789_p1.read().to_uint();
}

void mlp::thread_shl_ln_fu_490_p3() {
    shl_ln_fu_490_p3 = esl_concat<4,2>(trunc_ln392_fu_486_p1.read(), ap_const_lv2_0);
}

void mlp::thread_sub_ln389_1_fu_783_p2() {
    sub_ln389_1_fu_783_p2 = (!ap_const_lv6_1F.is_01() || !select_ln389_fu_759_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln389_fu_759_p3.read()));
}

void mlp::thread_sub_ln389_fu_753_p2() {
    sub_ln389_fu_753_p2 = (!ap_const_lv6_1F.is_01() || !Lo_assign_1_reg_400.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(Lo_assign_1_reg_400.read()));
}

void mlp::thread_sub_ln681_1_fu_547_p2() {
    sub_ln681_1_fu_547_p2 = (!ap_const_lv6_1F.is_01() || !Lo_assign_reg_353.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(Lo_assign_reg_353.read()));
}

void mlp::thread_sub_ln681_2_fu_553_p2() {
    sub_ln681_2_fu_553_p2 = (!Hi_assign_reg_365.read().is_01() || !Lo_assign_reg_353.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Hi_assign_reg_365.read()) - sc_biguint<6>(Lo_assign_reg_353.read()));
}

void mlp::thread_sub_ln681_3_fu_582_p2() {
    sub_ln681_3_fu_582_p2 = (!ap_const_lv6_1F.is_01() || !select_ln681_fu_559_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln681_fu_559_p3.read()));
}

void mlp::thread_sub_ln681_fu_541_p2() {
    sub_ln681_fu_541_p2 = (!Lo_assign_reg_353.read().is_01() || !Hi_assign_reg_365.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Lo_assign_reg_353.read()) - sc_biguint<6>(Hi_assign_reg_365.read()));
}

void mlp::thread_tmp_4_fu_532_p4() {
    tmp_4_fu_532_p4 = tmp_data_V_3_reg_892.read().range(0, 31);
}

void mlp::thread_tmp_5_fu_807_p4() {
    tmp_5_fu_807_p4 = shl_ln389_fu_801_p2.read().range(0, 31);
}

void mlp::thread_tmp_V_fu_743_p1() {
    tmp_V_fu_743_p1 = esl_sext<32,16>(select_ln413_fu_735_p3.read());
}

void mlp::thread_trunc_ln392_1_fu_502_p3() {
    trunc_ln392_1_fu_502_p3 = esl_concat<1,2>(trunc_ln392_2_fu_498_p1.read(), ap_const_lv2_0);
}

void mlp::thread_trunc_ln392_2_fu_498_p1() {
    trunc_ln392_2_fu_498_p1 = i_0_reg_342.read().range(1-1, 0);
}

void mlp::thread_trunc_ln392_3_fu_632_p1() {
    trunc_ln392_3_fu_632_p1 = p_Result_s_fu_627_p2.read().range(8-1, 0);
}

void mlp::thread_trunc_ln392_fu_486_p1() {
    trunc_ln392_fu_486_p1 = i_0_reg_342.read().range(4-1, 0);
}

void mlp::thread_trunc_ln413_fu_731_p1() {
    trunc_ln413_fu_731_p1 = j3_0_reg_424.read().range(1-1, 0);
}

void mlp::thread_xor_ln389_fu_843_p2() {
    xor_ln389_fu_843_p2 = (and_ln389_fu_837_p2.read() ^ ap_const_lv32_FFFFFFFF);
}

void mlp::thread_zext_ln389_1_fu_793_p1() {
    zext_ln389_1_fu_793_p1 = esl_zext<32,6>(select_ln389_1_fu_767_p3.read());
}

void mlp::thread_zext_ln389_2_fu_797_p1() {
    zext_ln389_2_fu_797_p1 = esl_zext<32,6>(sub_ln389_1_fu_783_p2.read());
}

void mlp::thread_zext_ln389_fu_789_p1() {
    zext_ln389_fu_789_p1 = esl_zext<32,6>(select_ln389_2_fu_775_p3.read());
}

void mlp::thread_zext_ln390_fu_510_p1() {
    zext_ln390_fu_510_p1 = esl_zext<6,3>(j_0_reg_377.read());
}

void mlp::thread_zext_ln392_fu_644_p1() {
    zext_ln392_fu_644_p1 = esl_zext<64,3>(lshr_ln_reg_936.read());
}

void mlp::thread_zext_ln411_fu_687_p1() {
    zext_ln411_fu_687_p1 = esl_zext<4,2>(j3_0_reg_424.read());
}

void mlp::thread_zext_ln413_fu_718_p1() {
    zext_ln413_fu_718_p1 = esl_zext<64,3>(lshr_ln4_fu_708_p4.read());
}

void mlp::thread_zext_ln681_1_fu_618_p1() {
    zext_ln681_1_fu_618_p1 = esl_zext<32,6>(sub_ln681_3_reg_922.read());
}

void mlp::thread_zext_ln681_fu_588_p1() {
    zext_ln681_fu_588_p1 = esl_zext<32,6>(select_ln681_2_fu_574_p3.read());
}

void mlp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln384_fu_470_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln390_fu_514_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_436_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln405_fu_667_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln405_fu_667_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln411_fu_691_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_block_state8_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln411_fu_691_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void mlp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

