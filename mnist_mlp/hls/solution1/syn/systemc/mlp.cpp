// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> mlp::ap_ST_fsm_state1 = "1";
const sc_lv<9> mlp::ap_ST_fsm_state2 = "10";
const sc_lv<9> mlp::ap_ST_fsm_state3 = "100";
const sc_lv<9> mlp::ap_ST_fsm_state4 = "1000";
const sc_lv<9> mlp::ap_ST_fsm_state5 = "10000";
const sc_lv<9> mlp::ap_ST_fsm_state6 = "100000";
const sc_lv<9> mlp::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> mlp::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> mlp::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> mlp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mlp::ap_const_lv32_1 = "1";
const sc_lv<1> mlp::ap_const_lv1_0 = "0";
const sc_lv<32> mlp::ap_const_lv32_6 = "110";
const sc_lv<1> mlp::ap_const_lv1_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_8 = "1000";
const int mlp::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mlp::ap_const_lv32_2 = "10";
const sc_lv<32> mlp::ap_const_lv32_4 = "100";
const sc_lv<32> mlp::ap_const_lv32_5 = "101";
const bool mlp::ap_const_boolean_0 = false;
const sc_lv<3> mlp::ap_const_lv3_1 = "1";
const sc_lv<3> mlp::ap_const_lv3_0 = "000";
const sc_lv<32> mlp::ap_const_lv32_7 = "111";
const sc_lv<12> mlp::ap_const_lv12_0 = "000000000000";
const sc_lv<8> mlp::ap_const_lv8_0 = "00000000";
const sc_lv<32> mlp::ap_const_lv32_3 = "11";
const sc_lv<8> mlp::ap_const_lv8_7 = "111";
const sc_lv<5> mlp::ap_const_lv5_0 = "00000";
const sc_lv<7> mlp::ap_const_lv7_0 = "0000000";
const sc_lv<7> mlp::ap_const_lv7_1F = "11111";
const sc_lv<2> mlp::ap_const_lv2_0 = "00";
const sc_lv<3> mlp::ap_const_lv3_3 = "11";
const sc_lv<3> mlp::ap_const_lv3_4 = "100";
const sc_lv<3> mlp::ap_const_lv3_5 = "101";
const sc_lv<3> mlp::ap_const_lv3_6 = "110";
const sc_lv<3> mlp::ap_const_lv3_7 = "111";
const sc_lv<3> mlp::ap_const_lv3_2 = "10";
const sc_lv<8> mlp::ap_const_lv8_FF = "11111111";
const sc_lv<12> mlp::ap_const_lv12_961 = "100101100001";
const sc_lv<12> mlp::ap_const_lv12_1 = "1";
const sc_lv<4> mlp::ap_const_lv4_0 = "0000";
const sc_lv<5> mlp::ap_const_lv5_10 = "10000";
const sc_lv<5> mlp::ap_const_lv5_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_7F = "1111111";
const sc_lv<8> mlp::ap_const_lv8_7F = "1111111";
const sc_lv<8> mlp::ap_const_lv8_8 = "1000";
const sc_lv<128> mlp::ap_const_lv128_lc_2 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<5> mlp::ap_const_lv5_19 = "11001";
const sc_lv<2> mlp::ap_const_lv2_2 = "10";
const sc_lv<2> mlp::ap_const_lv2_1 = "1";
const sc_lv<5> mlp::ap_const_lv5_18 = "11000";
const sc_lv<7> mlp::ap_const_lv7_3F = "111111";
const sc_lv<32> mlp::ap_const_lv32_3F = "111111";
const sc_lv<64> mlp::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<7> mlp::ap_const_lv7_20 = "100000";
const bool mlp::ap_const_boolean_1 = true;

mlp::mlp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mlp_control_s_axi_U = new mlp_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("mlp_control_s_axi_U");
    mlp_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    mlp_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    mlp_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    mlp_control_s_axi_U->WVALID(s_axi_control_WVALID);
    mlp_control_s_axi_U->WREADY(s_axi_control_WREADY);
    mlp_control_s_axi_U->WDATA(s_axi_control_WDATA);
    mlp_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    mlp_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    mlp_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    mlp_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    mlp_control_s_axi_U->RVALID(s_axi_control_RVALID);
    mlp_control_s_axi_U->RREADY(s_axi_control_RREADY);
    mlp_control_s_axi_U->RDATA(s_axi_control_RDATA);
    mlp_control_s_axi_U->RRESP(s_axi_control_RRESP);
    mlp_control_s_axi_U->BVALID(s_axi_control_BVALID);
    mlp_control_s_axi_U->BREADY(s_axi_control_BREADY);
    mlp_control_s_axi_U->BRESP(s_axi_control_BRESP);
    mlp_control_s_axi_U->ACLK(ap_clk);
    mlp_control_s_axi_U->ARESET(ap_rst_n_inv);
    mlp_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    mlp_control_s_axi_U->ap_start(ap_start);
    mlp_control_s_axi_U->interrupt(interrupt);
    mlp_control_s_axi_U->ap_ready(ap_ready);
    mlp_control_s_axi_U->ap_done(ap_done);
    mlp_control_s_axi_U->ap_idle(ap_idle);
    sample_U = new mlp_sample("sample_U");
    sample_U->clk(ap_clk);
    sample_U->reset(ap_rst_n_inv);
    sample_U->address0(sample_address0);
    sample_U->ce0(sample_ce0);
    sample_U->we0(sample_we0);
    sample_U->d0(sample_d0);
    sample_U->q0(sample_q0);
    grp_mlp_kernel_fu_452 = new mlp_kernel("grp_mlp_kernel_fu_452");
    grp_mlp_kernel_fu_452->ap_clk(ap_clk);
    grp_mlp_kernel_fu_452->ap_rst(ap_rst_n_inv);
    grp_mlp_kernel_fu_452->ap_start(grp_mlp_kernel_fu_452_ap_start);
    grp_mlp_kernel_fu_452->ap_done(grp_mlp_kernel_fu_452_ap_done);
    grp_mlp_kernel_fu_452->ap_idle(grp_mlp_kernel_fu_452_ap_idle);
    grp_mlp_kernel_fu_452->ap_ready(grp_mlp_kernel_fu_452_ap_ready);
    grp_mlp_kernel_fu_452->sample_address0(grp_mlp_kernel_fu_452_sample_address0);
    grp_mlp_kernel_fu_452->sample_ce0(grp_mlp_kernel_fu_452_sample_ce0);
    grp_mlp_kernel_fu_452->sample_q0(sample_q0);
    grp_mlp_kernel_fu_452->ap_return_0(grp_mlp_kernel_fu_452_ap_return_0);
    grp_mlp_kernel_fu_452->ap_return_1(grp_mlp_kernel_fu_452_ap_return_1);
    grp_mlp_kernel_fu_452->ap_return_2(grp_mlp_kernel_fu_452_ap_return_2);
    grp_mlp_kernel_fu_452->ap_return_3(grp_mlp_kernel_fu_452_ap_return_3);
    grp_mlp_kernel_fu_452->ap_return_4(grp_mlp_kernel_fu_452_ap_return_4);
    grp_mlp_kernel_fu_452->ap_return_5(grp_mlp_kernel_fu_452_ap_return_5);
    grp_mlp_kernel_fu_452->ap_return_6(grp_mlp_kernel_fu_452_ap_return_6);
    grp_mlp_kernel_fu_452->ap_return_7(grp_mlp_kernel_fu_452_ap_return_7);
    grp_mlp_kernel_fu_452->ap_return_8(grp_mlp_kernel_fu_452_ap_return_8);
    grp_mlp_kernel_fu_452->ap_return_9(grp_mlp_kernel_fu_452_ap_return_9);
    regslice_both_in_V_data_V_U = new regslice_both<128>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<16>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<16>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);
    regslice_both_out_V_data_V_U = new regslice_both<64>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_data_V_U->data_in(tmp_data_V_fu_294);
    regslice_both_out_V_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<8>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_keep_V_U->data_in(ap_var_for_const1);
    regslice_both_out_V_keep_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<8>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_strb_V_U->data_in(ap_var_for_const2);
    regslice_both_out_V_strb_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_last_V_U->data_in(out_r_TLAST_int);
    regslice_both_out_V_last_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln142_fu_713_p2);
    sensitive << ( shl_ln_reg_1037 );
    sensitive << ( zext_ln140_fu_625_p1 );

    SC_METHOD(thread_add_ln163_1_fu_850_p2);
    sensitive << ( trunc_ln_reg_1144 );
    sensitive << ( zext_ln163_fu_841_p1 );

    SC_METHOD(thread_add_ln163_fu_845_p2);
    sensitive << ( shl_ln1_reg_1139 );
    sensitive << ( zext_ln161_fu_825_p1 );

    SC_METHOD(thread_and_ln391_1_fu_988_p2);
    sensitive << ( tmp_data_V_fu_294 );
    sensitive << ( xor_ln391_fu_982_p2 );

    SC_METHOD(thread_and_ln391_2_fu_994_p2);
    sensitive << ( and_ln391_fu_976_p2 );
    sensitive << ( select_ln391_3_fu_956_p3 );

    SC_METHOD(thread_and_ln391_fu_976_p2);
    sensitive << ( shl_ln391_1_fu_964_p2 );
    sensitive << ( lshr_ln391_fu_970_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state2_ignore_call1);
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state7_io);
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_condition_1513);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln155_fu_793_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln155_fu_793_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_mlp_kernel_fu_452_ap_start);
    sensitive << ( grp_mlp_kernel_fu_452_ap_start_reg );

    SC_METHOD(thread_high_1_fu_1012_p2);
    sensitive << ( Hi_assign_1_reg_408 );

    SC_METHOD(thread_high_fu_724_p2);
    sensitive << ( Hi_assign_reg_362 );

    SC_METHOD(thread_i_3_fu_799_p2);
    sensitive << ( i1_0_reg_384 );

    SC_METHOD(thread_i_fu_607_p2);
    sensitive << ( i_0_reg_340 );

    SC_METHOD(thread_icmp_ln134_fu_601_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( i_0_reg_340 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln140_fu_629_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_373 );

    SC_METHOD(thread_icmp_ln155_fu_793_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( i1_0_reg_384 );

    SC_METHOD(thread_icmp_ln161_fu_829_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_block_state7_io );
    sensitive << ( j3_0_reg_420 );

    SC_METHOD(thread_icmp_ln391_fu_886_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Lo_assign_1_reg_396 );
    sensitive << ( Hi_assign_1_reg_408 );

    SC_METHOD(thread_icmp_ln681_fu_641_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln140_fu_629_p2 );
    sensitive << ( Lo_assign_reg_351 );
    sensitive << ( Hi_assign_reg_362 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_j_1_fu_835_p2);
    sensitive << ( j3_0_reg_420 );

    SC_METHOD(thread_j_fu_635_p2);
    sensitive << ( j_0_reg_373 );

    SC_METHOD(thread_low_1_fu_1006_p2);
    sensitive << ( Lo_assign_1_reg_396 );

    SC_METHOD(thread_low_fu_718_p2);
    sensitive << ( Lo_assign_reg_351 );

    SC_METHOD(thread_lshr_ln391_fu_970_p2);
    sensitive << ( zext_ln391_2_fu_936_p1 );

    SC_METHOD(thread_lshr_ln681_1_fu_733_p2);
    sensitive << ( zext_ln681_1_fu_730_p1 );

    SC_METHOD(thread_lshr_ln681_fu_707_p2);
    sensitive << ( select_ln681_1_fu_682_p3 );
    sensitive << ( zext_ln681_fu_703_p1 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TLAST_int);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( i1_0_reg_384 );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_p_Result_2_fu_1000_p2);
    sensitive << ( and_ln391_1_fu_988_p2 );
    sensitive << ( and_ln391_2_fu_994_p2 );

    SC_METHOD(thread_p_Result_s_fu_739_p2);
    sensitive << ( lshr_ln681_reg_1061 );
    sensitive << ( lshr_ln681_1_fu_733_p2 );

    SC_METHOD(thread_sample_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_mlp_kernel_fu_452_sample_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln142_fu_749_p1 );

    SC_METHOD(thread_sample_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_mlp_kernel_fu_452_sample_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Result_s_fu_739_p2 );

    SC_METHOD(thread_sample_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln163_1_fu_863_p3);
    sensitive << ( prediction_1_reg_1091 );
    sensitive << ( prediction_1_1_reg_1096 );
    sensitive << ( tmp_219_fu_855_p3 );

    SC_METHOD(thread_select_ln163_fu_869_p3);
    sensitive << ( prediction_reg_1081 );
    sensitive << ( prediction_0_1_reg_1086 );
    sensitive << ( tmp_219_fu_855_p3 );

    SC_METHOD(thread_select_ln391_1_fu_906_p3);
    sensitive << ( Lo_assign_1_reg_396 );
    sensitive << ( Hi_assign_1_reg_408 );
    sensitive << ( icmp_ln391_fu_886_p2 );

    SC_METHOD(thread_select_ln391_2_fu_914_p3);
    sensitive << ( Lo_assign_1_reg_396 );
    sensitive << ( icmp_ln391_fu_886_p2 );
    sensitive << ( sub_ln391_fu_892_p2 );

    SC_METHOD(thread_select_ln391_3_fu_956_p3);
    sensitive << ( icmp_ln391_fu_886_p2 );
    sensitive << ( shl_ln391_fu_940_p2 );
    sensitive << ( tmp_220_fu_946_p4 );

    SC_METHOD(thread_select_ln391_fu_898_p3);
    sensitive << ( Lo_assign_1_reg_396 );
    sensitive << ( Hi_assign_1_reg_408 );
    sensitive << ( icmp_ln391_fu_886_p2 );

    SC_METHOD(thread_select_ln681_1_fu_682_p3);
    sensitive << ( tmp_data_V_3_reg_1031 );
    sensitive << ( icmp_ln681_fu_641_p2 );
    sensitive << ( tmp_218_fu_647_p4 );

    SC_METHOD(thread_select_ln681_2_fu_689_p3);
    sensitive << ( Lo_assign_reg_351 );
    sensitive << ( icmp_ln681_fu_641_p2 );
    sensitive << ( sub_ln681_1_fu_662_p2 );

    SC_METHOD(thread_select_ln681_fu_674_p3);
    sensitive << ( icmp_ln681_fu_641_p2 );
    sensitive << ( sub_ln681_fu_656_p2 );
    sensitive << ( sub_ln681_2_fu_668_p2 );

    SC_METHOD(thread_shl_ln1_fu_805_p3);
    sensitive << ( i1_0_reg_384 );

    SC_METHOD(thread_shl_ln391_1_fu_964_p2);
    sensitive << ( zext_ln391_1_fu_932_p1 );

    SC_METHOD(thread_shl_ln391_fu_940_p2);
    sensitive << ( tmp_V_fu_882_p1 );
    sensitive << ( zext_ln391_fu_928_p1 );

    SC_METHOD(thread_shl_ln_fu_617_p3);
    sensitive << ( i_0_reg_340 );

    SC_METHOD(thread_sub_ln391_1_fu_922_p2);
    sensitive << ( select_ln391_fu_898_p3 );

    SC_METHOD(thread_sub_ln391_fu_892_p2);
    sensitive << ( Lo_assign_1_reg_396 );

    SC_METHOD(thread_sub_ln681_1_fu_662_p2);
    sensitive << ( Lo_assign_reg_351 );

    SC_METHOD(thread_sub_ln681_2_fu_668_p2);
    sensitive << ( Lo_assign_reg_351 );
    sensitive << ( Hi_assign_reg_362 );

    SC_METHOD(thread_sub_ln681_3_fu_697_p2);
    sensitive << ( select_ln681_fu_674_p3 );

    SC_METHOD(thread_sub_ln681_fu_656_p2);
    sensitive << ( Lo_assign_reg_351 );
    sensitive << ( Hi_assign_reg_362 );

    SC_METHOD(thread_tmp_218_fu_647_p4);
    sensitive << ( tmp_data_V_3_reg_1031 );

    SC_METHOD(thread_tmp_219_fu_855_p3);
    sensitive << ( add_ln163_fu_845_p2 );

    SC_METHOD(thread_tmp_220_fu_946_p4);
    sensitive << ( shl_ln391_fu_940_p2 );

    SC_METHOD(thread_tmp_V_fu_882_p1);
    sensitive << ( phi_ln163_reg_431 );

    SC_METHOD(thread_trunc_ln163_fu_813_p1);
    sensitive << ( i1_0_reg_384 );

    SC_METHOD(thread_trunc_ln_fu_817_p3);
    sensitive << ( trunc_ln163_fu_813_p1 );

    SC_METHOD(thread_xor_ln391_fu_982_p2);
    sensitive << ( and_ln391_fu_976_p2 );

    SC_METHOD(thread_zext_ln140_fu_625_p1);
    sensitive << ( j_0_reg_373 );

    SC_METHOD(thread_zext_ln142_fu_749_p1);
    sensitive << ( add_ln142_reg_1066 );

    SC_METHOD(thread_zext_ln161_fu_825_p1);
    sensitive << ( j3_0_reg_420 );

    SC_METHOD(thread_zext_ln163_fu_841_p1);
    sensitive << ( j3_0_reg_420 );

    SC_METHOD(thread_zext_ln391_1_fu_932_p1);
    sensitive << ( select_ln391_1_fu_906_p3 );

    SC_METHOD(thread_zext_ln391_2_fu_936_p1);
    sensitive << ( sub_ln391_1_fu_922_p2 );

    SC_METHOD(thread_zext_ln391_fu_928_p1);
    sensitive << ( select_ln391_2_fu_914_p3 );

    SC_METHOD(thread_zext_ln681_1_fu_730_p1);
    sensitive << ( sub_ln681_3_reg_1056 );

    SC_METHOD(thread_zext_ln681_fu_703_p1);
    sensitive << ( select_ln681_2_fu_689_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln134_fu_601_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln161_fu_829_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln140_fu_629_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_mlp_kernel_fu_452_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln155_fu_793_p2 );
    sensitive << ( ap_block_state7_io );
    sensitive << ( in_r_TVALID_int );
    sensitive << ( out_r_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000001";
    grp_mlp_kernel_fu_452_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln134_fu_601_p2, "icmp_ln134_fu_601_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln161_fu_829_p2, "icmp_ln161_fu_829_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_fu_607_p2, "i_fu_607_p2");
    sc_trace(mVcdFile, i_reg_1026, "i_reg_1026");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_V_3_reg_1031, "tmp_data_V_3_reg_1031");
    sc_trace(mVcdFile, shl_ln_fu_617_p3, "shl_ln_fu_617_p3");
    sc_trace(mVcdFile, shl_ln_reg_1037, "shl_ln_reg_1037");
    sc_trace(mVcdFile, j_fu_635_p2, "j_fu_635_p2");
    sc_trace(mVcdFile, j_reg_1051, "j_reg_1051");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln681_3_fu_697_p2, "sub_ln681_3_fu_697_p2");
    sc_trace(mVcdFile, sub_ln681_3_reg_1056, "sub_ln681_3_reg_1056");
    sc_trace(mVcdFile, icmp_ln140_fu_629_p2, "icmp_ln140_fu_629_p2");
    sc_trace(mVcdFile, lshr_ln681_fu_707_p2, "lshr_ln681_fu_707_p2");
    sc_trace(mVcdFile, lshr_ln681_reg_1061, "lshr_ln681_reg_1061");
    sc_trace(mVcdFile, add_ln142_fu_713_p2, "add_ln142_fu_713_p2");
    sc_trace(mVcdFile, add_ln142_reg_1066, "add_ln142_reg_1066");
    sc_trace(mVcdFile, low_fu_718_p2, "low_fu_718_p2");
    sc_trace(mVcdFile, low_reg_1071, "low_reg_1071");
    sc_trace(mVcdFile, high_fu_724_p2, "high_fu_724_p2");
    sc_trace(mVcdFile, high_reg_1076, "high_reg_1076");
    sc_trace(mVcdFile, prediction_reg_1081, "prediction_reg_1081");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_ready, "grp_mlp_kernel_fu_452_ap_ready");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_done, "grp_mlp_kernel_fu_452_ap_done");
    sc_trace(mVcdFile, prediction_0_1_reg_1086, "prediction_0_1_reg_1086");
    sc_trace(mVcdFile, prediction_1_reg_1091, "prediction_1_reg_1091");
    sc_trace(mVcdFile, prediction_1_1_reg_1096, "prediction_1_1_reg_1096");
    sc_trace(mVcdFile, prediction_2_reg_1101, "prediction_2_reg_1101");
    sc_trace(mVcdFile, prediction_3_reg_1106, "prediction_3_reg_1106");
    sc_trace(mVcdFile, prediction_4_reg_1111, "prediction_4_reg_1111");
    sc_trace(mVcdFile, prediction_5_reg_1116, "prediction_5_reg_1116");
    sc_trace(mVcdFile, prediction_6_reg_1121, "prediction_6_reg_1121");
    sc_trace(mVcdFile, prediction_7_reg_1126, "prediction_7_reg_1126");
    sc_trace(mVcdFile, i_3_fu_799_p2, "i_3_fu_799_p2");
    sc_trace(mVcdFile, i_3_reg_1134, "i_3_reg_1134");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, shl_ln1_fu_805_p3, "shl_ln1_fu_805_p3");
    sc_trace(mVcdFile, shl_ln1_reg_1139, "shl_ln1_reg_1139");
    sc_trace(mVcdFile, icmp_ln155_fu_793_p2, "icmp_ln155_fu_793_p2");
    sc_trace(mVcdFile, trunc_ln_fu_817_p3, "trunc_ln_fu_817_p3");
    sc_trace(mVcdFile, trunc_ln_reg_1144, "trunc_ln_reg_1144");
    sc_trace(mVcdFile, j_1_fu_835_p2, "j_1_fu_835_p2");
    sc_trace(mVcdFile, j_1_reg_1152, "j_1_reg_1152");
    sc_trace(mVcdFile, ap_block_state7_io, "ap_block_state7_io");
    sc_trace(mVcdFile, select_ln163_1_fu_863_p3, "select_ln163_1_fu_863_p3");
    sc_trace(mVcdFile, add_ln163_1_fu_850_p2, "add_ln163_1_fu_850_p2");
    sc_trace(mVcdFile, select_ln163_fu_869_p3, "select_ln163_fu_869_p3");
    sc_trace(mVcdFile, low_1_fu_1006_p2, "low_1_fu_1006_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, high_1_fu_1012_p2, "high_1_fu_1012_p2");
    sc_trace(mVcdFile, sample_address0, "sample_address0");
    sc_trace(mVcdFile, sample_ce0, "sample_ce0");
    sc_trace(mVcdFile, sample_we0, "sample_we0");
    sc_trace(mVcdFile, sample_d0, "sample_d0");
    sc_trace(mVcdFile, sample_q0, "sample_q0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_start, "grp_mlp_kernel_fu_452_ap_start");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_idle, "grp_mlp_kernel_fu_452_ap_idle");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_sample_address0, "grp_mlp_kernel_fu_452_sample_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_sample_ce0, "grp_mlp_kernel_fu_452_sample_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_0, "grp_mlp_kernel_fu_452_ap_return_0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_1, "grp_mlp_kernel_fu_452_ap_return_1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_2, "grp_mlp_kernel_fu_452_ap_return_2");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_3, "grp_mlp_kernel_fu_452_ap_return_3");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_4, "grp_mlp_kernel_fu_452_ap_return_4");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_5, "grp_mlp_kernel_fu_452_ap_return_5");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_6, "grp_mlp_kernel_fu_452_ap_return_6");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_7, "grp_mlp_kernel_fu_452_ap_return_7");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_8, "grp_mlp_kernel_fu_452_ap_return_8");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_return_9, "grp_mlp_kernel_fu_452_ap_return_9");
    sc_trace(mVcdFile, i_0_reg_340, "i_0_reg_340");
    sc_trace(mVcdFile, Lo_assign_reg_351, "Lo_assign_reg_351");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, Hi_assign_reg_362, "Hi_assign_reg_362");
    sc_trace(mVcdFile, j_0_reg_373, "j_0_reg_373");
    sc_trace(mVcdFile, i1_0_reg_384, "i1_0_reg_384");
    sc_trace(mVcdFile, Lo_assign_1_reg_396, "Lo_assign_1_reg_396");
    sc_trace(mVcdFile, Hi_assign_1_reg_408, "Hi_assign_1_reg_408");
    sc_trace(mVcdFile, j3_0_reg_420, "j3_0_reg_420");
    sc_trace(mVcdFile, phi_ln163_reg_431, "phi_ln163_reg_431");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_452_ap_start_reg, "grp_mlp_kernel_fu_452_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call1, "ap_block_state2_ignore_call1");
    sc_trace(mVcdFile, zext_ln142_fu_749_p1, "zext_ln142_fu_749_p1");
    sc_trace(mVcdFile, tmp_data_V_fu_294, "tmp_data_V_fu_294");
    sc_trace(mVcdFile, p_Result_2_fu_1000_p2, "p_Result_2_fu_1000_p2");
    sc_trace(mVcdFile, icmp_ln681_fu_641_p2, "icmp_ln681_fu_641_p2");
    sc_trace(mVcdFile, sub_ln681_fu_656_p2, "sub_ln681_fu_656_p2");
    sc_trace(mVcdFile, sub_ln681_2_fu_668_p2, "sub_ln681_2_fu_668_p2");
    sc_trace(mVcdFile, tmp_218_fu_647_p4, "tmp_218_fu_647_p4");
    sc_trace(mVcdFile, sub_ln681_1_fu_662_p2, "sub_ln681_1_fu_662_p2");
    sc_trace(mVcdFile, select_ln681_fu_674_p3, "select_ln681_fu_674_p3");
    sc_trace(mVcdFile, select_ln681_2_fu_689_p3, "select_ln681_2_fu_689_p3");
    sc_trace(mVcdFile, select_ln681_1_fu_682_p3, "select_ln681_1_fu_682_p3");
    sc_trace(mVcdFile, zext_ln681_fu_703_p1, "zext_ln681_fu_703_p1");
    sc_trace(mVcdFile, zext_ln140_fu_625_p1, "zext_ln140_fu_625_p1");
    sc_trace(mVcdFile, zext_ln681_1_fu_730_p1, "zext_ln681_1_fu_730_p1");
    sc_trace(mVcdFile, lshr_ln681_1_fu_733_p2, "lshr_ln681_1_fu_733_p2");
    sc_trace(mVcdFile, p_Result_s_fu_739_p2, "p_Result_s_fu_739_p2");
    sc_trace(mVcdFile, trunc_ln163_fu_813_p1, "trunc_ln163_fu_813_p1");
    sc_trace(mVcdFile, zext_ln161_fu_825_p1, "zext_ln161_fu_825_p1");
    sc_trace(mVcdFile, zext_ln163_fu_841_p1, "zext_ln163_fu_841_p1");
    sc_trace(mVcdFile, add_ln163_fu_845_p2, "add_ln163_fu_845_p2");
    sc_trace(mVcdFile, tmp_219_fu_855_p3, "tmp_219_fu_855_p3");
    sc_trace(mVcdFile, icmp_ln391_fu_886_p2, "icmp_ln391_fu_886_p2");
    sc_trace(mVcdFile, sub_ln391_fu_892_p2, "sub_ln391_fu_892_p2");
    sc_trace(mVcdFile, select_ln391_fu_898_p3, "select_ln391_fu_898_p3");
    sc_trace(mVcdFile, select_ln391_2_fu_914_p3, "select_ln391_2_fu_914_p3");
    sc_trace(mVcdFile, select_ln391_1_fu_906_p3, "select_ln391_1_fu_906_p3");
    sc_trace(mVcdFile, sub_ln391_1_fu_922_p2, "sub_ln391_1_fu_922_p2");
    sc_trace(mVcdFile, tmp_V_fu_882_p1, "tmp_V_fu_882_p1");
    sc_trace(mVcdFile, zext_ln391_fu_928_p1, "zext_ln391_fu_928_p1");
    sc_trace(mVcdFile, shl_ln391_fu_940_p2, "shl_ln391_fu_940_p2");
    sc_trace(mVcdFile, tmp_220_fu_946_p4, "tmp_220_fu_946_p4");
    sc_trace(mVcdFile, zext_ln391_1_fu_932_p1, "zext_ln391_1_fu_932_p1");
    sc_trace(mVcdFile, zext_ln391_2_fu_936_p1, "zext_ln391_2_fu_936_p1");
    sc_trace(mVcdFile, shl_ln391_1_fu_964_p2, "shl_ln391_1_fu_964_p2");
    sc_trace(mVcdFile, lshr_ln391_fu_970_p2, "lshr_ln391_fu_970_p2");
    sc_trace(mVcdFile, and_ln391_fu_976_p2, "and_ln391_fu_976_p2");
    sc_trace(mVcdFile, xor_ln391_fu_982_p2, "xor_ln391_fu_982_p2");
    sc_trace(mVcdFile, select_ln391_3_fu_956_p3, "select_ln391_3_fu_956_p3");
    sc_trace(mVcdFile, and_ln391_1_fu_988_p2, "and_ln391_1_fu_988_p2");
    sc_trace(mVcdFile, and_ln391_2_fu_994_p2, "and_ln391_2_fu_994_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, out_r_TLAST_int, "out_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_1513, "ap_condition_1513");
#endif

    }
    mHdltvinHandle.open("mlp.hdltvin.dat");
    mHdltvoutHandle.open("mlp.hdltvout.dat");
}

mlp::~mlp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mlp_control_s_axi_U;
    delete sample_U;
    delete grp_mlp_kernel_fu_452;
    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void mlp::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mlp::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv8_0;
}

void mlp::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_FF;
}

void mlp::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Hi_assign_1_reg_408 = high_1_fu_1012_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_793_p2.read()))) {
        Hi_assign_1_reg_408 = ap_const_lv7_1F;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Hi_assign_reg_362 = high_reg_1076.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Hi_assign_reg_362 = ap_const_lv8_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Lo_assign_1_reg_396 = low_1_fu_1006_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_793_p2.read()))) {
        Lo_assign_1_reg_396 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Lo_assign_reg_351 = low_reg_1071.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Lo_assign_reg_351 = ap_const_lv8_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_mlp_kernel_fu_452_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            grp_mlp_kernel_fu_452_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mlp_kernel_fu_452_ap_ready.read())) {
            grp_mlp_kernel_fu_452_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
        i1_0_reg_384 = i_3_reg_1134.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_mlp_kernel_fu_452_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_384 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_629_p2.read()))) {
        i_0_reg_340 = i_reg_1026.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_340 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j3_0_reg_420 = j_1_reg_1152.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_793_p2.read()))) {
        j3_0_reg_420 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_373 = j_reg_1051.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        j_0_reg_373 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_1513.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_2)) {
            phi_ln163_reg_431 = prediction_2_reg_1101.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_7)) {
            phi_ln163_reg_431 = prediction_7_reg_1126.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_6)) {
            phi_ln163_reg_431 = prediction_6_reg_1121.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_5)) {
            phi_ln163_reg_431 = prediction_5_reg_1116.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_4)) {
            phi_ln163_reg_431 = prediction_4_reg_1111.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_3)) {
            phi_ln163_reg_431 = prediction_3_reg_1106.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_1)) {
            phi_ln163_reg_431 = select_ln163_1_fu_863_p3.read();
        } else if (esl_seteq<1,3,3>(add_ln163_1_fu_850_p2.read(), ap_const_lv3_0)) {
            phi_ln163_reg_431 = select_ln163_fu_869_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln140_fu_629_p2.read()))) {
        add_ln142_reg_1066 = add_ln142_fu_713_p2.read();
        high_reg_1076 = high_fu_724_p2.read();
        low_reg_1071 = low_fu_718_p2.read();
        lshr_ln681_reg_1061 = lshr_ln681_fu_707_p2.read();
        sub_ln681_3_reg_1056 = sub_ln681_3_fu_697_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        i_3_reg_1134 = i_3_fu_799_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_1026 = i_fu_607_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_block_state7_io.read(), ap_const_boolean_0))) {
        j_1_reg_1152 = j_1_fu_835_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_1051 = j_fu_635_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_452_ap_done.read(), ap_const_logic_1))) {
        prediction_0_1_reg_1086 = grp_mlp_kernel_fu_452_ap_return_1.read();
        prediction_1_1_reg_1096 = grp_mlp_kernel_fu_452_ap_return_3.read();
        prediction_1_reg_1091 = grp_mlp_kernel_fu_452_ap_return_2.read();
        prediction_2_reg_1101 = grp_mlp_kernel_fu_452_ap_return_4.read();
        prediction_3_reg_1106 = grp_mlp_kernel_fu_452_ap_return_5.read();
        prediction_4_reg_1111 = grp_mlp_kernel_fu_452_ap_return_6.read();
        prediction_5_reg_1116 = grp_mlp_kernel_fu_452_ap_return_7.read();
        prediction_6_reg_1121 = grp_mlp_kernel_fu_452_ap_return_8.read();
        prediction_7_reg_1126 = grp_mlp_kernel_fu_452_ap_return_9.read();
        prediction_reg_1081 = grp_mlp_kernel_fu_452_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_793_p2.read()))) {
        shl_ln1_reg_1139 = shl_ln1_fu_805_p3.read();
        trunc_ln_reg_1144 = trunc_ln_fu_817_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        shl_ln_reg_1037 = shl_ln_fu_617_p3.read();
        tmp_data_V_3_reg_1031 = in_r_TDATA_int.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_data_V_fu_294 = p_Result_2_fu_1000_p2.read();
    }
}

void mlp::thread_add_ln142_fu_713_p2() {
    add_ln142_fu_713_p2 = (!shl_ln_reg_1037.read().is_01() || !zext_ln140_fu_625_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(shl_ln_reg_1037.read()) + sc_biguint<16>(zext_ln140_fu_625_p1.read()));
}

void mlp::thread_add_ln163_1_fu_850_p2() {
    add_ln163_1_fu_850_p2 = (!trunc_ln_reg_1144.read().is_01() || !zext_ln163_fu_841_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(trunc_ln_reg_1144.read()) + sc_biguint<3>(zext_ln163_fu_841_p1.read()));
}

void mlp::thread_add_ln163_fu_845_p2() {
    add_ln163_fu_845_p2 = (!zext_ln161_fu_825_p1.read().is_01() || !shl_ln1_reg_1139.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln161_fu_825_p1.read()) + sc_biguint<6>(shl_ln1_reg_1139.read()));
}

void mlp::thread_and_ln391_1_fu_988_p2() {
    and_ln391_1_fu_988_p2 = (tmp_data_V_fu_294.read() & xor_ln391_fu_982_p2.read());
}

void mlp::thread_and_ln391_2_fu_994_p2() {
    and_ln391_2_fu_994_p2 = (select_ln391_3_fu_956_p3.read() & and_ln391_fu_976_p2.read());
}

void mlp::thread_and_ln391_fu_976_p2() {
    and_ln391_fu_976_p2 = (shl_ln391_1_fu_964_p2.read() & lshr_ln391_fu_970_p2.read());
}

void mlp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mlp::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mlp::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mlp::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mlp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mlp::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mlp::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mlp::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void mlp::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state2_ignore_call1() {
    ap_block_state2_ignore_call1 = (esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state7_io() {
    ap_block_state7_io = (esl_seteq<1,1,1>(icmp_ln161_fu_829_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_condition_1513() {
    ap_condition_1513 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_block_state7_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_fu_829_p2.read()));
}

void mlp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_793_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mlp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mlp::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_793_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mlp::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mlp::thread_grp_mlp_kernel_fu_452_ap_start() {
    grp_mlp_kernel_fu_452_ap_start = grp_mlp_kernel_fu_452_ap_start_reg.read();
}

void mlp::thread_high_1_fu_1012_p2() {
    high_1_fu_1012_p2 = (!Hi_assign_1_reg_408.read().is_01() || !ap_const_lv7_20.is_01())? sc_lv<7>(): (sc_biguint<7>(Hi_assign_1_reg_408.read()) + sc_biguint<7>(ap_const_lv7_20));
}

void mlp::thread_high_fu_724_p2() {
    high_fu_724_p2 = (!ap_const_lv8_8.is_01() || !Hi_assign_reg_362.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_8) + sc_biguint<8>(Hi_assign_reg_362.read()));
}

void mlp::thread_i_3_fu_799_p2() {
    i_3_fu_799_p2 = (!i1_0_reg_384.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i1_0_reg_384.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void mlp::thread_i_fu_607_p2() {
    i_fu_607_p2 = (!i_0_reg_340.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_0_reg_340.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void mlp::thread_icmp_ln134_fu_601_p2() {
    icmp_ln134_fu_601_p2 = (!i_0_reg_340.read().is_01() || !ap_const_lv12_961.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_340.read() == ap_const_lv12_961);
}

void mlp::thread_icmp_ln140_fu_629_p2() {
    icmp_ln140_fu_629_p2 = (!j_0_reg_373.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_373.read() == ap_const_lv5_10);
}

void mlp::thread_icmp_ln155_fu_793_p2() {
    icmp_ln155_fu_793_p2 = (!i1_0_reg_384.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_384.read() == ap_const_lv5_19);
}

void mlp::thread_icmp_ln161_fu_829_p2() {
    icmp_ln161_fu_829_p2 = (!j3_0_reg_420.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_reg_420.read() == ap_const_lv2_2);
}

void mlp::thread_icmp_ln391_fu_886_p2() {
    icmp_ln391_fu_886_p2 = (!Lo_assign_1_reg_396.read().is_01() || !Hi_assign_1_reg_408.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_1_reg_396.read()) > sc_biguint<7>(Hi_assign_1_reg_408.read()));
}

void mlp::thread_icmp_ln681_fu_641_p2() {
    icmp_ln681_fu_641_p2 = (!Lo_assign_reg_351.read().is_01() || !Hi_assign_reg_362.read().is_01())? sc_lv<1>(): (sc_biguint<8>(Lo_assign_reg_351.read()) > sc_biguint<8>(Hi_assign_reg_362.read()));
}

void mlp::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void mlp::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void mlp::thread_j_1_fu_835_p2() {
    j_1_fu_835_p2 = (!j3_0_reg_420.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j3_0_reg_420.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void mlp::thread_j_fu_635_p2() {
    j_fu_635_p2 = (!j_0_reg_373.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_373.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void mlp::thread_low_1_fu_1006_p2() {
    low_1_fu_1006_p2 = (!Lo_assign_1_reg_396.read().is_01() || !ap_const_lv7_20.is_01())? sc_lv<7>(): (sc_biguint<7>(Lo_assign_1_reg_396.read()) + sc_biguint<7>(ap_const_lv7_20));
}

void mlp::thread_low_fu_718_p2() {
    low_fu_718_p2 = (!ap_const_lv8_8.is_01() || !Lo_assign_reg_351.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_8) + sc_biguint<8>(Lo_assign_reg_351.read()));
}

void mlp::thread_lshr_ln391_fu_970_p2() {
    lshr_ln391_fu_970_p2 = (!zext_ln391_2_fu_936_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)zext_ln391_2_fu_936_p1.read().to_uint();
}

void mlp::thread_lshr_ln681_1_fu_733_p2() {
    lshr_ln681_1_fu_733_p2 = (!zext_ln681_1_fu_730_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_2 >> (unsigned short)zext_ln681_1_fu_730_p1.read().to_uint();
}

void mlp::thread_lshr_ln681_fu_707_p2() {
    lshr_ln681_fu_707_p2 = (!zext_ln681_fu_703_p1.read().is_01())? sc_lv<128>(): select_ln681_1_fu_682_p3.read() >> (unsigned short)zext_ln681_fu_703_p1.read().to_uint();
}

void mlp::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_ln161_fu_829_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_out_r_TLAST_int() {
    out_r_TLAST_int = (!i1_0_reg_384.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_384.read() == ap_const_lv5_18);
}

void mlp::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void mlp::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln161_fu_829_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state7_io.read(), ap_const_boolean_0))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void mlp::thread_p_Result_2_fu_1000_p2() {
    p_Result_2_fu_1000_p2 = (and_ln391_1_fu_988_p2.read() | and_ln391_2_fu_994_p2.read());
}

void mlp::thread_p_Result_s_fu_739_p2() {
    p_Result_s_fu_739_p2 = (lshr_ln681_reg_1061.read() & lshr_ln681_1_fu_733_p2.read());
}

void mlp::thread_sample_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_address0 =  (sc_lv<10>) (zext_ln142_fu_749_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sample_address0 = grp_mlp_kernel_fu_452_sample_address0.read();
    } else {
        sample_address0 = "XXXXXXXXXX";
    }
}

void mlp::thread_sample_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sample_ce0 = grp_mlp_kernel_fu_452_sample_ce0.read();
    } else {
        sample_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_d0() {
    sample_d0 = p_Result_s_fu_739_p2.read().range(8-1, 0);
}

void mlp::thread_sample_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_we0 = ap_const_logic_1;
    } else {
        sample_we0 = ap_const_logic_0;
    }
}

void mlp::thread_select_ln163_1_fu_863_p3() {
    select_ln163_1_fu_863_p3 = (!tmp_219_fu_855_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_219_fu_855_p3.read()[0].to_bool())? prediction_1_1_reg_1096.read(): prediction_1_reg_1091.read());
}

void mlp::thread_select_ln163_fu_869_p3() {
    select_ln163_fu_869_p3 = (!tmp_219_fu_855_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_219_fu_855_p3.read()[0].to_bool())? prediction_0_1_reg_1086.read(): prediction_reg_1081.read());
}

void mlp::thread_select_ln391_1_fu_906_p3() {
    select_ln391_1_fu_906_p3 = (!icmp_ln391_fu_886_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_886_p2.read()[0].to_bool())? Hi_assign_1_reg_408.read(): Lo_assign_1_reg_396.read());
}

void mlp::thread_select_ln391_2_fu_914_p3() {
    select_ln391_2_fu_914_p3 = (!icmp_ln391_fu_886_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_886_p2.read()[0].to_bool())? sub_ln391_fu_892_p2.read(): Lo_assign_1_reg_396.read());
}

void mlp::thread_select_ln391_3_fu_956_p3() {
    select_ln391_3_fu_956_p3 = (!icmp_ln391_fu_886_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln391_fu_886_p2.read()[0].to_bool())? tmp_220_fu_946_p4.read(): shl_ln391_fu_940_p2.read());
}

void mlp::thread_select_ln391_fu_898_p3() {
    select_ln391_fu_898_p3 = (!icmp_ln391_fu_886_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln391_fu_886_p2.read()[0].to_bool())? Lo_assign_1_reg_396.read(): Hi_assign_1_reg_408.read());
}

void mlp::thread_select_ln681_1_fu_682_p3() {
    select_ln681_1_fu_682_p3 = (!icmp_ln681_fu_641_p2.read()[0].is_01())? sc_lv<128>(): ((icmp_ln681_fu_641_p2.read()[0].to_bool())? tmp_218_fu_647_p4.read(): tmp_data_V_3_reg_1031.read());
}

void mlp::thread_select_ln681_2_fu_689_p3() {
    select_ln681_2_fu_689_p3 = (!icmp_ln681_fu_641_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_641_p2.read()[0].to_bool())? sub_ln681_1_fu_662_p2.read(): Lo_assign_reg_351.read());
}

void mlp::thread_select_ln681_fu_674_p3() {
    select_ln681_fu_674_p3 = (!icmp_ln681_fu_641_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_641_p2.read()[0].to_bool())? sub_ln681_fu_656_p2.read(): sub_ln681_2_fu_668_p2.read());
}

void mlp::thread_shl_ln1_fu_805_p3() {
    shl_ln1_fu_805_p3 = esl_concat<5,1>(i1_0_reg_384.read(), ap_const_lv1_0);
}

void mlp::thread_shl_ln391_1_fu_964_p2() {
    shl_ln391_1_fu_964_p2 = (!zext_ln391_1_fu_932_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF << (unsigned short)zext_ln391_1_fu_932_p1.read().to_uint();
}

void mlp::thread_shl_ln391_fu_940_p2() {
    shl_ln391_fu_940_p2 = (!zext_ln391_fu_928_p1.read().is_01())? sc_lv<64>(): tmp_V_fu_882_p1.read() << (unsigned short)zext_ln391_fu_928_p1.read().to_uint();
}

void mlp::thread_shl_ln_fu_617_p3() {
    shl_ln_fu_617_p3 = esl_concat<12,4>(i_0_reg_340.read(), ap_const_lv4_0);
}

void mlp::thread_sub_ln391_1_fu_922_p2() {
    sub_ln391_1_fu_922_p2 = (!ap_const_lv7_3F.is_01() || !select_ln391_fu_898_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(select_ln391_fu_898_p3.read()));
}

void mlp::thread_sub_ln391_fu_892_p2() {
    sub_ln391_fu_892_p2 = (!ap_const_lv7_3F.is_01() || !Lo_assign_1_reg_396.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(Lo_assign_1_reg_396.read()));
}

void mlp::thread_sub_ln681_1_fu_662_p2() {
    sub_ln681_1_fu_662_p2 = (!ap_const_lv8_7F.is_01() || !Lo_assign_reg_351.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(Lo_assign_reg_351.read()));
}

void mlp::thread_sub_ln681_2_fu_668_p2() {
    sub_ln681_2_fu_668_p2 = (!Hi_assign_reg_362.read().is_01() || !Lo_assign_reg_351.read().is_01())? sc_lv<8>(): (sc_biguint<8>(Hi_assign_reg_362.read()) - sc_biguint<8>(Lo_assign_reg_351.read()));
}

void mlp::thread_sub_ln681_3_fu_697_p2() {
    sub_ln681_3_fu_697_p2 = (!ap_const_lv8_7F.is_01() || !select_ln681_fu_674_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(select_ln681_fu_674_p3.read()));
}

void mlp::thread_sub_ln681_fu_656_p2() {
    sub_ln681_fu_656_p2 = (!Lo_assign_reg_351.read().is_01() || !Hi_assign_reg_362.read().is_01())? sc_lv<8>(): (sc_biguint<8>(Lo_assign_reg_351.read()) - sc_biguint<8>(Hi_assign_reg_362.read()));
}

void mlp::thread_tmp_218_fu_647_p4() {
    tmp_218_fu_647_p4 = tmp_data_V_3_reg_1031.read().range(0, 127);
}

void mlp::thread_tmp_219_fu_855_p3() {
    tmp_219_fu_855_p3 = add_ln163_fu_845_p2.read().range(3, 3);
}

void mlp::thread_tmp_220_fu_946_p4() {
    tmp_220_fu_946_p4 = shl_ln391_fu_940_p2.read().range(0, 63);
}

void mlp::thread_tmp_V_fu_882_p1() {
    tmp_V_fu_882_p1 = esl_sext<64,32>(phi_ln163_reg_431.read());
}

void mlp::thread_trunc_ln163_fu_813_p1() {
    trunc_ln163_fu_813_p1 = i1_0_reg_384.read().range(2-1, 0);
}

void mlp::thread_trunc_ln_fu_817_p3() {
    trunc_ln_fu_817_p3 = esl_concat<2,1>(trunc_ln163_fu_813_p1.read(), ap_const_lv1_0);
}

void mlp::thread_xor_ln391_fu_982_p2() {
    xor_ln391_fu_982_p2 = (and_ln391_fu_976_p2.read() ^ ap_const_lv64_FFFFFFFFFFFFFFFF);
}

void mlp::thread_zext_ln140_fu_625_p1() {
    zext_ln140_fu_625_p1 = esl_zext<16,5>(j_0_reg_373.read());
}

void mlp::thread_zext_ln142_fu_749_p1() {
    zext_ln142_fu_749_p1 = esl_zext<64,16>(add_ln142_reg_1066.read());
}

void mlp::thread_zext_ln161_fu_825_p1() {
    zext_ln161_fu_825_p1 = esl_zext<6,2>(j3_0_reg_420.read());
}

void mlp::thread_zext_ln163_fu_841_p1() {
    zext_ln163_fu_841_p1 = esl_zext<3,2>(j3_0_reg_420.read());
}

void mlp::thread_zext_ln391_1_fu_932_p1() {
    zext_ln391_1_fu_932_p1 = esl_zext<64,7>(select_ln391_1_fu_906_p3.read());
}

void mlp::thread_zext_ln391_2_fu_936_p1() {
    zext_ln391_2_fu_936_p1 = esl_zext<64,7>(sub_ln391_1_fu_922_p2.read());
}

void mlp::thread_zext_ln391_fu_928_p1() {
    zext_ln391_fu_928_p1 = esl_zext<64,7>(select_ln391_2_fu_914_p3.read());
}

void mlp::thread_zext_ln681_1_fu_730_p1() {
    zext_ln681_1_fu_730_p1 = esl_zext<128,8>(sub_ln681_3_reg_1056.read());
}

void mlp::thread_zext_ln681_fu_703_p1() {
    zext_ln681_fu_703_p1 = esl_zext<128,8>(select_ln681_2_fu_689_p3.read());
}

void mlp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln134_fu_601_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_629_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_452_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_793_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_793_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_block_state7_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_fu_829_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln161_fu_829_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state7_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(out_r_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void mlp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

