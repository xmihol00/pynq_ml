// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> mlp::ap_ST_fsm_state1 = "1";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<13> mlp::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<13> mlp::ap_ST_fsm_state11 = "1000000000";
const sc_lv<13> mlp::ap_ST_fsm_state12 = "10000000000";
const sc_lv<13> mlp::ap_ST_fsm_pp1_stage0 = "100000000000";
const sc_lv<13> mlp::ap_ST_fsm_state16 = "1000000000000";
const sc_lv<32> mlp::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mlp::ap_const_boolean_1 = true;
const sc_lv<32> mlp::ap_const_lv32_2 = "10";
const bool mlp::ap_const_boolean_0 = false;
const sc_lv<1> mlp::ap_const_lv1_0 = "0";
const sc_lv<32> mlp::ap_const_lv32_B = "1011";
const int mlp::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mlp::ap_const_lv32_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_A = "1010";
const sc_lv<2> mlp::ap_const_lv2_0 = "00";
const sc_lv<1> mlp::ap_const_lv1_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_8 = "1000";
const sc_lv<6> mlp::ap_const_lv6_0 = "000000";
const sc_lv<3> mlp::ap_const_lv3_0 = "000";
const sc_lv<2> mlp::ap_const_lv2_2 = "10";
const sc_lv<2> mlp::ap_const_lv2_3 = "11";
const sc_lv<2> mlp::ap_const_lv2_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_9 = "1001";
const sc_lv<32> mlp::ap_const_lv32_3 = "11";
const sc_lv<32> mlp::ap_const_lv32_4 = "100";
const sc_lv<32> mlp::ap_const_lv32_5 = "101";
const sc_lv<32> mlp::ap_const_lv32_6 = "110";
const sc_lv<32> mlp::ap_const_lv32_7 = "111";
const sc_lv<8> mlp::ap_const_lv8_FF = "11111111";
const sc_lv<8> mlp::ap_const_lv8_0 = "00000000";
const sc_lv<6> mlp::ap_const_lv6_31 = "110001";
const sc_lv<6> mlp::ap_const_lv6_1 = "1";
const sc_lv<4> mlp::ap_const_lv4_0 = "0000";
const sc_lv<32> mlp::ap_const_lv32_F = "1111";
const sc_lv<10> mlp::ap_const_lv10_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_10 = "10000";
const sc_lv<32> mlp::ap_const_lv32_17 = "10111";
const sc_lv<32> mlp::ap_const_lv32_18 = "11000";
const sc_lv<32> mlp::ap_const_lv32_1F = "11111";
const sc_lv<32> mlp::ap_const_lv32_20 = "100000";
const sc_lv<32> mlp::ap_const_lv32_27 = "100111";
const sc_lv<32> mlp::ap_const_lv32_28 = "101000";
const sc_lv<32> mlp::ap_const_lv32_2F = "101111";
const sc_lv<32> mlp::ap_const_lv32_30 = "110000";
const sc_lv<32> mlp::ap_const_lv32_37 = "110111";
const sc_lv<32> mlp::ap_const_lv32_38 = "111000";
const sc_lv<32> mlp::ap_const_lv32_3F = "111111";
const sc_lv<32> mlp::ap_const_lv32_40 = "1000000";
const sc_lv<32> mlp::ap_const_lv32_47 = "1000111";
const sc_lv<32> mlp::ap_const_lv32_48 = "1001000";
const sc_lv<32> mlp::ap_const_lv32_4F = "1001111";
const sc_lv<32> mlp::ap_const_lv32_50 = "1010000";
const sc_lv<32> mlp::ap_const_lv32_57 = "1010111";
const sc_lv<32> mlp::ap_const_lv32_58 = "1011000";
const sc_lv<32> mlp::ap_const_lv32_5F = "1011111";
const sc_lv<32> mlp::ap_const_lv32_60 = "1100000";
const sc_lv<32> mlp::ap_const_lv32_67 = "1100111";
const sc_lv<32> mlp::ap_const_lv32_68 = "1101000";
const sc_lv<32> mlp::ap_const_lv32_6F = "1101111";
const sc_lv<32> mlp::ap_const_lv32_70 = "1110000";
const sc_lv<32> mlp::ap_const_lv32_77 = "1110111";
const sc_lv<32> mlp::ap_const_lv32_78 = "1111000";
const sc_lv<32> mlp::ap_const_lv32_7F = "1111111";
const sc_lv<10> mlp::ap_const_lv10_2 = "10";
const sc_lv<10> mlp::ap_const_lv10_3 = "11";
const sc_lv<10> mlp::ap_const_lv10_4 = "100";
const sc_lv<10> mlp::ap_const_lv10_5 = "101";
const sc_lv<10> mlp::ap_const_lv10_6 = "110";
const sc_lv<10> mlp::ap_const_lv10_7 = "111";
const sc_lv<10> mlp::ap_const_lv10_8 = "1000";
const sc_lv<10> mlp::ap_const_lv10_9 = "1001";
const sc_lv<10> mlp::ap_const_lv10_A = "1010";
const sc_lv<10> mlp::ap_const_lv10_B = "1011";
const sc_lv<10> mlp::ap_const_lv10_C = "1100";
const sc_lv<10> mlp::ap_const_lv10_D = "1101";
const sc_lv<10> mlp::ap_const_lv10_E = "1110";
const sc_lv<10> mlp::ap_const_lv10_F = "1111";
const sc_lv<3> mlp::ap_const_lv3_5 = "101";
const sc_lv<3> mlp::ap_const_lv3_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_C = "1100";

mlp::mlp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mlp_control_s_axi_U = new mlp_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("mlp_control_s_axi_U");
    mlp_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    mlp_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    mlp_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    mlp_control_s_axi_U->WVALID(s_axi_control_WVALID);
    mlp_control_s_axi_U->WREADY(s_axi_control_WREADY);
    mlp_control_s_axi_U->WDATA(s_axi_control_WDATA);
    mlp_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    mlp_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    mlp_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    mlp_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    mlp_control_s_axi_U->RVALID(s_axi_control_RVALID);
    mlp_control_s_axi_U->RREADY(s_axi_control_RREADY);
    mlp_control_s_axi_U->RDATA(s_axi_control_RDATA);
    mlp_control_s_axi_U->RRESP(s_axi_control_RRESP);
    mlp_control_s_axi_U->BVALID(s_axi_control_BVALID);
    mlp_control_s_axi_U->BREADY(s_axi_control_BREADY);
    mlp_control_s_axi_U->BRESP(s_axi_control_BRESP);
    mlp_control_s_axi_U->ACLK(ap_clk);
    mlp_control_s_axi_U->ARESET(ap_rst_n_inv);
    mlp_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    mlp_control_s_axi_U->ap_start(ap_start);
    mlp_control_s_axi_U->interrupt(interrupt);
    mlp_control_s_axi_U->ap_ready(ap_ready);
    mlp_control_s_axi_U->ap_done(ap_done);
    mlp_control_s_axi_U->ap_idle(ap_idle);
    sample_U = new mlp_sample("sample_U");
    sample_U->clk(ap_clk);
    sample_U->reset(ap_rst_n_inv);
    sample_U->address0(sample_address0);
    sample_U->ce0(sample_ce0);
    sample_U->we0(sample_we0);
    sample_U->d0(sample_d0);
    sample_U->q0(sample_q0);
    sample_U->address1(sample_address1);
    sample_U->ce1(sample_ce1);
    sample_U->we1(sample_we1);
    sample_U->d1(sample_d1);
    grp_mlp_kernel_fu_538 = new mlp_kernel("grp_mlp_kernel_fu_538");
    grp_mlp_kernel_fu_538->ap_clk(ap_clk);
    grp_mlp_kernel_fu_538->ap_rst(ap_rst_n_inv);
    grp_mlp_kernel_fu_538->ap_start(grp_mlp_kernel_fu_538_ap_start);
    grp_mlp_kernel_fu_538->ap_done(grp_mlp_kernel_fu_538_ap_done);
    grp_mlp_kernel_fu_538->ap_idle(grp_mlp_kernel_fu_538_ap_idle);
    grp_mlp_kernel_fu_538->ap_ready(grp_mlp_kernel_fu_538_ap_ready);
    grp_mlp_kernel_fu_538->sample_address0(grp_mlp_kernel_fu_538_sample_address0);
    grp_mlp_kernel_fu_538->sample_ce0(grp_mlp_kernel_fu_538_sample_ce0);
    grp_mlp_kernel_fu_538->sample_q0(sample_q0);
    grp_mlp_kernel_fu_538->ap_return_0(grp_mlp_kernel_fu_538_ap_return_0);
    grp_mlp_kernel_fu_538->ap_return_1(grp_mlp_kernel_fu_538_ap_return_1);
    grp_mlp_kernel_fu_538->ap_return_2(grp_mlp_kernel_fu_538_ap_return_2);
    grp_mlp_kernel_fu_538->ap_return_3(grp_mlp_kernel_fu_538_ap_return_3);
    grp_mlp_kernel_fu_538->ap_return_4(grp_mlp_kernel_fu_538_ap_return_4);
    grp_mlp_kernel_fu_538->ap_return_5(grp_mlp_kernel_fu_538_ap_return_5);
    grp_mlp_kernel_fu_538->ap_return_6(grp_mlp_kernel_fu_538_ap_return_6);
    grp_mlp_kernel_fu_538->ap_return_7(grp_mlp_kernel_fu_538_ap_return_7);
    grp_mlp_kernel_fu_538->ap_return_8(grp_mlp_kernel_fu_538_ap_return_8);
    grp_mlp_kernel_fu_538->ap_return_9(grp_mlp_kernel_fu_538_ap_return_9);
    regslice_both_in_V_data_V_U = new regslice_both<128>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<16>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<16>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);
    regslice_both_out_V_data_V_U = new regslice_both<64>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_data_V_U->data_in(out_r_TDATA_int);
    regslice_both_out_V_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<8>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_keep_V_U->data_in(ap_var_for_const1);
    regslice_both_out_V_keep_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<8>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_strb_V_U->data_in(ap_var_for_const2);
    regslice_both_out_V_strb_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_last_V_U->data_in(ap_var_for_const3);
    regslice_both_out_V_last_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_io);
    sensitive << ( icmp_ln162_reg_1251 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state15_io);
    sensitive << ( icmp_ln162_reg_1251_pp1_iter1_reg );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_243);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln140_fu_683_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state13);
    sensitive << ( icmp_ln162_fu_1057_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_494_p4);
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( i_0_reg_490 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_1106 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_phi_ln171_reg_512);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_mlp_kernel_fu_538_ap_start);
    sensitive << ( grp_mlp_kernel_fu_538_ap_start_reg );

    SC_METHOD(thread_i_3_fu_1063_p2);
    sensitive << ( i1_0_reg_501 );

    SC_METHOD(thread_i_fu_689_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_494_p4 );

    SC_METHOD(thread_icmp_ln140_fu_683_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_494_p4 );

    SC_METHOD(thread_icmp_ln162_fu_1057_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i1_0_reg_501 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_ln149_10_fu_967_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_11_fu_977_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_12_fu_987_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_13_fu_997_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_14_fu_1007_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_1_fu_877_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_2_fu_887_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_3_fu_897_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_4_fu_907_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_5_fu_917_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_6_fu_927_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_7_fu_937_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_8_fu_947_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_9_fu_957_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_or_ln149_fu_727_p2);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln162_reg_1251 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( icmp_ln162_reg_1251_pp1_iter1_reg );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TDATA_int);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln162_reg_1251 );
    sensitive << ( ap_phi_reg_pp1_iter1_phi_ln171_reg_512 );
    sensitive << ( ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln162_reg_1251 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_sample_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( grp_mlp_kernel_fu_538_sample_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln149_fu_712_p1 );
    sensitive << ( zext_ln149_2_fu_882_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln149_4_fu_902_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln149_6_fu_922_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln149_8_fu_942_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln149_10_fu_962_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln149_12_fu_982_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( zext_ln149_14_fu_1002_p1 );

    SC_METHOD(thread_sample_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln149_1_fu_732_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln149_3_fu_892_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln149_5_fu_912_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln149_7_fu_932_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln149_9_fu_952_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln149_11_fu_972_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( zext_ln149_13_fu_992_p1 );
    sensitive << ( zext_ln149_15_fu_1012_p1 );

    SC_METHOD(thread_sample_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( grp_mlp_kernel_fu_538_sample_ce0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_sample_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_sample_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_Result_s_reg_1131 );
    sensitive << ( p_Result_4_reg_1141 );
    sensitive << ( p_Result_6_reg_1151 );
    sensitive << ( p_Result_8_reg_1161 );
    sensitive << ( p_Result_2_reg_1171 );
    sensitive << ( p_Result_11_reg_1181 );
    sensitive << ( p_Result_13_reg_1191 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( trunc_ln681_fu_707_p1 );

    SC_METHOD(thread_sample_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_Result_3_reg_1136 );
    sensitive << ( p_Result_5_reg_1146 );
    sensitive << ( p_Result_7_reg_1156 );
    sensitive << ( p_Result_9_reg_1166 );
    sensitive << ( p_Result_10_reg_1176 );
    sensitive << ( p_Result_12_reg_1186 );
    sensitive << ( p_Result_14_reg_1196 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( in_r_TDATA_int );

    SC_METHOD(thread_sample_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_sample_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln140_reg_1102 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_select_ln171_1_fu_1087_p3);
    sensitive << ( prediction_1_reg_1211 );
    sensitive << ( prediction_1_1_reg_1216 );
    sensitive << ( tmp_220_fu_1069_p3 );

    SC_METHOD(thread_select_ln171_fu_1081_p3);
    sensitive << ( prediction_reg_1201 );
    sensitive << ( prediction_0_1_reg_1206 );
    sensitive << ( tmp_220_fu_1069_p3 );

    SC_METHOD(thread_shl_ln_fu_695_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_494_p4 );

    SC_METHOD(thread_tmp_220_fu_1069_p3);
    sensitive << ( i1_0_reg_501 );

    SC_METHOD(thread_trunc_ln171_fu_1077_p1);
    sensitive << ( i1_0_reg_501 );

    SC_METHOD(thread_trunc_ln681_fu_707_p1);
    sensitive << ( in_r_TDATA_int );

    SC_METHOD(thread_zext_ln149_10_fu_962_p1);
    sensitive << ( or_ln149_9_fu_957_p2 );

    SC_METHOD(thread_zext_ln149_11_fu_972_p1);
    sensitive << ( or_ln149_10_fu_967_p2 );

    SC_METHOD(thread_zext_ln149_12_fu_982_p1);
    sensitive << ( or_ln149_11_fu_977_p2 );

    SC_METHOD(thread_zext_ln149_13_fu_992_p1);
    sensitive << ( or_ln149_12_fu_987_p2 );

    SC_METHOD(thread_zext_ln149_14_fu_1002_p1);
    sensitive << ( or_ln149_13_fu_997_p2 );

    SC_METHOD(thread_zext_ln149_15_fu_1012_p1);
    sensitive << ( or_ln149_14_fu_1007_p2 );

    SC_METHOD(thread_zext_ln149_1_fu_732_p1);
    sensitive << ( or_ln149_fu_727_p2 );

    SC_METHOD(thread_zext_ln149_2_fu_882_p1);
    sensitive << ( or_ln149_1_fu_877_p2 );

    SC_METHOD(thread_zext_ln149_3_fu_892_p1);
    sensitive << ( or_ln149_2_fu_887_p2 );

    SC_METHOD(thread_zext_ln149_4_fu_902_p1);
    sensitive << ( or_ln149_3_fu_897_p2 );

    SC_METHOD(thread_zext_ln149_5_fu_912_p1);
    sensitive << ( or_ln149_4_fu_907_p2 );

    SC_METHOD(thread_zext_ln149_6_fu_922_p1);
    sensitive << ( or_ln149_5_fu_917_p2 );

    SC_METHOD(thread_zext_ln149_7_fu_932_p1);
    sensitive << ( or_ln149_6_fu_927_p2 );

    SC_METHOD(thread_zext_ln149_8_fu_942_p1);
    sensitive << ( or_ln149_7_fu_937_p2 );

    SC_METHOD(thread_zext_ln149_9_fu_952_p1);
    sensitive << ( or_ln149_8_fu_947_p2 );

    SC_METHOD(thread_zext_ln149_fu_712_p1);
    sensitive << ( shl_ln_reg_1111 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( icmp_ln140_fu_683_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_mlp_kernel_fu_538_ap_done );
    sensitive << ( icmp_ln162_fu_1057_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_mlp_kernel_fu_538_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln140_reg_1102, "icmp_ln140_reg_1102");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln162_reg_1251, "icmp_ln162_reg_1251");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, icmp_ln162_reg_1251_pp1_iter1_reg, "icmp_ln162_reg_1251_pp1_iter1_reg");
    sc_trace(mVcdFile, i_0_reg_490, "i_0_reg_490");
    sc_trace(mVcdFile, i1_0_reg_501, "i1_0_reg_501");
    sc_trace(mVcdFile, icmp_ln140_fu_683_p2, "icmp_ln140_fu_683_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_689_p2, "i_fu_689_p2");
    sc_trace(mVcdFile, i_reg_1106, "i_reg_1106");
    sc_trace(mVcdFile, shl_ln_fu_695_p3, "shl_ln_fu_695_p3");
    sc_trace(mVcdFile, shl_ln_reg_1111, "shl_ln_reg_1111");
    sc_trace(mVcdFile, p_Result_s_reg_1131, "p_Result_s_reg_1131");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, p_Result_3_reg_1136, "p_Result_3_reg_1136");
    sc_trace(mVcdFile, p_Result_4_reg_1141, "p_Result_4_reg_1141");
    sc_trace(mVcdFile, p_Result_5_reg_1146, "p_Result_5_reg_1146");
    sc_trace(mVcdFile, p_Result_6_reg_1151, "p_Result_6_reg_1151");
    sc_trace(mVcdFile, p_Result_7_reg_1156, "p_Result_7_reg_1156");
    sc_trace(mVcdFile, p_Result_8_reg_1161, "p_Result_8_reg_1161");
    sc_trace(mVcdFile, p_Result_9_reg_1166, "p_Result_9_reg_1166");
    sc_trace(mVcdFile, p_Result_2_reg_1171, "p_Result_2_reg_1171");
    sc_trace(mVcdFile, p_Result_10_reg_1176, "p_Result_10_reg_1176");
    sc_trace(mVcdFile, p_Result_11_reg_1181, "p_Result_11_reg_1181");
    sc_trace(mVcdFile, p_Result_12_reg_1186, "p_Result_12_reg_1186");
    sc_trace(mVcdFile, p_Result_13_reg_1191, "p_Result_13_reg_1191");
    sc_trace(mVcdFile, p_Result_14_reg_1196, "p_Result_14_reg_1196");
    sc_trace(mVcdFile, prediction_reg_1201, "prediction_reg_1201");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_ready, "grp_mlp_kernel_fu_538_ap_ready");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_done, "grp_mlp_kernel_fu_538_ap_done");
    sc_trace(mVcdFile, prediction_0_1_reg_1206, "prediction_0_1_reg_1206");
    sc_trace(mVcdFile, prediction_1_reg_1211, "prediction_1_reg_1211");
    sc_trace(mVcdFile, prediction_1_1_reg_1216, "prediction_1_1_reg_1216");
    sc_trace(mVcdFile, prediction_2_reg_1221, "prediction_2_reg_1221");
    sc_trace(mVcdFile, prediction_3_reg_1226, "prediction_3_reg_1226");
    sc_trace(mVcdFile, prediction_4_reg_1231, "prediction_4_reg_1231");
    sc_trace(mVcdFile, prediction_5_reg_1236, "prediction_5_reg_1236");
    sc_trace(mVcdFile, prediction_6_reg_1241, "prediction_6_reg_1241");
    sc_trace(mVcdFile, prediction_7_reg_1246, "prediction_7_reg_1246");
    sc_trace(mVcdFile, icmp_ln162_fu_1057_p2, "icmp_ln162_fu_1057_p2");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter0, "ap_block_state13_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter1, "ap_block_state14_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state14_io, "ap_block_state14_io");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter2, "ap_block_state15_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state15_io, "ap_block_state15_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_3_fu_1063_p2, "i_3_fu_1063_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, trunc_ln171_fu_1077_p1, "trunc_ln171_fu_1077_p1");
    sc_trace(mVcdFile, select_ln171_fu_1081_p3, "select_ln171_fu_1081_p3");
    sc_trace(mVcdFile, select_ln171_1_fu_1087_p3, "select_ln171_1_fu_1087_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state13, "ap_condition_pp1_exit_iter0_state13");
    sc_trace(mVcdFile, sample_address0, "sample_address0");
    sc_trace(mVcdFile, sample_ce0, "sample_ce0");
    sc_trace(mVcdFile, sample_we0, "sample_we0");
    sc_trace(mVcdFile, sample_d0, "sample_d0");
    sc_trace(mVcdFile, sample_q0, "sample_q0");
    sc_trace(mVcdFile, sample_address1, "sample_address1");
    sc_trace(mVcdFile, sample_ce1, "sample_ce1");
    sc_trace(mVcdFile, sample_we1, "sample_we1");
    sc_trace(mVcdFile, sample_d1, "sample_d1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_start, "grp_mlp_kernel_fu_538_ap_start");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_idle, "grp_mlp_kernel_fu_538_ap_idle");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_sample_address0, "grp_mlp_kernel_fu_538_sample_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_sample_ce0, "grp_mlp_kernel_fu_538_sample_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_0, "grp_mlp_kernel_fu_538_ap_return_0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_1, "grp_mlp_kernel_fu_538_ap_return_1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_2, "grp_mlp_kernel_fu_538_ap_return_2");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_3, "grp_mlp_kernel_fu_538_ap_return_3");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_4, "grp_mlp_kernel_fu_538_ap_return_4");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_5, "grp_mlp_kernel_fu_538_ap_return_5");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_6, "grp_mlp_kernel_fu_538_ap_return_6");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_7, "grp_mlp_kernel_fu_538_ap_return_7");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_8, "grp_mlp_kernel_fu_538_ap_return_8");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_return_9, "grp_mlp_kernel_fu_538_ap_return_9");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_494_p4, "ap_phi_mux_i_0_phi_fu_494_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_phi_ln171_reg_512, "ap_phi_reg_pp1_iter0_phi_ln171_reg_512");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_phi_ln171_reg_512, "ap_phi_reg_pp1_iter1_phi_ln171_reg_512");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525, "ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525, "ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_538_ap_start_reg, "grp_mlp_kernel_fu_538_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln149_fu_712_p1, "zext_ln149_fu_712_p1");
    sc_trace(mVcdFile, zext_ln149_1_fu_732_p1, "zext_ln149_1_fu_732_p1");
    sc_trace(mVcdFile, zext_ln149_2_fu_882_p1, "zext_ln149_2_fu_882_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln149_3_fu_892_p1, "zext_ln149_3_fu_892_p1");
    sc_trace(mVcdFile, zext_ln149_4_fu_902_p1, "zext_ln149_4_fu_902_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, zext_ln149_5_fu_912_p1, "zext_ln149_5_fu_912_p1");
    sc_trace(mVcdFile, zext_ln149_6_fu_922_p1, "zext_ln149_6_fu_922_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, zext_ln149_7_fu_932_p1, "zext_ln149_7_fu_932_p1");
    sc_trace(mVcdFile, zext_ln149_8_fu_942_p1, "zext_ln149_8_fu_942_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, zext_ln149_9_fu_952_p1, "zext_ln149_9_fu_952_p1");
    sc_trace(mVcdFile, zext_ln149_10_fu_962_p1, "zext_ln149_10_fu_962_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, zext_ln149_11_fu_972_p1, "zext_ln149_11_fu_972_p1");
    sc_trace(mVcdFile, zext_ln149_12_fu_982_p1, "zext_ln149_12_fu_982_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, zext_ln149_13_fu_992_p1, "zext_ln149_13_fu_992_p1");
    sc_trace(mVcdFile, zext_ln149_14_fu_1002_p1, "zext_ln149_14_fu_1002_p1");
    sc_trace(mVcdFile, zext_ln149_15_fu_1012_p1, "zext_ln149_15_fu_1012_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, trunc_ln681_fu_707_p1, "trunc_ln681_fu_707_p1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, or_ln149_fu_727_p2, "or_ln149_fu_727_p2");
    sc_trace(mVcdFile, or_ln149_1_fu_877_p2, "or_ln149_1_fu_877_p2");
    sc_trace(mVcdFile, or_ln149_2_fu_887_p2, "or_ln149_2_fu_887_p2");
    sc_trace(mVcdFile, or_ln149_3_fu_897_p2, "or_ln149_3_fu_897_p2");
    sc_trace(mVcdFile, or_ln149_4_fu_907_p2, "or_ln149_4_fu_907_p2");
    sc_trace(mVcdFile, or_ln149_5_fu_917_p2, "or_ln149_5_fu_917_p2");
    sc_trace(mVcdFile, or_ln149_6_fu_927_p2, "or_ln149_6_fu_927_p2");
    sc_trace(mVcdFile, or_ln149_7_fu_937_p2, "or_ln149_7_fu_937_p2");
    sc_trace(mVcdFile, or_ln149_8_fu_947_p2, "or_ln149_8_fu_947_p2");
    sc_trace(mVcdFile, or_ln149_9_fu_957_p2, "or_ln149_9_fu_957_p2");
    sc_trace(mVcdFile, or_ln149_10_fu_967_p2, "or_ln149_10_fu_967_p2");
    sc_trace(mVcdFile, or_ln149_11_fu_977_p2, "or_ln149_11_fu_977_p2");
    sc_trace(mVcdFile, or_ln149_12_fu_987_p2, "or_ln149_12_fu_987_p2");
    sc_trace(mVcdFile, or_ln149_13_fu_997_p2, "or_ln149_13_fu_997_p2");
    sc_trace(mVcdFile, or_ln149_14_fu_1007_p2, "or_ln149_14_fu_1007_p2");
    sc_trace(mVcdFile, tmp_220_fu_1069_p3, "tmp_220_fu_1069_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
    sc_trace(mVcdFile, out_r_TDATA_int, "out_r_TDATA_int");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_243, "ap_condition_243");
#endif

    }
    mHdltvinHandle.open("mlp.hdltvin.dat");
    mHdltvoutHandle.open("mlp.hdltvout.dat");
}

mlp::~mlp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mlp_control_s_axi_U;
    delete sample_U;
    delete grp_mlp_kernel_fu_538;
    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void mlp::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mlp::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void mlp::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_FF;
}

void mlp::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv8_0;
}

void mlp::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read())))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                    esl_seteq<1,1,1>(grp_mlp_kernel_fu_538_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state13.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                    esl_seteq<1,1,1>(grp_mlp_kernel_fu_538_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_243.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
             esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_1))) {
            ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 = prediction_3_reg_1226.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_3))) {
            ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 = prediction_7_reg_1246.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_2))) {
            ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 = prediction_5_reg_1236.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_0))) {
            ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 = select_ln171_1_fu_1087_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525 = ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_243.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
             esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_1))) {
            ap_phi_reg_pp1_iter1_phi_ln171_reg_512 = prediction_2_reg_1221.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_3))) {
            ap_phi_reg_pp1_iter1_phi_ln171_reg_512 = prediction_6_reg_1241.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_2))) {
            ap_phi_reg_pp1_iter1_phi_ln171_reg_512 = prediction_4_reg_1231.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()) && 
                    esl_seteq<1,2,2>(trunc_ln171_fu_1077_p1.read(), ap_const_lv2_0))) {
            ap_phi_reg_pp1_iter1_phi_ln171_reg_512 = select_ln171_fu_1081_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter1_phi_ln171_reg_512 = ap_phi_reg_pp1_iter0_phi_ln171_reg_512.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_mlp_kernel_fu_538_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            grp_mlp_kernel_fu_538_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mlp_kernel_fu_538_ap_ready.read())) {
            grp_mlp_kernel_fu_538_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_1057_p2.read()))) {
        i1_0_reg_501 = i_3_fu_1063_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(grp_mlp_kernel_fu_538_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_501 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_490 = i_reg_1106.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_490 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_1106 = i_fu_689_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln140_reg_1102 = icmp_ln140_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln162_reg_1251 = icmp_ln162_fu_1057_p2.read();
        icmp_ln162_reg_1251_pp1_iter1_reg = icmp_ln162_reg_1251.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        p_Result_10_reg_1176 = in_r_TDATA_int.read().range(95, 88);
        p_Result_11_reg_1181 = in_r_TDATA_int.read().range(103, 96);
        p_Result_12_reg_1186 = in_r_TDATA_int.read().range(111, 104);
        p_Result_13_reg_1191 = in_r_TDATA_int.read().range(119, 112);
        p_Result_14_reg_1196 = in_r_TDATA_int.read().range(127, 120);
        p_Result_2_reg_1171 = in_r_TDATA_int.read().range(87, 80);
        p_Result_3_reg_1136 = in_r_TDATA_int.read().range(31, 24);
        p_Result_4_reg_1141 = in_r_TDATA_int.read().range(39, 32);
        p_Result_5_reg_1146 = in_r_TDATA_int.read().range(47, 40);
        p_Result_6_reg_1151 = in_r_TDATA_int.read().range(55, 48);
        p_Result_7_reg_1156 = in_r_TDATA_int.read().range(63, 56);
        p_Result_8_reg_1161 = in_r_TDATA_int.read().range(71, 64);
        p_Result_9_reg_1166 = in_r_TDATA_int.read().range(79, 72);
        p_Result_s_reg_1131 = in_r_TDATA_int.read().range(23, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_538_ap_done.read(), ap_const_logic_1))) {
        prediction_0_1_reg_1206 = grp_mlp_kernel_fu_538_ap_return_1.read();
        prediction_1_1_reg_1216 = grp_mlp_kernel_fu_538_ap_return_3.read();
        prediction_1_reg_1211 = grp_mlp_kernel_fu_538_ap_return_2.read();
        prediction_2_reg_1221 = grp_mlp_kernel_fu_538_ap_return_4.read();
        prediction_3_reg_1226 = grp_mlp_kernel_fu_538_ap_return_5.read();
        prediction_4_reg_1231 = grp_mlp_kernel_fu_538_ap_return_6.read();
        prediction_5_reg_1236 = grp_mlp_kernel_fu_538_ap_return_7.read();
        prediction_6_reg_1241 = grp_mlp_kernel_fu_538_ap_return_8.read();
        prediction_7_reg_1246 = grp_mlp_kernel_fu_538_ap_return_9.read();
        prediction_reg_1201 = grp_mlp_kernel_fu_538_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln140_fu_683_p2.read()))) {
        shl_ln_reg_1111 = shl_ln_fu_695_p3.read();
    }
}

void mlp::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void mlp::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void mlp::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void mlp::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void mlp::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void mlp::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void mlp::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void mlp::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void mlp::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[11];
}

void mlp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void mlp::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void mlp::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[12];
}

void mlp::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state14_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())));
}

void mlp::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state14_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())));
}

void mlp::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state13_pp1_stage0_iter0() {
    ap_block_state13_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state14_io() {
    ap_block_state14_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_reg_1251.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_block_state14_pp1_stage0_iter1() {
    ap_block_state14_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state15_io() {
    ap_block_state15_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_reg_1251_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_block_state15_pp1_stage0_iter2() {
    ap_block_state15_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mlp::thread_ap_condition_243() {
    ap_condition_243 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()));
}

void mlp::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln140_fu_683_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void mlp::thread_ap_condition_pp1_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(icmp_ln162_fu_1057_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_0;
    }
}

void mlp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mlp::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mlp::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void mlp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mlp::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mlp::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void mlp::thread_ap_phi_mux_i_0_phi_fu_494_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_494_p4 = i_reg_1106.read();
    } else {
        ap_phi_mux_i_0_phi_fu_494_p4 = i_0_reg_490.read();
    }
}

void mlp::thread_ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525() {
    ap_phi_reg_pp1_iter0_phi_ln171_1_reg_525 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void mlp::thread_ap_phi_reg_pp1_iter0_phi_ln171_reg_512() {
    ap_phi_reg_pp1_iter0_phi_ln171_reg_512 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void mlp::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mlp::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mlp::thread_grp_mlp_kernel_fu_538_ap_start() {
    grp_mlp_kernel_fu_538_ap_start = grp_mlp_kernel_fu_538_ap_start_reg.read();
}

void mlp::thread_i_3_fu_1063_p2() {
    i_3_fu_1063_p2 = (!i1_0_reg_501.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_0_reg_501.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp::thread_i_fu_689_p2() {
    i_fu_689_p2 = (!ap_phi_mux_i_0_phi_fu_494_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_i_0_phi_fu_494_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mlp::thread_icmp_ln140_fu_683_p2() {
    icmp_ln140_fu_683_p2 = (!ap_phi_mux_i_0_phi_fu_494_p4.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_494_p4.read() == ap_const_lv6_31);
}

void mlp::thread_icmp_ln162_fu_1057_p2() {
    icmp_ln162_fu_1057_p2 = (!i1_0_reg_501.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_501.read() == ap_const_lv3_5);
}

void mlp::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void mlp::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void mlp::thread_or_ln149_10_fu_967_p2() {
    or_ln149_10_fu_967_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_B);
}

void mlp::thread_or_ln149_11_fu_977_p2() {
    or_ln149_11_fu_977_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_C);
}

void mlp::thread_or_ln149_12_fu_987_p2() {
    or_ln149_12_fu_987_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_D);
}

void mlp::thread_or_ln149_13_fu_997_p2() {
    or_ln149_13_fu_997_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_E);
}

void mlp::thread_or_ln149_14_fu_1007_p2() {
    or_ln149_14_fu_1007_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_F);
}

void mlp::thread_or_ln149_1_fu_877_p2() {
    or_ln149_1_fu_877_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_2);
}

void mlp::thread_or_ln149_2_fu_887_p2() {
    or_ln149_2_fu_887_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_3);
}

void mlp::thread_or_ln149_3_fu_897_p2() {
    or_ln149_3_fu_897_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_4);
}

void mlp::thread_or_ln149_4_fu_907_p2() {
    or_ln149_4_fu_907_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_5);
}

void mlp::thread_or_ln149_5_fu_917_p2() {
    or_ln149_5_fu_917_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_6);
}

void mlp::thread_or_ln149_6_fu_927_p2() {
    or_ln149_6_fu_927_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_7);
}

void mlp::thread_or_ln149_7_fu_937_p2() {
    or_ln149_7_fu_937_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_8);
}

void mlp::thread_or_ln149_8_fu_947_p2() {
    or_ln149_8_fu_947_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_9);
}

void mlp::thread_or_ln149_9_fu_957_p2() {
    or_ln149_9_fu_957_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_A);
}

void mlp::thread_or_ln149_fu_727_p2() {
    or_ln149_fu_727_p2 = (shl_ln_reg_1111.read() | ap_const_lv10_1);
}

void mlp::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_reg_1251.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_reg_1251_pp1_iter1_reg.read())))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_out_r_TDATA_int() {
    out_r_TDATA_int = esl_concat<32,32>(ap_phi_reg_pp1_iter1_phi_ln171_1_reg_525.read(), ap_phi_reg_pp1_iter1_phi_ln171_reg_512.read());
}

void mlp::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void mlp::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_reg_1251.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void mlp::thread_sample_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_14_fu_1002_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_12_fu_982_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_10_fu_962_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_8_fu_942_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_6_fu_922_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_4_fu_902_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_2_fu_882_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        sample_address0 =  (sc_lv<10>) (zext_ln149_fu_712_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sample_address0 = grp_mlp_kernel_fu_538_sample_address0.read();
    } else {
        sample_address0 = "XXXXXXXXXX";
    }
}

void mlp::thread_sample_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_15_fu_1012_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_13_fu_992_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_11_fu_972_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_9_fu_952_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_7_fu_932_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_5_fu_912_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_3_fu_892_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        sample_address1 =  (sc_lv<10>) (zext_ln149_1_fu_732_p1.read());
    } else {
        sample_address1 = "XXXXXXXXXX";
    }
}

void mlp::thread_sample_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        sample_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sample_ce0 = grp_mlp_kernel_fu_538_sample_ce0.read();
    } else {
        sample_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        sample_ce1 = ap_const_logic_1;
    } else {
        sample_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_13_reg_1191.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_11_reg_1181.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_2_reg_1171.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_8_reg_1161.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_6_reg_1151.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_4_reg_1141.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        sample_d0 = p_Result_s_reg_1131.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        sample_d0 = trunc_ln681_fu_707_p1.read();
    } else {
        sample_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void mlp::thread_sample_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_14_reg_1196.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_12_reg_1186.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_10_reg_1176.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_9_reg_1166.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_7_reg_1156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_5_reg_1146.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        sample_d1 = p_Result_3_reg_1136.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        sample_d1 = in_r_TDATA_int.read().range(15, 8);
    } else {
        sample_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void mlp::thread_sample_we0() {
    if (((esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        sample_we0 = ap_const_logic_1;
    } else {
        sample_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_we1() {
    if (((esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln140_reg_1102.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        sample_we1 = ap_const_logic_1;
    } else {
        sample_we1 = ap_const_logic_0;
    }
}

void mlp::thread_select_ln171_1_fu_1087_p3() {
    select_ln171_1_fu_1087_p3 = (!tmp_220_fu_1069_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_220_fu_1069_p3.read()[0].to_bool())? prediction_1_1_reg_1216.read(): prediction_1_reg_1211.read());
}

void mlp::thread_select_ln171_fu_1081_p3() {
    select_ln171_fu_1081_p3 = (!tmp_220_fu_1069_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_220_fu_1069_p3.read()[0].to_bool())? prediction_0_1_reg_1206.read(): prediction_reg_1201.read());
}

void mlp::thread_shl_ln_fu_695_p3() {
    shl_ln_fu_695_p3 = esl_concat<6,4>(ap_phi_mux_i_0_phi_fu_494_p4.read(), ap_const_lv4_0);
}

void mlp::thread_tmp_220_fu_1069_p3() {
    tmp_220_fu_1069_p3 = i1_0_reg_501.read().range(2, 2);
}

void mlp::thread_trunc_ln171_fu_1077_p1() {
    trunc_ln171_fu_1077_p1 = i1_0_reg_501.read().range(2-1, 0);
}

void mlp::thread_trunc_ln681_fu_707_p1() {
    trunc_ln681_fu_707_p1 = in_r_TDATA_int.read().range(8-1, 0);
}

void mlp::thread_zext_ln149_10_fu_962_p1() {
    zext_ln149_10_fu_962_p1 = esl_zext<64,10>(or_ln149_9_fu_957_p2.read());
}

void mlp::thread_zext_ln149_11_fu_972_p1() {
    zext_ln149_11_fu_972_p1 = esl_zext<64,10>(or_ln149_10_fu_967_p2.read());
}

void mlp::thread_zext_ln149_12_fu_982_p1() {
    zext_ln149_12_fu_982_p1 = esl_zext<64,10>(or_ln149_11_fu_977_p2.read());
}

void mlp::thread_zext_ln149_13_fu_992_p1() {
    zext_ln149_13_fu_992_p1 = esl_zext<64,10>(or_ln149_12_fu_987_p2.read());
}

void mlp::thread_zext_ln149_14_fu_1002_p1() {
    zext_ln149_14_fu_1002_p1 = esl_zext<64,10>(or_ln149_13_fu_997_p2.read());
}

void mlp::thread_zext_ln149_15_fu_1012_p1() {
    zext_ln149_15_fu_1012_p1 = esl_zext<64,10>(or_ln149_14_fu_1007_p2.read());
}

void mlp::thread_zext_ln149_1_fu_732_p1() {
    zext_ln149_1_fu_732_p1 = esl_zext<64,10>(or_ln149_fu_727_p2.read());
}

void mlp::thread_zext_ln149_2_fu_882_p1() {
    zext_ln149_2_fu_882_p1 = esl_zext<64,10>(or_ln149_1_fu_877_p2.read());
}

void mlp::thread_zext_ln149_3_fu_892_p1() {
    zext_ln149_3_fu_892_p1 = esl_zext<64,10>(or_ln149_2_fu_887_p2.read());
}

void mlp::thread_zext_ln149_4_fu_902_p1() {
    zext_ln149_4_fu_902_p1 = esl_zext<64,10>(or_ln149_3_fu_897_p2.read());
}

void mlp::thread_zext_ln149_5_fu_912_p1() {
    zext_ln149_5_fu_912_p1 = esl_zext<64,10>(or_ln149_4_fu_907_p2.read());
}

void mlp::thread_zext_ln149_6_fu_922_p1() {
    zext_ln149_6_fu_922_p1 = esl_zext<64,10>(or_ln149_5_fu_917_p2.read());
}

void mlp::thread_zext_ln149_7_fu_932_p1() {
    zext_ln149_7_fu_932_p1 = esl_zext<64,10>(or_ln149_6_fu_927_p2.read());
}

void mlp::thread_zext_ln149_8_fu_942_p1() {
    zext_ln149_8_fu_942_p1 = esl_zext<64,10>(or_ln149_7_fu_937_p2.read());
}

void mlp::thread_zext_ln149_9_fu_952_p1() {
    zext_ln149_9_fu_952_p1 = esl_zext<64,10>(or_ln149_8_fu_947_p2.read());
}

void mlp::thread_zext_ln149_fu_712_p1() {
    zext_ln149_fu_712_p1 = esl_zext<64,10>(shl_ln_reg_1111.read());
}

void mlp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln140_fu_683_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln140_fu_683_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_538_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln162_fu_1057_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln162_fu_1057_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void mlp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

