// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        input_upper_0_V_dout,
        input_upper_0_V_empty_n,
        input_upper_0_V_read,
        input_upper_1_V_dout,
        input_upper_1_V_empty_n,
        input_upper_1_V_read,
        input_upper_2_V_dout,
        input_upper_2_V_empty_n,
        input_upper_2_V_read,
        input_lower_0_V_dout,
        input_lower_0_V_empty_n,
        input_lower_0_V_read,
        input_lower_1_V_dout,
        input_lower_1_V_empty_n,
        input_lower_1_V_read,
        input_lower_2_V_dout,
        input_lower_2_V_empty_n,
        input_lower_2_V_read,
        output_0_V_din,
        output_0_V_full_n,
        output_0_V_write,
        output_1_V_din,
        output_1_V_full_n,
        output_1_V_write,
        output_2_V_din,
        output_2_V_full_n,
        output_2_V_write,
        output_3_V_din,
        output_3_V_full_n,
        output_3_V_write
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] input_upper_0_V_dout;
input   input_upper_0_V_empty_n;
output   input_upper_0_V_read;
input  [7:0] input_upper_1_V_dout;
input   input_upper_1_V_empty_n;
output   input_upper_1_V_read;
input  [7:0] input_upper_2_V_dout;
input   input_upper_2_V_empty_n;
output   input_upper_2_V_read;
input  [7:0] input_lower_0_V_dout;
input   input_lower_0_V_empty_n;
output   input_lower_0_V_read;
input  [7:0] input_lower_1_V_dout;
input   input_lower_1_V_empty_n;
output   input_lower_1_V_read;
input  [7:0] input_lower_2_V_dout;
input   input_lower_2_V_empty_n;
output   input_lower_2_V_read;
output  [15:0] output_0_V_din;
input   output_0_V_full_n;
output   output_0_V_write;
output  [15:0] output_1_V_din;
input   output_1_V_full_n;
output   output_1_V_write;
output  [15:0] output_2_V_din;
input   output_2_V_full_n;
output   output_2_V_write;
output  [15:0] output_3_V_din;
input   output_3_V_full_n;
output   output_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg input_upper_0_V_read;
reg input_upper_1_V_read;
reg input_upper_2_V_read;
reg input_lower_0_V_read;
reg input_lower_1_V_read;
reg input_lower_2_V_read;
reg output_0_V_write;
reg output_1_V_write;
reg output_2_V_write;
reg output_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] read_odd;
reg   [15:0] read_col_index;
reg   [0:0] compute_odd;
reg   [15:0] compute_col_index;
wire   [3:0] kernels_0_address0;
reg    kernels_0_ce0;
wire   [5:0] kernels_0_q0;
wire   [11:0] stripes_0_address0;
reg    stripes_0_ce0;
wire   [7:0] stripes_0_q0;
reg   [11:0] stripes_0_address1;
reg    stripes_0_ce1;
reg    stripes_0_we1;
reg   [7:0] stripes_0_d1;
wire   [3:0] kernels_1_address0;
reg    kernels_1_ce0;
wire   [5:0] kernels_1_q0;
wire   [3:0] kernels_2_address0;
reg    kernels_2_ce0;
wire   [5:0] kernels_2_q0;
wire   [3:0] kernels_3_address0;
reg    kernels_3_ce0;
wire   [5:0] kernels_3_q0;
wire   [3:0] kernels_4_address0;
reg    kernels_4_ce0;
wire   [5:0] kernels_4_q0;
wire   [11:0] stripes_1_address0;
reg    stripes_1_ce0;
wire   [7:0] stripes_1_q0;
reg   [11:0] stripes_1_address1;
reg    stripes_1_ce1;
reg    stripes_1_we1;
reg   [7:0] stripes_1_d1;
wire   [3:0] kernels_5_address0;
reg    kernels_5_ce0;
wire   [5:0] kernels_5_q0;
wire   [3:0] kernels_6_address0;
reg    kernels_6_ce0;
wire   [5:0] kernels_6_q0;
wire   [3:0] kernels_7_address0;
reg    kernels_7_ce0;
wire   [5:0] kernels_7_q0;
wire   [3:0] kernels_8_address0;
reg    kernels_8_ce0;
wire   [5:0] kernels_8_q0;
wire   [11:0] stripes_2_address0;
reg    stripes_2_ce0;
wire   [7:0] stripes_2_q0;
reg   [11:0] stripes_2_address1;
reg    stripes_2_ce1;
reg    stripes_2_we1;
reg   [7:0] stripes_2_d1;
wire   [3:0] kernels_9_address0;
reg    kernels_9_ce0;
wire   [5:0] kernels_9_q0;
wire   [3:0] kernels_10_address0;
reg    kernels_10_ce0;
wire   [5:0] kernels_10_q0;
wire   [3:0] kernels_11_address0;
reg    kernels_11_ce0;
wire   [5:0] kernels_11_q0;
reg    input_upper_0_V_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln158_fu_1261_p2;
reg   [1:0] i1_0_reg_826;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln145_fu_1219_p2;
reg   [1:0] i_0_reg_814;
reg    input_upper_1_V_blk_n;
reg    input_upper_2_V_blk_n;
reg    input_lower_0_V_blk_n;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state4;
reg    input_lower_1_V_blk_n;
reg    input_lower_2_V_blk_n;
reg    output_0_V_blk_n;
wire    ap_CS_fsm_state37;
reg   [1:0] trunc_ln182_reg_2583;
reg    output_1_V_blk_n;
reg    output_2_V_blk_n;
reg    output_3_V_blk_n;
wire   [31:0] partial_sums_0_q0;
reg   [31:0] reg_1120;
wire    ap_CS_fsm_state17;
wire   [31:0] partial_sums_0_q1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state30;
wire   [31:0] partial_sums_1_q0;
reg   [31:0] reg_1125;
wire   [31:0] partial_sums_1_q1;
wire   [31:0] partial_sums_2_q0;
reg   [31:0] reg_1130;
wire   [31:0] partial_sums_2_q1;
wire   [31:0] grp_fu_1098_p3;
reg   [31:0] reg_1135;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_1112_p3;
reg   [31:0] reg_1141;
wire   [0:0] read_odd_load_load_fu_1147_p1;
reg   [0:0] read_odd_load_reg_1920;
reg    ap_block_state1;
reg  signed [15:0] read_col_index_load_reg_1925;
wire  signed [16:0] sext_ln157_fu_1155_p1;
reg  signed [16:0] sext_ln157_reg_1930;
wire   [1:0] i_1_fu_1165_p2;
reg   [1:0] i_1_reg_1939;
wire    ap_CS_fsm_state2;
wire   [1:0] i_fu_1177_p2;
reg   [1:0] i_reg_1947;
reg   [0:0] compute_odd_load_reg_1952;
wire   [0:0] icmp_ln155_fu_1171_p2;
wire   [0:0] icmp_ln142_fu_1159_p2;
wire   [1:0] select_ln168_fu_1187_p3;
reg   [1:0] select_ln168_reg_1957;
wire   [1:0] select_ln168_1_fu_1195_p3;
reg   [1:0] select_ln168_1_reg_1962;
wire   [1:0] select_ln168_2_fu_1203_p3;
reg   [1:0] select_ln168_2_reg_1967;
wire   [1:0] select_ln168_3_fu_1211_p3;
reg   [1:0] select_ln168_3_reg_1973;
wire   [1:0] j_1_fu_1225_p2;
reg   [1:0] j_1_reg_1982;
reg    ap_predicate_op94_read_state3;
reg    ap_predicate_op96_read_state3;
reg    ap_predicate_op98_read_state3;
reg    ap_block_state3;
reg   [11:0] stripes_0_addr_3_reg_2002;
reg    ap_predicate_op124_read_state4;
reg    ap_block_state4;
reg   [11:0] stripes_1_addr_3_reg_2007;
reg   [11:0] stripes_2_addr_3_reg_2012;
wire   [16:0] local_col_index_1_fu_1255_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] j_fu_1267_p2;
reg   [1:0] j_reg_2040;
reg    ap_predicate_op143_read_state6;
reg    ap_predicate_op145_read_state6;
reg    ap_predicate_op147_read_state6;
reg    ap_block_state6;
reg   [11:0] stripes_0_addr_2_reg_2060;
reg    ap_predicate_op174_read_state7;
reg    ap_block_state7;
reg   [11:0] stripes_1_addr_2_reg_2065;
reg   [11:0] stripes_2_addr_2_reg_2070;
wire   [16:0] local_col_index_fu_1303_p2;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln183_fu_1309_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln183_fu_1320_p2;
reg   [15:0] compute_col_index_lo_reg_2118;
wire   [2:0] i_3_fu_1336_p2;
reg   [2:0] i_3_reg_2238;
wire    ap_CS_fsm_state10;
wire   [0:0] trunc_ln189_fu_1358_p1;
reg   [0:0] trunc_ln189_reg_2243;
wire   [0:0] icmp_ln184_fu_1330_p2;
wire   [1:0] select_ln195_2_fu_1376_p3;
reg   [1:0] select_ln195_2_reg_2248;
wire   [12:0] zext_ln202_fu_1382_p1;
reg   [12:0] zext_ln202_reg_2253;
wire    ap_CS_fsm_state11;
wire   [12:0] trunc_ln202_fu_1385_p1;
reg   [12:0] trunc_ln202_reg_2258;
wire   [1:0] add_ln204_fu_1388_p2;
reg   [1:0] add_ln204_reg_2263;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln204_1_fu_1394_p2;
wire    ap_CS_fsm_state13;
wire   [12:0] add_ln217_16_fu_1419_p2;
reg   [12:0] add_ln217_16_reg_2279;
wire   [0:0] icmp_ln204_fu_1407_p2;
wire   [0:0] icmp_ln204_1_fu_1413_p2;
wire   [1:0] l_fu_1429_p2;
reg   [1:0] l_reg_2287;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln207_fu_1423_p2;
wire   [4:0] sub_ln217_fu_1456_p2;
reg   [4:0] sub_ln217_reg_2297;
wire    ap_CS_fsm_state15;
wire   [12:0] zext_ln217_5_fu_1492_p1;
reg   [12:0] zext_ln217_5_reg_2302;
wire   [1:0] m_fu_1506_p2;
reg   [1:0] m_reg_2310;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln209_fu_1500_p2;
reg  signed [5:0] kernels_0_load_reg_2390;
reg   [7:0] stripes_0_load_reg_2395;
reg  signed [5:0] kernels_1_load_reg_2400;
reg   [31:0] partial_sums_0_load_1_reg_2405;
reg  signed [5:0] kernels_2_load_reg_2410;
reg  signed [5:0] kernels_3_load_reg_2415;
reg  signed [5:0] kernels_4_load_reg_2420;
reg   [7:0] stripes_1_load_reg_2425;
reg  signed [5:0] kernels_5_load_reg_2430;
reg   [31:0] partial_sums_1_load_1_reg_2435;
reg  signed [5:0] kernels_6_load_reg_2440;
reg  signed [5:0] kernels_7_load_reg_2445;
reg  signed [5:0] kernels_8_load_reg_2450;
reg   [7:0] stripes_2_load_reg_2455;
reg  signed [5:0] kernels_9_load_reg_2460;
reg   [31:0] partial_sums_2_load_1_reg_2465;
reg  signed [5:0] kernels_10_load_reg_2470;
reg  signed [5:0] kernels_11_load_reg_2475;
wire  signed [31:0] grp_fu_1838_p3;
reg  signed [31:0] add_ln217_3_reg_2480;
wire    ap_CS_fsm_state18;
wire  signed [31:0] grp_fu_1846_p3;
reg  signed [31:0] add_ln217_4_reg_2485;
wire  signed [31:0] grp_fu_1871_p3;
reg  signed [31:0] add_ln217_7_reg_2490;
wire  signed [31:0] grp_fu_1879_p3;
reg  signed [31:0] add_ln217_8_reg_2495;
wire  signed [31:0] grp_fu_1904_p3;
reg  signed [31:0] add_ln217_11_reg_2500;
wire  signed [31:0] grp_fu_1912_p3;
reg  signed [31:0] add_ln217_12_reg_2505;
wire   [1:0] add_ln223_fu_1599_p2;
wire    ap_CS_fsm_state20;
wire   [1:0] add_ln227_fu_1622_p2;
reg   [1:0] add_ln227_reg_2521;
wire    ap_CS_fsm_state22;
wire   [31:0] tmp_5_fu_1628_p5;
reg   [31:0] tmp_5_reg_2526;
wire   [0:0] icmp_ln227_fu_1616_p2;
wire   [1:0] add_ln227_1_fu_1652_p2;
reg   [1:0] add_ln227_1_reg_2534;
wire    ap_CS_fsm_state25;
wire   [31:0] tmp_7_fu_1658_p5;
reg   [31:0] tmp_7_reg_2539;
wire   [0:0] icmp_ln227_1_fu_1646_p2;
wire   [1:0] add_ln227_2_fu_1682_p2;
reg   [1:0] add_ln227_2_reg_2547;
wire    ap_CS_fsm_state28;
wire   [31:0] tmp_8_fu_1688_p5;
reg   [31:0] tmp_8_reg_2552;
wire   [0:0] icmp_ln227_2_fu_1676_p2;
wire   [1:0] add_ln227_3_fu_1712_p2;
reg   [1:0] add_ln227_3_reg_2560;
wire    ap_CS_fsm_state31;
wire   [31:0] tmp_9_fu_1718_p5;
reg   [31:0] tmp_9_reg_2565;
wire   [0:0] icmp_ln227_3_fu_1706_p2;
wire   [2:0] i_2_fu_1742_p2;
reg   [2:0] i_2_reg_2573;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln240_fu_1736_p2;
wire   [1:0] trunc_ln182_fu_1753_p1;
wire   [15:0] add_ln245_fu_1757_p2;
wire   [15:0] add_ln252_fu_1787_p2;
wire    ap_CS_fsm_state38;
reg   [1:0] maxes_address0;
reg    maxes_ce0;
reg    maxes_we0;
reg   [31:0] maxes_d0;
wire   [31:0] maxes_q0;
reg   [1:0] maxes_address1;
reg    maxes_ce1;
reg    maxes_we1;
reg   [31:0] maxes_d1;
wire   [31:0] maxes_q1;
reg   [1:0] local_row_indices_address0;
reg    local_row_indices_ce0;
reg    local_row_indices_we0;
reg   [1:0] local_row_indices_d0;
reg   [1:0] local_row_indices_address1;
reg    local_row_indices_ce1;
reg    local_row_indices_we1;
wire   [1:0] local_row_indices_d1;
wire   [1:0] local_row_indices_q1;
reg   [1:0] partial_sums_0_address0;
reg    partial_sums_0_ce0;
reg    partial_sums_0_we0;
reg   [31:0] partial_sums_0_d0;
reg   [1:0] partial_sums_0_address1;
reg    partial_sums_0_ce1;
reg    partial_sums_0_we1;
reg   [31:0] partial_sums_0_d1;
reg   [1:0] partial_sums_1_address0;
reg    partial_sums_1_ce0;
reg    partial_sums_1_we0;
reg   [31:0] partial_sums_1_d0;
reg   [1:0] partial_sums_1_address1;
reg    partial_sums_1_ce1;
reg    partial_sums_1_we1;
reg   [31:0] partial_sums_1_d1;
reg   [1:0] partial_sums_2_address0;
reg    partial_sums_2_ce0;
reg    partial_sums_2_we0;
reg   [31:0] partial_sums_2_d0;
reg   [1:0] partial_sums_2_address1;
reg    partial_sums_2_ce1;
reg    partial_sums_2_we1;
reg   [31:0] partial_sums_2_d1;
reg   [1:0] kernel_sums_address0;
reg    kernel_sums_ce0;
reg    kernel_sums_we0;
reg   [31:0] kernel_sums_d0;
wire   [31:0] kernel_sums_q0;
reg   [1:0] kernel_sums_address1;
reg    kernel_sums_ce1;
reg    kernel_sums_we1;
wire   [31:0] kernel_sums_d1;
wire   [31:0] kernel_sums_q1;
reg   [1:0] j_0_reg_838;
reg  signed [16:0] local_col_index_0_reg_849;
reg   [7:0] tmp_100_0_reg_859;
reg   [7:0] tmp_101_0_reg_873;
reg   [16:0] local_col_index2_0_reg_887;
reg   [1:0] j3_0_reg_897;
reg   [7:0] tmp_0_reg_908;
reg   [7:0] tmp_99_0_reg_922;
reg   [1:0] phi_ln183_reg_936;
reg   [2:0] i4_0_reg_947;
wire    ap_CS_fsm_state35;
reg   [1:0] phi_ln204_reg_958;
reg   [1:0] phi_ln204_1_reg_970;
reg   [1:0] l_0_reg_981;
reg   [1:0] m_0_reg_993;
wire    ap_CS_fsm_state19;
reg   [1:0] phi_ln223_reg_1004;
wire   [0:0] icmp_ln223_fu_1610_p2;
reg   [1:0] j8_0_0_reg_1015;
wire    ap_CS_fsm_state23;
reg   [1:0] j8_0_1_reg_1026;
wire    ap_CS_fsm_state26;
reg   [1:0] j8_0_2_reg_1037;
wire    ap_CS_fsm_state29;
reg   [1:0] j8_0_3_reg_1048;
wire    ap_CS_fsm_state32;
reg   [2:0] i10_0_reg_1059;
reg    ap_block_state37;
reg   [15:0] read_col_index_new_0_reg_1070;
wire   [0:0] icmp_ln246_fu_1762_p2;
reg   [15:0] compute_col_index_ne_reg_1081;
wire   [0:0] icmp_ln253_fu_1792_p2;
wire  signed [63:0] sext_ln147_fu_1231_p1;
wire  signed [63:0] sext_ln148_fu_1248_p1;
wire  signed [63:0] sext_ln160_fu_1283_p1;
wire  signed [63:0] sext_ln161_fu_1296_p1;
wire   [63:0] zext_ln183_fu_1315_p1;
wire   [63:0] zext_ln204_fu_1400_p1;
wire   [63:0] zext_ln217_fu_1435_p1;
wire  signed [63:0] sext_ln217_12_fu_1521_p1;
wire   [63:0] zext_ln217_8_fu_1547_p1;
wire   [63:0] zext_ln223_fu_1605_p1;
wire   [63:0] zext_ln242_fu_1748_p1;
wire   [0:0] xor_ln249_fu_1768_p2;
wire   [0:0] xor_ln256_fu_1804_p2;
wire    ap_CS_fsm_state39;
wire   [15:0] tmp_57_fu_1779_p1;
wire   [1:0] select_ln195_fu_1362_p3;
wire  signed [31:0] grp_fu_1854_p3;
wire  signed [31:0] grp_fu_1863_p3;
wire  signed [31:0] grp_fu_1821_p3;
wire  signed [31:0] grp_fu_1830_p3;
wire  signed [31:0] grp_fu_1887_p3;
wire  signed [31:0] grp_fu_1896_p3;
wire   [31:0] add_ln229_fu_1640_p2;
wire   [31:0] add_ln229_1_fu_1670_p2;
wire   [31:0] add_ln229_2_fu_1700_p2;
wire   [0:0] grp_fu_1092_p2;
wire   [0:0] grp_fu_1106_p2;
wire  signed [15:0] sext_ln157_fu_1155_p0;
wire   [12:0] trunc_ln147_fu_1238_p1;
wire   [12:0] add_ln148_fu_1242_p2;
wire   [12:0] trunc_ln160_fu_1273_p1;
wire   [12:0] add_ln160_fu_1277_p2;
wire   [12:0] add_ln161_fu_1290_p2;
wire   [1:0] tmp_56_fu_1342_p4;
wire   [0:0] top_offset_fu_1352_p2;
wire   [3:0] tmp_3_fu_1444_p3;
wire   [4:0] zext_ln217_2_fu_1452_p1;
wire   [4:0] zext_ln217_1_fu_1440_p1;
wire   [10:0] tmp_10_fu_1462_p3;
wire   [2:0] tmp_11_fu_1474_p3;
wire   [11:0] zext_ln217_4_fu_1482_p1;
wire   [11:0] zext_ln217_3_fu_1470_p1;
wire   [11:0] add_ln217_13_fu_1486_p2;
wire   [4:0] zext_ln217_7_fu_1512_p1;
wire   [4:0] add_ln217_14_fu_1516_p2;
wire   [12:0] zext_ln217_6_fu_1496_p1;
wire   [12:0] add_ln217_fu_1537_p2;
wire   [12:0] add_ln217_15_fu_1542_p2;
wire   [7:0] grp_fu_1821_p0;
wire   [14:0] zext_ln217_9_fu_1557_p1;
wire   [7:0] grp_fu_1830_p0;
wire   [7:0] grp_fu_1838_p0;
wire   [7:0] grp_fu_1846_p0;
wire   [7:0] grp_fu_1854_p0;
wire   [14:0] zext_ln217_10_fu_1572_p1;
wire   [7:0] grp_fu_1863_p0;
wire   [7:0] grp_fu_1871_p0;
wire   [7:0] grp_fu_1879_p0;
wire   [7:0] grp_fu_1887_p0;
wire   [14:0] zext_ln217_11_fu_1587_p1;
wire   [7:0] grp_fu_1896_p0;
wire   [7:0] grp_fu_1904_p0;
wire   [7:0] grp_fu_1912_p0;
reg   [38:0] ap_NS_fsm;
reg    ap_condition_1609;
reg    ap_condition_1605;
reg    ap_condition_467;
reg    ap_condition_521;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 39'd1;
#0 read_odd = 1'd0;
#0 read_col_index = 16'd1;
#0 compute_odd = 1'd1;
#0 compute_col_index = 16'd508;
end

kernel_kernels_0 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_address0),
    .ce0(kernels_0_ce0),
    .q0(kernels_0_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2056 ),
    .AddressWidth( 12 ))
stripes_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_address0),
    .ce0(stripes_0_ce0),
    .q0(stripes_0_q0),
    .address1(stripes_0_address1),
    .ce1(stripes_0_ce1),
    .we1(stripes_0_we1),
    .d1(stripes_0_d1)
);

kernel_kernels_1 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_address0),
    .ce0(kernels_1_ce0),
    .q0(kernels_1_q0)
);

kernel_kernels_2 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_address0),
    .ce0(kernels_2_ce0),
    .q0(kernels_2_q0)
);

kernel_kernels_3 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_address0),
    .ce0(kernels_3_ce0),
    .q0(kernels_3_q0)
);

kernel_kernels_4 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_address0),
    .ce0(kernels_4_ce0),
    .q0(kernels_4_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2056 ),
    .AddressWidth( 12 ))
stripes_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_address0),
    .ce0(stripes_1_ce0),
    .q0(stripes_1_q0),
    .address1(stripes_1_address1),
    .ce1(stripes_1_ce1),
    .we1(stripes_1_we1),
    .d1(stripes_1_d1)
);

kernel_kernels_5 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_address0),
    .ce0(kernels_5_ce0),
    .q0(kernels_5_q0)
);

kernel_kernels_6 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_address0),
    .ce0(kernels_6_ce0),
    .q0(kernels_6_q0)
);

kernel_kernels_7 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_address0),
    .ce0(kernels_7_ce0),
    .q0(kernels_7_q0)
);

kernel_kernels_8 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_address0),
    .ce0(kernels_8_ce0),
    .q0(kernels_8_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 2056 ),
    .AddressWidth( 12 ))
stripes_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_address0),
    .ce0(stripes_2_ce0),
    .q0(stripes_2_q0),
    .address1(stripes_2_address1),
    .ce1(stripes_2_ce1),
    .we1(stripes_2_we1),
    .d1(stripes_2_d1)
);

kernel_kernels_9 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_address0),
    .ce0(kernels_9_ce0),
    .q0(kernels_9_q0)
);

kernel_kernels_10 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_address0),
    .ce0(kernels_10_ce0),
    .q0(kernels_10_q0)
);

kernel_kernels_11 #(
    .DataWidth( 6 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_address0),
    .ce0(kernels_11_ce0),
    .q0(kernels_11_q0)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
maxes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maxes_address0),
    .ce0(maxes_ce0),
    .we0(maxes_we0),
    .d0(maxes_d0),
    .q0(maxes_q0),
    .address1(maxes_address1),
    .ce1(maxes_ce1),
    .we1(maxes_we1),
    .d1(maxes_d1),
    .q1(maxes_q1)
);

kernel_local_row_bkb #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
local_row_indices_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_row_indices_address0),
    .ce0(local_row_indices_ce0),
    .we0(local_row_indices_we0),
    .d0(local_row_indices_d0),
    .address1(local_row_indices_address1),
    .ce1(local_row_indices_ce1),
    .we1(local_row_indices_we1),
    .d1(local_row_indices_d1),
    .q1(local_row_indices_q1)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_0_address0),
    .ce0(partial_sums_0_ce0),
    .we0(partial_sums_0_we0),
    .d0(partial_sums_0_d0),
    .q0(partial_sums_0_q0),
    .address1(partial_sums_0_address1),
    .ce1(partial_sums_0_ce1),
    .we1(partial_sums_0_we1),
    .d1(partial_sums_0_d1),
    .q1(partial_sums_0_q1)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_1_address0),
    .ce0(partial_sums_1_ce0),
    .we0(partial_sums_1_we0),
    .d0(partial_sums_1_d0),
    .q0(partial_sums_1_q0),
    .address1(partial_sums_1_address1),
    .ce1(partial_sums_1_ce1),
    .we1(partial_sums_1_we1),
    .d1(partial_sums_1_d1),
    .q1(partial_sums_1_q1)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_2_address0),
    .ce0(partial_sums_2_ce0),
    .we0(partial_sums_2_we0),
    .d0(partial_sums_2_d0),
    .q0(partial_sums_2_q0),
    .address1(partial_sums_2_address1),
    .ce1(partial_sums_2_ce1),
    .we1(partial_sums_2_we1),
    .d1(partial_sums_2_d1),
    .q1(partial_sums_2_q1)
);

kernel_maxes #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
kernel_sums_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_sums_address0),
    .ce0(kernel_sums_ce0),
    .we0(kernel_sums_we0),
    .d0(kernel_sums_d0),
    .q0(kernel_sums_q0),
    .address1(kernel_sums_address1),
    .ce1(kernel_sums_ce1),
    .we1(kernel_sums_we1),
    .d1(kernel_sums_d1),
    .q1(kernel_sums_q1)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mfYi_U16(
    .din0(reg_1120),
    .din1(reg_1125),
    .din2(reg_1130),
    .din3(j8_0_0_reg_1015),
    .dout(tmp_5_fu_1628_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mfYi_U17(
    .din0(reg_1120),
    .din1(reg_1125),
    .din2(reg_1130),
    .din3(j8_0_1_reg_1026),
    .dout(tmp_7_fu_1658_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mfYi_U18(
    .din0(reg_1120),
    .din1(reg_1125),
    .din2(reg_1130),
    .din3(j8_0_2_reg_1037),
    .dout(tmp_8_fu_1688_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mfYi_U19(
    .din0(reg_1120),
    .din1(reg_1125),
    .din2(reg_1130),
    .din3(j8_0_3_reg_1048),
    .dout(tmp_9_fu_1718_p5)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U20(
    .din0(grp_fu_1821_p0),
    .din1(kernels_0_load_reg_2390),
    .din2(reg_1120),
    .dout(grp_fu_1821_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U21(
    .din0(grp_fu_1830_p0),
    .din1(kernels_1_load_reg_2400),
    .din2(partial_sums_0_load_1_reg_2405),
    .dout(grp_fu_1830_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U22(
    .din0(grp_fu_1838_p0),
    .din1(kernels_2_load_reg_2410),
    .din2(partial_sums_0_q1),
    .dout(grp_fu_1838_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U23(
    .din0(grp_fu_1846_p0),
    .din1(kernels_3_load_reg_2415),
    .din2(partial_sums_0_q0),
    .dout(grp_fu_1846_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U24(
    .din0(grp_fu_1854_p0),
    .din1(kernels_4_load_reg_2420),
    .din2(reg_1125),
    .dout(grp_fu_1854_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U25(
    .din0(grp_fu_1863_p0),
    .din1(kernels_5_load_reg_2430),
    .din2(partial_sums_1_load_1_reg_2435),
    .dout(grp_fu_1863_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U26(
    .din0(grp_fu_1871_p0),
    .din1(kernels_6_load_reg_2440),
    .din2(partial_sums_1_q1),
    .dout(grp_fu_1871_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U27(
    .din0(grp_fu_1879_p0),
    .din1(kernels_7_load_reg_2445),
    .din2(partial_sums_1_q0),
    .dout(grp_fu_1879_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U28(
    .din0(grp_fu_1887_p0),
    .din1(kernels_8_load_reg_2450),
    .din2(reg_1130),
    .dout(grp_fu_1887_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U29(
    .din0(grp_fu_1896_p0),
    .din1(kernels_9_load_reg_2460),
    .din2(partial_sums_2_load_1_reg_2465),
    .dout(grp_fu_1896_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U30(
    .din0(grp_fu_1904_p0),
    .din1(kernels_10_load_reg_2470),
    .din2(partial_sums_2_q1),
    .dout(grp_fu_1904_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U31(
    .din0(grp_fu_1912_p0),
    .din1(kernels_11_load_reg_2475),
    .din2(partial_sums_2_q0),
    .dout(grp_fu_1912_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        compute_col_index <= 16'd508;
    end else begin
        if ((1'b1 == ap_CS_fsm_state39)) begin
            compute_col_index <= compute_col_index_ne_reg_1081;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_col_index <= 16'd1;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            read_col_index <= read_col_index_new_0_reg_1070;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_odd <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln240_fu_1736_p2 == 1'd1) & (icmp_ln246_fu_1762_p2 == 1'd1))) begin
            read_odd <= xor_ln249_fu_1768_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        if ((icmp_ln253_fu_1792_p2 == 1'd0)) begin
            compute_col_index_ne_reg_1081 <= add_ln252_fu_1787_p2;
        end else if ((icmp_ln253_fu_1792_p2 == 1'd1)) begin
            compute_col_index_ne_reg_1081 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1330_p2 == 1'd1))) begin
        i10_0_reg_1059 <= 3'd0;
    end else if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (1'b1 == ap_CS_fsm_state37))) begin
        i10_0_reg_1059 <= i_2_reg_2573;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (read_odd_load_load_fu_1147_p1 == 1'd1))) begin
        i1_0_reg_826 <= 2'd0;
    end else if ((~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd1))) begin
        i1_0_reg_826 <= i_reg_1947;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i4_0_reg_947 <= i_3_reg_2238;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln183_fu_1320_p2 == 1'd1))) begin
        i4_0_reg_947 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (read_odd_load_load_fu_1147_p1 == 1'd0))) begin
        i_0_reg_814 <= 2'd0;
    end else if ((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd1))) begin
        i_0_reg_814 <= i_1_reg_1939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_reg_1920 == 1'd1) & (icmp_ln155_fu_1171_p2 == 1'd0))) begin
        j3_0_reg_897 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j3_0_reg_897 <= j_reg_2040;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j8_0_0_reg_1015 <= add_ln227_reg_2521;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j8_0_0_reg_1015 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j8_0_1_reg_1026 <= add_ln227_1_reg_2534;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        j8_0_1_reg_1026 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j8_0_2_reg_1037 <= add_ln227_2_reg_2547;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j8_0_2_reg_1037 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        j8_0_3_reg_1048 <= add_ln227_3_reg_2560;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        j8_0_3_reg_1048 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_1159_p2 == 1'd0) & (read_odd_load_reg_1920 == 1'd0))) begin
        j_0_reg_838 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_reg_838 <= j_1_reg_1982;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln209_fu_1500_p2 == 1'd1))) begin
        l_0_reg_981 <= l_reg_2287;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1))) begin
        l_0_reg_981 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_reg_1920 == 1'd1) & (icmp_ln155_fu_1171_p2 == 1'd0))) begin
        local_col_index2_0_reg_887 <= sext_ln157_reg_1930;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        local_col_index2_0_reg_887 <= local_col_index_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_1159_p2 == 1'd0) & (read_odd_load_reg_1920 == 1'd0))) begin
        local_col_index_0_reg_849 <= sext_ln157_reg_1930;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        local_col_index_0_reg_849 <= local_col_index_1_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m_0_reg_993 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_0_reg_993 <= m_reg_2310;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln183_fu_1320_p2 == 1'd0))) begin
        phi_ln183_reg_936 <= add_ln183_fu_1309_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln155_fu_1171_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd1)) | ((icmp_ln142_fu_1159_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd0))))) begin
        phi_ln183_reg_936 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_fu_1407_p2 == 1'd0))) begin
        phi_ln204_1_reg_970 <= add_ln204_1_fu_1394_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_ln204_1_reg_970 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_fu_1407_p2 == 1'd1) & (icmp_ln204_1_fu_1413_p2 == 1'd0))) begin
        phi_ln204_reg_958 <= add_ln204_reg_2263;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        phi_ln204_reg_958 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln207_fu_1423_p2 == 1'd1))) begin
        phi_ln223_reg_1004 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln223_fu_1610_p2 == 1'd0))) begin
        phi_ln223_reg_1004 <= add_ln223_fu_1599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln240_fu_1736_p2 == 1'd1))) begin
        if ((icmp_ln246_fu_1762_p2 == 1'd0)) begin
            read_col_index_new_0_reg_1070 <= add_ln245_fu_1757_p2;
        end else if ((icmp_ln246_fu_1762_p2 == 1'd1)) begin
            read_col_index_new_0_reg_1070 <= 16'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1120 <= partial_sums_0_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1120 <= partial_sums_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1125 <= partial_sums_1_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1125 <= partial_sums_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1130 <= partial_sums_2_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1130 <= partial_sums_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1609)) begin
        if ((i1_0_reg_826 == 2'd0)) begin
            tmp_0_reg_908 <= input_upper_0_V_dout;
        end else if ((i1_0_reg_826 == 2'd1)) begin
            tmp_0_reg_908 <= input_upper_1_V_dout;
        end else if ((~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0))) begin
            tmp_0_reg_908 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1605)) begin
        if ((i_0_reg_814 == 2'd0)) begin
            tmp_100_0_reg_859 <= input_upper_0_V_dout;
        end else if ((i_0_reg_814 == 2'd1)) begin
            tmp_100_0_reg_859 <= input_upper_1_V_dout;
        end else if ((~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0))) begin
            tmp_100_0_reg_859 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_467)) begin
        if ((i_0_reg_814 == 2'd0)) begin
            tmp_101_0_reg_873 <= input_lower_0_V_dout;
        end else if ((i_0_reg_814 == 2'd1)) begin
            tmp_101_0_reg_873 <= input_lower_1_V_dout;
        end else if ((~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0))) begin
            tmp_101_0_reg_873 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_521)) begin
        if ((i1_0_reg_826 == 2'd0)) begin
            tmp_99_0_reg_922 <= input_lower_0_V_dout;
        end else if ((i1_0_reg_826 == 2'd1)) begin
            tmp_99_0_reg_922 <= input_lower_1_V_dout;
        end else if ((~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0))) begin
            tmp_99_0_reg_922 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln204_reg_2263 <= add_ln204_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln217_11_reg_2500 <= grp_fu_1904_p3;
        add_ln217_12_reg_2505 <= grp_fu_1912_p3;
        add_ln217_3_reg_2480 <= grp_fu_1838_p3;
        add_ln217_4_reg_2485 <= grp_fu_1846_p3;
        add_ln217_7_reg_2490 <= grp_fu_1871_p3;
        add_ln217_8_reg_2495 <= grp_fu_1879_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1))) begin
        add_ln217_16_reg_2279 <= add_ln217_16_fu_1419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln227_1_reg_2534 <= add_ln227_1_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln227_2_reg_2547 <= add_ln227_2_fu_1682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln227_3_reg_2560 <= add_ln227_3_fu_1712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln227_reg_2521 <= add_ln227_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln183_fu_1320_p2 == 1'd1))) begin
        compute_col_index_lo_reg_2118 <= compute_col_index;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln253_fu_1792_p2 == 1'd1))) begin
        compute_odd <= xor_ln256_fu_1804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln155_fu_1171_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd1)) | ((icmp_ln142_fu_1159_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd0))))) begin
        compute_odd_load_reg_1952 <= compute_odd;
        select_ln168_1_reg_1962[1] <= select_ln168_1_fu_1195_p3[1];
        select_ln168_2_reg_1967[1] <= select_ln168_2_fu_1203_p3[1];
        select_ln168_3_reg_1973[1] <= select_ln168_3_fu_1211_p3[1];
        select_ln168_reg_1957[1] <= select_ln168_fu_1187_p3[1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_reg_1920 == 1'd0))) begin
        i_1_reg_1939 <= i_1_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_2_reg_2573 <= i_2_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_2238 <= i_3_fu_1336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_reg_1920 == 1'd1))) begin
        i_reg_1947 <= i_fu_1177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        j_1_reg_1982 <= j_1_fu_1225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
        j_reg_2040 <= j_fu_1267_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        kernels_0_load_reg_2390 <= kernels_0_q0;
        kernels_10_load_reg_2470 <= kernels_10_q0;
        kernels_11_load_reg_2475 <= kernels_11_q0;
        kernels_1_load_reg_2400 <= kernels_1_q0;
        kernels_2_load_reg_2410 <= kernels_2_q0;
        kernels_3_load_reg_2415 <= kernels_3_q0;
        kernels_4_load_reg_2420 <= kernels_4_q0;
        kernels_5_load_reg_2430 <= kernels_5_q0;
        kernels_6_load_reg_2440 <= kernels_6_q0;
        kernels_7_load_reg_2445 <= kernels_7_q0;
        kernels_8_load_reg_2450 <= kernels_8_q0;
        kernels_9_load_reg_2460 <= kernels_9_q0;
        partial_sums_0_load_1_reg_2405 <= partial_sums_0_q1;
        partial_sums_1_load_1_reg_2435 <= partial_sums_1_q1;
        partial_sums_2_load_1_reg_2465 <= partial_sums_2_q1;
        stripes_0_load_reg_2395 <= stripes_0_q0;
        stripes_1_load_reg_2425 <= stripes_1_q0;
        stripes_2_load_reg_2455 <= stripes_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        l_reg_2287 <= l_fu_1429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m_reg_2310 <= m_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_col_index_load_reg_1925 <= read_col_index;
        read_odd_load_reg_1920 <= read_odd;
        sext_ln157_reg_1930 <= sext_ln157_fu_1155_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_1135 <= grp_fu_1098_p3;
        reg_1141 <= grp_fu_1112_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1330_p2 == 1'd0))) begin
        select_ln195_2_reg_2248 <= select_ln195_2_fu_1376_p3;
        trunc_ln189_reg_2243 <= trunc_ln189_fu_1358_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7))) begin
        stripes_0_addr_2_reg_2060 <= sext_ln161_fu_1296_p1;
        stripes_1_addr_2_reg_2065 <= sext_ln161_fu_1296_p1;
        stripes_2_addr_2_reg_2070 <= sext_ln161_fu_1296_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
        stripes_0_addr_3_reg_2002 <= sext_ln148_fu_1248_p1;
        stripes_1_addr_3_reg_2007 <= sext_ln148_fu_1248_p1;
        stripes_2_addr_3_reg_2012 <= sext_ln148_fu_1248_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sub_ln217_reg_2297 <= sub_ln217_fu_1456_p2;
        zext_ln217_5_reg_2302[11 : 1] <= zext_ln217_5_fu_1492_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln227_fu_1616_p2 == 1'd0))) begin
        tmp_5_reg_2526 <= tmp_5_fu_1628_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln227_1_fu_1646_p2 == 1'd0))) begin
        tmp_7_reg_2539 <= tmp_7_fu_1658_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln227_2_fu_1676_p2 == 1'd0))) begin
        tmp_8_reg_2552 <= tmp_8_fu_1688_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0))) begin
        tmp_9_reg_2565 <= tmp_9_fu_1718_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln240_fu_1736_p2 == 1'd0))) begin
        trunc_ln182_reg_2583 <= trunc_ln182_fu_1753_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln202_reg_2258 <= trunc_ln202_fu_1385_p1;
        zext_ln202_reg_2253[0] <= zext_ln202_fu_1382_p1[0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | ((i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_0_V_blk_n = input_lower_0_V_empty_n;
    end else begin
        input_lower_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_0_V_read = 1'b1;
    end else begin
        input_lower_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd1) & (1'b1 == ap_CS_fsm_state4)) | ((i1_0_reg_826 == 2'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_1_V_blk_n = input_lower_1_V_empty_n;
    end else begin
        input_lower_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (i_0_reg_814 == 2'd1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (i1_0_reg_826 == 2'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_1_V_read = 1'b1;
    end else begin
        input_lower_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_2_V_blk_n = input_lower_2_V_empty_n;
    end else begin
        input_lower_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (ap_predicate_op124_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (ap_predicate_op174_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_lower_2_V_read = 1'b1;
    end else begin
        input_lower_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd0)) | ((i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd0)))) begin
        input_upper_0_V_blk_n = input_upper_0_V_empty_n;
    end else begin
        input_upper_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op96_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op145_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_upper_0_V_read = 1'b1;
    end else begin
        input_upper_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd0)) | ((i1_0_reg_826 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd0)))) begin
        input_upper_1_V_blk_n = input_upper_1_V_empty_n;
    end else begin
        input_upper_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op94_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op143_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_upper_1_V_read = 1'b1;
    end else begin
        input_upper_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd0)) | (~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd0)))) begin
        input_upper_2_V_blk_n = input_upper_2_V_empty_n;
    end else begin
        input_upper_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op98_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op147_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_upper_2_V_read = 1'b1;
    end else begin
        input_upper_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0)))) begin
        kernel_sums_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        kernel_sums_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        kernel_sums_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd1)))) begin
        kernel_sums_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_sums_address0 = zext_ln223_fu_1605_p1;
    end else begin
        kernel_sums_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        kernel_sums_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        kernel_sums_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        kernel_sums_address1 = 64'd1;
    end else begin
        kernel_sums_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd1)))) begin
        kernel_sums_ce0 = 1'b1;
    end else begin
        kernel_sums_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        kernel_sums_ce1 = 1'b1;
    end else begin
        kernel_sums_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        kernel_sums_d0 = add_ln229_2_fu_1700_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        kernel_sums_d0 = add_ln229_1_fu_1670_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_sums_d0 = add_ln229_fu_1640_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_sums_d0 = 32'd0;
    end else begin
        kernel_sums_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20))) begin
        kernel_sums_we0 = 1'b1;
    end else begin
        kernel_sums_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        kernel_sums_we1 = 1'b1;
    end else begin
        kernel_sums_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_0_ce0 = 1'b1;
    end else begin
        kernels_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_10_ce0 = 1'b1;
    end else begin
        kernels_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_11_ce0 = 1'b1;
    end else begin
        kernels_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_1_ce0 = 1'b1;
    end else begin
        kernels_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_2_ce0 = 1'b1;
    end else begin
        kernels_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_3_ce0 = 1'b1;
    end else begin
        kernels_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_4_ce0 = 1'b1;
    end else begin
        kernels_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_5_ce0 = 1'b1;
    end else begin
        kernels_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_6_ce0 = 1'b1;
    end else begin
        kernels_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_7_ce0 = 1'b1;
    end else begin
        kernels_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_8_ce0 = 1'b1;
    end else begin
        kernels_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_9_ce0 = 1'b1;
    end else begin
        kernels_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_row_indices_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_address0 = 64'd0;
    end else begin
        local_row_indices_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_row_indices_address1 = zext_ln217_fu_1435_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_address1 = 64'd1;
    end else begin
        local_row_indices_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        local_row_indices_ce0 = 1'b1;
    end else begin
        local_row_indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        local_row_indices_ce1 = 1'b1;
    end else begin
        local_row_indices_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_row_indices_d0 = select_ln195_2_reg_2248;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_d0 = select_ln195_fu_1362_p3;
    end else begin
        local_row_indices_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1330_p2 == 1'd0)))) begin
        local_row_indices_we0 = 1'b1;
    end else begin
        local_row_indices_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1330_p2 == 1'd0))) begin
        local_row_indices_we1 = 1'b1;
    end else begin
        local_row_indices_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        maxes_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        maxes_address0 = zext_ln183_fu_1315_p1;
    end else begin
        maxes_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        maxes_address1 = zext_ln242_fu_1748_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        maxes_address1 = 64'd1;
    end else begin
        maxes_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_ce0 = 1'b1;
    end else begin
        maxes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_ce1 = 1'b1;
    end else begin
        maxes_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        maxes_d0 = reg_1135;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_d0 = reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        maxes_d0 = 32'd0;
    end else begin
        maxes_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        maxes_d1 = reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_d1 = reg_1135;
    end else begin
        maxes_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state34))) begin
        maxes_we0 = 1'b1;
    end else begin
        maxes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        maxes_we1 = 1'b1;
    end else begin
        maxes_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2583 == 2'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        output_0_V_blk_n = output_0_V_full_n;
    end else begin
        output_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (trunc_ln182_reg_2583 == 2'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        output_0_V_write = 1'b1;
    end else begin
        output_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2583 == 2'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        output_1_V_blk_n = output_1_V_full_n;
    end else begin
        output_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (trunc_ln182_reg_2583 == 2'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        output_1_V_write = 1'b1;
    end else begin
        output_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2583 == 2'd2) & (1'b1 == ap_CS_fsm_state37))) begin
        output_2_V_blk_n = output_2_V_full_n;
    end else begin
        output_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (trunc_ln182_reg_2583 == 2'd2) & (1'b1 == ap_CS_fsm_state37))) begin
        output_2_V_write = 1'b1;
    end else begin
        output_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2583 == 2'd3) & (1'b1 == ap_CS_fsm_state37))) begin
        output_3_V_blk_n = output_3_V_full_n;
    end else begin
        output_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (trunc_ln182_reg_2583 == 2'd3) & (1'b1 == ap_CS_fsm_state37))) begin
        output_3_V_write = 1'b1;
    end else begin
        output_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address1 = 64'd1;
    end else begin
        partial_sums_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_ce0 = 1'b1;
    end else begin
        partial_sums_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_ce1 = 1'b1;
    end else begin
        partial_sums_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d0 = add_ln217_4_reg_2485;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d0 = grp_fu_1830_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_d0 = 32'd0;
    end else begin
        partial_sums_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d1 = add_ln217_3_reg_2480;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d1 = grp_fu_1821_p3;
    end else begin
        partial_sums_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln204_reg_958 == 2'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_0_we0 = 1'b1;
    end else begin
        partial_sums_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_we1 = 1'b1;
    end else begin
        partial_sums_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address1 = 64'd1;
    end else begin
        partial_sums_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_ce0 = 1'b1;
    end else begin
        partial_sums_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_ce1 = 1'b1;
    end else begin
        partial_sums_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d0 = add_ln217_8_reg_2495;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d0 = grp_fu_1863_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_d0 = 32'd0;
    end else begin
        partial_sums_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d1 = add_ln217_7_reg_2490;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d1 = grp_fu_1854_p3;
    end else begin
        partial_sums_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln204_reg_958 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_1_we0 = 1'b1;
    end else begin
        partial_sums_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_we1 = 1'b1;
    end else begin
        partial_sums_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address1 = 64'd1;
    end else begin
        partial_sums_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_ce0 = 1'b1;
    end else begin
        partial_sums_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_ce1 = 1'b1;
    end else begin
        partial_sums_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d0 = add_ln217_12_reg_2505;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d0 = grp_fu_1896_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_d0 = 32'd0;
    end else begin
        partial_sums_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d1 = add_ln217_11_reg_2500;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d1 = grp_fu_1887_p3;
    end else begin
        partial_sums_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (~(phi_ln204_reg_958 == 2'd0) & ~(phi_ln204_reg_958 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_2_we0 = 1'b1;
    end else begin
        partial_sums_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_we1 = 1'b1;
    end else begin
        partial_sums_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_address1 = stripes_0_addr_2_reg_2060;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_address1 = sext_ln160_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_address1 = stripes_0_addr_3_reg_2002;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_0_address1 = sext_ln147_fu_1231_p1;
    end else begin
        stripes_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_ce0 = 1'b1;
    end else begin
        stripes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_0_ce1 = 1'b1;
    end else begin
        stripes_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_d1 = tmp_99_0_reg_922;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_d1 = tmp_0_reg_908;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_d1 = tmp_101_0_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_0_d1 = tmp_100_0_reg_859;
    end else begin
        stripes_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | ((i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_0_we1 = 1'b1;
    end else begin
        stripes_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_address1 = stripes_1_addr_2_reg_2065;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_address1 = sext_ln160_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_address1 = stripes_1_addr_3_reg_2007;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_1_address1 = sext_ln147_fu_1231_p1;
    end else begin
        stripes_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_ce0 = 1'b1;
    end else begin
        stripes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_1_ce1 = 1'b1;
    end else begin
        stripes_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_d1 = tmp_99_0_reg_922;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_d1 = tmp_0_reg_908;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_d1 = tmp_101_0_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_1_d1 = tmp_100_0_reg_859;
    end else begin
        stripes_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_814 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (i_0_reg_814 == 2'd1) & (1'b1 == ap_CS_fsm_state4)) | ((i1_0_reg_826 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (i1_0_reg_826 == 2'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_1_we1 = 1'b1;
    end else begin
        stripes_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_address1 = stripes_2_addr_2_reg_2070;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_address1 = sext_ln160_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_address1 = stripes_2_addr_3_reg_2012;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_2_address1 = sext_ln147_fu_1231_p1;
    end else begin
        stripes_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_ce0 = 1'b1;
    end else begin
        stripes_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_2_ce1 = 1'b1;
    end else begin
        stripes_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_d1 = tmp_99_0_reg_922;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_d1 = tmp_0_reg_908;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_d1 = tmp_101_0_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_2_d1 = tmp_100_0_reg_859;
    end else begin
        stripes_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & ~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & ~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        stripes_2_we1 = 1'b1;
    end else begin
        stripes_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln155_fu_1171_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd1)) | ((icmp_ln142_fu_1159_p2 == 1'd1) & (read_odd_load_reg_1920 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_reg_1920 == 1'd1) & (icmp_ln155_fu_1171_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if ((~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln183_fu_1320_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1330_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_fu_1407_p2 == 1'd1) & (icmp_ln204_1_fu_1413_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln207_fu_1423_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln209_fu_1500_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln223_fu_1610_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln227_fu_1616_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln227_1_fu_1646_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln227_2_fu_1676_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln240_fu_1736_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if ((~(((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0))) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln148_fu_1242_p2 = (13'd514 + trunc_ln147_fu_1238_p1);

assign add_ln160_fu_1277_p2 = (13'd1028 + trunc_ln160_fu_1273_p1);

assign add_ln161_fu_1290_p2 = (13'd1542 + trunc_ln160_fu_1273_p1);

assign add_ln183_fu_1309_p2 = (phi_ln183_reg_936 + 2'd1);

assign add_ln204_1_fu_1394_p2 = (phi_ln204_1_reg_970 + 2'd1);

assign add_ln204_fu_1388_p2 = (phi_ln204_reg_958 + 2'd1);

assign add_ln217_13_fu_1486_p2 = (zext_ln217_4_fu_1482_p1 + zext_ln217_3_fu_1470_p1);

assign add_ln217_14_fu_1516_p2 = (sub_ln217_reg_2297 + zext_ln217_7_fu_1512_p1);

assign add_ln217_15_fu_1542_p2 = (zext_ln217_5_reg_2302 + add_ln217_fu_1537_p2);

assign add_ln217_16_fu_1419_p2 = (zext_ln202_reg_2253 + trunc_ln202_reg_2258);

assign add_ln217_fu_1537_p2 = (zext_ln217_6_fu_1496_p1 + add_ln217_16_reg_2279);

assign add_ln223_fu_1599_p2 = (phi_ln223_reg_1004 + 2'd1);

assign add_ln227_1_fu_1652_p2 = (j8_0_1_reg_1026 + 2'd1);

assign add_ln227_2_fu_1682_p2 = (j8_0_2_reg_1037 + 2'd1);

assign add_ln227_3_fu_1712_p2 = (j8_0_3_reg_1048 + 2'd1);

assign add_ln227_fu_1622_p2 = (j8_0_0_reg_1015 + 2'd1);

assign add_ln229_1_fu_1670_p2 = (kernel_sums_q0 + tmp_7_reg_2539);

assign add_ln229_2_fu_1700_p2 = (kernel_sums_q0 + tmp_8_reg_2552);

assign add_ln229_fu_1640_p2 = (kernel_sums_q0 + tmp_5_reg_2526);

assign add_ln245_fu_1757_p2 = ($signed(read_col_index_load_reg_1925) + $signed(16'd2));

assign add_ln252_fu_1787_p2 = (compute_col_index_lo_reg_2118 + 16'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = (((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state37 = (((trunc_ln182_reg_2583 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2583 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2583 == 2'd0)));
end

always @ (*) begin
    ap_block_state4 = (((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0)));
end

always @ (*) begin
    ap_block_state6 = (((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = (((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0)));
end

always @ (*) begin
    ap_condition_1605 = (~(((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op94_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln145_fu_1219_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1609 = (~(((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op145_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op143_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln158_fu_1261_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_467 = (~(((ap_predicate_op124_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_814 == 2'd0))) & (1'b1 == ap_CS_fsm_state4));
end

always @ (*) begin
    ap_condition_521 = (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_826 == 2'd0))) & (1'b1 == ap_CS_fsm_state7));
end

always @ (*) begin
    ap_predicate_op124_read_state4 = (~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0));
end

always @ (*) begin
    ap_predicate_op143_read_state6 = ((i1_0_reg_826 == 2'd1) & (icmp_ln158_fu_1261_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op145_read_state6 = ((i1_0_reg_826 == 2'd0) & (icmp_ln158_fu_1261_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_read_state6 = (~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0) & (icmp_ln158_fu_1261_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_read_state7 = (~(i1_0_reg_826 == 2'd1) & ~(i1_0_reg_826 == 2'd0));
end

always @ (*) begin
    ap_predicate_op94_read_state3 = ((i_0_reg_814 == 2'd1) & (icmp_ln145_fu_1219_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op96_read_state3 = ((i_0_reg_814 == 2'd0) & (icmp_ln145_fu_1219_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op98_read_state3 = (~(i_0_reg_814 == 2'd1) & ~(i_0_reg_814 == 2'd0) & (icmp_ln145_fu_1219_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_1092_p2 = (($signed(kernel_sums_q0) > $signed(maxes_q0)) ? 1'b1 : 1'b0);

assign grp_fu_1098_p3 = ((grp_fu_1092_p2[0:0] === 1'b1) ? kernel_sums_q0 : maxes_q0);

assign grp_fu_1106_p2 = (($signed(kernel_sums_q1) > $signed(maxes_q1)) ? 1'b1 : 1'b0);

assign grp_fu_1112_p3 = ((grp_fu_1106_p2[0:0] === 1'b1) ? kernel_sums_q1 : maxes_q1);

assign grp_fu_1821_p0 = zext_ln217_9_fu_1557_p1;

assign grp_fu_1830_p0 = zext_ln217_9_fu_1557_p1;

assign grp_fu_1838_p0 = zext_ln217_9_fu_1557_p1;

assign grp_fu_1846_p0 = zext_ln217_9_fu_1557_p1;

assign grp_fu_1854_p0 = zext_ln217_10_fu_1572_p1;

assign grp_fu_1863_p0 = zext_ln217_10_fu_1572_p1;

assign grp_fu_1871_p0 = zext_ln217_10_fu_1572_p1;

assign grp_fu_1879_p0 = zext_ln217_10_fu_1572_p1;

assign grp_fu_1887_p0 = zext_ln217_11_fu_1587_p1;

assign grp_fu_1896_p0 = zext_ln217_11_fu_1587_p1;

assign grp_fu_1904_p0 = zext_ln217_11_fu_1587_p1;

assign grp_fu_1912_p0 = zext_ln217_11_fu_1587_p1;

assign i_1_fu_1165_p2 = (i_0_reg_814 + 2'd1);

assign i_2_fu_1742_p2 = (i10_0_reg_1059 + 3'd1);

assign i_3_fu_1336_p2 = (i4_0_reg_947 + 3'd1);

assign i_fu_1177_p2 = (i1_0_reg_826 + 2'd1);

assign icmp_ln142_fu_1159_p2 = ((i_0_reg_814 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_1219_p2 = ((j_0_reg_838 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_1171_p2 = ((i1_0_reg_826 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_1261_p2 = ((j3_0_reg_897 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_1320_p2 = ((phi_ln183_reg_936 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_1330_p2 = ((i4_0_reg_947 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_1413_p2 = ((phi_ln204_reg_958 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_1407_p2 = ((phi_ln204_1_reg_970 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1423_p2 = ((l_0_reg_981 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_1500_p2 = ((m_0_reg_993 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_1610_p2 = ((phi_ln223_reg_1004 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_1_fu_1646_p2 = ((j8_0_1_reg_1026 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_2_fu_1676_p2 = ((j8_0_2_reg_1037 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_3_fu_1706_p2 = ((j8_0_3_reg_1048 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1616_p2 = ((j8_0_0_reg_1015 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln240_fu_1736_p2 = ((i10_0_reg_1059 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_1762_p2 = ((add_ln245_fu_1757_p2 == 16'd513) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_1792_p2 = ((add_ln252_fu_1787_p2 == 16'd512) ? 1'b1 : 1'b0);

assign j_1_fu_1225_p2 = (j_0_reg_838 + 2'd1);

assign j_fu_1267_p2 = (j3_0_reg_897 + 2'd1);

assign kernel_sums_d1 = (kernel_sums_q0 + tmp_9_reg_2565);

assign kernels_0_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_10_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_11_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_1_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_2_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_3_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_4_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_5_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_6_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_7_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_8_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_9_address0 = sext_ln217_12_fu_1521_p1;

assign l_fu_1429_p2 = (l_0_reg_981 + 2'd1);

assign local_col_index_1_fu_1255_p2 = ($signed(local_col_index_0_reg_849) + $signed(17'd1));

assign local_col_index_fu_1303_p2 = (local_col_index2_0_reg_887 + 17'd1);

assign local_row_indices_d1 = ((top_offset_fu_1352_p2[0:0] === 1'b1) ? select_ln168_2_reg_1967 : select_ln168_3_reg_1973);

assign m_fu_1506_p2 = (m_0_reg_993 + 2'd1);

assign output_0_V_din = tmp_57_fu_1779_p1;

assign output_1_V_din = tmp_57_fu_1779_p1;

assign output_2_V_din = tmp_57_fu_1779_p1;

assign output_3_V_din = tmp_57_fu_1779_p1;

assign read_odd_load_load_fu_1147_p1 = read_odd;

assign select_ln168_1_fu_1195_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd3 : 2'd1);

assign select_ln168_2_fu_1203_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd2 : 2'd0);

assign select_ln168_3_fu_1211_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd1 : 2'd3);

assign select_ln168_fu_1187_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln195_2_fu_1376_p3 = ((top_offset_fu_1352_p2[0:0] === 1'b1) ? select_ln168_1_reg_1962 : select_ln168_2_reg_1967);

assign select_ln195_fu_1362_p3 = ((top_offset_fu_1352_p2[0:0] === 1'b1) ? select_ln168_3_reg_1973 : select_ln168_reg_1957);

assign sext_ln147_fu_1231_p1 = local_col_index_0_reg_849;

assign sext_ln148_fu_1248_p1 = $signed(add_ln148_fu_1242_p2);

assign sext_ln157_fu_1155_p0 = read_col_index;

assign sext_ln157_fu_1155_p1 = sext_ln157_fu_1155_p0;

assign sext_ln160_fu_1283_p1 = $signed(add_ln160_fu_1277_p2);

assign sext_ln161_fu_1296_p1 = $signed(add_ln161_fu_1290_p2);

assign sext_ln217_12_fu_1521_p1 = $signed(add_ln217_14_fu_1516_p2);

assign start_out = real_start;

assign stripes_0_address0 = zext_ln217_8_fu_1547_p1;

assign stripes_1_address0 = zext_ln217_8_fu_1547_p1;

assign stripes_2_address0 = zext_ln217_8_fu_1547_p1;

assign sub_ln217_fu_1456_p2 = (zext_ln217_2_fu_1452_p1 - zext_ln217_1_fu_1440_p1);

assign tmp_10_fu_1462_p3 = {{local_row_indices_q1}, {9'd0}};

assign tmp_11_fu_1474_p3 = {{local_row_indices_q1}, {1'd0}};

assign tmp_3_fu_1444_p3 = {{l_0_reg_981}, {2'd0}};

assign tmp_56_fu_1342_p4 = {{i4_0_reg_947[2:1]}};

assign tmp_57_fu_1779_p1 = maxes_q1[15:0];

assign top_offset_fu_1352_p2 = ((tmp_56_fu_1342_p4 != 2'd0) ? 1'b1 : 1'b0);

assign trunc_ln147_fu_1238_p1 = local_col_index_0_reg_849[12:0];

assign trunc_ln160_fu_1273_p1 = local_col_index2_0_reg_887[12:0];

assign trunc_ln182_fu_1753_p1 = i10_0_reg_1059[1:0];

assign trunc_ln189_fu_1358_p1 = i4_0_reg_947[0:0];

assign trunc_ln202_fu_1385_p1 = compute_col_index_lo_reg_2118[12:0];

assign xor_ln249_fu_1768_p2 = (read_odd_load_reg_1920 ^ 1'd1);

assign xor_ln256_fu_1804_p2 = (compute_odd_load_reg_1952 ^ 1'd1);

assign zext_ln183_fu_1315_p1 = phi_ln183_reg_936;

assign zext_ln202_fu_1382_p1 = trunc_ln189_reg_2243;

assign zext_ln204_fu_1400_p1 = phi_ln204_1_reg_970;

assign zext_ln217_10_fu_1572_p1 = stripes_1_load_reg_2425;

assign zext_ln217_11_fu_1587_p1 = stripes_2_load_reg_2455;

assign zext_ln217_1_fu_1440_p1 = l_0_reg_981;

assign zext_ln217_2_fu_1452_p1 = tmp_3_fu_1444_p3;

assign zext_ln217_3_fu_1470_p1 = tmp_10_fu_1462_p3;

assign zext_ln217_4_fu_1482_p1 = tmp_11_fu_1474_p3;

assign zext_ln217_5_fu_1492_p1 = add_ln217_13_fu_1486_p2;

assign zext_ln217_6_fu_1496_p1 = m_0_reg_993;

assign zext_ln217_7_fu_1512_p1 = m_0_reg_993;

assign zext_ln217_8_fu_1547_p1 = add_ln217_15_fu_1542_p2;

assign zext_ln217_9_fu_1557_p1 = stripes_0_load_reg_2395;

assign zext_ln217_fu_1435_p1 = l_0_reg_981;

assign zext_ln223_fu_1605_p1 = phi_ln223_reg_1004;

assign zext_ln242_fu_1748_p1 = i10_0_reg_1059;

always @ (posedge ap_clk) begin
    select_ln168_reg_1957[0] <= 1'b0;
    select_ln168_1_reg_1962[0] <= 1'b1;
    select_ln168_2_reg_1967[0] <= 1'b0;
    select_ln168_3_reg_1973[0] <= 1'b1;
    zext_ln202_reg_2253[12:1] <= 12'b000000000000;
    zext_ln217_5_reg_2302[0] <= 1'b0;
    zext_ln217_5_reg_2302[12] <= 1'b0;
end

endmodule //kernel
