// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        input_upper_0_V_dout,
        input_upper_0_V_empty_n,
        input_upper_0_V_read,
        input_upper_1_V_dout,
        input_upper_1_V_empty_n,
        input_upper_1_V_read,
        input_upper_2_V_dout,
        input_upper_2_V_empty_n,
        input_upper_2_V_read,
        input_lower_0_V_dout,
        input_lower_0_V_empty_n,
        input_lower_0_V_read,
        input_lower_1_V_dout,
        input_lower_1_V_empty_n,
        input_lower_1_V_read,
        input_lower_2_V_dout,
        input_lower_2_V_empty_n,
        input_lower_2_V_read,
        output_0_V_din,
        output_0_V_full_n,
        output_0_V_write,
        output_1_V_din,
        output_1_V_full_n,
        output_1_V_write,
        output_2_V_din,
        output_2_V_full_n,
        output_2_V_write,
        output_3_V_din,
        output_3_V_full_n,
        output_3_V_write
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] input_upper_0_V_dout;
input   input_upper_0_V_empty_n;
output   input_upper_0_V_read;
input  [7:0] input_upper_1_V_dout;
input   input_upper_1_V_empty_n;
output   input_upper_1_V_read;
input  [7:0] input_upper_2_V_dout;
input   input_upper_2_V_empty_n;
output   input_upper_2_V_read;
input  [7:0] input_lower_0_V_dout;
input   input_lower_0_V_empty_n;
output   input_lower_0_V_read;
input  [7:0] input_lower_1_V_dout;
input   input_lower_1_V_empty_n;
output   input_lower_1_V_read;
input  [7:0] input_lower_2_V_dout;
input   input_lower_2_V_empty_n;
output   input_lower_2_V_read;
output  [15:0] output_0_V_din;
input   output_0_V_full_n;
output   output_0_V_write;
output  [15:0] output_1_V_din;
input   output_1_V_full_n;
output   output_1_V_write;
output  [15:0] output_2_V_din;
input   output_2_V_full_n;
output   output_2_V_write;
output  [15:0] output_3_V_din;
input   output_3_V_full_n;
output   output_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg input_upper_0_V_read;
reg input_upper_1_V_read;
reg input_upper_2_V_read;
reg input_lower_0_V_read;
reg input_lower_1_V_read;
reg input_lower_2_V_read;
reg output_0_V_write;
reg output_1_V_write;
reg output_2_V_write;
reg output_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] iteration;
reg   [15:0] col_index;
wire   [3:0] kernels_0_address0;
reg    kernels_0_ce0;
wire   [7:0] kernels_0_q0;
wire   [12:0] stripes_0_address0;
reg    stripes_0_ce0;
wire   [7:0] stripes_0_q0;
reg   [12:0] stripes_0_address1;
reg    stripes_0_ce1;
reg    stripes_0_we1;
reg   [7:0] stripes_0_d1;
wire   [3:0] kernels_1_address0;
reg    kernels_1_ce0;
wire   [7:0] kernels_1_q0;
wire   [3:0] kernels_2_address0;
reg    kernels_2_ce0;
wire   [7:0] kernels_2_q0;
wire   [3:0] kernels_3_address0;
reg    kernels_3_ce0;
wire   [7:0] kernels_3_q0;
wire   [3:0] kernels_4_address0;
reg    kernels_4_ce0;
wire   [7:0] kernels_4_q0;
wire   [12:0] stripes_1_address0;
reg    stripes_1_ce0;
wire   [7:0] stripes_1_q0;
reg   [12:0] stripes_1_address1;
reg    stripes_1_ce1;
reg    stripes_1_we1;
reg   [7:0] stripes_1_d1;
wire   [3:0] kernels_5_address0;
reg    kernels_5_ce0;
wire   [7:0] kernels_5_q0;
wire   [3:0] kernels_6_address0;
reg    kernels_6_ce0;
wire   [7:0] kernels_6_q0;
wire   [3:0] kernels_7_address0;
reg    kernels_7_ce0;
wire   [7:0] kernels_7_q0;
wire   [3:0] kernels_8_address0;
reg    kernels_8_ce0;
wire   [7:0] kernels_8_q0;
wire   [12:0] stripes_2_address0;
reg    stripes_2_ce0;
wire   [7:0] stripes_2_q0;
reg   [12:0] stripes_2_address1;
reg    stripes_2_ce1;
reg    stripes_2_we1;
reg   [7:0] stripes_2_d1;
wire   [3:0] kernels_9_address0;
reg    kernels_9_ce0;
wire   [7:0] kernels_9_q0;
wire   [3:0] kernels_10_address0;
reg    kernels_10_ce0;
wire   [7:0] kernels_10_q0;
wire   [3:0] kernels_11_address0;
reg    kernels_11_ce0;
wire   [7:0] kernels_11_q0;
reg    input_upper_0_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln151_fu_1226_p2;
reg   [1:0] i1_0_reg_816;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln139_fu_1268_p2;
reg   [1:0] i_0_reg_828;
reg    input_upper_1_V_blk_n;
reg    input_upper_2_V_blk_n;
reg    input_lower_0_V_blk_n;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
reg    input_lower_1_V_blk_n;
reg    input_lower_2_V_blk_n;
reg    output_0_V_blk_n;
wire    ap_CS_fsm_state37;
reg   [1:0] trunc_ln182_reg_2504;
reg    output_1_V_blk_n;
reg    output_2_V_blk_n;
reg    output_3_V_blk_n;
reg   [15:0] reg_1084;
reg    ap_predicate_op128_read_state4;
reg    ap_block_state4;
reg    ap_predicate_op178_read_state7;
reg    ap_block_state7;
wire   [15:0] partial_sums_0_q0;
reg   [15:0] reg_1088;
wire    ap_CS_fsm_state17;
wire   [15:0] partial_sums_0_q1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state30;
wire   [15:0] partial_sums_1_q0;
reg   [15:0] reg_1093;
wire   [15:0] partial_sums_1_q1;
wire   [15:0] partial_sums_2_q0;
reg   [15:0] reg_1098;
wire   [15:0] partial_sums_2_q1;
wire   [15:0] grp_fu_1062_p3;
reg   [15:0] reg_1103;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire   [15:0] grp_fu_1076_p3;
reg   [15:0] reg_1109;
wire   [0:0] iteration_load_load_fu_1127_p1;
reg   [0:0] iteration_load_reg_1856;
reg    ap_block_state1;
wire   [1:0] i_1_fu_1137_p2;
reg   [1:0] i_1_reg_1868;
wire    ap_CS_fsm_state2;
wire   [1:0] i_fu_1149_p2;
reg   [1:0] i_reg_1876;
wire   [0:0] icmp_ln160_fu_1165_p2;
reg   [0:0] icmp_ln160_reg_1881;
wire   [0:0] icmp_ln137_fu_1143_p2;
wire   [0:0] icmp_ln149_fu_1131_p2;
wire   [13:0] trunc_ln160_fu_1171_p1;
reg   [13:0] trunc_ln160_reg_1886;
wire   [1:0] select_ln162_fu_1175_p3;
reg   [1:0] select_ln162_reg_1891;
wire   [1:0] select_ln162_1_fu_1182_p3;
reg   [1:0] select_ln162_1_reg_1896;
wire   [1:0] select_ln162_2_fu_1189_p3;
reg   [1:0] select_ln162_2_reg_1901;
wire   [1:0] select_ln162_3_fu_1196_p3;
reg   [1:0] select_ln162_3_reg_1907;
wire   [1:0] j_1_fu_1232_p2;
reg   [1:0] j_1_reg_1919;
reg    ap_predicate_op96_read_state3;
reg    ap_predicate_op98_read_state3;
reg    ap_predicate_op100_read_state3;
reg    ap_block_state3;
reg   [12:0] stripes_0_addr_3_reg_1939;
reg   [12:0] stripes_1_addr_3_reg_1944;
reg   [12:0] stripes_2_addr_3_reg_1949;
wire   [1:0] j_fu_1274_p2;
reg   [1:0] j_reg_1972;
reg    ap_predicate_op147_read_state6;
reg    ap_predicate_op149_read_state6;
reg    ap_predicate_op151_read_state6;
reg    ap_block_state6;
reg   [12:0] stripes_0_addr_2_reg_1992;
reg   [12:0] stripes_1_addr_2_reg_1997;
reg   [12:0] stripes_2_addr_2_reg_2002;
wire   [1:0] add_ln183_fu_1304_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln183_fu_1315_p2;
wire   [2:0] i_3_fu_1327_p2;
reg   [2:0] i_3_reg_2159;
wire    ap_CS_fsm_state10;
wire   [0:0] trunc_ln189_fu_1349_p1;
reg   [0:0] trunc_ln189_reg_2164;
wire   [0:0] icmp_ln184_fu_1321_p2;
wire   [1:0] select_ln195_2_fu_1367_p3;
reg   [1:0] select_ln195_2_reg_2169;
wire   [13:0] select_ln202_fu_1378_p3;
reg   [13:0] select_ln202_reg_2174;
wire   [13:0] zext_ln202_fu_1385_p1;
reg   [13:0] zext_ln202_reg_2179;
wire    ap_CS_fsm_state11;
wire   [1:0] add_ln204_fu_1388_p2;
reg   [1:0] add_ln204_reg_2184;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln204_1_fu_1394_p2;
wire    ap_CS_fsm_state13;
wire   [13:0] add_ln217_16_fu_1419_p2;
reg   [13:0] add_ln217_16_reg_2200;
wire   [0:0] icmp_ln204_fu_1407_p2;
wire   [0:0] icmp_ln204_1_fu_1413_p2;
wire   [1:0] l_fu_1429_p2;
reg   [1:0] l_reg_2208;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln207_fu_1423_p2;
wire   [4:0] sub_ln217_fu_1456_p2;
reg   [4:0] sub_ln217_reg_2218;
wire    ap_CS_fsm_state15;
wire   [13:0] zext_ln217_8_fu_1492_p1;
reg   [13:0] zext_ln217_8_reg_2223;
wire   [1:0] m_fu_1506_p2;
reg   [1:0] m_reg_2231;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln209_fu_1500_p2;
reg  signed [7:0] kernels_0_load_reg_2311;
reg   [7:0] stripes_0_load_reg_2316;
reg  signed [7:0] kernels_1_load_reg_2321;
reg   [15:0] partial_sums_0_load_1_reg_2326;
reg  signed [7:0] kernels_2_load_reg_2331;
reg  signed [7:0] kernels_3_load_reg_2336;
reg  signed [7:0] kernels_4_load_reg_2341;
reg   [7:0] stripes_1_load_reg_2346;
reg  signed [7:0] kernels_5_load_reg_2351;
reg   [15:0] partial_sums_1_load_1_reg_2356;
reg  signed [7:0] kernels_6_load_reg_2361;
reg  signed [7:0] kernels_7_load_reg_2366;
reg  signed [7:0] kernels_8_load_reg_2371;
reg   [7:0] stripes_2_load_reg_2376;
reg  signed [7:0] kernels_9_load_reg_2381;
reg   [15:0] partial_sums_2_load_1_reg_2386;
reg  signed [7:0] kernels_10_load_reg_2391;
reg  signed [7:0] kernels_11_load_reg_2396;
wire  signed [15:0] grp_fu_1774_p3;
reg  signed [15:0] add_ln217_3_reg_2401;
wire    ap_CS_fsm_state18;
wire  signed [15:0] grp_fu_1782_p3;
reg  signed [15:0] add_ln217_4_reg_2406;
wire  signed [15:0] grp_fu_1807_p3;
reg  signed [15:0] add_ln217_7_reg_2411;
wire  signed [15:0] grp_fu_1815_p3;
reg  signed [15:0] add_ln217_8_reg_2416;
wire  signed [15:0] grp_fu_1840_p3;
reg  signed [15:0] add_ln217_11_reg_2421;
wire  signed [15:0] grp_fu_1848_p3;
reg  signed [15:0] add_ln217_12_reg_2426;
wire   [1:0] add_ln223_fu_1599_p2;
wire    ap_CS_fsm_state20;
wire   [1:0] add_ln227_fu_1622_p2;
reg   [1:0] add_ln227_reg_2442;
wire    ap_CS_fsm_state22;
wire   [15:0] tmp_3_fu_1628_p5;
reg   [15:0] tmp_3_reg_2447;
wire   [0:0] icmp_ln227_fu_1616_p2;
wire   [1:0] add_ln227_1_fu_1652_p2;
reg   [1:0] add_ln227_1_reg_2455;
wire    ap_CS_fsm_state25;
wire   [15:0] tmp_5_fu_1658_p5;
reg   [15:0] tmp_5_reg_2460;
wire   [0:0] icmp_ln227_1_fu_1646_p2;
wire   [1:0] add_ln227_2_fu_1682_p2;
reg   [1:0] add_ln227_2_reg_2468;
wire    ap_CS_fsm_state28;
wire   [15:0] tmp_7_fu_1688_p5;
reg   [15:0] tmp_7_reg_2473;
wire   [0:0] icmp_ln227_2_fu_1676_p2;
wire   [1:0] add_ln227_3_fu_1712_p2;
reg   [1:0] add_ln227_3_reg_2481;
wire    ap_CS_fsm_state31;
wire   [15:0] tmp_8_fu_1718_p5;
reg   [15:0] tmp_8_reg_2486;
wire   [0:0] icmp_ln227_3_fu_1706_p2;
wire   [2:0] i_2_fu_1742_p2;
reg   [2:0] i_2_reg_2494;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln240_fu_1736_p2;
wire   [1:0] trunc_ln182_fu_1753_p1;
reg   [1:0] maxes_address0;
reg    maxes_ce0;
reg    maxes_we0;
reg   [15:0] maxes_d0;
wire   [15:0] maxes_q0;
reg   [1:0] maxes_address1;
reg    maxes_ce1;
reg    maxes_we1;
reg   [15:0] maxes_d1;
wire   [15:0] maxes_q1;
reg   [1:0] local_row_indices_address0;
reg    local_row_indices_ce0;
reg    local_row_indices_we0;
reg   [1:0] local_row_indices_d0;
reg   [1:0] local_row_indices_address1;
reg    local_row_indices_ce1;
reg    local_row_indices_we1;
wire   [1:0] local_row_indices_d1;
wire   [1:0] local_row_indices_q1;
reg   [1:0] partial_sums_0_address0;
reg    partial_sums_0_ce0;
reg    partial_sums_0_we0;
reg   [15:0] partial_sums_0_d0;
reg   [1:0] partial_sums_0_address1;
reg    partial_sums_0_ce1;
reg    partial_sums_0_we1;
reg   [15:0] partial_sums_0_d1;
reg   [1:0] partial_sums_1_address0;
reg    partial_sums_1_ce0;
reg    partial_sums_1_we0;
reg   [15:0] partial_sums_1_d0;
reg   [1:0] partial_sums_1_address1;
reg    partial_sums_1_ce1;
reg    partial_sums_1_we1;
reg   [15:0] partial_sums_1_d1;
reg   [1:0] partial_sums_2_address0;
reg    partial_sums_2_ce0;
reg    partial_sums_2_we0;
reg   [15:0] partial_sums_2_d0;
reg   [1:0] partial_sums_2_address1;
reg    partial_sums_2_ce1;
reg    partial_sums_2_we1;
reg   [15:0] partial_sums_2_d1;
reg   [1:0] kernel_sums_address0;
reg    kernel_sums_ce0;
reg    kernel_sums_we0;
reg   [15:0] kernel_sums_d0;
wire   [15:0] kernel_sums_q0;
reg   [1:0] kernel_sums_address1;
reg    kernel_sums_ce1;
reg    kernel_sums_we1;
wire   [15:0] kernel_sums_d1;
wire   [15:0] kernel_sums_q1;
reg   [1:0] j2_0_reg_840;
wire    ap_CS_fsm_state5;
reg   [7:0] tmp_100_0_reg_851;
reg   [7:0] tmp_101_0_reg_865;
reg   [1:0] j_0_reg_879;
wire    ap_CS_fsm_state8;
reg   [7:0] tmp_0_reg_890;
reg   [7:0] tmp_99_0_reg_904;
reg   [1:0] phi_ln183_reg_918;
reg   [2:0] i3_0_reg_929;
wire    ap_CS_fsm_state35;
reg   [1:0] phi_ln204_reg_940;
reg   [1:0] phi_ln204_1_reg_952;
reg   [1:0] l_0_reg_963;
reg   [1:0] m_0_reg_975;
wire    ap_CS_fsm_state19;
reg   [1:0] phi_ln223_reg_986;
wire   [0:0] icmp_ln223_fu_1610_p2;
reg   [1:0] j6_0_0_reg_997;
wire    ap_CS_fsm_state23;
reg   [1:0] j6_0_1_reg_1008;
wire    ap_CS_fsm_state26;
reg   [1:0] j6_0_2_reg_1019;
wire    ap_CS_fsm_state29;
reg   [1:0] j6_0_3_reg_1030;
wire    ap_CS_fsm_state32;
reg   [2:0] i8_0_reg_1041;
reg    ap_block_state37;
wire  signed [63:0] sext_ln153_fu_1248_p1;
wire  signed [63:0] sext_ln154_fu_1261_p1;
wire  signed [63:0] sext_ln141_fu_1280_p1;
wire  signed [63:0] sext_ln142_fu_1297_p1;
wire   [63:0] zext_ln183_fu_1310_p1;
wire   [63:0] zext_ln204_fu_1400_p1;
wire   [63:0] zext_ln217_fu_1435_p1;
wire  signed [63:0] sext_ln217_12_fu_1521_p1;
wire   [63:0] zext_ln217_11_fu_1547_p1;
wire   [63:0] zext_ln223_fu_1605_p1;
wire   [63:0] zext_ln242_fu_1748_p1;
wire   [0:0] xor_ln180_fu_1215_p2;
wire   [0:0] icmp_ln177_fu_1203_p2;
wire   [15:0] grp_fu_1115_p2;
wire   [1:0] select_ln195_fu_1353_p3;
wire  signed [15:0] grp_fu_1790_p3;
wire  signed [15:0] grp_fu_1799_p3;
wire  signed [15:0] grp_fu_1757_p3;
wire  signed [15:0] grp_fu_1766_p3;
wire  signed [15:0] grp_fu_1823_p3;
wire  signed [15:0] grp_fu_1832_p3;
wire   [15:0] add_ln229_fu_1640_p2;
wire   [15:0] add_ln229_1_fu_1670_p2;
wire   [15:0] add_ln229_2_fu_1700_p2;
wire   [0:0] grp_fu_1056_p2;
wire   [0:0] grp_fu_1070_p2;
wire  signed [15:0] sext_ln160_fu_1155_p0;
wire  signed [16:0] sext_ln160_fu_1155_p1;
wire   [16:0] add_ln160_fu_1159_p2;
wire  signed [15:0] trunc_ln160_fu_1171_p0;
wire  signed [15:0] icmp_ln177_fu_1203_p0;
wire   [13:0] trunc_ln153_fu_1238_p1;
wire   [13:0] add_ln153_fu_1242_p2;
wire   [13:0] add_ln154_fu_1255_p2;
wire  signed [15:0] sext_ln141_fu_1280_p0;
wire  signed [15:0] trunc_ln141_fu_1287_p0;
wire   [13:0] trunc_ln141_fu_1287_p1;
wire   [13:0] add_ln142_fu_1291_p2;
wire   [1:0] tmp_56_fu_1333_p4;
wire   [0:0] top_offset_fu_1343_p2;
wire   [13:0] add_ln202_fu_1373_p2;
wire   [3:0] tmp_9_fu_1444_p3;
wire   [4:0] zext_ln217_2_fu_1452_p1;
wire   [4:0] zext_ln217_1_fu_1440_p1;
wire   [11:0] tmp_10_fu_1462_p3;
wire   [9:0] tmp_11_fu_1474_p3;
wire   [12:0] zext_ln217_7_fu_1482_p1;
wire   [12:0] zext_ln217_3_fu_1470_p1;
wire   [12:0] add_ln217_13_fu_1486_p2;
wire   [4:0] zext_ln217_10_fu_1512_p1;
wire   [4:0] add_ln217_14_fu_1516_p2;
wire   [13:0] zext_ln217_9_fu_1496_p1;
wire   [13:0] add_ln217_fu_1537_p2;
wire   [13:0] add_ln217_15_fu_1542_p2;
wire   [7:0] grp_fu_1757_p0;
wire   [15:0] zext_ln217_4_fu_1557_p1;
wire   [7:0] grp_fu_1766_p0;
wire   [7:0] grp_fu_1774_p0;
wire   [7:0] grp_fu_1782_p0;
wire   [7:0] grp_fu_1790_p0;
wire   [15:0] zext_ln217_5_fu_1572_p1;
wire   [7:0] grp_fu_1799_p0;
wire   [7:0] grp_fu_1807_p0;
wire   [7:0] grp_fu_1815_p0;
wire   [7:0] grp_fu_1823_p0;
wire   [15:0] zext_ln217_6_fu_1587_p1;
wire   [7:0] grp_fu_1832_p0;
wire   [7:0] grp_fu_1840_p0;
wire   [7:0] grp_fu_1848_p0;
reg   [36:0] ap_NS_fsm;
reg    ap_condition_1575;
reg    ap_condition_1571;
reg    ap_condition_339;
reg    ap_condition_349;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 37'd1;
#0 iteration = 1'd0;
#0 col_index = 16'd0;
end

kernel_kernels_0 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_address0),
    .ce0(kernels_0_ce0),
    .q0(kernels_0_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 5120 ),
    .AddressWidth( 13 ))
stripes_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_address0),
    .ce0(stripes_0_ce0),
    .q0(stripes_0_q0),
    .address1(stripes_0_address1),
    .ce1(stripes_0_ce1),
    .we1(stripes_0_we1),
    .d1(stripes_0_d1)
);

kernel_kernels_1 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_address0),
    .ce0(kernels_1_ce0),
    .q0(kernels_1_q0)
);

kernel_kernels_2 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_address0),
    .ce0(kernels_2_ce0),
    .q0(kernels_2_q0)
);

kernel_kernels_3 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_address0),
    .ce0(kernels_3_ce0),
    .q0(kernels_3_q0)
);

kernel_kernels_4 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_address0),
    .ce0(kernels_4_ce0),
    .q0(kernels_4_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 5120 ),
    .AddressWidth( 13 ))
stripes_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_address0),
    .ce0(stripes_1_ce0),
    .q0(stripes_1_q0),
    .address1(stripes_1_address1),
    .ce1(stripes_1_ce1),
    .we1(stripes_1_we1),
    .d1(stripes_1_d1)
);

kernel_kernels_5 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_address0),
    .ce0(kernels_5_ce0),
    .q0(kernels_5_q0)
);

kernel_kernels_6 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_address0),
    .ce0(kernels_6_ce0),
    .q0(kernels_6_q0)
);

kernel_kernels_7 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_address0),
    .ce0(kernels_7_ce0),
    .q0(kernels_7_q0)
);

kernel_kernels_8 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_address0),
    .ce0(kernels_8_ce0),
    .q0(kernels_8_q0)
);

kernel_stripes_0 #(
    .DataWidth( 8 ),
    .AddressRange( 5120 ),
    .AddressWidth( 13 ))
stripes_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_address0),
    .ce0(stripes_2_ce0),
    .q0(stripes_2_q0),
    .address1(stripes_2_address1),
    .ce1(stripes_2_ce1),
    .we1(stripes_2_we1),
    .d1(stripes_2_d1)
);

kernel_kernels_9 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_address0),
    .ce0(kernels_9_ce0),
    .q0(kernels_9_q0)
);

kernel_kernels_10 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_address0),
    .ce0(kernels_10_ce0),
    .q0(kernels_10_q0)
);

kernel_kernels_11 #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernels_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_address0),
    .ce0(kernels_11_ce0),
    .q0(kernels_11_q0)
);

kernel_maxes #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
maxes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maxes_address0),
    .ce0(maxes_ce0),
    .we0(maxes_we0),
    .d0(maxes_d0),
    .q0(maxes_q0),
    .address1(maxes_address1),
    .ce1(maxes_ce1),
    .we1(maxes_we1),
    .d1(maxes_d1),
    .q1(maxes_q1)
);

kernel_local_row_bkb #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
local_row_indices_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_row_indices_address0),
    .ce0(local_row_indices_ce0),
    .we0(local_row_indices_we0),
    .d0(local_row_indices_d0),
    .address1(local_row_indices_address1),
    .ce1(local_row_indices_ce1),
    .we1(local_row_indices_we1),
    .d1(local_row_indices_d1),
    .q1(local_row_indices_q1)
);

kernel_maxes #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_0_address0),
    .ce0(partial_sums_0_ce0),
    .we0(partial_sums_0_we0),
    .d0(partial_sums_0_d0),
    .q0(partial_sums_0_q0),
    .address1(partial_sums_0_address1),
    .ce1(partial_sums_0_ce1),
    .we1(partial_sums_0_we1),
    .d1(partial_sums_0_d1),
    .q1(partial_sums_0_q1)
);

kernel_maxes #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_1_address0),
    .ce0(partial_sums_1_ce0),
    .we0(partial_sums_1_we0),
    .d0(partial_sums_1_d0),
    .q0(partial_sums_1_q0),
    .address1(partial_sums_1_address1),
    .ce1(partial_sums_1_ce1),
    .we1(partial_sums_1_we1),
    .d1(partial_sums_1_d1),
    .q1(partial_sums_1_q1)
);

kernel_maxes #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_2_address0),
    .ce0(partial_sums_2_ce0),
    .we0(partial_sums_2_we0),
    .d0(partial_sums_2_d0),
    .q0(partial_sums_2_q0),
    .address1(partial_sums_2_address1),
    .ce1(partial_sums_2_ce1),
    .we1(partial_sums_2_we1),
    .d1(partial_sums_2_d1),
    .q1(partial_sums_2_q1)
);

kernel_kernel_sums #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernel_sums_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_sums_address0),
    .ce0(kernel_sums_ce0),
    .we0(kernel_sums_we0),
    .d0(kernel_sums_d0),
    .q0(kernel_sums_q0),
    .address1(kernel_sums_address1),
    .ce1(kernel_sums_ce1),
    .we1(kernel_sums_we1),
    .d1(kernel_sums_d1),
    .q1(kernel_sums_q1)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mfYi_U16(
    .din0(reg_1088),
    .din1(reg_1093),
    .din2(reg_1098),
    .din3(j6_0_0_reg_997),
    .dout(tmp_3_fu_1628_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mfYi_U17(
    .din0(reg_1088),
    .din1(reg_1093),
    .din2(reg_1098),
    .din3(j6_0_1_reg_1008),
    .dout(tmp_5_fu_1658_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mfYi_U18(
    .din0(reg_1088),
    .din1(reg_1093),
    .din2(reg_1098),
    .din3(j6_0_2_reg_1019),
    .dout(tmp_7_fu_1688_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mfYi_U19(
    .din0(reg_1088),
    .din1(reg_1093),
    .din2(reg_1098),
    .din3(j6_0_3_reg_1030),
    .dout(tmp_8_fu_1718_p5)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U20(
    .din0(grp_fu_1757_p0),
    .din1(kernels_0_load_reg_2311),
    .din2(reg_1088),
    .dout(grp_fu_1757_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U21(
    .din0(grp_fu_1766_p0),
    .din1(kernels_1_load_reg_2321),
    .din2(partial_sums_0_load_1_reg_2326),
    .dout(grp_fu_1766_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U22(
    .din0(grp_fu_1774_p0),
    .din1(kernels_2_load_reg_2331),
    .din2(partial_sums_0_q1),
    .dout(grp_fu_1774_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U23(
    .din0(grp_fu_1782_p0),
    .din1(kernels_3_load_reg_2336),
    .din2(partial_sums_0_q0),
    .dout(grp_fu_1782_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U24(
    .din0(grp_fu_1790_p0),
    .din1(kernels_4_load_reg_2341),
    .din2(reg_1093),
    .dout(grp_fu_1790_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U25(
    .din0(grp_fu_1799_p0),
    .din1(kernels_5_load_reg_2351),
    .din2(partial_sums_1_load_1_reg_2356),
    .dout(grp_fu_1799_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U26(
    .din0(grp_fu_1807_p0),
    .din1(kernels_6_load_reg_2361),
    .din2(partial_sums_1_q1),
    .dout(grp_fu_1807_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U27(
    .din0(grp_fu_1815_p0),
    .din1(kernels_7_load_reg_2366),
    .din2(partial_sums_1_q0),
    .dout(grp_fu_1815_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U28(
    .din0(grp_fu_1823_p0),
    .din1(kernels_8_load_reg_2371),
    .din2(reg_1098),
    .dout(grp_fu_1823_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U29(
    .din0(grp_fu_1832_p0),
    .din1(kernels_9_load_reg_2381),
    .din2(partial_sums_2_load_1_reg_2386),
    .dout(grp_fu_1832_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U30(
    .din0(grp_fu_1840_p0),
    .din1(kernels_10_load_reg_2391),
    .din2(partial_sums_2_q1),
    .dout(grp_fu_1840_p3)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fused_cnn_layer_mg8j_U31(
    .din0(grp_fu_1848_p0),
    .din1(kernels_11_load_reg_2396),
    .din2(partial_sums_2_q0),
    .dout(grp_fu_1848_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln240_fu_1736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        iteration <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln137_fu_1143_p2 == 1'd1) & (icmp_ln177_fu_1203_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd1)) | ((icmp_ln149_fu_1131_p2 == 1'd1) & (icmp_ln177_fu_1203_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd0))))) begin
            iteration <= xor_ln180_fu_1215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        col_index <= grp_fu_1115_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln137_fu_1143_p2 == 1'd1) & (icmp_ln177_fu_1203_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd1)) | ((icmp_ln149_fu_1131_p2 == 1'd1) & (icmp_ln177_fu_1203_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd0))))) begin
        col_index <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (iteration_load_load_fu_1127_p1 == 1'd0))) begin
        i1_0_reg_816 <= 2'd0;
    end else if ((~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (icmp_ln151_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_reg_816 <= i_1_reg_1868;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i3_0_reg_929 <= i_3_reg_2159;
    end else if (((icmp_ln183_fu_1315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i3_0_reg_929 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln184_fu_1321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i8_0_reg_1041 <= 3'd0;
    end else if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (1'b1 == ap_CS_fsm_state37))) begin
        i8_0_reg_1041 <= i_2_reg_2494;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (iteration_load_load_fu_1127_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_828 <= 2'd0;
    end else if ((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (icmp_ln139_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_reg_828 <= i_reg_1876;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln149_fu_1131_p2 == 1'd0) & (iteration_load_reg_1856 == 1'd0))) begin
        j2_0_reg_840 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j2_0_reg_840 <= j_1_reg_1919;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j6_0_0_reg_997 <= add_ln227_reg_2442;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j6_0_0_reg_997 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j6_0_1_reg_1008 <= add_ln227_1_reg_2455;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        j6_0_1_reg_1008 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j6_0_2_reg_1019 <= add_ln227_2_reg_2468;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j6_0_2_reg_1019 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        j6_0_3_reg_1030 <= add_ln227_3_reg_2481;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        j6_0_3_reg_1030 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((iteration_load_reg_1856 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln137_fu_1143_p2 == 1'd0))) begin
        j_0_reg_879 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_0_reg_879 <= j_reg_1972;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_fu_1500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        l_0_reg_963 <= l_reg_2208;
    end else if (((icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        l_0_reg_963 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m_0_reg_975 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_0_reg_975 <= m_reg_2231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln183_fu_1315_p2 == 1'd0))) begin
        phi_ln183_reg_918 <= add_ln183_fu_1304_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln137_fu_1143_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd1)) | ((icmp_ln149_fu_1131_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd0))))) begin
        phi_ln183_reg_918 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln204_fu_1407_p2 == 1'd0))) begin
        phi_ln204_1_reg_952 <= add_ln204_1_fu_1394_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_ln204_1_reg_952 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln204_fu_1407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln204_1_fu_1413_p2 == 1'd0))) begin
        phi_ln204_reg_940 <= add_ln204_reg_2184;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        phi_ln204_reg_940 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln207_fu_1423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_ln223_reg_986 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln223_fu_1610_p2 == 1'd0))) begin
        phi_ln223_reg_986 <= add_ln223_fu_1599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1088 <= partial_sums_0_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1088 <= partial_sums_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1093 <= partial_sums_1_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1093 <= partial_sums_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1098 <= partial_sums_2_q1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1098 <= partial_sums_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1575)) begin
        if ((i_0_reg_828 == 2'd0)) begin
            tmp_0_reg_890 <= input_upper_0_V_dout;
        end else if ((i_0_reg_828 == 2'd1)) begin
            tmp_0_reg_890 <= input_upper_1_V_dout;
        end else if ((~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0))) begin
            tmp_0_reg_890 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1571)) begin
        if ((i1_0_reg_816 == 2'd0)) begin
            tmp_100_0_reg_851 <= input_upper_0_V_dout;
        end else if ((i1_0_reg_816 == 2'd1)) begin
            tmp_100_0_reg_851 <= input_upper_1_V_dout;
        end else if ((~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0))) begin
            tmp_100_0_reg_851 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_339)) begin
        if ((i1_0_reg_816 == 2'd0)) begin
            tmp_101_0_reg_865 <= input_lower_0_V_dout;
        end else if ((i1_0_reg_816 == 2'd1)) begin
            tmp_101_0_reg_865 <= input_lower_1_V_dout;
        end else if ((~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0))) begin
            tmp_101_0_reg_865 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_349)) begin
        if ((i_0_reg_828 == 2'd0)) begin
            tmp_99_0_reg_904 <= input_lower_0_V_dout;
        end else if ((i_0_reg_828 == 2'd1)) begin
            tmp_99_0_reg_904 <= input_lower_1_V_dout;
        end else if ((~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0))) begin
            tmp_99_0_reg_904 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln204_reg_2184 <= add_ln204_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln217_11_reg_2421 <= grp_fu_1840_p3;
        add_ln217_12_reg_2426 <= grp_fu_1848_p3;
        add_ln217_3_reg_2401 <= grp_fu_1774_p3;
        add_ln217_4_reg_2406 <= grp_fu_1782_p3;
        add_ln217_7_reg_2411 <= grp_fu_1807_p3;
        add_ln217_8_reg_2416 <= grp_fu_1815_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln217_16_reg_2200 <= add_ln217_16_fu_1419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln227_1_reg_2455 <= add_ln227_1_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln227_2_reg_2468 <= add_ln227_2_fu_1682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln227_3_reg_2481 <= add_ln227_3_fu_1712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln227_reg_2442 <= add_ln227_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (iteration_load_reg_1856 == 1'd0))) begin
        i_1_reg_1868 <= i_1_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_2_reg_2494 <= i_2_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_2159 <= i_3_fu_1327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((iteration_load_reg_1856 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_1876 <= i_fu_1149_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln137_fu_1143_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd1)) | ((icmp_ln149_fu_1131_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd0))))) begin
        icmp_ln160_reg_1881 <= icmp_ln160_fu_1165_p2;
        select_ln162_1_reg_1896[1] <= select_ln162_1_fu_1182_p3[1];
        select_ln162_2_reg_1901[1] <= select_ln162_2_fu_1189_p3[1];
        select_ln162_3_reg_1907[1] <= select_ln162_3_fu_1196_p3[1];
        select_ln162_reg_1891[1] <= select_ln162_fu_1175_p3[1];
        trunc_ln160_reg_1886 <= trunc_ln160_fu_1171_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        iteration_load_reg_1856 <= iteration;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        j_1_reg_1919 <= j_1_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
        j_reg_1972 <= j_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        kernels_0_load_reg_2311 <= kernels_0_q0;
        kernels_10_load_reg_2391 <= kernels_10_q0;
        kernels_11_load_reg_2396 <= kernels_11_q0;
        kernels_1_load_reg_2321 <= kernels_1_q0;
        kernels_2_load_reg_2331 <= kernels_2_q0;
        kernels_3_load_reg_2336 <= kernels_3_q0;
        kernels_4_load_reg_2341 <= kernels_4_q0;
        kernels_5_load_reg_2351 <= kernels_5_q0;
        kernels_6_load_reg_2361 <= kernels_6_q0;
        kernels_7_load_reg_2366 <= kernels_7_q0;
        kernels_8_load_reg_2371 <= kernels_8_q0;
        kernels_9_load_reg_2381 <= kernels_9_q0;
        partial_sums_0_load_1_reg_2326 <= partial_sums_0_q1;
        partial_sums_1_load_1_reg_2356 <= partial_sums_1_q1;
        partial_sums_2_load_1_reg_2386 <= partial_sums_2_q1;
        stripes_0_load_reg_2316 <= stripes_0_q0;
        stripes_1_load_reg_2346 <= stripes_1_q0;
        stripes_2_load_reg_2376 <= stripes_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        l_reg_2208 <= l_fu_1429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m_reg_2231 <= m_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_1084 <= col_index;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_1103 <= grp_fu_1062_p3;
        reg_1109 <= grp_fu_1076_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1321_p2 == 1'd0))) begin
        select_ln195_2_reg_2169 <= select_ln195_2_fu_1367_p3;
        select_ln202_reg_2174 <= select_ln202_fu_1378_p3;
        trunc_ln189_reg_2164 <= trunc_ln189_fu_1349_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7))) begin
        stripes_0_addr_2_reg_1992 <= sext_ln142_fu_1297_p1;
        stripes_1_addr_2_reg_1997 <= sext_ln142_fu_1297_p1;
        stripes_2_addr_2_reg_2002 <= sext_ln142_fu_1297_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
        stripes_0_addr_3_reg_1939 <= sext_ln154_fu_1261_p1;
        stripes_1_addr_3_reg_1944 <= sext_ln154_fu_1261_p1;
        stripes_2_addr_3_reg_1949 <= sext_ln154_fu_1261_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sub_ln217_reg_2218 <= sub_ln217_fu_1456_p2;
        zext_ln217_8_reg_2223[12 : 8] <= zext_ln217_8_fu_1492_p1[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln227_fu_1616_p2 == 1'd0))) begin
        tmp_3_reg_2447 <= tmp_3_fu_1628_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln227_1_fu_1646_p2 == 1'd0))) begin
        tmp_5_reg_2460 <= tmp_5_fu_1658_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln227_2_fu_1676_p2 == 1'd0))) begin
        tmp_7_reg_2473 <= tmp_7_fu_1688_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0))) begin
        tmp_8_reg_2486 <= tmp_8_fu_1718_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln240_fu_1736_p2 == 1'd0))) begin
        trunc_ln182_reg_2504 <= trunc_ln182_fu_1753_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        zext_ln202_reg_2179[0] <= zext_ln202_fu_1385_p1[0];
    end
end

always @ (*) begin
    if (((icmp_ln240_fu_1736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_0_V_blk_n = input_lower_0_V_empty_n;
    end else begin
        input_lower_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_0_V_read = 1'b1;
    end else begin
        input_lower_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_816 == 2'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_1_V_blk_n = input_lower_1_V_empty_n;
    end else begin
        input_lower_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (i_0_reg_828 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (i1_0_reg_816 == 2'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_1_V_read = 1'b1;
    end else begin
        input_lower_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_2_V_blk_n = input_lower_2_V_empty_n;
    end else begin
        input_lower_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (ap_predicate_op178_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (ap_predicate_op128_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_lower_2_V_read = 1'b1;
    end else begin
        input_lower_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln139_fu_1268_p2 == 1'd0)) | ((i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1226_p2 == 1'd0)))) begin
        input_upper_0_V_blk_n = input_upper_0_V_empty_n;
    end else begin
        input_upper_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op149_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op98_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        input_upper_0_V_read = 1'b1;
    end else begin
        input_upper_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln139_fu_1268_p2 == 1'd0)) | ((i1_0_reg_816 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1226_p2 == 1'd0)))) begin
        input_upper_1_V_blk_n = input_upper_1_V_empty_n;
    end else begin
        input_upper_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op147_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op96_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        input_upper_1_V_read = 1'b1;
    end else begin
        input_upper_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln139_fu_1268_p2 == 1'd0)) | (~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1226_p2 == 1'd0)))) begin
        input_upper_2_V_blk_n = input_upper_2_V_empty_n;
    end else begin
        input_upper_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op151_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op100_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        input_upper_2_V_read = 1'b1;
    end else begin
        input_upper_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln240_fu_1736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0)))) begin
        kernel_sums_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        kernel_sums_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        kernel_sums_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((icmp_ln227_3_fu_1706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        kernel_sums_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_sums_address0 = zext_ln223_fu_1605_p1;
    end else begin
        kernel_sums_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        kernel_sums_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        kernel_sums_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        kernel_sums_address1 = 64'd1;
    end else begin
        kernel_sums_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state31) & (icmp_ln227_3_fu_1706_p2 == 1'd0)) | ((icmp_ln227_3_fu_1706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        kernel_sums_ce0 = 1'b1;
    end else begin
        kernel_sums_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state33))) begin
        kernel_sums_ce1 = 1'b1;
    end else begin
        kernel_sums_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        kernel_sums_d0 = add_ln229_2_fu_1700_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        kernel_sums_d0 = add_ln229_1_fu_1670_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_sums_d0 = add_ln229_fu_1640_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_sums_d0 = 16'd0;
    end else begin
        kernel_sums_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20))) begin
        kernel_sums_we0 = 1'b1;
    end else begin
        kernel_sums_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        kernel_sums_we1 = 1'b1;
    end else begin
        kernel_sums_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_0_ce0 = 1'b1;
    end else begin
        kernels_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_10_ce0 = 1'b1;
    end else begin
        kernels_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_11_ce0 = 1'b1;
    end else begin
        kernels_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_1_ce0 = 1'b1;
    end else begin
        kernels_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_2_ce0 = 1'b1;
    end else begin
        kernels_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_3_ce0 = 1'b1;
    end else begin
        kernels_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_4_ce0 = 1'b1;
    end else begin
        kernels_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_5_ce0 = 1'b1;
    end else begin
        kernels_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_6_ce0 = 1'b1;
    end else begin
        kernels_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_7_ce0 = 1'b1;
    end else begin
        kernels_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_8_ce0 = 1'b1;
    end else begin
        kernels_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_9_ce0 = 1'b1;
    end else begin
        kernels_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_row_indices_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_address0 = 64'd0;
    end else begin
        local_row_indices_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_row_indices_address1 = zext_ln217_fu_1435_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_address1 = 64'd1;
    end else begin
        local_row_indices_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        local_row_indices_ce0 = 1'b1;
    end else begin
        local_row_indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        local_row_indices_ce1 = 1'b1;
    end else begin
        local_row_indices_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        local_row_indices_d0 = select_ln195_2_reg_2169;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_row_indices_d0 = select_ln195_fu_1353_p3;
    end else begin
        local_row_indices_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1321_p2 == 1'd0)))) begin
        local_row_indices_we0 = 1'b1;
    end else begin
        local_row_indices_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln184_fu_1321_p2 == 1'd0))) begin
        local_row_indices_we1 = 1'b1;
    end else begin
        local_row_indices_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        maxes_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        maxes_address0 = zext_ln183_fu_1310_p1;
    end else begin
        maxes_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        maxes_address1 = zext_ln242_fu_1748_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        maxes_address1 = 64'd1;
    end else begin
        maxes_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_ce0 = 1'b1;
    end else begin
        maxes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        maxes_ce1 = 1'b1;
    end else begin
        maxes_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        maxes_d0 = reg_1103;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_d0 = reg_1109;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        maxes_d0 = 16'd0;
    end else begin
        maxes_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        maxes_d1 = reg_1109;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        maxes_d1 = reg_1103;
    end else begin
        maxes_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state34))) begin
        maxes_we0 = 1'b1;
    end else begin
        maxes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        maxes_we1 = 1'b1;
    end else begin
        maxes_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2504 == 2'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        output_0_V_blk_n = output_0_V_full_n;
    end else begin
        output_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (trunc_ln182_reg_2504 == 2'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        output_0_V_write = 1'b1;
    end else begin
        output_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2504 == 2'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        output_1_V_blk_n = output_1_V_full_n;
    end else begin
        output_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (trunc_ln182_reg_2504 == 2'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        output_1_V_write = 1'b1;
    end else begin
        output_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2504 == 2'd2) & (1'b1 == ap_CS_fsm_state37))) begin
        output_2_V_blk_n = output_2_V_full_n;
    end else begin
        output_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (trunc_ln182_reg_2504 == 2'd2) & (1'b1 == ap_CS_fsm_state37))) begin
        output_2_V_write = 1'b1;
    end else begin
        output_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln182_reg_2504 == 2'd3) & (1'b1 == ap_CS_fsm_state37))) begin
        output_3_V_blk_n = output_3_V_full_n;
    end else begin
        output_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (trunc_ln182_reg_2504 == 2'd3) & (1'b1 == ap_CS_fsm_state37))) begin
        output_3_V_write = 1'b1;
    end else begin
        output_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address1 = 64'd1;
    end else begin
        partial_sums_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_ce0 = 1'b1;
    end else begin
        partial_sums_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_ce1 = 1'b1;
    end else begin
        partial_sums_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d0 = add_ln217_4_reg_2406;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d0 = grp_fu_1766_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_d0 = 16'd0;
    end else begin
        partial_sums_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d1 = add_ln217_3_reg_2401;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d1 = grp_fu_1757_p3;
    end else begin
        partial_sums_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln204_reg_940 == 2'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_0_we0 = 1'b1;
    end else begin
        partial_sums_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_we1 = 1'b1;
    end else begin
        partial_sums_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address1 = 64'd1;
    end else begin
        partial_sums_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_ce0 = 1'b1;
    end else begin
        partial_sums_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_1_ce1 = 1'b1;
    end else begin
        partial_sums_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d0 = add_ln217_8_reg_2416;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d0 = grp_fu_1799_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_d0 = 16'd0;
    end else begin
        partial_sums_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d1 = add_ln217_7_reg_2411;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d1 = grp_fu_1790_p3;
    end else begin
        partial_sums_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln204_reg_940 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_1_we0 = 1'b1;
    end else begin
        partial_sums_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_we1 = 1'b1;
    end else begin
        partial_sums_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_address0 = zext_ln204_fu_1400_p1;
    end else begin
        partial_sums_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address1 = 64'd1;
    end else begin
        partial_sums_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_ce0 = 1'b1;
    end else begin
        partial_sums_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_ce1 = 1'b1;
    end else begin
        partial_sums_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d0 = add_ln217_12_reg_2426;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d0 = grp_fu_1832_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_d0 = 16'd0;
    end else begin
        partial_sums_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d1 = add_ln217_11_reg_2421;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d1 = grp_fu_1823_p3;
    end else begin
        partial_sums_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (~(phi_ln204_reg_940 == 2'd0) & ~(phi_ln204_reg_940 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_2_we0 = 1'b1;
    end else begin
        partial_sums_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_we1 = 1'b1;
    end else begin
        partial_sums_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_address1 = stripes_0_addr_2_reg_1992;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_address1 = sext_ln141_fu_1280_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_address1 = stripes_0_addr_3_reg_1939;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_0_address1 = sext_ln153_fu_1248_p1;
    end else begin
        stripes_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_ce0 = 1'b1;
    end else begin
        stripes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_0_ce1 = 1'b1;
    end else begin
        stripes_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_0_d1 = tmp_99_0_reg_904;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_0_d1 = tmp_0_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_0_d1 = tmp_101_0_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_0_d1 = tmp_100_0_reg_851;
    end else begin
        stripes_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_0_we1 = 1'b1;
    end else begin
        stripes_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_address1 = stripes_1_addr_2_reg_1997;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_address1 = sext_ln141_fu_1280_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_address1 = stripes_1_addr_3_reg_1944;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_1_address1 = sext_ln153_fu_1248_p1;
    end else begin
        stripes_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_ce0 = 1'b1;
    end else begin
        stripes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_1_ce1 = 1'b1;
    end else begin
        stripes_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_1_d1 = tmp_99_0_reg_904;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_1_d1 = tmp_0_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_1_d1 = tmp_101_0_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_1_d1 = tmp_100_0_reg_851;
    end else begin
        stripes_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((i_0_reg_828 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (i_0_reg_828 == 2'd1) & (1'b1 == ap_CS_fsm_state7)) | ((i1_0_reg_816 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (i1_0_reg_816 == 2'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_1_we1 = 1'b1;
    end else begin
        stripes_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_address1 = stripes_2_addr_2_reg_2002;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_address1 = sext_ln141_fu_1280_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_address1 = stripes_2_addr_3_reg_1949;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_2_address1 = sext_ln153_fu_1248_p1;
    end else begin
        stripes_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_ce0 = 1'b1;
    end else begin
        stripes_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_2_ce1 = 1'b1;
    end else begin
        stripes_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stripes_2_d1 = tmp_99_0_reg_904;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        stripes_2_d1 = tmp_0_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stripes_2_d1 = tmp_101_0_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        stripes_2_d1 = tmp_100_0_reg_851;
    end else begin
        stripes_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & ~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0) & (1'b1 == ap_CS_fsm_state7)) | (~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & ~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        stripes_2_we1 = 1'b1;
    end else begin
        stripes_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln137_fu_1143_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd1)) | ((icmp_ln149_fu_1131_p2 == 1'd1) & (iteration_load_reg_1856 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((iteration_load_reg_1856 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln137_fu_1143_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (icmp_ln151_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1226_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if ((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (icmp_ln139_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln139_fu_1268_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln183_fu_1315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln184_fu_1321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln204_1_fu_1413_p2 == 1'd1) & (icmp_ln204_fu_1407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((icmp_ln204_fu_1407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln204_1_fu_1413_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln207_fu_1423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln209_fu_1500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln223_fu_1610_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln227_fu_1616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln227_1_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln227_2_fu_1676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln227_3_fu_1706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln240_fu_1736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if ((~(((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0))) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln142_fu_1291_p2 = (14'd1280 + trunc_ln141_fu_1287_p1);

assign add_ln153_fu_1242_p2 = (14'd2560 + trunc_ln153_fu_1238_p1);

assign add_ln154_fu_1255_p2 = (14'd3840 + trunc_ln153_fu_1238_p1);

assign add_ln160_fu_1159_p2 = ($signed(17'd131068) + $signed(sext_ln160_fu_1155_p1));

assign add_ln183_fu_1304_p2 = (phi_ln183_reg_918 + 2'd1);

assign add_ln202_fu_1373_p2 = ($signed(14'd16380) + $signed(trunc_ln160_reg_1886));

assign add_ln204_1_fu_1394_p2 = (phi_ln204_1_reg_952 + 2'd1);

assign add_ln204_fu_1388_p2 = (phi_ln204_reg_940 + 2'd1);

assign add_ln217_13_fu_1486_p2 = (zext_ln217_7_fu_1482_p1 + zext_ln217_3_fu_1470_p1);

assign add_ln217_14_fu_1516_p2 = (sub_ln217_reg_2218 + zext_ln217_10_fu_1512_p1);

assign add_ln217_15_fu_1542_p2 = (zext_ln217_8_reg_2223 + add_ln217_fu_1537_p2);

assign add_ln217_16_fu_1419_p2 = (zext_ln202_reg_2179 + select_ln202_reg_2174);

assign add_ln217_fu_1537_p2 = (zext_ln217_9_fu_1496_p1 + add_ln217_16_reg_2200);

assign add_ln223_fu_1599_p2 = (phi_ln223_reg_986 + 2'd1);

assign add_ln227_1_fu_1652_p2 = (j6_0_1_reg_1008 + 2'd1);

assign add_ln227_2_fu_1682_p2 = (j6_0_2_reg_1019 + 2'd1);

assign add_ln227_3_fu_1712_p2 = (j6_0_3_reg_1030 + 2'd1);

assign add_ln227_fu_1622_p2 = (j6_0_0_reg_997 + 2'd1);

assign add_ln229_1_fu_1670_p2 = (kernel_sums_q0 + tmp_5_reg_2460);

assign add_ln229_2_fu_1700_p2 = (kernel_sums_q0 + tmp_7_reg_2473);

assign add_ln229_fu_1640_p2 = (kernel_sums_q0 + tmp_3_reg_2447);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = (((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state37 = (((trunc_ln182_reg_2504 == 2'd3) & (output_3_V_full_n == 1'b0)) | ((trunc_ln182_reg_2504 == 2'd2) & (output_2_V_full_n == 1'b0)) | ((output_1_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd1)) | ((output_0_V_full_n == 1'b0) & (trunc_ln182_reg_2504 == 2'd0)));
end

always @ (*) begin
    ap_block_state4 = (((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0)));
end

always @ (*) begin
    ap_block_state6 = (((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = (((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0)));
end

always @ (*) begin
    ap_condition_1571 = (~(((ap_predicate_op100_read_state3 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op98_read_state3 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op96_read_state3 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1226_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1575 = (~(((ap_predicate_op151_read_state6 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op149_read_state6 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op147_read_state6 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln139_fu_1268_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_339 = (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i1_0_reg_816 == 2'd0))) & (1'b1 == ap_CS_fsm_state4));
end

always @ (*) begin
    ap_condition_349 = (~(((ap_predicate_op178_read_state7 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((input_lower_1_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd1)) | ((input_lower_0_V_empty_n == 1'b0) & (i_0_reg_828 == 2'd0))) & (1'b1 == ap_CS_fsm_state7));
end

always @ (*) begin
    ap_predicate_op100_read_state3 = (~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0) & (icmp_ln151_fu_1226_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_read_state4 = (~(i1_0_reg_816 == 2'd1) & ~(i1_0_reg_816 == 2'd0));
end

always @ (*) begin
    ap_predicate_op147_read_state6 = ((i_0_reg_828 == 2'd1) & (icmp_ln139_fu_1268_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_read_state6 = ((i_0_reg_828 == 2'd0) & (icmp_ln139_fu_1268_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op151_read_state6 = (~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0) & (icmp_ln139_fu_1268_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op178_read_state7 = (~(i_0_reg_828 == 2'd1) & ~(i_0_reg_828 == 2'd0));
end

always @ (*) begin
    ap_predicate_op96_read_state3 = ((i1_0_reg_816 == 2'd1) & (icmp_ln151_fu_1226_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op98_read_state3 = ((i1_0_reg_816 == 2'd0) & (icmp_ln151_fu_1226_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_1056_p2 = (($signed(kernel_sums_q0) > $signed(maxes_q0)) ? 1'b1 : 1'b0);

assign grp_fu_1062_p3 = ((grp_fu_1056_p2[0:0] === 1'b1) ? kernel_sums_q0 : maxes_q0);

assign grp_fu_1070_p2 = (($signed(kernel_sums_q1) > $signed(maxes_q1)) ? 1'b1 : 1'b0);

assign grp_fu_1076_p3 = ((grp_fu_1070_p2[0:0] === 1'b1) ? kernel_sums_q1 : maxes_q1);

assign grp_fu_1115_p2 = (reg_1084 + 16'd1);

assign grp_fu_1757_p0 = zext_ln217_4_fu_1557_p1;

assign grp_fu_1766_p0 = zext_ln217_4_fu_1557_p1;

assign grp_fu_1774_p0 = zext_ln217_4_fu_1557_p1;

assign grp_fu_1782_p0 = zext_ln217_4_fu_1557_p1;

assign grp_fu_1790_p0 = zext_ln217_5_fu_1572_p1;

assign grp_fu_1799_p0 = zext_ln217_5_fu_1572_p1;

assign grp_fu_1807_p0 = zext_ln217_5_fu_1572_p1;

assign grp_fu_1815_p0 = zext_ln217_5_fu_1572_p1;

assign grp_fu_1823_p0 = zext_ln217_6_fu_1587_p1;

assign grp_fu_1832_p0 = zext_ln217_6_fu_1587_p1;

assign grp_fu_1840_p0 = zext_ln217_6_fu_1587_p1;

assign grp_fu_1848_p0 = zext_ln217_6_fu_1587_p1;

assign i_1_fu_1137_p2 = (i1_0_reg_816 + 2'd1);

assign i_2_fu_1742_p2 = (i8_0_reg_1041 + 3'd1);

assign i_3_fu_1327_p2 = (i3_0_reg_929 + 3'd1);

assign i_fu_1149_p2 = (i_0_reg_828 + 2'd1);

assign icmp_ln137_fu_1143_p2 = ((i_0_reg_828 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_1268_p2 = ((j_0_reg_879 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1131_p2 = ((i1_0_reg_816 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1226_p2 = ((j2_0_reg_840 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_1165_p2 = (($signed(add_ln160_fu_1159_p2) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_1203_p0 = col_index;

assign icmp_ln177_fu_1203_p2 = ((icmp_ln177_fu_1203_p0 == 16'd1280) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_1315_p2 = ((phi_ln183_reg_918 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_1321_p2 = ((i3_0_reg_929 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_1413_p2 = ((phi_ln204_reg_940 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_1407_p2 = ((phi_ln204_1_reg_952 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1423_p2 = ((l_0_reg_963 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_1500_p2 = ((m_0_reg_975 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_1610_p2 = ((phi_ln223_reg_986 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln227_1_fu_1646_p2 = ((j6_0_1_reg_1008 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_2_fu_1676_p2 = ((j6_0_2_reg_1019 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_3_fu_1706_p2 = ((j6_0_3_reg_1030 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1616_p2 = ((j6_0_0_reg_997 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln240_fu_1736_p2 = ((i8_0_reg_1041 == 3'd4) ? 1'b1 : 1'b0);

assign iteration_load_load_fu_1127_p1 = iteration;

assign j_1_fu_1232_p2 = (j2_0_reg_840 + 2'd1);

assign j_fu_1274_p2 = (j_0_reg_879 + 2'd1);

assign kernel_sums_d1 = (kernel_sums_q0 + tmp_8_reg_2486);

assign kernels_0_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_10_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_11_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_1_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_2_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_3_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_4_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_5_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_6_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_7_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_8_address0 = sext_ln217_12_fu_1521_p1;

assign kernels_9_address0 = sext_ln217_12_fu_1521_p1;

assign l_fu_1429_p2 = (l_0_reg_963 + 2'd1);

assign local_row_indices_d1 = ((top_offset_fu_1343_p2[0:0] === 1'b1) ? select_ln162_2_reg_1901 : select_ln162_3_reg_1907);

assign m_fu_1506_p2 = (m_0_reg_975 + 2'd1);

assign output_0_V_din = maxes_q1;

assign output_1_V_din = maxes_q1;

assign output_2_V_din = maxes_q1;

assign output_3_V_din = maxes_q1;

assign select_ln162_1_fu_1182_p3 = ((iteration_load_reg_1856[0:0] === 1'b1) ? 2'd3 : 2'd1);

assign select_ln162_2_fu_1189_p3 = ((iteration_load_reg_1856[0:0] === 1'b1) ? 2'd2 : 2'd0);

assign select_ln162_3_fu_1196_p3 = ((iteration_load_reg_1856[0:0] === 1'b1) ? 2'd1 : 2'd3);

assign select_ln162_fu_1175_p3 = ((iteration_load_reg_1856[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln195_2_fu_1367_p3 = ((top_offset_fu_1343_p2[0:0] === 1'b1) ? select_ln162_1_reg_1896 : select_ln162_2_reg_1901);

assign select_ln195_fu_1353_p3 = ((top_offset_fu_1343_p2[0:0] === 1'b1) ? select_ln162_3_reg_1907 : select_ln162_reg_1891);

assign select_ln202_fu_1378_p3 = ((icmp_ln160_reg_1881[0:0] === 1'b1) ? add_ln202_fu_1373_p2 : 14'd0);

assign sext_ln141_fu_1280_p0 = col_index;

assign sext_ln141_fu_1280_p1 = sext_ln141_fu_1280_p0;

assign sext_ln142_fu_1297_p1 = $signed(add_ln142_fu_1291_p2);

assign sext_ln153_fu_1248_p1 = $signed(add_ln153_fu_1242_p2);

assign sext_ln154_fu_1261_p1 = $signed(add_ln154_fu_1255_p2);

assign sext_ln160_fu_1155_p0 = col_index;

assign sext_ln160_fu_1155_p1 = sext_ln160_fu_1155_p0;

assign sext_ln217_12_fu_1521_p1 = $signed(add_ln217_14_fu_1516_p2);

assign start_out = real_start;

assign stripes_0_address0 = zext_ln217_11_fu_1547_p1;

assign stripes_1_address0 = zext_ln217_11_fu_1547_p1;

assign stripes_2_address0 = zext_ln217_11_fu_1547_p1;

assign sub_ln217_fu_1456_p2 = (zext_ln217_2_fu_1452_p1 - zext_ln217_1_fu_1440_p1);

assign tmp_10_fu_1462_p3 = {{local_row_indices_q1}, {10'd0}};

assign tmp_11_fu_1474_p3 = {{local_row_indices_q1}, {8'd0}};

assign tmp_56_fu_1333_p4 = {{i3_0_reg_929[2:1]}};

assign tmp_9_fu_1444_p3 = {{l_0_reg_963}, {2'd0}};

assign top_offset_fu_1343_p2 = ((tmp_56_fu_1333_p4 != 2'd0) ? 1'b1 : 1'b0);

assign trunc_ln141_fu_1287_p0 = col_index;

assign trunc_ln141_fu_1287_p1 = trunc_ln141_fu_1287_p0[13:0];

assign trunc_ln153_fu_1238_p1 = col_index[13:0];

assign trunc_ln160_fu_1171_p0 = col_index;

assign trunc_ln160_fu_1171_p1 = trunc_ln160_fu_1171_p0[13:0];

assign trunc_ln182_fu_1753_p1 = i8_0_reg_1041[1:0];

assign trunc_ln189_fu_1349_p1 = i3_0_reg_929[0:0];

assign xor_ln180_fu_1215_p2 = (iteration_load_reg_1856 ^ 1'd1);

assign zext_ln183_fu_1310_p1 = phi_ln183_reg_918;

assign zext_ln202_fu_1385_p1 = trunc_ln189_reg_2164;

assign zext_ln204_fu_1400_p1 = phi_ln204_1_reg_952;

assign zext_ln217_10_fu_1512_p1 = m_0_reg_975;

assign zext_ln217_11_fu_1547_p1 = add_ln217_15_fu_1542_p2;

assign zext_ln217_1_fu_1440_p1 = l_0_reg_963;

assign zext_ln217_2_fu_1452_p1 = tmp_9_fu_1444_p3;

assign zext_ln217_3_fu_1470_p1 = tmp_10_fu_1462_p3;

assign zext_ln217_4_fu_1557_p1 = stripes_0_load_reg_2316;

assign zext_ln217_5_fu_1572_p1 = stripes_1_load_reg_2346;

assign zext_ln217_6_fu_1587_p1 = stripes_2_load_reg_2376;

assign zext_ln217_7_fu_1482_p1 = tmp_11_fu_1474_p3;

assign zext_ln217_8_fu_1492_p1 = add_ln217_13_fu_1486_p2;

assign zext_ln217_9_fu_1496_p1 = m_0_reg_975;

assign zext_ln217_fu_1435_p1 = l_0_reg_963;

assign zext_ln223_fu_1605_p1 = phi_ln223_reg_986;

assign zext_ln242_fu_1748_p1 = i8_0_reg_1041;

always @ (posedge ap_clk) begin
    select_ln162_reg_1891[0] <= 1'b0;
    select_ln162_1_reg_1896[0] <= 1'b1;
    select_ln162_2_reg_1901[0] <= 1'b0;
    select_ln162_3_reg_1907[0] <= 1'b1;
    zext_ln202_reg_2179[13:1] <= 13'b0000000000000;
    zext_ln217_8_reg_2223[7:0] <= 8'b00000000;
    zext_ln217_8_reg_2223[13] <= 1'b0;
end

endmodule //kernel
