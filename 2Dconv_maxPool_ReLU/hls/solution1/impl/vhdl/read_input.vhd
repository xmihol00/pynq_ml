-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity read_input is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_upper_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_0_V_full_n : IN STD_LOGIC;
    input_upper_0_V_write : OUT STD_LOGIC;
    input_upper_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_1_V_full_n : IN STD_LOGIC;
    input_upper_1_V_write : OUT STD_LOGIC;
    input_upper_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_2_V_full_n : IN STD_LOGIC;
    input_upper_2_V_write : OUT STD_LOGIC;
    input_lower_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_0_V_full_n : IN STD_LOGIC;
    input_lower_0_V_write : OUT STD_LOGIC;
    input_lower_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_1_V_full_n : IN STD_LOGIC;
    input_lower_1_V_write : OUT STD_LOGIC;
    input_lower_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_2_V_full_n : IN STD_LOGIC;
    input_lower_2_V_write : OUT STD_LOGIC;
    in_0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_0_TVALID : IN STD_LOGIC;
    in_0_TREADY : OUT STD_LOGIC;
    in_1_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_1_TVALID : IN STD_LOGIC;
    in_1_TREADY : OUT STD_LOGIC;
    in_0_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of read_input is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_upper_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal input_upper_1_V_blk_n : STD_LOGIC;
    signal input_upper_2_V_blk_n : STD_LOGIC;
    signal input_lower_0_V_blk_n : STD_LOGIC;
    signal input_lower_1_V_blk_n : STD_LOGIC;
    signal input_lower_2_V_blk_n : STD_LOGIC;
    signal in_0_TDATA_blk_n : STD_LOGIC;
    signal in_1_TDATA_blk_n : STD_LOGIC;
    signal reg_296 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_310 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_317 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_324 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_345 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_352 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_359 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_366 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_372 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_408 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_reg_413 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal tmp_46_fu_398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_388_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_403_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_393_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_296 <= in_0_TDATA(31 downto 24);
                reg_303 <= in_0_TDATA(39 downto 32);
                reg_310 <= in_0_TDATA(47 downto 40);
                reg_317 <= in_1_TDATA(31 downto 24);
                reg_324 <= in_1_TDATA(39 downto 32);
                reg_331 <= in_1_TDATA(47 downto 40);
                reg_338 <= in_0_TDATA(55 downto 48);
                reg_345 <= in_0_TDATA(63 downto 56);
                reg_352 <= in_1_TDATA(55 downto 48);
                reg_359 <= in_1_TDATA(63 downto 56);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                reg_366 <= in_0_TDATA(23 downto 16);
                reg_372 <= in_1_TDATA(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_33_reg_408 <= in_0_TDATA(15 downto 8);
                tmp_36_reg_413 <= in_1_TDATA(15 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(ap_start, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID)
    begin
                ap_block_state1 <= ((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state2 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID)
    begin
                ap_block_state3 <= ((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state4 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state5 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID)
    begin
                ap_block_state6 <= ((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state7 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state8 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state8)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state8)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    in_0_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, in_0_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            in_0_TDATA_blk_n <= in_0_TVALID;
        else 
            in_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_0_TREADY_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_0_TREADY <= ap_const_logic_1;
        else 
            in_0_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_1_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, in_1_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            in_1_TDATA_blk_n <= in_1_TVALID;
        else 
            in_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_1_TREADY_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_1_TREADY <= ap_const_logic_1;
        else 
            in_1_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_lower_0_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_lower_0_V_blk_n <= input_lower_0_V_full_n;
        else 
            input_lower_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_0_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_317, reg_324, reg_331, reg_352, reg_359, reg_372, tmp_36_reg_413, tmp_18_fu_383_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_0_V_din <= reg_331;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_0_V_din <= reg_372;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_0_V_din <= reg_359;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_0_V_din <= reg_324;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_0_V_din <= tmp_36_reg_413;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_0_V_din <= reg_352;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_0_V_din <= reg_317;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_0_V_din <= tmp_18_fu_383_p1;
        else 
            input_lower_0_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_0_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_lower_0_V_write <= ap_const_logic_1;
        else 
            input_lower_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_lower_1_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_lower_1_V_blk_n <= input_lower_1_V_full_n;
        else 
            input_lower_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_1_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TDATA, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_317, reg_324, reg_331, reg_352, reg_359, reg_372, tmp_49_fu_403_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_1_V_din <= reg_352;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_1_V_din <= reg_317;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_1_V_din <= tmp_49_fu_403_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_1_V_din <= reg_331;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_1_V_din <= reg_372;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_1_V_din <= reg_359;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_1_V_din <= reg_324;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_1_V_din <= in_1_TDATA(15 downto 8);
        else 
            input_lower_1_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_1_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_lower_1_V_write <= ap_const_logic_1;
        else 
            input_lower_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_lower_2_V_blk_n <= input_lower_2_V_full_n;
        else 
            input_lower_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_2_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TDATA, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_317, reg_324, reg_331, reg_352, reg_359, tmp_32_fu_393_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_2_V_din <= reg_359;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_2_V_din <= reg_324;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_2_V_din <= in_1_TDATA(15 downto 8);
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_2_V_din <= reg_352;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_2_V_din <= reg_317;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_2_V_din <= tmp_32_fu_393_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_2_V_din <= reg_331;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_2_V_din <= in_1_TDATA(23 downto 16);
        else 
            input_lower_2_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_2_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_lower_2_V_write <= ap_const_logic_1;
        else 
            input_lower_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_upper_0_V_blk_n <= input_upper_0_V_full_n;
        else 
            input_upper_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_0_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_296, reg_303, reg_310, reg_338, reg_345, reg_366, tmp_33_reg_408, tmp_fu_378_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_0_V_din <= reg_310;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_0_V_din <= reg_366;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_0_V_din <= reg_345;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_0_V_din <= reg_303;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_0_V_din <= tmp_33_reg_408;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_0_V_din <= reg_338;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_0_V_din <= reg_296;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_0_V_din <= tmp_fu_378_p1;
        else 
            input_upper_0_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_0_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_0_V_write <= ap_const_logic_1;
        else 
            input_upper_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_1_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_upper_1_V_blk_n <= input_upper_1_V_full_n;
        else 
            input_upper_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_1_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TDATA, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_296, reg_303, reg_310, reg_338, reg_345, reg_366, tmp_46_fu_398_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_1_V_din <= reg_338;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_1_V_din <= reg_296;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_1_V_din <= tmp_46_fu_398_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_1_V_din <= reg_310;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_1_V_din <= reg_366;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_1_V_din <= reg_345;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_1_V_din <= reg_303;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_1_V_din <= in_0_TDATA(15 downto 8);
        else 
            input_upper_1_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_1_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_1_V_write <= ap_const_logic_1;
        else 
            input_upper_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            input_upper_2_V_blk_n <= input_upper_2_V_full_n;
        else 
            input_upper_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_2_V_din_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TDATA, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_296, reg_303, reg_310, reg_338, reg_345, tmp_29_fu_388_p1)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_2_V_din <= reg_345;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_2_V_din <= reg_303;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_2_V_din <= in_0_TDATA(15 downto 8);
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_2_V_din <= reg_338;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_2_V_din <= reg_296;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_2_V_din <= tmp_29_fu_388_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_2_V_din <= reg_310;
        elsif ((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_2_V_din <= in_0_TDATA(23 downto 16);
        else 
            input_upper_2_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_2_V_write_assign_proc : process(ap_start, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID, in_1_TVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((in_1_TVALID = ap_const_logic_0) or (in_0_TVALID = ap_const_logic_0) or (input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_2_V_write <= ap_const_logic_1;
        else 
            input_upper_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_18_fu_383_p1 <= in_1_TDATA(8 - 1 downto 0);
    tmp_29_fu_388_p1 <= in_0_TDATA(8 - 1 downto 0);
    tmp_32_fu_393_p1 <= in_1_TDATA(8 - 1 downto 0);
    tmp_46_fu_398_p1 <= in_0_TDATA(8 - 1 downto 0);
    tmp_49_fu_403_p1 <= in_1_TDATA(8 - 1 downto 0);
    tmp_fu_378_p1 <= in_0_TDATA(8 - 1 downto 0);
end behav;
