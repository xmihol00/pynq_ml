-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity read_input is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    input_upper_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_0_V_full_n : IN STD_LOGIC;
    input_upper_0_V_write : OUT STD_LOGIC;
    input_upper_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_1_V_full_n : IN STD_LOGIC;
    input_upper_1_V_write : OUT STD_LOGIC;
    input_upper_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_upper_2_V_full_n : IN STD_LOGIC;
    input_upper_2_V_write : OUT STD_LOGIC;
    input_lower_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_0_V_full_n : IN STD_LOGIC;
    input_lower_0_V_write : OUT STD_LOGIC;
    input_lower_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_1_V_full_n : IN STD_LOGIC;
    input_lower_1_V_write : OUT STD_LOGIC;
    input_lower_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_lower_2_V_full_n : IN STD_LOGIC;
    input_lower_2_V_write : OUT STD_LOGIC;
    in_0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_0_TVALID : IN STD_LOGIC;
    in_0_TREADY : OUT STD_LOGIC;
    in_1_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_1_TVALID : IN STD_LOGIC;
    in_1_TREADY : OUT STD_LOGIC;
    in_0_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of read_input is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal input_upper_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal input_upper_1_V_blk_n : STD_LOGIC;
    signal input_upper_2_V_blk_n : STD_LOGIC;
    signal input_lower_0_V_blk_n : STD_LOGIC;
    signal input_lower_1_V_blk_n : STD_LOGIC;
    signal input_lower_2_V_blk_n : STD_LOGIC;
    signal in_0_TDATA_blk_n : STD_LOGIC;
    signal in_1_TDATA_blk_n : STD_LOGIC;
    signal reg_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_312 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_340 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_361 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_368 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_410 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_reg_415 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_380_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal tmp_46_fu_400_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_390_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_405_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_395_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_0_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_0_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal in_0_TVALID_int : STD_LOGIC;
    signal in_0_TREADY_int : STD_LOGIC;
    signal regslice_both_in_0_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_1_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_1_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal in_1_TVALID_int : STD_LOGIC;
    signal in_1_TREADY_int : STD_LOGIC;
    signal regslice_both_in_1_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_0_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_0_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_0_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_0_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_1_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_1_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_1_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_1_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_0_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_0_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_0_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_0_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_1_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_1_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_1_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_1_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_0_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_0_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_0_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_0_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_1_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_1_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_1_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_1_V_last_V_U_ack_in : STD_LOGIC;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_in_0_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_0_TDATA,
        vld_in => in_0_TVALID,
        ack_in => regslice_both_in_0_V_data_V_U_ack_in,
        data_out => in_0_TDATA_int,
        vld_out => in_0_TVALID_int,
        ack_out => in_0_TREADY_int,
        apdone_blk => regslice_both_in_0_V_data_V_U_apdone_blk);

    regslice_both_in_1_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_1_TDATA,
        vld_in => in_1_TVALID,
        ack_in => regslice_both_in_1_V_data_V_U_ack_in,
        data_out => in_1_TDATA_int,
        vld_out => in_1_TVALID_int,
        ack_out => in_1_TREADY_int,
        apdone_blk => regslice_both_in_1_V_data_V_U_apdone_blk);

    regslice_both_in_0_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_0_TKEEP,
        vld_in => in_0_TVALID,
        ack_in => regslice_both_in_0_V_keep_V_U_ack_in,
        data_out => in_0_TKEEP_int,
        vld_out => regslice_both_in_0_V_keep_V_U_vld_out,
        ack_out => in_0_TREADY_int,
        apdone_blk => regslice_both_in_0_V_keep_V_U_apdone_blk);

    regslice_both_in_1_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_1_TKEEP,
        vld_in => in_1_TVALID,
        ack_in => regslice_both_in_1_V_keep_V_U_ack_in,
        data_out => in_1_TKEEP_int,
        vld_out => regslice_both_in_1_V_keep_V_U_vld_out,
        ack_out => in_1_TREADY_int,
        apdone_blk => regslice_both_in_1_V_keep_V_U_apdone_blk);

    regslice_both_in_0_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_0_TSTRB,
        vld_in => in_0_TVALID,
        ack_in => regslice_both_in_0_V_strb_V_U_ack_in,
        data_out => in_0_TSTRB_int,
        vld_out => regslice_both_in_0_V_strb_V_U_vld_out,
        ack_out => in_0_TREADY_int,
        apdone_blk => regslice_both_in_0_V_strb_V_U_apdone_blk);

    regslice_both_in_1_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_1_TSTRB,
        vld_in => in_1_TVALID,
        ack_in => regslice_both_in_1_V_strb_V_U_ack_in,
        data_out => in_1_TSTRB_int,
        vld_out => regslice_both_in_1_V_strb_V_U_vld_out,
        ack_out => in_1_TREADY_int,
        apdone_blk => regslice_both_in_1_V_strb_V_U_apdone_blk);

    regslice_both_in_0_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_0_TLAST,
        vld_in => in_0_TVALID,
        ack_in => regslice_both_in_0_V_last_V_U_ack_in,
        data_out => in_0_TLAST_int,
        vld_out => regslice_both_in_0_V_last_V_U_vld_out,
        ack_out => in_0_TREADY_int,
        apdone_blk => regslice_both_in_0_V_last_V_U_apdone_blk);

    regslice_both_in_1_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_1_TLAST,
        vld_in => in_1_TVALID,
        ack_in => regslice_both_in_1_V_last_V_U_ack_in,
        data_out => in_1_TLAST_int,
        vld_out => regslice_both_in_1_V_last_V_U_vld_out,
        ack_out => in_1_TREADY_int,
        apdone_blk => regslice_both_in_1_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_298 <= in_0_TDATA_int(31 downto 24);
                reg_305 <= in_0_TDATA_int(39 downto 32);
                reg_312 <= in_0_TDATA_int(47 downto 40);
                reg_319 <= in_1_TDATA_int(31 downto 24);
                reg_326 <= in_1_TDATA_int(39 downto 32);
                reg_333 <= in_1_TDATA_int(47 downto 40);
                reg_340 <= in_0_TDATA_int(55 downto 48);
                reg_347 <= in_0_TDATA_int(63 downto 56);
                reg_354 <= in_1_TDATA_int(55 downto 48);
                reg_361 <= in_1_TDATA_int(63 downto 56);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_368 <= in_0_TDATA_int(23 downto 16);
                reg_374 <= in_1_TDATA_int(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_33_reg_410 <= in_0_TDATA_int(15 downto 8);
                tmp_36_reg_415 <= in_1_TDATA_int(15 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID_int, in_1_TVALID_int)
    begin
                ap_block_state1 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state2 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID_int, in_1_TVALID_int)
    begin
                ap_block_state3 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state4 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state5 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, in_0_TVALID_int, in_1_TVALID_int)
    begin
                ap_block_state6 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state7 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n)
    begin
                ap_block_state8 <= ((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state8)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    in_0_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, in_0_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_0_TDATA_blk_n <= in_0_TVALID_int;
        else 
            in_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_0_TREADY_assign_proc : process(in_0_TVALID, regslice_both_in_0_V_data_V_U_ack_in)
    begin
        if (((in_0_TVALID = ap_const_logic_1) and (regslice_both_in_0_V_data_V_U_ack_in = ap_const_logic_1))) then 
            in_0_TREADY <= ap_const_logic_1;
        else 
            in_0_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_0_TREADY_int_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state3, ap_CS_fsm_state6, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            in_0_TREADY_int <= ap_const_logic_1;
        else 
            in_0_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    in_1_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, in_1_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_1_TDATA_blk_n <= in_1_TVALID_int;
        else 
            in_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_1_TREADY_assign_proc : process(in_1_TVALID, regslice_both_in_1_V_data_V_U_ack_in)
    begin
        if (((in_1_TVALID = ap_const_logic_1) and (regslice_both_in_1_V_data_V_U_ack_in = ap_const_logic_1))) then 
            in_1_TREADY <= ap_const_logic_1;
        else 
            in_1_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_1_TREADY_int_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state3, ap_CS_fsm_state6, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            in_1_TREADY_int <= ap_const_logic_1;
        else 
            in_1_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_0_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_lower_0_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_lower_0_V_blk_n <= input_lower_0_V_full_n;
        else 
            input_lower_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_0_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_319, reg_326, reg_333, reg_354, reg_361, reg_374, tmp_36_reg_415, tmp_18_fu_385_p1, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_0_V_din <= reg_333;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_0_V_din <= reg_374;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_0_V_din <= reg_361;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_0_V_din <= reg_326;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_0_V_din <= tmp_36_reg_415;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_0_V_din <= reg_354;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_0_V_din <= reg_319;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_0_V_din <= tmp_18_fu_385_p1;
        else 
            input_lower_0_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_0_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_lower_0_V_write <= ap_const_logic_1;
        else 
            input_lower_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_1_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_lower_1_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_lower_1_V_blk_n <= input_lower_1_V_full_n;
        else 
            input_lower_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_1_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_319, reg_326, reg_333, reg_354, reg_361, reg_374, tmp_49_fu_405_p1, in_0_TVALID_int, in_1_TDATA_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_1_V_din <= reg_354;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_1_V_din <= reg_319;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_1_V_din <= tmp_49_fu_405_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_1_V_din <= reg_333;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_1_V_din <= reg_374;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_1_V_din <= reg_361;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_1_V_din <= reg_326;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_1_V_din <= in_1_TDATA_int(15 downto 8);
        else 
            input_lower_1_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_1_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_lower_1_V_write <= ap_const_logic_1;
        else 
            input_lower_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_2_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_lower_2_V_blk_n <= input_lower_2_V_full_n;
        else 
            input_lower_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_2_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_319, reg_326, reg_333, reg_354, reg_361, tmp_32_fu_395_p1, in_0_TVALID_int, in_1_TDATA_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_lower_2_V_din <= reg_361;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_lower_2_V_din <= reg_326;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_lower_2_V_din <= in_1_TDATA_int(15 downto 8);
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_lower_2_V_din <= reg_354;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_lower_2_V_din <= reg_319;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_lower_2_V_din <= tmp_32_fu_395_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_lower_2_V_din <= reg_333;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_lower_2_V_din <= in_1_TDATA_int(23 downto 16);
        else 
            input_lower_2_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_lower_2_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_lower_2_V_write <= ap_const_logic_1;
        else 
            input_lower_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_0_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_upper_0_V_blk_n <= input_upper_0_V_full_n;
        else 
            input_upper_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_0_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_298, reg_305, reg_312, reg_340, reg_347, reg_368, tmp_33_reg_410, tmp_fu_380_p1, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_0_V_din <= reg_312;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_0_V_din <= reg_368;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_0_V_din <= reg_347;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_0_V_din <= reg_305;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_0_V_din <= tmp_33_reg_410;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_0_V_din <= reg_340;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_0_V_din <= reg_298;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_0_V_din <= tmp_fu_380_p1;
        else 
            input_upper_0_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_0_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_upper_0_V_write <= ap_const_logic_1;
        else 
            input_upper_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_1_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_1_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_upper_1_V_blk_n <= input_upper_1_V_full_n;
        else 
            input_upper_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_1_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_298, reg_305, reg_312, reg_340, reg_347, reg_368, tmp_46_fu_400_p1, in_0_TDATA_int, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_1_V_din <= reg_340;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_1_V_din <= reg_298;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_1_V_din <= tmp_46_fu_400_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_1_V_din <= reg_312;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_1_V_din <= reg_368;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_1_V_din <= reg_347;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_1_V_din <= reg_305;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_1_V_din <= in_0_TDATA_int(15 downto 8);
        else 
            input_upper_1_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_1_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_upper_1_V_write <= ap_const_logic_1;
        else 
            input_upper_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_2_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_upper_2_V_blk_n <= input_upper_2_V_full_n;
        else 
            input_upper_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_2_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, reg_298, reg_305, reg_312, reg_340, reg_347, tmp_29_fu_390_p1, in_0_TDATA_int, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            input_upper_2_V_din <= reg_347;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            input_upper_2_V_din <= reg_305;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_upper_2_V_din <= in_0_TDATA_int(15 downto 8);
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_upper_2_V_din <= reg_340;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_upper_2_V_din <= reg_298;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_upper_2_V_din <= tmp_29_fu_390_p1;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_upper_2_V_din <= reg_312;
        elsif ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_upper_2_V_din <= in_0_TDATA_int(23 downto 16);
        else 
            input_upper_2_V_din <= "XXXXXXXX";
        end if; 
    end process;


    input_upper_2_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_0_TVALID_int, in_1_TVALID_int)
    begin
        if (((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0) or (in_1_TVALID_int = ap_const_logic_0) or (in_0_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            input_upper_2_V_write <= ap_const_logic_1;
        else 
            input_upper_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(input_upper_0_V_full_n, input_upper_1_V_full_n, input_upper_2_V_full_n, input_lower_0_V_full_n, input_lower_1_V_full_n, input_lower_2_V_full_n, ap_CS_fsm_state8)
    begin
        if ((not(((input_lower_2_V_full_n = ap_const_logic_0) or (input_lower_1_V_full_n = ap_const_logic_0) or (input_lower_0_V_full_n = ap_const_logic_0) or (input_upper_2_V_full_n = ap_const_logic_0) or (input_upper_1_V_full_n = ap_const_logic_0) or (input_upper_0_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_18_fu_385_p1 <= in_1_TDATA_int(8 - 1 downto 0);
    tmp_29_fu_390_p1 <= in_0_TDATA_int(8 - 1 downto 0);
    tmp_32_fu_395_p1 <= in_1_TDATA_int(8 - 1 downto 0);
    tmp_46_fu_400_p1 <= in_0_TDATA_int(8 - 1 downto 0);
    tmp_49_fu_405_p1 <= in_1_TDATA_int(8 - 1 downto 0);
    tmp_fu_380_p1 <= in_0_TDATA_int(8 - 1 downto 0);
end behav;
