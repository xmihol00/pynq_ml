-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    input_upper_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_upper_0_V_empty_n : IN STD_LOGIC;
    input_upper_0_V_read : OUT STD_LOGIC;
    input_upper_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_upper_1_V_empty_n : IN STD_LOGIC;
    input_upper_1_V_read : OUT STD_LOGIC;
    input_upper_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_upper_2_V_empty_n : IN STD_LOGIC;
    input_upper_2_V_read : OUT STD_LOGIC;
    input_lower_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_lower_0_V_empty_n : IN STD_LOGIC;
    input_lower_0_V_read : OUT STD_LOGIC;
    input_lower_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_lower_1_V_empty_n : IN STD_LOGIC;
    input_lower_1_V_read : OUT STD_LOGIC;
    input_lower_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    input_lower_2_V_empty_n : IN STD_LOGIC;
    input_lower_2_V_read : OUT STD_LOGIC;
    output_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_0_V_full_n : IN STD_LOGIC;
    output_0_V_write : OUT STD_LOGIC;
    output_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_1_V_full_n : IN STD_LOGIC;
    output_1_V_write : OUT STD_LOGIC;
    output_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_2_V_full_n : IN STD_LOGIC;
    output_2_V_write : OUT STD_LOGIC;
    output_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_3_V_full_n : IN STD_LOGIC;
    output_3_V_write : OUT STD_LOGIC );
end;


architecture behav of kernel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_1FC : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_201 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal read_odd : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal read_col_index : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    signal compute_odd : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal compute_col_index : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111100";
    signal kernels_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_0_0_ce0 : STD_LOGIC;
    signal kernels_0_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_0_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_0_1_ce0 : STD_LOGIC;
    signal kernels_0_1_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_0_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_0_2_ce0 : STD_LOGIC;
    signal kernels_0_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_0_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_0_ce0 : STD_LOGIC;
    signal stripes_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_0_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_0_ce1 : STD_LOGIC;
    signal stripes_0_0_we1 : STD_LOGIC;
    signal stripes_0_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_1_ce0 : STD_LOGIC;
    signal stripes_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_0_1_ce1 : STD_LOGIC;
    signal stripes_0_1_we1 : STD_LOGIC;
    signal stripes_0_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_2_ce0 : STD_LOGIC;
    signal stripes_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_0_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_2_ce1 : STD_LOGIC;
    signal stripes_0_2_we1 : STD_LOGIC;
    signal stripes_0_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_0_3_ce0 : STD_LOGIC;
    signal stripes_0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_0_3_ce1 : STD_LOGIC;
    signal stripes_0_3_we1 : STD_LOGIC;
    signal kernels_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_1_0_ce0 : STD_LOGIC;
    signal kernels_1_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_1_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_1_1_ce0 : STD_LOGIC;
    signal kernels_1_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_1_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_1_2_ce0 : STD_LOGIC;
    signal kernels_1_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_2_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_2_0_ce0 : STD_LOGIC;
    signal kernels_2_0_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_2_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_2_1_ce0 : STD_LOGIC;
    signal kernels_2_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_2_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_2_2_ce0 : STD_LOGIC;
    signal kernels_2_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_3_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_3_0_ce0 : STD_LOGIC;
    signal kernels_3_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_3_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_3_1_ce0 : STD_LOGIC;
    signal kernels_3_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_3_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_3_2_ce0 : STD_LOGIC;
    signal kernels_3_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_4_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_4_0_ce0 : STD_LOGIC;
    signal kernels_4_0_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_4_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_4_1_ce0 : STD_LOGIC;
    signal kernels_4_1_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_4_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_4_2_ce0 : STD_LOGIC;
    signal kernels_4_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_1_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_0_ce0 : STD_LOGIC;
    signal stripes_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_1_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_0_ce1 : STD_LOGIC;
    signal stripes_1_0_we1 : STD_LOGIC;
    signal stripes_1_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_1_ce0 : STD_LOGIC;
    signal stripes_1_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_1_1_ce1 : STD_LOGIC;
    signal stripes_1_1_we1 : STD_LOGIC;
    signal stripes_1_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_2_ce0 : STD_LOGIC;
    signal stripes_1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_1_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_2_ce1 : STD_LOGIC;
    signal stripes_1_2_we1 : STD_LOGIC;
    signal stripes_1_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_3_ce0 : STD_LOGIC;
    signal stripes_1_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_1_3_ce1 : STD_LOGIC;
    signal stripes_1_3_we1 : STD_LOGIC;
    signal kernels_5_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_5_0_ce0 : STD_LOGIC;
    signal kernels_5_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_5_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_5_1_ce0 : STD_LOGIC;
    signal kernels_5_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_5_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_5_2_ce0 : STD_LOGIC;
    signal kernels_5_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_6_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_6_0_ce0 : STD_LOGIC;
    signal kernels_6_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_6_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_6_1_ce0 : STD_LOGIC;
    signal kernels_6_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_6_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_6_2_ce0 : STD_LOGIC;
    signal kernels_6_2_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_7_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_7_0_ce0 : STD_LOGIC;
    signal kernels_7_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_7_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_7_1_ce0 : STD_LOGIC;
    signal kernels_7_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_7_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_7_2_ce0 : STD_LOGIC;
    signal kernels_7_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_8_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_8_0_ce0 : STD_LOGIC;
    signal kernels_8_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_8_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_8_1_ce0 : STD_LOGIC;
    signal kernels_8_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_8_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_8_2_ce0 : STD_LOGIC;
    signal kernels_8_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal stripes_2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_0_ce0 : STD_LOGIC;
    signal stripes_2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_2_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_0_ce1 : STD_LOGIC;
    signal stripes_2_0_we1 : STD_LOGIC;
    signal stripes_2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_1_ce0 : STD_LOGIC;
    signal stripes_2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_2_1_ce1 : STD_LOGIC;
    signal stripes_2_1_we1 : STD_LOGIC;
    signal stripes_2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_2_ce0 : STD_LOGIC;
    signal stripes_2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_2_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_2_ce1 : STD_LOGIC;
    signal stripes_2_2_we1 : STD_LOGIC;
    signal stripes_2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_3_ce0 : STD_LOGIC;
    signal stripes_2_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stripes_2_3_ce1 : STD_LOGIC;
    signal stripes_2_3_we1 : STD_LOGIC;
    signal kernels_9_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_9_0_ce0 : STD_LOGIC;
    signal kernels_9_0_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernels_9_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_9_1_ce0 : STD_LOGIC;
    signal kernels_9_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_9_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_9_2_ce0 : STD_LOGIC;
    signal kernels_9_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_10_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_10_0_ce0 : STD_LOGIC;
    signal kernels_10_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_10_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_10_1_ce0 : STD_LOGIC;
    signal kernels_10_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_10_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_10_2_ce0 : STD_LOGIC;
    signal kernels_10_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_11_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_11_0_ce0 : STD_LOGIC;
    signal kernels_11_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_11_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_11_1_ce0 : STD_LOGIC;
    signal kernels_11_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernels_11_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernels_11_2_ce0 : STD_LOGIC;
    signal kernels_11_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_upper_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln167_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_0_reg_1292 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln154_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_1280 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_upper_1_V_blk_n : STD_LOGIC;
    signal input_upper_2_V_blk_n : STD_LOGIC;
    signal input_lower_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal input_lower_1_V_blk_n : STD_LOGIC;
    signal input_lower_2_V_blk_n : STD_LOGIC;
    signal output_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln252_fu_2772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln254_fu_2784_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_1_V_blk_n : STD_LOGIC;
    signal output_2_V_blk_n : STD_LOGIC;
    signal output_3_V_blk_n : STD_LOGIC;
    signal partial_sums_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1714 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal partial_sums_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal partial_sums_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal b_fu_1735_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_reg_3071 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal read_odd_load_load_fu_1741_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_odd_load_reg_3076 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln147_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1751_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_3084 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln153_fu_1757_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln151_fu_1745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1767_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_3097 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln166_fu_1773_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln164_fu_1761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compute_odd_load_reg_3107 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln177_fu_1781_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_reg_3112 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_1_fu_1789_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_1_reg_3117 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_2_fu_1797_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_2_reg_3123 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_3_fu_1805_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln177_3_reg_3129 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_fu_1819_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_3137 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_predicate_op124_read_state4 : BOOLEAN;
    signal ap_predicate_op126_read_state4 : BOOLEAN;
    signal ap_predicate_op128_read_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_predicate_op148_read_state5 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal stripes_0_1_addr_reg_3172 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_1_addr_reg_3177 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_1_addr_reg_3182 : STD_LOGIC_VECTOR (9 downto 0);
    signal local_col_index_2_fu_1835_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal j_fu_1847_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_3195 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_predicate_op170_read_state7 : BOOLEAN;
    signal ap_predicate_op172_read_state7 : BOOLEAN;
    signal ap_predicate_op174_read_state7 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_predicate_op194_read_state8 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal stripes_0_3_addr_reg_3230 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_1_3_addr_reg_3235 : STD_LOGIC_VECTOR (9 downto 0);
    signal stripes_2_3_addr_reg_3240 : STD_LOGIC_VECTOR (9 downto 0);
    signal local_col_index_1_fu_1863_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln192_fu_1869_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal select_ln192_2_fu_1909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_5_fu_1933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_7_fu_1949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_8_fu_1957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_3_1_loa_reg_3282 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal kernel_sums_2_1_loa_reg_3287 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_1_1_loa_reg_3292 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_0_1_loa_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_fu_1989_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_reg_3305 : STD_LOGIC_VECTOR (2 downto 0);
    signal local_row_indices_0_fu_2015_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_0_reg_3310 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln194_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_row_indices_1_fu_2021_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_1_reg_3315 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_2_fu_2027_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_row_indices_2_reg_3320 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_col_index_fu_2037_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_col_index_reg_3325 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_fu_2043_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln215_reg_3330 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln215_1_fu_2049_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln218_fu_2074_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln218_reg_3346 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln215_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_1_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_fu_2083_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_reg_3354 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal m_fu_2099_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_reg_3362 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal zext_ln228_fu_2105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln228_reg_3367 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln220_fu_2093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln228_fu_2112_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln228_reg_3404 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln228_fu_2156_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln228_reg_3424 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_7_fu_2160_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_3654 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2186_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_reg_3659 : STD_LOGIC_VECTOR (7 downto 0);
    signal partial_sums_0_load_1_reg_3664 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_2210_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_3669 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_2234_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_reg_3674 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_2258_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_3679 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_2270_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_3684 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_2296_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_3689 : STD_LOGIC_VECTOR (7 downto 0);
    signal partial_sums_1_load_1_reg_3694 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2320_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_3699 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_2344_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_3704 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_2368_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_3709 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_2380_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_3714 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_2406_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_reg_3719 : STD_LOGIC_VECTOR (7 downto 0);
    signal partial_sums_2_load_1_reg_3724 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_2430_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_reg_3729 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_2454_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_3734 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2896_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_3_reg_3739 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_2904_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_4_reg_3744 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_7_reg_3749 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_8_reg_3754 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_11_reg_3759 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln228_12_reg_3764 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln234_fu_2508_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal kernel_sums_3_3_fu_2514_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_3_3_reg_3774 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_2_3_fu_2528_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_2_3_reg_3780 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_1_3_fu_2542_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_1_3_reg_3786 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_0_3_fu_2556_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_0_3_reg_3792 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln239_fu_2582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal kernel_sums_0_fu_2600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln239_fu_2576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln239_1_fu_2612_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal kernel_sums_1_fu_2630_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln239_1_fu_2606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln239_2_fu_2642_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal kernel_sums_2_fu_2660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln239_2_fu_2636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln239_3_fu_2672_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal kernel_sums_3_fu_2690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln239_3_fu_2666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxes_0_fu_2702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_1_fu_2716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_2_fu_2730_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_3_fu_2744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_2778_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_predicate_op696_write_state29 : BOOLEAN;
    signal ap_predicate_op698_write_state29 : BOOLEAN;
    signal ap_predicate_op700_write_state29 : BOOLEAN;
    signal ap_predicate_op702_write_state29 : BOOLEAN;
    signal ap_block_state29 : BOOLEAN;
    signal icmp_ln258_fu_2822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_3884 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_fu_2857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal partial_sums_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_0_ce0 : STD_LOGIC;
    signal partial_sums_0_we0 : STD_LOGIC;
    signal partial_sums_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_0_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_0_ce1 : STD_LOGIC;
    signal partial_sums_0_we1 : STD_LOGIC;
    signal partial_sums_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_1_ce0 : STD_LOGIC;
    signal partial_sums_1_we0 : STD_LOGIC;
    signal partial_sums_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_1_ce1 : STD_LOGIC;
    signal partial_sums_1_we1 : STD_LOGIC;
    signal partial_sums_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_2_ce0 : STD_LOGIC;
    signal partial_sums_2_we0 : STD_LOGIC;
    signal partial_sums_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal partial_sums_2_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal partial_sums_2_ce1 : STD_LOGIC;
    signal partial_sums_2_we1 : STD_LOGIC;
    signal partial_sums_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_3_3_reg_1453 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_3_0_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal maxes_2_3_reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_2_0_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_1_3_reg_1475 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_1_0_reg_1245 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_0_3_reg_1486 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_0_0_reg_1257 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_reg_1269 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_0_reg_1304 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_col_index_0_reg_1315 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_112_0_reg_1325 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_113_0_reg_1339 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_col_index2_0_reg_1353 : STD_LOGIC_VECTOR (16 downto 0);
    signal j3_0_reg_1363 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_0_reg_1374 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_111_0_reg_1388 : STD_LOGIC_VECTOR (7 downto 0);
    signal maxes_3_14_reg_1402 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln192_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxes_2_13_reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_1_12_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxes_0_11_reg_1432 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln192_reg_1442 : STD_LOGIC_VECTOR (1 downto 0);
    signal i4_0_reg_1497 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln215_reg_1508 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln215_1_reg_1520 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_0_reg_1531 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_0_reg_1543 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln218_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln228_reg_1554 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_sums_0_2_reg_1565 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln234_fu_2570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_sums_1_2_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_2_2_reg_1583 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_3_2_reg_1592 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln234_reg_1601 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_sums_0_4_reg_1612 : STD_LOGIC_VECTOR (31 downto 0);
    signal j8_0_0_reg_1622 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_sums_1_4_reg_1633 : STD_LOGIC_VECTOR (31 downto 0);
    signal j8_0_1_reg_1643 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_sums_2_4_reg_1654 : STD_LOGIC_VECTOR (31 downto 0);
    signal j8_0_2_reg_1664 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_sums_3_4_reg_1675 : STD_LOGIC_VECTOR (31 downto 0);
    signal j8_0_3_reg_1684 : STD_LOGIC_VECTOR (1 downto 0);
    signal i10_0_reg_1695 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln156_fu_1825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln169_fu_1853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_2055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln228_1_fu_2117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln261_fu_2828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln257_fu_2810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln268_fu_2863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln264_fu_2845_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_sums_3_1_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_2_1_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_1_1_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_sums_0_1_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_2802_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2888_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2945_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln192_1_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln192_2_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_1881_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln192_3_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_1_fu_1895_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_3_fu_1917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_4_fu_1925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln192_6_fu_1941_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1995_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_offset_fu_2005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln206_fu_2011_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln213_fu_2033_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln220_fu_2089_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_2144_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_2144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_2144_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_2144_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2186_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2186_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2210_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2210_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2210_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_2234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_2234_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_2234_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_2258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_2258_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_2258_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_2296_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_2296_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_2296_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_2320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_2320_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_2320_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_2344_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_2344_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_2344_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_2368_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_2368_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_2368_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_2406_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_2406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_2406_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_2430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_2430_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_2430_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_2454_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_2454_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_2454_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_2588_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_2618_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_2648_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_2678_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln248_fu_2696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln248_1_fu_2710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln248_2_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln248_3_fu_2738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_2788_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_2788_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2880_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln228_2_fu_2466_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2888_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2896_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2904_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2912_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln228_3_fu_2481_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2921_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2929_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2937_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln228_4_fu_2496_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2954_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2962_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2970_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_condition_2120 : BOOLEAN;
    signal ap_condition_810 : BOOLEAN;
    signal ap_condition_2116 : BOOLEAN;
    signal ap_condition_757 : BOOLEAN;

    component fused_cnn_layer_meOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fused_cnn_layer_mfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fused_cnn_layer_mg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fused_cnn_layer_mhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fused_cnn_layer_mibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_kernels_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_0_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_stripes_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kernel_kernels_1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_1_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_1_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_2_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_2_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_3_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_3_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_3_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_4_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_4_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_4_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_5_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_5_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_5_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_6_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_6_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_6_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_7_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_7_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_7_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_8_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_8_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_8_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_9_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component kernel_kernels_9_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_9_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_10_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_10_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_10_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_11_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_11_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_kernels_11_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component kernel_partial_subkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernels_0_0_U : component kernel_kernels_0_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_0_0_address0,
        ce0 => kernels_0_0_ce0,
        q0 => kernels_0_0_q0);

    kernels_0_1_U : component kernel_kernels_0_1
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_0_1_address0,
        ce0 => kernels_0_1_ce0,
        q0 => kernels_0_1_q0);

    kernels_0_2_U : component kernel_kernels_0_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_0_2_address0,
        ce0 => kernels_0_2_ce0,
        q0 => kernels_0_2_q0);

    stripes_0_0_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_0_0_address0,
        ce0 => stripes_0_0_ce0,
        q0 => stripes_0_0_q0,
        address1 => stripes_0_0_address1,
        ce1 => stripes_0_0_ce1,
        we1 => stripes_0_0_we1,
        d1 => tmp_112_0_reg_1325);

    stripes_0_1_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_0_1_address0,
        ce0 => stripes_0_1_ce0,
        q0 => stripes_0_1_q0,
        address1 => stripes_0_1_addr_reg_3172,
        ce1 => stripes_0_1_ce1,
        we1 => stripes_0_1_we1,
        d1 => tmp_113_0_reg_1339);

    stripes_0_2_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_0_2_address0,
        ce0 => stripes_0_2_ce0,
        q0 => stripes_0_2_q0,
        address1 => stripes_0_2_address1,
        ce1 => stripes_0_2_ce1,
        we1 => stripes_0_2_we1,
        d1 => tmp_0_reg_1374);

    stripes_0_3_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_0_3_address0,
        ce0 => stripes_0_3_ce0,
        q0 => stripes_0_3_q0,
        address1 => stripes_0_3_addr_reg_3230,
        ce1 => stripes_0_3_ce1,
        we1 => stripes_0_3_we1,
        d1 => tmp_111_0_reg_1388);

    kernels_1_0_U : component kernel_kernels_1_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_1_0_address0,
        ce0 => kernels_1_0_ce0,
        q0 => kernels_1_0_q0);

    kernels_1_1_U : component kernel_kernels_1_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_1_1_address0,
        ce0 => kernels_1_1_ce0,
        q0 => kernels_1_1_q0);

    kernels_1_2_U : component kernel_kernels_1_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_1_2_address0,
        ce0 => kernels_1_2_ce0,
        q0 => kernels_1_2_q0);

    kernels_2_0_U : component kernel_kernels_2_0
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_2_0_address0,
        ce0 => kernels_2_0_ce0,
        q0 => kernels_2_0_q0);

    kernels_2_1_U : component kernel_kernels_2_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_2_1_address0,
        ce0 => kernels_2_1_ce0,
        q0 => kernels_2_1_q0);

    kernels_2_2_U : component kernel_kernels_2_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_2_2_address0,
        ce0 => kernels_2_2_ce0,
        q0 => kernels_2_2_q0);

    kernels_3_0_U : component kernel_kernels_3_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_3_0_address0,
        ce0 => kernels_3_0_ce0,
        q0 => kernels_3_0_q0);

    kernels_3_1_U : component kernel_kernels_3_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_3_1_address0,
        ce0 => kernels_3_1_ce0,
        q0 => kernels_3_1_q0);

    kernels_3_2_U : component kernel_kernels_3_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_3_2_address0,
        ce0 => kernels_3_2_ce0,
        q0 => kernels_3_2_q0);

    kernels_4_0_U : component kernel_kernels_4_0
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_4_0_address0,
        ce0 => kernels_4_0_ce0,
        q0 => kernels_4_0_q0);

    kernels_4_1_U : component kernel_kernels_4_1
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_4_1_address0,
        ce0 => kernels_4_1_ce0,
        q0 => kernels_4_1_q0);

    kernels_4_2_U : component kernel_kernels_4_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_4_2_address0,
        ce0 => kernels_4_2_ce0,
        q0 => kernels_4_2_q0);

    stripes_1_0_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_1_0_address0,
        ce0 => stripes_1_0_ce0,
        q0 => stripes_1_0_q0,
        address1 => stripes_1_0_address1,
        ce1 => stripes_1_0_ce1,
        we1 => stripes_1_0_we1,
        d1 => tmp_112_0_reg_1325);

    stripes_1_1_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_1_1_address0,
        ce0 => stripes_1_1_ce0,
        q0 => stripes_1_1_q0,
        address1 => stripes_1_1_addr_reg_3177,
        ce1 => stripes_1_1_ce1,
        we1 => stripes_1_1_we1,
        d1 => tmp_113_0_reg_1339);

    stripes_1_2_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_1_2_address0,
        ce0 => stripes_1_2_ce0,
        q0 => stripes_1_2_q0,
        address1 => stripes_1_2_address1,
        ce1 => stripes_1_2_ce1,
        we1 => stripes_1_2_we1,
        d1 => tmp_0_reg_1374);

    stripes_1_3_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_1_3_address0,
        ce0 => stripes_1_3_ce0,
        q0 => stripes_1_3_q0,
        address1 => stripes_1_3_addr_reg_3235,
        ce1 => stripes_1_3_ce1,
        we1 => stripes_1_3_we1,
        d1 => tmp_111_0_reg_1388);

    kernels_5_0_U : component kernel_kernels_5_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_5_0_address0,
        ce0 => kernels_5_0_ce0,
        q0 => kernels_5_0_q0);

    kernels_5_1_U : component kernel_kernels_5_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_5_1_address0,
        ce0 => kernels_5_1_ce0,
        q0 => kernels_5_1_q0);

    kernels_5_2_U : component kernel_kernels_5_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_5_2_address0,
        ce0 => kernels_5_2_ce0,
        q0 => kernels_5_2_q0);

    kernels_6_0_U : component kernel_kernels_6_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_6_0_address0,
        ce0 => kernels_6_0_ce0,
        q0 => kernels_6_0_q0);

    kernels_6_1_U : component kernel_kernels_6_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_6_1_address0,
        ce0 => kernels_6_1_ce0,
        q0 => kernels_6_1_q0);

    kernels_6_2_U : component kernel_kernels_6_2
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_6_2_address0,
        ce0 => kernels_6_2_ce0,
        q0 => kernels_6_2_q0);

    kernels_7_0_U : component kernel_kernels_7_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_7_0_address0,
        ce0 => kernels_7_0_ce0,
        q0 => kernels_7_0_q0);

    kernels_7_1_U : component kernel_kernels_7_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_7_1_address0,
        ce0 => kernels_7_1_ce0,
        q0 => kernels_7_1_q0);

    kernels_7_2_U : component kernel_kernels_7_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_7_2_address0,
        ce0 => kernels_7_2_ce0,
        q0 => kernels_7_2_q0);

    kernels_8_0_U : component kernel_kernels_8_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_8_0_address0,
        ce0 => kernels_8_0_ce0,
        q0 => kernels_8_0_q0);

    kernels_8_1_U : component kernel_kernels_8_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_8_1_address0,
        ce0 => kernels_8_1_ce0,
        q0 => kernels_8_1_q0);

    kernels_8_2_U : component kernel_kernels_8_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_8_2_address0,
        ce0 => kernels_8_2_ce0,
        q0 => kernels_8_2_q0);

    stripes_2_0_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_2_0_address0,
        ce0 => stripes_2_0_ce0,
        q0 => stripes_2_0_q0,
        address1 => stripes_2_0_address1,
        ce1 => stripes_2_0_ce1,
        we1 => stripes_2_0_we1,
        d1 => tmp_112_0_reg_1325);

    stripes_2_1_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_2_1_address0,
        ce0 => stripes_2_1_ce0,
        q0 => stripes_2_1_q0,
        address1 => stripes_2_1_addr_reg_3182,
        ce1 => stripes_2_1_ce1,
        we1 => stripes_2_1_we1,
        d1 => tmp_113_0_reg_1339);

    stripes_2_2_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_2_2_address0,
        ce0 => stripes_2_2_ce0,
        q0 => stripes_2_2_q0,
        address1 => stripes_2_2_address1,
        ce1 => stripes_2_2_ce1,
        we1 => stripes_2_2_we1,
        d1 => tmp_0_reg_1374);

    stripes_2_3_U : component kernel_stripes_0_0
    generic map (
        DataWidth => 8,
        AddressRange => 514,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stripes_2_3_address0,
        ce0 => stripes_2_3_ce0,
        q0 => stripes_2_3_q0,
        address1 => stripes_2_3_addr_reg_3240,
        ce1 => stripes_2_3_ce1,
        we1 => stripes_2_3_we1,
        d1 => tmp_111_0_reg_1388);

    kernels_9_0_U : component kernel_kernels_9_0
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_9_0_address0,
        ce0 => kernels_9_0_ce0,
        q0 => kernels_9_0_q0);

    kernels_9_1_U : component kernel_kernels_9_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_9_1_address0,
        ce0 => kernels_9_1_ce0,
        q0 => kernels_9_1_q0);

    kernels_9_2_U : component kernel_kernels_9_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_9_2_address0,
        ce0 => kernels_9_2_ce0,
        q0 => kernels_9_2_q0);

    kernels_10_0_U : component kernel_kernels_10_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_10_0_address0,
        ce0 => kernels_10_0_ce0,
        q0 => kernels_10_0_q0);

    kernels_10_1_U : component kernel_kernels_10_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_10_1_address0,
        ce0 => kernels_10_1_ce0,
        q0 => kernels_10_1_q0);

    kernels_10_2_U : component kernel_kernels_10_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_10_2_address0,
        ce0 => kernels_10_2_ce0,
        q0 => kernels_10_2_q0);

    kernels_11_0_U : component kernel_kernels_11_0
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_11_0_address0,
        ce0 => kernels_11_0_ce0,
        q0 => kernels_11_0_q0);

    kernels_11_1_U : component kernel_kernels_11_1
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_11_1_address0,
        ce0 => kernels_11_1_ce0,
        q0 => kernels_11_1_q0);

    kernels_11_2_U : component kernel_kernels_11_2
    generic map (
        DataWidth => 6,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernels_11_2_address0,
        ce0 => kernels_11_2_ce0,
        q0 => kernels_11_2_q0);

    partial_sums_0_U : component kernel_partial_subkb
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => partial_sums_0_address0,
        ce0 => partial_sums_0_ce0,
        we0 => partial_sums_0_we0,
        d0 => partial_sums_0_d0,
        q0 => partial_sums_0_q0,
        address1 => partial_sums_0_address1,
        ce1 => partial_sums_0_ce1,
        we1 => partial_sums_0_we1,
        d1 => partial_sums_0_d1,
        q1 => partial_sums_0_q1);

    partial_sums_1_U : component kernel_partial_subkb
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => partial_sums_1_address0,
        ce0 => partial_sums_1_ce0,
        we0 => partial_sums_1_we0,
        d0 => partial_sums_1_d0,
        q0 => partial_sums_1_q0,
        address1 => partial_sums_1_address1,
        ce1 => partial_sums_1_ce1,
        we1 => partial_sums_1_we1,
        d1 => partial_sums_1_d1,
        q1 => partial_sums_1_q1);

    partial_sums_2_U : component kernel_partial_subkb
    generic map (
        DataWidth => 32,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => partial_sums_2_address0,
        ce0 => partial_sums_2_ce0,
        we0 => partial_sums_2_we0,
        d0 => partial_sums_2_d0,
        q0 => partial_sums_2_q0,
        address1 => partial_sums_2_address1,
        ce1 => partial_sums_2_ce1,
        we1 => partial_sums_2_we1,
        d1 => partial_sums_2_d1,
        q1 => partial_sums_2_q1);

    fused_cnn_layer_meOg_U16 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_8_fu_2144_p1,
        din1 => tmp_8_fu_2144_p2,
        din2 => tmp_8_fu_2144_p3,
        din3 => l_0_reg_1531,
        dout => tmp_8_fu_2144_p5);

    fused_cnn_layer_mfYi_U17 : component fused_cnn_layer_mfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => stripes_0_0_q0,
        din1 => stripes_0_1_q0,
        din2 => stripes_0_2_q0,
        din3 => stripes_0_3_q0,
        din4 => phi_ln228_reg_1554,
        dout => tmp_7_fu_2160_p6);

    fused_cnn_layer_meOg_U18 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_10_fu_2186_p1,
        din1 => tmp_10_fu_2186_p2,
        din2 => tmp_10_fu_2186_p3,
        din3 => l_0_reg_1531,
        dout => tmp_10_fu_2186_p5);

    fused_cnn_layer_meOg_U19 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_11_fu_2210_p1,
        din1 => tmp_11_fu_2210_p2,
        din2 => tmp_11_fu_2210_p3,
        din3 => l_0_reg_1531,
        dout => tmp_11_fu_2210_p5);

    fused_cnn_layer_meOg_U20 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_12_fu_2234_p1,
        din1 => tmp_12_fu_2234_p2,
        din2 => tmp_12_fu_2234_p3,
        din3 => l_0_reg_1531,
        dout => tmp_12_fu_2234_p5);

    fused_cnn_layer_meOg_U21 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_13_fu_2258_p1,
        din1 => tmp_13_fu_2258_p2,
        din2 => tmp_13_fu_2258_p3,
        din3 => l_0_reg_1531,
        dout => tmp_13_fu_2258_p5);

    fused_cnn_layer_mfYi_U22 : component fused_cnn_layer_mfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => stripes_1_0_q0,
        din1 => stripes_1_1_q0,
        din2 => stripes_1_2_q0,
        din3 => stripes_1_3_q0,
        din4 => phi_ln228_reg_1554,
        dout => tmp_14_fu_2270_p6);

    fused_cnn_layer_meOg_U23 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_15_fu_2296_p1,
        din1 => tmp_15_fu_2296_p2,
        din2 => tmp_15_fu_2296_p3,
        din3 => l_0_reg_1531,
        dout => tmp_15_fu_2296_p5);

    fused_cnn_layer_meOg_U24 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_16_fu_2320_p1,
        din1 => tmp_16_fu_2320_p2,
        din2 => tmp_16_fu_2320_p3,
        din3 => l_0_reg_1531,
        dout => tmp_16_fu_2320_p5);

    fused_cnn_layer_meOg_U25 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_17_fu_2344_p1,
        din1 => tmp_17_fu_2344_p2,
        din2 => tmp_17_fu_2344_p3,
        din3 => l_0_reg_1531,
        dout => tmp_17_fu_2344_p5);

    fused_cnn_layer_meOg_U26 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_18_fu_2368_p1,
        din1 => tmp_18_fu_2368_p2,
        din2 => tmp_18_fu_2368_p3,
        din3 => l_0_reg_1531,
        dout => tmp_18_fu_2368_p5);

    fused_cnn_layer_mfYi_U27 : component fused_cnn_layer_mfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => stripes_2_0_q0,
        din1 => stripes_2_1_q0,
        din2 => stripes_2_2_q0,
        din3 => stripes_2_3_q0,
        din4 => phi_ln228_reg_1554,
        dout => tmp_19_fu_2380_p6);

    fused_cnn_layer_meOg_U28 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_20_fu_2406_p1,
        din1 => tmp_20_fu_2406_p2,
        din2 => tmp_20_fu_2406_p3,
        din3 => l_0_reg_1531,
        dout => tmp_20_fu_2406_p5);

    fused_cnn_layer_meOg_U29 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_21_fu_2430_p1,
        din1 => tmp_21_fu_2430_p2,
        din2 => tmp_21_fu_2430_p3,
        din3 => l_0_reg_1531,
        dout => tmp_21_fu_2430_p5);

    fused_cnn_layer_meOg_U30 : component fused_cnn_layer_meOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_22_fu_2454_p1,
        din1 => tmp_22_fu_2454_p2,
        din2 => tmp_22_fu_2454_p3,
        din3 => l_0_reg_1531,
        dout => tmp_22_fu_2454_p5);

    fused_cnn_layer_mg8j_U31 : component fused_cnn_layer_mg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_sums_3_2_reg_1592,
        din1 => kernel_sums_3_2_reg_1592,
        din2 => kernel_sums_3_2_reg_1592,
        din3 => ap_const_lv32_0,
        din4 => phi_ln234_reg_1601,
        dout => kernel_sums_3_3_fu_2514_p6);

    fused_cnn_layer_mg8j_U32 : component fused_cnn_layer_mg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_sums_2_2_reg_1583,
        din1 => kernel_sums_2_2_reg_1583,
        din2 => ap_const_lv32_0,
        din3 => kernel_sums_2_2_reg_1583,
        din4 => phi_ln234_reg_1601,
        dout => kernel_sums_2_3_fu_2528_p6);

    fused_cnn_layer_mg8j_U33 : component fused_cnn_layer_mg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_sums_1_2_reg_1574,
        din1 => ap_const_lv32_0,
        din2 => kernel_sums_1_2_reg_1574,
        din3 => kernel_sums_1_2_reg_1574,
        din4 => phi_ln234_reg_1601,
        dout => kernel_sums_1_3_fu_2542_p6);

    fused_cnn_layer_mg8j_U34 : component fused_cnn_layer_mg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => kernel_sums_0_2_reg_1565,
        din2 => kernel_sums_0_2_reg_1565,
        din3 => kernel_sums_0_2_reg_1565,
        din4 => phi_ln234_reg_1601,
        dout => kernel_sums_0_3_fu_2556_p6);

    fused_cnn_layer_mhbi_U35 : component fused_cnn_layer_mhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => reg_1714,
        din1 => reg_1719,
        din2 => reg_1724,
        din3 => j8_0_0_reg_1622,
        dout => tmp_9_fu_2588_p5);

    fused_cnn_layer_mhbi_U36 : component fused_cnn_layer_mhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => reg_1714,
        din1 => reg_1719,
        din2 => reg_1724,
        din3 => j8_0_1_reg_1643,
        dout => tmp_23_fu_2618_p5);

    fused_cnn_layer_mhbi_U37 : component fused_cnn_layer_mhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => reg_1714,
        din1 => reg_1719,
        din2 => reg_1724,
        din3 => j8_0_2_reg_1664,
        dout => tmp_24_fu_2648_p5);

    fused_cnn_layer_mhbi_U38 : component fused_cnn_layer_mhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => reg_1714,
        din1 => reg_1719,
        din2 => reg_1724,
        din3 => j8_0_3_reg_1684,
        dout => tmp_25_fu_2678_p5);

    fused_cnn_layer_mg8j_U39 : component fused_cnn_layer_mg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => maxes_0_3_reg_1486,
        din1 => maxes_1_3_reg_1475,
        din2 => maxes_2_3_reg_1464,
        din3 => maxes_3_3_reg_1453,
        din4 => tmp_6_fu_2788_p5,
        dout => tmp_6_fu_2788_p6);

    fused_cnn_layer_mibs_U40 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_2880_p0,
        din1 => grp_fu_2880_p1,
        din2 => reg_1714,
        dout => grp_fu_2880_p3);

    fused_cnn_layer_mibs_U41 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_10_reg_3659,
        din1 => grp_fu_2888_p1,
        din2 => partial_sums_0_load_1_reg_3664,
        dout => grp_fu_2888_p3);

    fused_cnn_layer_mibs_U42 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_reg_3669,
        din1 => grp_fu_2896_p1,
        din2 => partial_sums_0_q1,
        dout => grp_fu_2896_p3);

    fused_cnn_layer_mibs_U43 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_12_reg_3674,
        din1 => grp_fu_2904_p1,
        din2 => partial_sums_0_q0,
        dout => grp_fu_2904_p3);

    fused_cnn_layer_mibs_U44 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_13_reg_3679,
        din1 => grp_fu_2912_p1,
        din2 => reg_1719,
        dout => grp_fu_2912_p3);

    fused_cnn_layer_mibs_U45 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_15_reg_3689,
        din1 => grp_fu_2921_p1,
        din2 => partial_sums_1_load_1_reg_3694,
        dout => grp_fu_2921_p3);

    fused_cnn_layer_mibs_U46 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_16_reg_3699,
        din1 => grp_fu_2929_p1,
        din2 => partial_sums_1_q1,
        dout => grp_fu_2929_p3);

    fused_cnn_layer_mibs_U47 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_17_reg_3704,
        din1 => grp_fu_2937_p1,
        din2 => partial_sums_1_q0,
        dout => grp_fu_2937_p3);

    fused_cnn_layer_mibs_U48 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_18_reg_3709,
        din1 => grp_fu_2945_p1,
        din2 => reg_1724,
        dout => grp_fu_2945_p3);

    fused_cnn_layer_mibs_U49 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_20_reg_3719,
        din1 => grp_fu_2954_p1,
        din2 => partial_sums_2_load_1_reg_3724,
        dout => grp_fu_2954_p3);

    fused_cnn_layer_mibs_U50 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_21_reg_3729,
        din1 => grp_fu_2962_p1,
        din2 => partial_sums_2_q1,
        dout => grp_fu_2962_p3);

    fused_cnn_layer_mibs_U51 : component fused_cnn_layer_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_22_reg_3734,
        din1 => grp_fu_2970_p1,
        din2 => partial_sums_2_q0,
        dout => grp_fu_2970_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    compute_col_index_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                compute_col_index <= ap_const_lv16_1FC;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln265_reg_3888 = ap_const_lv1_1))) then 
                    compute_col_index <= ap_const_lv16_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    compute_col_index <= add_ln264_fu_2845_p2;
                end if; 
            end if;
        end if;
    end process;


    read_col_index_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                read_col_index <= ap_const_lv16_1;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln258_reg_3884 = ap_const_lv1_1))) then 
                    read_col_index <= ap_const_lv16_1;
                elsif ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_1))) then 
                    read_col_index <= add_ln257_fu_2810_p2;
                end if; 
            end if;
        end if;
    end process;


    read_odd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                read_odd <= ap_const_lv1_0;
            else
                if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_1) and (icmp_ln258_fu_2822_p2 = ap_const_lv1_1))) then 
                    read_odd <= xor_ln261_fu_2828_p2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    b_0_reg_1269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                b_0_reg_1269 <= b_reg_3071;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                b_0_reg_1269 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i10_0_reg_1695_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_1983_p2 = ap_const_lv1_1))) then 
                i10_0_reg_1695 <= ap_const_lv3_0;
            elsif ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then 
                i10_0_reg_1695 <= i_2_fu_2778_p2;
            end if; 
        end if;
    end process;

    i1_0_reg_1292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (read_odd_load_load_fu_1741_p1 = ap_const_lv1_1) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_0))) then 
                i1_0_reg_1292 <= ap_const_lv2_0;
            elsif ((not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_1))) then 
                i1_0_reg_1292 <= i_reg_3097;
            end if; 
        end if;
    end process;

    i4_0_reg_1497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then 
                i4_0_reg_1497 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then 
                i4_0_reg_1497 <= i_3_reg_3305;
            end if; 
        end if;
    end process;

    i_0_reg_1280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_0) and (read_odd_load_load_fu_1741_p1 = ap_const_lv1_0))) then 
                i_0_reg_1280 <= ap_const_lv2_0;
            elsif ((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_1))) then 
                i_0_reg_1280 <= i_1_reg_3084;
            end if; 
        end if;
    end process;

    j3_0_reg_1363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                j3_0_reg_1363 <= j_reg_3195;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3076 = ap_const_lv1_1) and (icmp_ln164_fu_1761_p2 = ap_const_lv1_0))) then 
                j3_0_reg_1363 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j8_0_0_reg_1622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln239_fu_2576_p2 = ap_const_lv1_0))) then 
                j8_0_0_reg_1622 <= add_ln239_fu_2582_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                j8_0_0_reg_1622 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j8_0_1_reg_1643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln239_1_fu_2606_p2 = ap_const_lv1_0))) then 
                j8_0_1_reg_1643 <= add_ln239_1_fu_2612_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                j8_0_1_reg_1643 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j8_0_2_reg_1664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln239_2_fu_2636_p2 = ap_const_lv1_0))) then 
                j8_0_2_reg_1664 <= add_ln239_2_fu_2642_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                j8_0_2_reg_1664 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j8_0_3_reg_1684_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_0))) then 
                j8_0_3_reg_1684 <= add_ln239_3_fu_2672_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                j8_0_3_reg_1684 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_0_reg_1304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                j_0_reg_1304 <= j_1_reg_3137;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln151_fu_1745_p2 = ap_const_lv1_0) and (read_odd_load_reg_3076 = ap_const_lv1_0))) then 
                j_0_reg_1304 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    kernel_sums_0_2_reg_1565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then 
                kernel_sums_0_2_reg_1565 <= kernel_sums_0_1_loa_reg_3297;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_0))) then 
                kernel_sums_0_2_reg_1565 <= kernel_sums_0_3_fu_2556_p6;
            end if; 
        end if;
    end process;

    kernel_sums_0_4_reg_1612_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln239_fu_2576_p2 = ap_const_lv1_0))) then 
                kernel_sums_0_4_reg_1612 <= kernel_sums_0_fu_2600_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                kernel_sums_0_4_reg_1612 <= kernel_sums_0_3_reg_3792;
            end if; 
        end if;
    end process;

    kernel_sums_1_2_reg_1574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then 
                kernel_sums_1_2_reg_1574 <= kernel_sums_1_1_loa_reg_3292;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_0))) then 
                kernel_sums_1_2_reg_1574 <= kernel_sums_1_3_fu_2542_p6;
            end if; 
        end if;
    end process;

    kernel_sums_1_4_reg_1633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln239_1_fu_2606_p2 = ap_const_lv1_0))) then 
                kernel_sums_1_4_reg_1633 <= kernel_sums_1_fu_2630_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                kernel_sums_1_4_reg_1633 <= kernel_sums_1_3_reg_3786;
            end if; 
        end if;
    end process;

    kernel_sums_2_2_reg_1583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then 
                kernel_sums_2_2_reg_1583 <= kernel_sums_2_1_loa_reg_3287;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_0))) then 
                kernel_sums_2_2_reg_1583 <= kernel_sums_2_3_fu_2528_p6;
            end if; 
        end if;
    end process;

    kernel_sums_2_4_reg_1654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln239_2_fu_2636_p2 = ap_const_lv1_0))) then 
                kernel_sums_2_4_reg_1654 <= kernel_sums_2_fu_2660_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                kernel_sums_2_4_reg_1654 <= kernel_sums_2_3_reg_3780;
            end if; 
        end if;
    end process;

    kernel_sums_3_2_reg_1592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then 
                kernel_sums_3_2_reg_1592 <= kernel_sums_3_1_loa_reg_3282;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_0))) then 
                kernel_sums_3_2_reg_1592 <= kernel_sums_3_3_fu_2514_p6;
            end if; 
        end if;
    end process;

    kernel_sums_3_4_reg_1675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_0))) then 
                kernel_sums_3_4_reg_1675 <= kernel_sums_3_fu_2690_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                kernel_sums_3_4_reg_1675 <= kernel_sums_3_3_reg_3774;
            end if; 
        end if;
    end process;

    l_0_reg_1531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln220_fu_2093_p2 = ap_const_lv1_1))) then 
                l_0_reg_1531 <= l_reg_3354;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_1_fu_2068_p2 = ap_const_lv1_1) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_1))) then 
                l_0_reg_1531 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    local_col_index2_0_reg_1353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                local_col_index2_0_reg_1353 <= local_col_index_1_fu_1863_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3076 = ap_const_lv1_1) and (icmp_ln164_fu_1761_p2 = ap_const_lv1_0))) then 
                local_col_index2_0_reg_1353 <= sext_ln166_fu_1773_p1;
            end if; 
        end if;
    end process;

    local_col_index_0_reg_1315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                local_col_index_0_reg_1315 <= local_col_index_2_fu_1835_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln151_fu_1745_p2 = ap_const_lv1_0) and (read_odd_load_reg_3076 = ap_const_lv1_0))) then 
                local_col_index_0_reg_1315 <= sext_ln153_fu_1757_p1;
            end if; 
        end if;
    end process;

    m_0_reg_1543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_0))) then 
                m_0_reg_1543 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                m_0_reg_1543 <= m_reg_3362;
            end if; 
        end if;
    end process;

    maxes_0_11_reg_1432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_0))) then 
                maxes_0_11_reg_1432 <= select_ln192_8_fu_1957_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then 
                maxes_0_11_reg_1432 <= maxes_0_0_reg_1257;
            end if; 
        end if;
    end process;

    maxes_0_3_reg_1486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then 
                maxes_0_3_reg_1486 <= select_ln192_8_fu_1957_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then 
                maxes_0_3_reg_1486 <= maxes_0_fu_2702_p3;
            end if; 
        end if;
    end process;

    maxes_1_12_reg_1422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_0))) then 
                maxes_1_12_reg_1422 <= select_ln192_7_fu_1949_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then 
                maxes_1_12_reg_1422 <= maxes_1_0_reg_1245;
            end if; 
        end if;
    end process;

    maxes_1_3_reg_1475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then 
                maxes_1_3_reg_1475 <= select_ln192_7_fu_1949_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then 
                maxes_1_3_reg_1475 <= maxes_1_fu_2716_p3;
            end if; 
        end if;
    end process;

    maxes_2_13_reg_1412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_0))) then 
                maxes_2_13_reg_1412 <= select_ln192_5_fu_1933_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then 
                maxes_2_13_reg_1412 <= maxes_2_0_reg_1233;
            end if; 
        end if;
    end process;

    maxes_2_3_reg_1464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then 
                maxes_2_3_reg_1464 <= select_ln192_5_fu_1933_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then 
                maxes_2_3_reg_1464 <= maxes_2_fu_2730_p3;
            end if; 
        end if;
    end process;

    maxes_3_14_reg_1402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_0))) then 
                maxes_3_14_reg_1402 <= select_ln192_2_fu_1909_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then 
                maxes_3_14_reg_1402 <= maxes_3_0_reg_1221;
            end if; 
        end if;
    end process;

    maxes_3_3_reg_1453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then 
                maxes_3_3_reg_1453 <= select_ln192_2_fu_1909_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then 
                maxes_3_3_reg_1453 <= maxes_3_fu_2744_p3;
            end if; 
        end if;
    end process;

    phi_ln192_reg_1442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_0))) then 
                phi_ln192_reg_1442 <= add_ln192_fu_1869_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then 
                phi_ln192_reg_1442 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln215_1_reg_1520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_0))) then 
                phi_ln215_1_reg_1520 <= add_ln215_1_fu_2049_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                phi_ln215_1_reg_1520 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln215_reg_1508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_1) and (icmp_ln215_1_fu_2068_p2 = ap_const_lv1_0))) then 
                phi_ln215_reg_1508 <= add_ln215_reg_3330;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_1983_p2 = ap_const_lv1_0))) then 
                phi_ln215_reg_1508 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln228_reg_1554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                if ((l_0_reg_1531 = ap_const_lv2_0)) then 
                    phi_ln228_reg_1554 <= local_row_indices_0_reg_3310;
                elsif ((not((l_0_reg_1531 = ap_const_lv2_0)) and not((l_0_reg_1531 = ap_const_lv2_1)))) then 
                    phi_ln228_reg_1554 <= local_row_indices_2_reg_3320;
                elsif ((l_0_reg_1531 = ap_const_lv2_1)) then 
                    phi_ln228_reg_1554 <= local_row_indices_1_reg_3315;
                end if;
            end if; 
        end if;
    end process;

    phi_ln234_reg_1601_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then 
                phi_ln234_reg_1601 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_0))) then 
                phi_ln234_reg_1601 <= add_ln234_fu_2508_p2;
            end if; 
        end if;
    end process;

    reg_1714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                reg_1714 <= partial_sums_0_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                reg_1714 <= partial_sums_0_q0;
            end if; 
        end if;
    end process;

    reg_1719_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                reg_1719 <= partial_sums_1_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                reg_1719 <= partial_sums_1_q0;
            end if; 
        end if;
    end process;

    reg_1724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                reg_1724 <= partial_sums_2_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                reg_1724 <= partial_sums_2_q0;
            end if; 
        end if;
    end process;

    tmp_0_reg_1374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2120)) then
                if ((i1_0_reg_1292 = ap_const_lv2_0)) then 
                    tmp_0_reg_1374 <= input_upper_0_V_dout;
                elsif ((i1_0_reg_1292 = ap_const_lv2_1)) then 
                    tmp_0_reg_1374 <= input_upper_1_V_dout;
                elsif ((not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)))) then 
                    tmp_0_reg_1374 <= input_upper_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_111_0_reg_1388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_810)) then
                if ((i1_0_reg_1292 = ap_const_lv2_0)) then 
                    tmp_111_0_reg_1388 <= input_lower_0_V_dout;
                elsif ((i1_0_reg_1292 = ap_const_lv2_1)) then 
                    tmp_111_0_reg_1388 <= input_lower_1_V_dout;
                elsif ((not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)))) then 
                    tmp_111_0_reg_1388 <= input_lower_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_112_0_reg_1325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2116)) then
                if ((i_0_reg_1280 = ap_const_lv2_0)) then 
                    tmp_112_0_reg_1325 <= input_upper_0_V_dout;
                elsif ((i_0_reg_1280 = ap_const_lv2_1)) then 
                    tmp_112_0_reg_1325 <= input_upper_1_V_dout;
                elsif ((not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)))) then 
                    tmp_112_0_reg_1325 <= input_upper_2_V_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_113_0_reg_1339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_757)) then
                if ((i_0_reg_1280 = ap_const_lv2_0)) then 
                    tmp_113_0_reg_1339 <= input_lower_0_V_dout;
                elsif ((i_0_reg_1280 = ap_const_lv2_1)) then 
                    tmp_113_0_reg_1339 <= input_lower_1_V_dout;
                elsif ((not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)))) then 
                    tmp_113_0_reg_1339 <= input_lower_2_V_dout;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln215_reg_3330 <= add_ln215_fu_2043_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln228_11_reg_3759 <= grp_fu_2962_p3;
                add_ln228_12_reg_3764 <= grp_fu_2970_p3;
                add_ln228_3_reg_3739 <= grp_fu_2896_p3;
                add_ln228_4_reg_3744 <= grp_fu_2904_p3;
                add_ln228_7_reg_3749 <= grp_fu_2929_p3;
                add_ln228_8_reg_3754 <= grp_fu_2937_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln220_fu_2093_p2 = ap_const_lv1_0))) then
                add_ln228_reg_3404 <= add_ln228_fu_2112_p2;
                    zext_ln228_reg_3367(1 downto 0) <= zext_ln228_fu_2105_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                b_reg_3071 <= b_fu_1735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln265_fu_2857_p2 = ap_const_lv1_1))) then
                compute_odd <= xor_ln268_fu_2863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then
                compute_odd_load_reg_3107 <= compute_odd;
                    select_ln177_1_reg_3117(1) <= select_ln177_1_fu_1789_p3(1);
                    select_ln177_2_reg_3123(1) <= select_ln177_2_fu_1797_p3(1);
                    select_ln177_3_reg_3129(1) <= select_ln177_3_fu_1805_p3(1);
                    select_ln177_reg_3112(1) <= select_ln177_fu_1781_p3(1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3076 = ap_const_lv1_0))) then
                i_1_reg_3084 <= i_1_fu_1751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_3_reg_3305 <= i_3_fu_1989_p2;
                kernel_sums_0_1_loa_reg_3297 <= kernel_sums_0_1_fu_232;
                kernel_sums_1_1_loa_reg_3292 <= kernel_sums_1_1_fu_228;
                kernel_sums_2_1_loa_reg_3287 <= kernel_sums_2_1_fu_224;
                kernel_sums_3_1_loa_reg_3282 <= kernel_sums_3_1_fu_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3076 = ap_const_lv1_1))) then
                i_reg_3097 <= i_fu_1767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_1))) then
                icmp_ln258_reg_3884 <= icmp_ln258_fu_2822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                icmp_ln265_reg_3888 <= icmp_ln265_fu_2857_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                j_1_reg_3137 <= j_1_fu_1819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                j_reg_3195 <= j_fu_1847_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then
                kernel_sums_0_1_fu_232 <= kernel_sums_0_4_reg_1612;
                kernel_sums_1_1_fu_228 <= kernel_sums_1_4_reg_1633;
                kernel_sums_2_1_fu_224 <= kernel_sums_2_4_reg_1654;
                kernel_sums_3_1_fu_220 <= kernel_sums_3_4_reg_1675;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                kernel_sums_0_3_reg_3792 <= kernel_sums_0_3_fu_2556_p6;
                kernel_sums_1_3_reg_3786 <= kernel_sums_1_3_fu_2542_p6;
                kernel_sums_2_3_reg_3780 <= kernel_sums_2_3_fu_2528_p6;
                kernel_sums_3_3_reg_3774 <= kernel_sums_3_3_fu_2514_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                l_reg_3354 <= l_fu_2083_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_1983_p2 = ap_const_lv1_0))) then
                local_col_index_reg_3325 <= local_col_index_fu_2037_p2;
                local_row_indices_0_reg_3310 <= local_row_indices_0_fu_2015_p3;
                local_row_indices_1_reg_3315 <= local_row_indices_1_fu_2021_p3;
                local_row_indices_2_reg_3320 <= local_row_indices_2_fu_2027_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                m_reg_3362 <= m_fu_2099_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                maxes_0_0_reg_1257 <= maxes_0_3_reg_1486;
                maxes_1_0_reg_1245 <= maxes_1_3_reg_1475;
                maxes_2_0_reg_1233 <= maxes_2_3_reg_1464;
                maxes_3_0_reg_1221 <= maxes_3_3_reg_1453;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                partial_sums_0_load_1_reg_3664 <= partial_sums_0_q1;
                partial_sums_1_load_1_reg_3694 <= partial_sums_1_q1;
                partial_sums_2_load_1_reg_3724 <= partial_sums_2_q1;
                tmp_10_reg_3659 <= tmp_10_fu_2186_p5;
                tmp_11_reg_3669 <= tmp_11_fu_2210_p5;
                tmp_12_reg_3674 <= tmp_12_fu_2234_p5;
                tmp_13_reg_3679 <= tmp_13_fu_2258_p5;
                tmp_14_reg_3684 <= tmp_14_fu_2270_p6;
                tmp_15_reg_3689 <= tmp_15_fu_2296_p5;
                tmp_16_reg_3699 <= tmp_16_fu_2320_p5;
                tmp_17_reg_3704 <= tmp_17_fu_2344_p5;
                tmp_18_reg_3709 <= tmp_18_fu_2368_p5;
                tmp_19_reg_3714 <= tmp_19_fu_2380_p6;
                tmp_20_reg_3719 <= tmp_20_fu_2406_p5;
                tmp_21_reg_3729 <= tmp_21_fu_2430_p5;
                tmp_22_reg_3734 <= tmp_22_fu_2454_p5;
                tmp_7_reg_3654 <= tmp_7_fu_2160_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_0))) then
                read_odd_load_reg_3076 <= read_odd;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                sext_ln228_reg_3424 <= sext_ln228_fu_2156_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                stripes_0_1_addr_reg_3172 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);
                stripes_1_1_addr_reg_3177 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);
                stripes_2_1_addr_reg_3182 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                stripes_0_3_addr_reg_3230 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);
                stripes_1_3_addr_reg_3235 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);
                stripes_2_3_addr_reg_3240 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_1_fu_2068_p2 = ap_const_lv1_1) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_1))) then
                    zext_ln218_reg_3346(15 downto 0) <= zext_ln218_fu_2074_p1(15 downto 0);
            end if;
        end if;
    end process;
    select_ln177_reg_3112(0) <= '0';
    select_ln177_1_reg_3117(0) <= '1';
    select_ln177_2_reg_3123(0) <= '0';
    select_ln177_3_reg_3129(0) <= '1';
    zext_ln218_reg_3346(16) <= '0';
    zext_ln228_reg_3367(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_CS_fsm_state7, icmp_ln167_fu_1841_p2, i1_0_reg_1292, ap_CS_fsm_state4, icmp_ln154_fu_1813_p2, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_CS_fsm_state29, icmp_ln252_fu_2772_p2, ap_CS_fsm_state2, read_odd_load_reg_3076, icmp_ln147_fu_1729_p2, ap_CS_fsm_state3, icmp_ln151_fu_1745_p2, icmp_ln164_fu_1761_p2, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4, ap_predicate_op148_read_state5, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7, ap_predicate_op194_read_state8, ap_CS_fsm_state10, ap_CS_fsm_state11, icmp_ln194_fu_1983_p2, ap_CS_fsm_state13, icmp_ln215_fu_2062_p2, icmp_ln215_1_fu_2068_p2, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln220_fu_2093_p2, ap_CS_fsm_state20, ap_CS_fsm_state22, icmp_ln239_fu_2576_p2, ap_CS_fsm_state24, icmp_ln239_1_fu_2606_p2, ap_CS_fsm_state26, icmp_ln239_2_fu_2636_p2, ap_CS_fsm_state28, icmp_ln239_3_fu_2666_p2, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29, icmp_ln192_fu_1965_p2, icmp_ln218_fu_2077_p2, icmp_ln234_fu_2570_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((icmp_ln164_fu_1761_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_1)) or ((icmp_ln151_fu_1745_p2 = ap_const_lv1_1) and (read_odd_load_reg_3076 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (read_odd_load_reg_3076 = ap_const_lv1_1) and (icmp_ln164_fu_1761_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                if ((not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln192_fu_1965_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_1983_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_1_fu_2068_p2 = ap_const_lv1_1) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_fu_2062_p2 = ap_const_lv1_1) and (icmp_ln215_1_fu_2068_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln218_fu_2077_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln220_fu_2093_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln234_fu_2570_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (icmp_ln239_fu_2576_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln239_1_fu_2606_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln239_2_fu_2636_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln239_3_fu_2666_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln192_fu_1869_p2 <= std_logic_vector(unsigned(phi_ln192_reg_1442) + unsigned(ap_const_lv2_1));
    add_ln215_1_fu_2049_p2 <= std_logic_vector(unsigned(phi_ln215_1_reg_1520) + unsigned(ap_const_lv2_1));
    add_ln215_fu_2043_p2 <= std_logic_vector(unsigned(phi_ln215_reg_1508) + unsigned(ap_const_lv2_1));
    add_ln228_fu_2112_p2 <= std_logic_vector(unsigned(zext_ln218_reg_3346) + unsigned(zext_ln220_fu_2089_p1));
    add_ln234_fu_2508_p2 <= std_logic_vector(unsigned(phi_ln234_reg_1601) + unsigned(ap_const_lv2_1));
    add_ln239_1_fu_2612_p2 <= std_logic_vector(unsigned(j8_0_1_reg_1643) + unsigned(ap_const_lv2_1));
    add_ln239_2_fu_2642_p2 <= std_logic_vector(unsigned(j8_0_2_reg_1664) + unsigned(ap_const_lv2_1));
    add_ln239_3_fu_2672_p2 <= std_logic_vector(unsigned(j8_0_3_reg_1684) + unsigned(ap_const_lv2_1));
    add_ln239_fu_2582_p2 <= std_logic_vector(unsigned(j8_0_0_reg_1622) + unsigned(ap_const_lv2_1));
    add_ln257_fu_2810_p2 <= std_logic_vector(unsigned(read_col_index) + unsigned(ap_const_lv16_2));
    add_ln264_fu_2845_p2 <= std_logic_vector(unsigned(compute_col_index) + unsigned(ap_const_lv16_2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state29_assign_proc : process(output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29)
    begin
                ap_block_state29 <= (((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state4_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4)
    begin
                ap_block_state4 <= (((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state5_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_predicate_op148_read_state5)
    begin
                ap_block_state5 <= (((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state7_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7)
    begin
                ap_block_state7 <= (((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state8_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_predicate_op194_read_state8)
    begin
                ap_block_state8 <= (((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_2116_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_CS_fsm_state4, icmp_ln154_fu_1813_p2, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4)
    begin
                ap_condition_2116 <= (not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0));
    end process;


    ap_condition_2120_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_CS_fsm_state7, icmp_ln167_fu_1841_p2, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7)
    begin
                ap_condition_2120 <= (not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0));
    end process;


    ap_condition_757_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
                ap_condition_757 <= (not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5));
    end process;


    ap_condition_810_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
                ap_condition_810 <= (not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln147_fu_1729_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op124_read_state4_assign_proc : process(icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
                ap_predicate_op124_read_state4 <= ((i_0_reg_1280 = ap_const_lv2_1) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op126_read_state4_assign_proc : process(icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
                ap_predicate_op126_read_state4 <= ((i_0_reg_1280 = ap_const_lv2_0) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op128_read_state4_assign_proc : process(icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
                ap_predicate_op128_read_state4 <= (not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_read_state5_assign_proc : process(i_0_reg_1280)
    begin
                ap_predicate_op148_read_state5 <= (not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)));
    end process;


    ap_predicate_op170_read_state7_assign_proc : process(icmp_ln167_fu_1841_p2, i1_0_reg_1292)
    begin
                ap_predicate_op170_read_state7 <= ((i1_0_reg_1292 = ap_const_lv2_1) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op172_read_state7_assign_proc : process(icmp_ln167_fu_1841_p2, i1_0_reg_1292)
    begin
                ap_predicate_op172_read_state7 <= ((i1_0_reg_1292 = ap_const_lv2_0) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op174_read_state7_assign_proc : process(icmp_ln167_fu_1841_p2, i1_0_reg_1292)
    begin
                ap_predicate_op174_read_state7 <= (not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op194_read_state8_assign_proc : process(i1_0_reg_1292)
    begin
                ap_predicate_op194_read_state8 <= (not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)));
    end process;


    ap_predicate_op696_write_state29_assign_proc : process(icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
                ap_predicate_op696_write_state29 <= ((trunc_ln254_fu_2784_p1 = ap_const_lv2_2) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op698_write_state29_assign_proc : process(icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
                ap_predicate_op698_write_state29 <= ((trunc_ln254_fu_2784_p1 = ap_const_lv2_1) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op700_write_state29_assign_proc : process(icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
                ap_predicate_op700_write_state29 <= ((trunc_ln254_fu_2784_p1 = ap_const_lv2_0) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op702_write_state29_assign_proc : process(icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
                ap_predicate_op702_write_state29 <= ((trunc_ln254_fu_2784_p1 = ap_const_lv2_3) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    b_fu_1735_p2 <= std_logic_vector(unsigned(b_0_reg_1269) + unsigned(ap_const_lv3_1));
    grp_fu_2880_p0 <= sext_ln228_reg_3424(8 - 1 downto 0);
    grp_fu_2880_p1 <= zext_ln228_2_fu_2466_p1(8 - 1 downto 0);
    grp_fu_2888_p1 <= zext_ln228_2_fu_2466_p1(8 - 1 downto 0);
    grp_fu_2896_p1 <= zext_ln228_2_fu_2466_p1(8 - 1 downto 0);
    grp_fu_2904_p1 <= zext_ln228_2_fu_2466_p1(8 - 1 downto 0);
    grp_fu_2912_p1 <= zext_ln228_3_fu_2481_p1(8 - 1 downto 0);
    grp_fu_2921_p1 <= zext_ln228_3_fu_2481_p1(8 - 1 downto 0);
    grp_fu_2929_p1 <= zext_ln228_3_fu_2481_p1(8 - 1 downto 0);
    grp_fu_2937_p1 <= zext_ln228_3_fu_2481_p1(8 - 1 downto 0);
    grp_fu_2945_p1 <= zext_ln228_4_fu_2496_p1(8 - 1 downto 0);
    grp_fu_2954_p1 <= zext_ln228_4_fu_2496_p1(8 - 1 downto 0);
    grp_fu_2962_p1 <= zext_ln228_4_fu_2496_p1(8 - 1 downto 0);
    grp_fu_2970_p1 <= zext_ln228_4_fu_2496_p1(8 - 1 downto 0);
    i_1_fu_1751_p2 <= std_logic_vector(unsigned(i_0_reg_1280) + unsigned(ap_const_lv2_1));
    i_2_fu_2778_p2 <= std_logic_vector(unsigned(i10_0_reg_1695) + unsigned(ap_const_lv3_1));
    i_3_fu_1989_p2 <= std_logic_vector(unsigned(i4_0_reg_1497) + unsigned(ap_const_lv3_1));
    i_fu_1767_p2 <= std_logic_vector(unsigned(i1_0_reg_1292) + unsigned(ap_const_lv2_1));
    icmp_ln147_fu_1729_p2 <= "1" when (b_0_reg_1269 = ap_const_lv3_4) else "0";
    icmp_ln151_fu_1745_p2 <= "1" when (i_0_reg_1280 = ap_const_lv2_3) else "0";
    icmp_ln154_fu_1813_p2 <= "1" when (j_0_reg_1304 = ap_const_lv2_2) else "0";
    icmp_ln164_fu_1761_p2 <= "1" when (i1_0_reg_1292 = ap_const_lv2_3) else "0";
    icmp_ln167_fu_1841_p2 <= "1" when (j3_0_reg_1363 = ap_const_lv2_2) else "0";
    icmp_ln192_1_fu_1875_p2 <= "1" when (phi_ln192_reg_1442 = ap_const_lv2_2) else "0";
    icmp_ln192_2_fu_1889_p2 <= "1" when (phi_ln192_reg_1442 = ap_const_lv2_1) else "0";
    icmp_ln192_3_fu_1903_p2 <= "1" when (phi_ln192_reg_1442 = ap_const_lv2_0) else "0";
    icmp_ln192_fu_1965_p2 <= "1" when (phi_ln192_reg_1442 = ap_const_lv2_3) else "0";
    icmp_ln194_fu_1983_p2 <= "1" when (i4_0_reg_1497 = ap_const_lv3_4) else "0";
    icmp_ln215_1_fu_2068_p2 <= "1" when (phi_ln215_reg_1508 = ap_const_lv2_2) else "0";
    icmp_ln215_fu_2062_p2 <= "1" when (phi_ln215_1_reg_1520 = ap_const_lv2_3) else "0";
    icmp_ln218_fu_2077_p2 <= "1" when (l_0_reg_1531 = ap_const_lv2_3) else "0";
    icmp_ln220_fu_2093_p2 <= "1" when (m_0_reg_1543 = ap_const_lv2_3) else "0";
    icmp_ln234_fu_2570_p2 <= "1" when (phi_ln234_reg_1601 = ap_const_lv2_3) else "0";
    icmp_ln239_1_fu_2606_p2 <= "1" when (j8_0_1_reg_1643 = ap_const_lv2_3) else "0";
    icmp_ln239_2_fu_2636_p2 <= "1" when (j8_0_2_reg_1664 = ap_const_lv2_3) else "0";
    icmp_ln239_3_fu_2666_p2 <= "1" when (j8_0_3_reg_1684 = ap_const_lv2_3) else "0";
    icmp_ln239_fu_2576_p2 <= "1" when (j8_0_0_reg_1622 = ap_const_lv2_3) else "0";
    icmp_ln248_1_fu_2710_p2 <= "1" when (signed(kernel_sums_1_4_reg_1633) > signed(maxes_1_3_reg_1475)) else "0";
    icmp_ln248_2_fu_2724_p2 <= "1" when (signed(kernel_sums_2_4_reg_1654) > signed(maxes_2_3_reg_1464)) else "0";
    icmp_ln248_3_fu_2738_p2 <= "1" when (signed(kernel_sums_3_4_reg_1675) > signed(maxes_3_3_reg_1453)) else "0";
    icmp_ln248_fu_2696_p2 <= "1" when (signed(kernel_sums_0_4_reg_1612) > signed(maxes_0_3_reg_1486)) else "0";
    icmp_ln252_fu_2772_p2 <= "1" when (i10_0_reg_1695 = ap_const_lv3_4) else "0";
    icmp_ln258_fu_2822_p2 <= "1" when (add_ln257_fu_2810_p2 = ap_const_lv16_201) else "0";
    icmp_ln265_fu_2857_p2 <= "1" when (add_ln264_fu_2845_p2 = ap_const_lv16_200) else "0";

    input_lower_0_V_blk_n_assign_proc : process(input_lower_0_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if ((((i_0_reg_1280 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_0_V_blk_n <= input_lower_0_V_empty_n;
        else 
            input_lower_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_0_V_read_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_predicate_op148_read_state5, ap_predicate_op194_read_state8)
    begin
        if (((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1280 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1292 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_0_V_read <= ap_const_logic_1;
        else 
            input_lower_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_1_V_blk_n_assign_proc : process(input_lower_1_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if ((((i_0_reg_1280 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_1_V_blk_n <= input_lower_1_V_empty_n;
        else 
            input_lower_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_1_V_read_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_predicate_op148_read_state5, ap_predicate_op194_read_state8)
    begin
        if (((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1280 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1292 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_1_V_read <= ap_const_logic_1;
        else 
            input_lower_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_lower_2_V_blk_n_assign_proc : process(input_lower_2_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if (((not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_2_V_blk_n <= input_lower_2_V_empty_n;
        else 
            input_lower_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_lower_2_V_read_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, i_0_reg_1280, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_predicate_op148_read_state5, ap_predicate_op194_read_state8)
    begin
        if (((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op148_read_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op194_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            input_lower_2_V_read <= ap_const_logic_1;
        else 
            input_lower_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_0_V_blk_n_assign_proc : process(input_upper_0_V_empty_n, ap_CS_fsm_state7, icmp_ln167_fu_1841_p2, i1_0_reg_1292, ap_CS_fsm_state4, icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
        if ((((i_0_reg_1280 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0)))) then 
            input_upper_0_V_blk_n <= input_upper_0_V_empty_n;
        else 
            input_upper_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_0_V_read_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state4, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7)
    begin
        if (((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op126_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op172_read_state7 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_0_V_read <= ap_const_logic_1;
        else 
            input_upper_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_1_V_blk_n_assign_proc : process(input_upper_1_V_empty_n, ap_CS_fsm_state7, icmp_ln167_fu_1841_p2, i1_0_reg_1292, ap_CS_fsm_state4, icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
        if ((((i_0_reg_1280 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0)))) then 
            input_upper_1_V_blk_n <= input_upper_1_V_empty_n;
        else 
            input_upper_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_1_V_read_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state4, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7)
    begin
        if (((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op124_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op170_read_state7 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_1_V_read <= ap_const_logic_1;
        else 
            input_upper_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_upper_2_V_blk_n_assign_proc : process(input_upper_2_V_empty_n, ap_CS_fsm_state7, icmp_ln167_fu_1841_p2, i1_0_reg_1292, ap_CS_fsm_state4, icmp_ln154_fu_1813_p2, i_0_reg_1280)
    begin
        if (((not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln154_fu_1813_p2 = ap_const_lv1_0)) or (not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln167_fu_1841_p2 = ap_const_lv1_0)))) then 
            input_upper_2_V_blk_n <= input_upper_2_V_empty_n;
        else 
            input_upper_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_upper_2_V_read_assign_proc : process(input_upper_0_V_empty_n, input_upper_1_V_empty_n, input_upper_2_V_empty_n, ap_CS_fsm_state7, ap_CS_fsm_state4, ap_predicate_op124_read_state4, ap_predicate_op126_read_state4, ap_predicate_op128_read_state4, ap_predicate_op170_read_state7, ap_predicate_op172_read_state7, ap_predicate_op174_read_state7)
    begin
        if (((not((((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op126_read_state4 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op124_read_state4 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op128_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((ap_predicate_op174_read_state7 = ap_const_boolean_1) and (input_upper_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op172_read_state7 = ap_const_boolean_1) and (input_upper_0_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op170_read_state7 = ap_const_boolean_1) and (input_upper_1_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op174_read_state7 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            input_upper_2_V_read <= ap_const_logic_1;
        else 
            input_upper_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln147_fu_1729_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln147_fu_1729_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_1_fu_1819_p2 <= std_logic_vector(unsigned(j_0_reg_1304) + unsigned(ap_const_lv2_1));
    j_fu_1847_p2 <= std_logic_vector(unsigned(j3_0_reg_1363) + unsigned(ap_const_lv2_1));
    kernel_sums_0_fu_2600_p2 <= std_logic_vector(unsigned(tmp_9_fu_2588_p5) + unsigned(kernel_sums_0_4_reg_1612));
    kernel_sums_1_fu_2630_p2 <= std_logic_vector(unsigned(tmp_23_fu_2618_p5) + unsigned(kernel_sums_1_4_reg_1633));
    kernel_sums_2_fu_2660_p2 <= std_logic_vector(unsigned(tmp_24_fu_2648_p5) + unsigned(kernel_sums_2_4_reg_1654));
    kernel_sums_3_fu_2690_p2 <= std_logic_vector(unsigned(tmp_25_fu_2678_p5) + unsigned(kernel_sums_3_4_reg_1675));
    kernels_0_0_address0 <= zext_ln228_fu_2105_p1(2 - 1 downto 0);

    kernels_0_0_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernels_0_0_ce0 <= ap_const_logic_1;
        else 
            kernels_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_0_1_address0 <= zext_ln228_fu_2105_p1(2 - 1 downto 0);

    kernels_0_1_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernels_0_1_ce0 <= ap_const_logic_1;
        else 
            kernels_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_0_2_address0 <= zext_ln228_fu_2105_p1(2 - 1 downto 0);

    kernels_0_2_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernels_0_2_ce0 <= ap_const_logic_1;
        else 
            kernels_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_10_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_10_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_10_0_ce0 <= ap_const_logic_1;
        else 
            kernels_10_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_10_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_10_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_10_1_ce0 <= ap_const_logic_1;
        else 
            kernels_10_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_10_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_10_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_10_2_ce0 <= ap_const_logic_1;
        else 
            kernels_10_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_11_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_11_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_11_0_ce0 <= ap_const_logic_1;
        else 
            kernels_11_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_11_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_11_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_11_1_ce0 <= ap_const_logic_1;
        else 
            kernels_11_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_11_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_11_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_11_2_ce0 <= ap_const_logic_1;
        else 
            kernels_11_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_1_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_1_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_1_0_ce0 <= ap_const_logic_1;
        else 
            kernels_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_1_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_1_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_1_1_ce0 <= ap_const_logic_1;
        else 
            kernels_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_1_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_1_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_1_2_ce0 <= ap_const_logic_1;
        else 
            kernels_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_2_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_2_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_2_0_ce0 <= ap_const_logic_1;
        else 
            kernels_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_2_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_2_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_2_1_ce0 <= ap_const_logic_1;
        else 
            kernels_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_2_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_2_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_2_2_ce0 <= ap_const_logic_1;
        else 
            kernels_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_3_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_3_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_3_0_ce0 <= ap_const_logic_1;
        else 
            kernels_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_3_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_3_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_3_1_ce0 <= ap_const_logic_1;
        else 
            kernels_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_3_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_3_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_3_2_ce0 <= ap_const_logic_1;
        else 
            kernels_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_4_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_4_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_4_0_ce0 <= ap_const_logic_1;
        else 
            kernels_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_4_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_4_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_4_1_ce0 <= ap_const_logic_1;
        else 
            kernels_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_4_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_4_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_4_2_ce0 <= ap_const_logic_1;
        else 
            kernels_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_5_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_5_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_5_0_ce0 <= ap_const_logic_1;
        else 
            kernels_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_5_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_5_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_5_1_ce0 <= ap_const_logic_1;
        else 
            kernels_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_5_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_5_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_5_2_ce0 <= ap_const_logic_1;
        else 
            kernels_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_6_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_6_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_6_0_ce0 <= ap_const_logic_1;
        else 
            kernels_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_6_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_6_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_6_1_ce0 <= ap_const_logic_1;
        else 
            kernels_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_6_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_6_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_6_2_ce0 <= ap_const_logic_1;
        else 
            kernels_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_7_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_7_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_7_0_ce0 <= ap_const_logic_1;
        else 
            kernels_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_7_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_7_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_7_1_ce0 <= ap_const_logic_1;
        else 
            kernels_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_7_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_7_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_7_2_ce0 <= ap_const_logic_1;
        else 
            kernels_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_8_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_8_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_8_0_ce0 <= ap_const_logic_1;
        else 
            kernels_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_8_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_8_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_8_1_ce0 <= ap_const_logic_1;
        else 
            kernels_8_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_8_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_8_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_8_2_ce0 <= ap_const_logic_1;
        else 
            kernels_8_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_9_0_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_9_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_9_0_ce0 <= ap_const_logic_1;
        else 
            kernels_9_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_9_1_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_9_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_9_1_ce0 <= ap_const_logic_1;
        else 
            kernels_9_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernels_9_2_address0 <= zext_ln228_reg_3367(2 - 1 downto 0);

    kernels_9_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            kernels_9_2_ce0 <= ap_const_logic_1;
        else 
            kernels_9_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    l_fu_2083_p2 <= std_logic_vector(unsigned(l_0_reg_1531) + unsigned(ap_const_lv2_1));
    local_col_index_1_fu_1863_p2 <= std_logic_vector(signed(local_col_index2_0_reg_1353) + signed(ap_const_lv17_1));
    local_col_index_2_fu_1835_p2 <= std_logic_vector(signed(local_col_index_0_reg_1315) + signed(ap_const_lv17_1));
    local_col_index_fu_2037_p2 <= std_logic_vector(unsigned(compute_col_index) + unsigned(zext_ln213_fu_2033_p1));
    local_row_indices_0_fu_2015_p3 <= 
        select_ln177_1_reg_3117 when (top_offset_fu_2005_p2(0) = '1') else 
        select_ln177_reg_3112;
    local_row_indices_1_fu_2021_p3 <= 
        select_ln177_2_reg_3123 when (top_offset_fu_2005_p2(0) = '1') else 
        select_ln177_1_reg_3117;
    local_row_indices_2_fu_2027_p3 <= 
        select_ln177_3_reg_3129 when (top_offset_fu_2005_p2(0) = '1') else 
        select_ln177_2_reg_3123;
    m_fu_2099_p2 <= std_logic_vector(unsigned(m_0_reg_1543) + unsigned(ap_const_lv2_1));
    maxes_0_fu_2702_p3 <= 
        kernel_sums_0_4_reg_1612 when (icmp_ln248_fu_2696_p2(0) = '1') else 
        maxes_0_3_reg_1486;
    maxes_1_fu_2716_p3 <= 
        kernel_sums_1_4_reg_1633 when (icmp_ln248_1_fu_2710_p2(0) = '1') else 
        maxes_1_3_reg_1475;
    maxes_2_fu_2730_p3 <= 
        kernel_sums_2_4_reg_1654 when (icmp_ln248_2_fu_2724_p2(0) = '1') else 
        maxes_2_3_reg_1464;
    maxes_3_fu_2744_p3 <= 
        kernel_sums_3_4_reg_1675 when (icmp_ln248_3_fu_2738_p2(0) = '1') else 
        maxes_3_3_reg_1453;

    output_0_V_blk_n_assign_proc : process(output_0_V_full_n, ap_CS_fsm_state29, icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
        if (((trunc_ln254_fu_2784_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then 
            output_0_V_blk_n <= output_0_V_full_n;
        else 
            output_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_0_V_din <= tmp_69_fu_2802_p1;

    output_0_V_write_assign_proc : process(output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_CS_fsm_state29, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29)
    begin
        if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_predicate_op700_write_state29 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            output_0_V_write <= ap_const_logic_1;
        else 
            output_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    output_1_V_blk_n_assign_proc : process(output_1_V_full_n, ap_CS_fsm_state29, icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
        if (((trunc_ln254_fu_2784_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then 
            output_1_V_blk_n <= output_1_V_full_n;
        else 
            output_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_1_V_din <= tmp_69_fu_2802_p1;

    output_1_V_write_assign_proc : process(output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_CS_fsm_state29, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29)
    begin
        if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_predicate_op698_write_state29 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            output_1_V_write <= ap_const_logic_1;
        else 
            output_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    output_2_V_blk_n_assign_proc : process(output_2_V_full_n, ap_CS_fsm_state29, icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
        if (((trunc_ln254_fu_2784_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then 
            output_2_V_blk_n <= output_2_V_full_n;
        else 
            output_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_2_V_din <= tmp_69_fu_2802_p1;

    output_2_V_write_assign_proc : process(output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_CS_fsm_state29, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29)
    begin
        if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_predicate_op696_write_state29 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            output_2_V_write <= ap_const_logic_1;
        else 
            output_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    output_3_V_blk_n_assign_proc : process(output_3_V_full_n, ap_CS_fsm_state29, icmp_ln252_fu_2772_p2, trunc_ln254_fu_2784_p1)
    begin
        if (((trunc_ln254_fu_2784_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln252_fu_2772_p2 = ap_const_lv1_0))) then 
            output_3_V_blk_n <= output_3_V_full_n;
        else 
            output_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_3_V_din <= tmp_69_fu_2802_p1;

    output_3_V_write_assign_proc : process(output_0_V_full_n, output_1_V_full_n, output_2_V_full_n, output_3_V_full_n, ap_CS_fsm_state29, ap_predicate_op696_write_state29, ap_predicate_op698_write_state29, ap_predicate_op700_write_state29, ap_predicate_op702_write_state29)
    begin
        if ((not((((ap_predicate_op702_write_state29 = ap_const_boolean_1) and (output_3_V_full_n = ap_const_logic_0)) or ((ap_predicate_op700_write_state29 = ap_const_boolean_1) and (output_0_V_full_n = ap_const_logic_0)) or ((ap_predicate_op698_write_state29 = ap_const_boolean_1) and (output_1_V_full_n = ap_const_logic_0)) or ((ap_predicate_op696_write_state29 = ap_const_boolean_1) and (output_2_V_full_n = ap_const_logic_0)))) and (ap_predicate_op702_write_state29 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            output_3_V_write <= ap_const_logic_1;
        else 
            output_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_0_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19, zext_ln215_fu_2055_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_0_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            partial_sums_0_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_0_address0 <= zext_ln215_fu_2055_p1(2 - 1 downto 0);
        else 
            partial_sums_0_address0 <= "XX";
        end if; 
    end process;


    partial_sums_0_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_0_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            partial_sums_0_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            partial_sums_0_address1 <= "XX";
        end if; 
    end process;


    partial_sums_0_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_0_ce0 <= ap_const_logic_1;
        else 
            partial_sums_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_0_ce1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_0_ce1 <= ap_const_logic_1;
        else 
            partial_sums_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_0_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, add_ln228_4_reg_3744, ap_CS_fsm_state19, grp_fu_2888_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_0_d0 <= add_ln228_4_reg_3744;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_0_d0 <= grp_fu_2888_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_0_d0 <= ap_const_lv32_0;
        else 
            partial_sums_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_0_d1_assign_proc : process(add_ln228_3_reg_3739, ap_CS_fsm_state18, ap_CS_fsm_state19, grp_fu_2880_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_0_d1 <= add_ln228_3_reg_3739;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_0_d1 <= grp_fu_2880_p3;
        else 
            partial_sums_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_0_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, phi_ln215_reg_1508, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((phi_ln215_reg_1508 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            partial_sums_0_we0 <= ap_const_logic_1;
        else 
            partial_sums_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_0_we1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_0_we1 <= ap_const_logic_1;
        else 
            partial_sums_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_1_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19, zext_ln215_fu_2055_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_1_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            partial_sums_1_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_1_address0 <= zext_ln215_fu_2055_p1(2 - 1 downto 0);
        else 
            partial_sums_1_address0 <= "XX";
        end if; 
    end process;


    partial_sums_1_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_1_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            partial_sums_1_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            partial_sums_1_address1 <= "XX";
        end if; 
    end process;


    partial_sums_1_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_1_ce0 <= ap_const_logic_1;
        else 
            partial_sums_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_1_ce1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_1_ce1 <= ap_const_logic_1;
        else 
            partial_sums_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_1_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, add_ln228_8_reg_3754, ap_CS_fsm_state19, grp_fu_2921_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_1_d0 <= add_ln228_8_reg_3754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_1_d0 <= grp_fu_2921_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_1_d0 <= ap_const_lv32_0;
        else 
            partial_sums_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_1_d1_assign_proc : process(ap_CS_fsm_state18, add_ln228_7_reg_3749, ap_CS_fsm_state19, grp_fu_2912_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_1_d1 <= add_ln228_7_reg_3749;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_1_d1 <= grp_fu_2912_p3;
        else 
            partial_sums_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_1_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, phi_ln215_reg_1508, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((phi_ln215_reg_1508 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            partial_sums_1_we0 <= ap_const_logic_1;
        else 
            partial_sums_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_1_we1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_1_we1 <= ap_const_logic_1;
        else 
            partial_sums_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_2_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19, zext_ln215_fu_2055_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_2_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            partial_sums_2_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_2_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_2_address0 <= zext_ln215_fu_2055_p1(2 - 1 downto 0);
        else 
            partial_sums_2_address0 <= "XX";
        end if; 
    end process;


    partial_sums_2_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_2_address1 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            partial_sums_2_address1 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            partial_sums_2_address1 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            partial_sums_2_address1 <= "XX";
        end if; 
    end process;


    partial_sums_2_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state13, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state26, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_2_ce0 <= ap_const_logic_1;
        else 
            partial_sums_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_2_ce1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_2_ce1 <= ap_const_logic_1;
        else 
            partial_sums_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_2_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, add_ln228_12_reg_3764, ap_CS_fsm_state19, grp_fu_2954_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_2_d0 <= add_ln228_12_reg_3764;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_2_d0 <= grp_fu_2954_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            partial_sums_2_d0 <= ap_const_lv32_0;
        else 
            partial_sums_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_2_d1_assign_proc : process(ap_CS_fsm_state18, add_ln228_11_reg_3759, ap_CS_fsm_state19, grp_fu_2945_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            partial_sums_2_d1 <= add_ln228_11_reg_3759;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            partial_sums_2_d1 <= grp_fu_2945_p3;
        else 
            partial_sums_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    partial_sums_2_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state18, phi_ln215_reg_1508, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (not((phi_ln215_reg_1508 = ap_const_lv2_0)) and not((phi_ln215_reg_1508 = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            partial_sums_2_we0 <= ap_const_logic_1;
        else 
            partial_sums_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    partial_sums_2_we1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            partial_sums_2_we1 <= ap_const_logic_1;
        else 
            partial_sums_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    read_odd_load_load_fu_1741_p1 <= read_odd;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln177_1_fu_1789_p3 <= 
        ap_const_lv2_1 when (compute_odd(0) = '1') else 
        ap_const_lv2_3;
    select_ln177_2_fu_1797_p3 <= 
        ap_const_lv2_2 when (compute_odd(0) = '1') else 
        ap_const_lv2_0;
    select_ln177_3_fu_1805_p3 <= 
        ap_const_lv2_3 when (compute_odd(0) = '1') else 
        ap_const_lv2_1;
    select_ln177_fu_1781_p3 <= 
        ap_const_lv2_0 when (compute_odd(0) = '1') else 
        ap_const_lv2_2;
    select_ln192_1_fu_1895_p3 <= 
        maxes_3_14_reg_1402 when (icmp_ln192_2_fu_1889_p2(0) = '1') else 
        select_ln192_fu_1881_p3;
    select_ln192_2_fu_1909_p3 <= 
        maxes_3_14_reg_1402 when (icmp_ln192_3_fu_1903_p2(0) = '1') else 
        select_ln192_1_fu_1895_p3;
    select_ln192_3_fu_1917_p3 <= 
        ap_const_lv32_0 when (icmp_ln192_1_fu_1875_p2(0) = '1') else 
        maxes_2_13_reg_1412;
    select_ln192_4_fu_1925_p3 <= 
        maxes_2_13_reg_1412 when (icmp_ln192_2_fu_1889_p2(0) = '1') else 
        select_ln192_3_fu_1917_p3;
    select_ln192_5_fu_1933_p3 <= 
        maxes_2_13_reg_1412 when (icmp_ln192_3_fu_1903_p2(0) = '1') else 
        select_ln192_4_fu_1925_p3;
    select_ln192_6_fu_1941_p3 <= 
        ap_const_lv32_0 when (icmp_ln192_2_fu_1889_p2(0) = '1') else 
        maxes_1_12_reg_1422;
    select_ln192_7_fu_1949_p3 <= 
        maxes_1_12_reg_1422 when (icmp_ln192_3_fu_1903_p2(0) = '1') else 
        select_ln192_6_fu_1941_p3;
    select_ln192_8_fu_1957_p3 <= 
        ap_const_lv32_0 when (icmp_ln192_3_fu_1903_p2(0) = '1') else 
        maxes_0_11_reg_1432;
    select_ln192_fu_1881_p3 <= 
        maxes_3_14_reg_1402 when (icmp_ln192_1_fu_1875_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln153_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(read_col_index),17));

        sext_ln156_fu_1825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(local_col_index_0_reg_1315),64));

        sext_ln166_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(read_col_index),17));

        sext_ln169_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(local_col_index2_0_reg_1353),64));

        sext_ln228_fu_2156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_2144_p5),16));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    stripes_0_0_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_0_0_address1 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);

    stripes_0_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_0_0_ce0 <= ap_const_logic_1;
        else 
            stripes_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_0_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_0_0_ce1 <= ap_const_logic_1;
        else 
            stripes_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_0_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1280 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_0_0_we1 <= ap_const_logic_1;
        else 
            stripes_0_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_0_1_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_0_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_0_1_ce0 <= ap_const_logic_1;
        else 
            stripes_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_1_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_0_1_ce1 <= ap_const_logic_1;
        else 
            stripes_0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_1_we1_assign_proc : process(i_0_reg_1280, ap_CS_fsm_state6)
    begin
        if (((i_0_reg_1280 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stripes_0_1_we1 <= ap_const_logic_1;
        else 
            stripes_0_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_0_2_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_0_2_address1 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);

    stripes_0_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_0_2_ce0 <= ap_const_logic_1;
        else 
            stripes_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_2_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_0_2_ce1 <= ap_const_logic_1;
        else 
            stripes_0_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_2_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1292 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_0_2_we1 <= ap_const_logic_1;
        else 
            stripes_0_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_0_3_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_0_3_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_0_3_ce0 <= ap_const_logic_1;
        else 
            stripes_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_3_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stripes_0_3_ce1 <= ap_const_logic_1;
        else 
            stripes_0_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_0_3_we1_assign_proc : process(i1_0_reg_1292, ap_CS_fsm_state9)
    begin
        if (((i1_0_reg_1292 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            stripes_0_3_we1 <= ap_const_logic_1;
        else 
            stripes_0_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_1_0_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_1_0_address1 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);

    stripes_1_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_1_0_ce0 <= ap_const_logic_1;
        else 
            stripes_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_0_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_1_0_ce1 <= ap_const_logic_1;
        else 
            stripes_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_0_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i_0_reg_1280 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_1_0_we1 <= ap_const_logic_1;
        else 
            stripes_1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_1_1_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_1_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_1_1_ce0 <= ap_const_logic_1;
        else 
            stripes_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_1_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_1_1_ce1 <= ap_const_logic_1;
        else 
            stripes_1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_1_we1_assign_proc : process(i_0_reg_1280, ap_CS_fsm_state6)
    begin
        if (((i_0_reg_1280 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stripes_1_1_we1 <= ap_const_logic_1;
        else 
            stripes_1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_1_2_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_1_2_address1 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);

    stripes_1_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_1_2_ce0 <= ap_const_logic_1;
        else 
            stripes_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_2_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_1_2_ce1 <= ap_const_logic_1;
        else 
            stripes_1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_2_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (i1_0_reg_1292 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_1_2_we1 <= ap_const_logic_1;
        else 
            stripes_1_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_1_3_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_1_3_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_1_3_ce0 <= ap_const_logic_1;
        else 
            stripes_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_3_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stripes_1_3_ce1 <= ap_const_logic_1;
        else 
            stripes_1_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_1_3_we1_assign_proc : process(i1_0_reg_1292, ap_CS_fsm_state9)
    begin
        if (((i1_0_reg_1292 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            stripes_1_3_we1 <= ap_const_logic_1;
        else 
            stripes_1_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_2_0_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_2_0_address1 <= sext_ln156_fu_1825_p1(10 - 1 downto 0);

    stripes_2_0_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_2_0_ce0 <= ap_const_logic_1;
        else 
            stripes_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_0_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_2_0_ce1 <= ap_const_logic_1;
        else 
            stripes_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_0_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i_0_reg_1280, ap_CS_fsm_state5, ap_predicate_op148_read_state5)
    begin
        if ((not((((ap_predicate_op148_read_state5 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i_0_reg_1280 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            stripes_2_0_we1 <= ap_const_logic_1;
        else 
            stripes_2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_2_1_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_2_1_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_2_1_ce0 <= ap_const_logic_1;
        else 
            stripes_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_1_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stripes_2_1_ce1 <= ap_const_logic_1;
        else 
            stripes_2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_1_we1_assign_proc : process(i_0_reg_1280, ap_CS_fsm_state6)
    begin
        if ((not((i_0_reg_1280 = ap_const_lv2_1)) and not((i_0_reg_1280 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stripes_2_1_we1 <= ap_const_logic_1;
        else 
            stripes_2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_2_2_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);
    stripes_2_2_address1 <= sext_ln169_fu_1853_p1(10 - 1 downto 0);

    stripes_2_2_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_2_2_ce0 <= ap_const_logic_1;
        else 
            stripes_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_2_ce1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_2_2_ce1 <= ap_const_logic_1;
        else 
            stripes_2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_2_we1_assign_proc : process(input_lower_0_V_empty_n, input_lower_1_V_empty_n, input_lower_2_V_empty_n, i1_0_reg_1292, ap_CS_fsm_state8, ap_predicate_op194_read_state8)
    begin
        if ((not((((ap_predicate_op194_read_state8 = ap_const_boolean_1) and (input_lower_2_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_1) and (input_lower_1_V_empty_n = ap_const_logic_0)) or ((i1_0_reg_1292 = ap_const_lv2_0) and (input_lower_0_V_empty_n = ap_const_logic_0)))) and not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            stripes_2_2_we1 <= ap_const_logic_1;
        else 
            stripes_2_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stripes_2_3_address0 <= zext_ln228_1_fu_2117_p1(10 - 1 downto 0);

    stripes_2_3_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stripes_2_3_ce0 <= ap_const_logic_1;
        else 
            stripes_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_3_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stripes_2_3_ce1 <= ap_const_logic_1;
        else 
            stripes_2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stripes_2_3_we1_assign_proc : process(i1_0_reg_1292, ap_CS_fsm_state9)
    begin
        if ((not((i1_0_reg_1292 = ap_const_lv2_1)) and not((i1_0_reg_1292 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            stripes_2_3_we1 <= ap_const_logic_1;
        else 
            stripes_2_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_10_fu_2186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_1_0_q0),8));

        tmp_10_fu_2186_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_1_1_q0),8));

        tmp_10_fu_2186_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_1_2_q0),8));

        tmp_11_fu_2210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_2_0_q0),8));

        tmp_11_fu_2210_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_2_1_q0),8));

        tmp_11_fu_2210_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_2_2_q0),8));

        tmp_12_fu_2234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_3_0_q0),8));

        tmp_12_fu_2234_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_3_1_q0),8));

        tmp_12_fu_2234_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_3_2_q0),8));

    tmp_13_fu_2258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernels_4_0_q0),8));
    tmp_13_fu_2258_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernels_4_1_q0),8));
        tmp_13_fu_2258_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_4_2_q0),8));

        tmp_15_fu_2296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_5_0_q0),8));

        tmp_15_fu_2296_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_5_1_q0),8));

        tmp_15_fu_2296_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_5_2_q0),8));

        tmp_16_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_6_0_q0),8));

        tmp_16_fu_2320_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_6_1_q0),8));

        tmp_16_fu_2320_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_6_2_q0),8));

        tmp_17_fu_2344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_7_0_q0),8));

        tmp_17_fu_2344_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_7_1_q0),8));

        tmp_17_fu_2344_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_7_2_q0),8));

        tmp_18_fu_2368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_8_0_q0),8));

        tmp_18_fu_2368_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_8_1_q0),8));

        tmp_18_fu_2368_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_8_2_q0),8));

    tmp_20_fu_2406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernels_9_0_q0),8));
        tmp_20_fu_2406_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_9_1_q0),8));

        tmp_20_fu_2406_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_9_2_q0),8));

        tmp_21_fu_2430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_10_0_q0),8));

        tmp_21_fu_2430_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_10_1_q0),8));

        tmp_21_fu_2430_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_10_2_q0),8));

        tmp_22_fu_2454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_11_0_q0),8));

        tmp_22_fu_2454_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_11_1_q0),8));

        tmp_22_fu_2454_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_11_2_q0),8));

    tmp_68_fu_1995_p4 <= i4_0_reg_1497(2 downto 1);
    tmp_69_fu_2802_p1 <= tmp_6_fu_2788_p6(16 - 1 downto 0);
    tmp_6_fu_2788_p5 <= i10_0_reg_1695(2 - 1 downto 0);
        tmp_8_fu_2144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_0_0_q0),8));

    tmp_8_fu_2144_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernels_0_1_q0),8));
        tmp_8_fu_2144_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernels_0_2_q0),8));

    top_offset_fu_2005_p2 <= "0" when (tmp_68_fu_1995_p4 = ap_const_lv2_0) else "1";
    trunc_ln206_fu_2011_p1 <= i4_0_reg_1497(1 - 1 downto 0);
    trunc_ln254_fu_2784_p1 <= i10_0_reg_1695(2 - 1 downto 0);
    xor_ln261_fu_2828_p2 <= (read_odd_load_reg_3076 xor ap_const_lv1_1);
    xor_ln268_fu_2863_p2 <= (compute_odd_load_reg_3107 xor ap_const_lv1_1);
    zext_ln213_fu_2033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln206_fu_2011_p1),16));
    zext_ln215_fu_2055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln215_1_reg_1520),64));
    zext_ln218_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(local_col_index_reg_3325),17));
    zext_ln220_fu_2089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_reg_1543),17));
    zext_ln228_1_fu_2117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln228_reg_3404),64));
    zext_ln228_2_fu_2466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_3654),16));
    zext_ln228_3_fu_2481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_3684),16));
    zext_ln228_4_fu_2496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_3714),16));
    zext_ln228_fu_2105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_0_reg_1543),64));
end behav;
