// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        input_upper_0_V_dout,
        input_upper_0_V_empty_n,
        input_upper_0_V_read,
        input_upper_1_V_dout,
        input_upper_1_V_empty_n,
        input_upper_1_V_read,
        input_upper_2_V_dout,
        input_upper_2_V_empty_n,
        input_upper_2_V_read,
        input_lower_0_V_dout,
        input_lower_0_V_empty_n,
        input_lower_0_V_read,
        input_lower_1_V_dout,
        input_lower_1_V_empty_n,
        input_lower_1_V_read,
        input_lower_2_V_dout,
        input_lower_2_V_empty_n,
        input_lower_2_V_read,
        output_0_V_din,
        output_0_V_full_n,
        output_0_V_write,
        output_1_V_din,
        output_1_V_full_n,
        output_1_V_write,
        output_2_V_din,
        output_2_V_full_n,
        output_2_V_write,
        output_3_V_din,
        output_3_V_full_n,
        output_3_V_write
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] input_upper_0_V_dout;
input   input_upper_0_V_empty_n;
output   input_upper_0_V_read;
input  [7:0] input_upper_1_V_dout;
input   input_upper_1_V_empty_n;
output   input_upper_1_V_read;
input  [7:0] input_upper_2_V_dout;
input   input_upper_2_V_empty_n;
output   input_upper_2_V_read;
input  [7:0] input_lower_0_V_dout;
input   input_lower_0_V_empty_n;
output   input_lower_0_V_read;
input  [7:0] input_lower_1_V_dout;
input   input_lower_1_V_empty_n;
output   input_lower_1_V_read;
input  [7:0] input_lower_2_V_dout;
input   input_lower_2_V_empty_n;
output   input_lower_2_V_read;
output  [15:0] output_0_V_din;
input   output_0_V_full_n;
output   output_0_V_write;
output  [15:0] output_1_V_din;
input   output_1_V_full_n;
output   output_1_V_write;
output  [15:0] output_2_V_din;
input   output_2_V_full_n;
output   output_2_V_write;
output  [15:0] output_3_V_din;
input   output_3_V_full_n;
output   output_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg input_upper_0_V_read;
reg input_upper_1_V_read;
reg input_upper_2_V_read;
reg input_lower_0_V_read;
reg input_lower_1_V_read;
reg input_lower_2_V_read;
reg output_0_V_write;
reg output_1_V_write;
reg output_2_V_write;
reg output_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] read_odd;
reg   [15:0] read_col_index;
reg   [0:0] compute_odd;
reg   [15:0] compute_col_index;
wire   [1:0] kernels_0_0_address0;
reg    kernels_0_0_ce0;
wire   [5:0] kernels_0_0_q0;
wire   [1:0] kernels_0_1_address0;
reg    kernels_0_1_ce0;
wire   [4:0] kernels_0_1_q0;
wire   [1:0] kernels_0_2_address0;
reg    kernels_0_2_ce0;
wire   [5:0] kernels_0_2_q0;
wire   [9:0] stripes_0_0_address0;
reg    stripes_0_0_ce0;
wire   [7:0] stripes_0_0_q0;
wire   [9:0] stripes_0_0_address1;
reg    stripes_0_0_ce1;
reg    stripes_0_0_we1;
wire   [9:0] stripes_0_1_address0;
reg    stripes_0_1_ce0;
wire   [7:0] stripes_0_1_q0;
reg    stripes_0_1_ce1;
reg    stripes_0_1_we1;
wire   [9:0] stripes_0_2_address0;
reg    stripes_0_2_ce0;
wire   [7:0] stripes_0_2_q0;
wire   [9:0] stripes_0_2_address1;
reg    stripes_0_2_ce1;
reg    stripes_0_2_we1;
wire   [9:0] stripes_0_3_address0;
reg    stripes_0_3_ce0;
wire   [7:0] stripes_0_3_q0;
reg    stripes_0_3_ce1;
reg    stripes_0_3_we1;
wire   [1:0] kernels_1_0_address0;
reg    kernels_1_0_ce0;
wire   [5:0] kernels_1_0_q0;
wire   [1:0] kernels_1_1_address0;
reg    kernels_1_1_ce0;
wire   [5:0] kernels_1_1_q0;
wire   [1:0] kernels_1_2_address0;
reg    kernels_1_2_ce0;
wire   [5:0] kernels_1_2_q0;
wire   [1:0] kernels_2_0_address0;
reg    kernels_2_0_ce0;
wire   [4:0] kernels_2_0_q0;
wire   [1:0] kernels_2_1_address0;
reg    kernels_2_1_ce0;
wire   [5:0] kernels_2_1_q0;
wire   [1:0] kernels_2_2_address0;
reg    kernels_2_2_ce0;
wire   [5:0] kernels_2_2_q0;
wire   [1:0] kernels_3_0_address0;
reg    kernels_3_0_ce0;
wire   [5:0] kernels_3_0_q0;
wire   [1:0] kernels_3_1_address0;
reg    kernels_3_1_ce0;
wire   [5:0] kernels_3_1_q0;
wire   [1:0] kernels_3_2_address0;
reg    kernels_3_2_ce0;
wire   [5:0] kernels_3_2_q0;
wire   [1:0] kernels_4_0_address0;
reg    kernels_4_0_ce0;
wire   [4:0] kernels_4_0_q0;
wire   [1:0] kernels_4_1_address0;
reg    kernels_4_1_ce0;
wire   [4:0] kernels_4_1_q0;
wire   [1:0] kernels_4_2_address0;
reg    kernels_4_2_ce0;
wire   [5:0] kernels_4_2_q0;
wire   [9:0] stripes_1_0_address0;
reg    stripes_1_0_ce0;
wire   [7:0] stripes_1_0_q0;
wire   [9:0] stripes_1_0_address1;
reg    stripes_1_0_ce1;
reg    stripes_1_0_we1;
wire   [9:0] stripes_1_1_address0;
reg    stripes_1_1_ce0;
wire   [7:0] stripes_1_1_q0;
reg    stripes_1_1_ce1;
reg    stripes_1_1_we1;
wire   [9:0] stripes_1_2_address0;
reg    stripes_1_2_ce0;
wire   [7:0] stripes_1_2_q0;
wire   [9:0] stripes_1_2_address1;
reg    stripes_1_2_ce1;
reg    stripes_1_2_we1;
wire   [9:0] stripes_1_3_address0;
reg    stripes_1_3_ce0;
wire   [7:0] stripes_1_3_q0;
reg    stripes_1_3_ce1;
reg    stripes_1_3_we1;
wire   [1:0] kernels_5_0_address0;
reg    kernels_5_0_ce0;
wire   [5:0] kernels_5_0_q0;
wire   [1:0] kernels_5_1_address0;
reg    kernels_5_1_ce0;
wire   [5:0] kernels_5_1_q0;
wire   [1:0] kernels_5_2_address0;
reg    kernels_5_2_ce0;
wire   [5:0] kernels_5_2_q0;
wire   [1:0] kernels_6_0_address0;
reg    kernels_6_0_ce0;
wire   [5:0] kernels_6_0_q0;
wire   [1:0] kernels_6_1_address0;
reg    kernels_6_1_ce0;
wire   [5:0] kernels_6_1_q0;
wire   [1:0] kernels_6_2_address0;
reg    kernels_6_2_ce0;
wire   [4:0] kernels_6_2_q0;
wire   [1:0] kernels_7_0_address0;
reg    kernels_7_0_ce0;
wire   [5:0] kernels_7_0_q0;
wire   [1:0] kernels_7_1_address0;
reg    kernels_7_1_ce0;
wire   [5:0] kernels_7_1_q0;
wire   [1:0] kernels_7_2_address0;
reg    kernels_7_2_ce0;
wire   [5:0] kernels_7_2_q0;
wire   [1:0] kernels_8_0_address0;
reg    kernels_8_0_ce0;
wire   [5:0] kernels_8_0_q0;
wire   [1:0] kernels_8_1_address0;
reg    kernels_8_1_ce0;
wire   [5:0] kernels_8_1_q0;
wire   [1:0] kernels_8_2_address0;
reg    kernels_8_2_ce0;
wire   [5:0] kernels_8_2_q0;
wire   [9:0] stripes_2_0_address0;
reg    stripes_2_0_ce0;
wire   [7:0] stripes_2_0_q0;
wire   [9:0] stripes_2_0_address1;
reg    stripes_2_0_ce1;
reg    stripes_2_0_we1;
wire   [9:0] stripes_2_1_address0;
reg    stripes_2_1_ce0;
wire   [7:0] stripes_2_1_q0;
reg    stripes_2_1_ce1;
reg    stripes_2_1_we1;
wire   [9:0] stripes_2_2_address0;
reg    stripes_2_2_ce0;
wire   [7:0] stripes_2_2_q0;
wire   [9:0] stripes_2_2_address1;
reg    stripes_2_2_ce1;
reg    stripes_2_2_we1;
wire   [9:0] stripes_2_3_address0;
reg    stripes_2_3_ce0;
wire   [7:0] stripes_2_3_q0;
reg    stripes_2_3_ce1;
reg    stripes_2_3_we1;
wire   [1:0] kernels_9_0_address0;
reg    kernels_9_0_ce0;
wire   [4:0] kernels_9_0_q0;
wire   [1:0] kernels_9_1_address0;
reg    kernels_9_1_ce0;
wire   [5:0] kernels_9_1_q0;
wire   [1:0] kernels_9_2_address0;
reg    kernels_9_2_ce0;
wire   [5:0] kernels_9_2_q0;
wire   [1:0] kernels_10_0_address0;
reg    kernels_10_0_ce0;
wire   [5:0] kernels_10_0_q0;
wire   [1:0] kernels_10_1_address0;
reg    kernels_10_1_ce0;
wire   [5:0] kernels_10_1_q0;
wire   [1:0] kernels_10_2_address0;
reg    kernels_10_2_ce0;
wire   [5:0] kernels_10_2_q0;
wire   [1:0] kernels_11_0_address0;
reg    kernels_11_0_ce0;
wire   [5:0] kernels_11_0_q0;
wire   [1:0] kernels_11_1_address0;
reg    kernels_11_1_ce0;
wire   [5:0] kernels_11_1_q0;
wire   [1:0] kernels_11_2_address0;
reg    kernels_11_2_ce0;
wire   [5:0] kernels_11_2_q0;
reg    input_upper_0_V_blk_n;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln167_fu_1841_p2;
reg   [1:0] i1_0_reg_1292;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln154_fu_1813_p2;
reg   [1:0] i_0_reg_1280;
reg    input_upper_1_V_blk_n;
reg    input_upper_2_V_blk_n;
reg    input_lower_0_V_blk_n;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state5;
reg    input_lower_1_V_blk_n;
reg    input_lower_2_V_blk_n;
reg    output_0_V_blk_n;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln252_fu_2772_p2;
wire   [1:0] trunc_ln254_fu_2784_p1;
reg    output_1_V_blk_n;
reg    output_2_V_blk_n;
reg    output_3_V_blk_n;
wire   [31:0] partial_sums_0_q0;
reg   [31:0] reg_1714;
wire    ap_CS_fsm_state17;
wire   [31:0] partial_sums_0_q1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire   [31:0] partial_sums_1_q0;
reg   [31:0] reg_1719;
wire   [31:0] partial_sums_1_q1;
wire   [31:0] partial_sums_2_q0;
reg   [31:0] reg_1724;
wire   [31:0] partial_sums_2_q1;
reg    ap_block_state1;
wire   [2:0] b_fu_1735_p2;
reg   [2:0] b_reg_3071;
wire    ap_CS_fsm_state2;
wire   [0:0] read_odd_load_load_fu_1741_p1;
reg   [0:0] read_odd_load_reg_3076;
wire   [0:0] icmp_ln147_fu_1729_p2;
wire   [1:0] i_1_fu_1751_p2;
reg   [1:0] i_1_reg_3084;
wire    ap_CS_fsm_state3;
wire  signed [16:0] sext_ln153_fu_1757_p1;
wire   [0:0] icmp_ln151_fu_1745_p2;
wire   [1:0] i_fu_1767_p2;
reg   [1:0] i_reg_3097;
wire  signed [16:0] sext_ln166_fu_1773_p1;
wire   [0:0] icmp_ln164_fu_1761_p2;
reg   [0:0] compute_odd_load_reg_3107;
wire   [1:0] select_ln177_fu_1781_p3;
reg   [1:0] select_ln177_reg_3112;
wire   [1:0] select_ln177_1_fu_1789_p3;
reg   [1:0] select_ln177_1_reg_3117;
wire   [1:0] select_ln177_2_fu_1797_p3;
reg   [1:0] select_ln177_2_reg_3123;
wire   [1:0] select_ln177_3_fu_1805_p3;
reg   [1:0] select_ln177_3_reg_3129;
wire   [1:0] j_1_fu_1819_p2;
reg   [1:0] j_1_reg_3137;
reg    ap_predicate_op124_read_state4;
reg    ap_predicate_op126_read_state4;
reg    ap_predicate_op128_read_state4;
reg    ap_block_state4;
reg    ap_predicate_op148_read_state5;
reg    ap_block_state5;
reg   [9:0] stripes_0_1_addr_reg_3172;
reg   [9:0] stripes_1_1_addr_reg_3177;
reg   [9:0] stripes_2_1_addr_reg_3182;
wire   [16:0] local_col_index_2_fu_1835_p2;
wire    ap_CS_fsm_state6;
wire   [1:0] j_fu_1847_p2;
reg   [1:0] j_reg_3195;
reg    ap_predicate_op170_read_state7;
reg    ap_predicate_op172_read_state7;
reg    ap_predicate_op174_read_state7;
reg    ap_block_state7;
reg    ap_predicate_op194_read_state8;
reg    ap_block_state8;
reg   [9:0] stripes_0_3_addr_reg_3230;
reg   [9:0] stripes_1_3_addr_reg_3235;
reg   [9:0] stripes_2_3_addr_reg_3240;
wire   [16:0] local_col_index_1_fu_1863_p2;
wire    ap_CS_fsm_state9;
wire   [1:0] add_ln192_fu_1869_p2;
wire    ap_CS_fsm_state10;
wire   [31:0] select_ln192_2_fu_1909_p3;
wire   [31:0] select_ln192_5_fu_1933_p3;
wire   [31:0] select_ln192_7_fu_1949_p3;
wire   [31:0] select_ln192_8_fu_1957_p3;
reg   [31:0] kernel_sums_3_1_loa_reg_3282;
wire    ap_CS_fsm_state11;
reg   [31:0] kernel_sums_2_1_loa_reg_3287;
reg   [31:0] kernel_sums_1_1_loa_reg_3292;
reg   [31:0] kernel_sums_0_1_loa_reg_3297;
wire   [2:0] i_3_fu_1989_p2;
reg   [2:0] i_3_reg_3305;
wire   [1:0] local_row_indices_0_fu_2015_p3;
reg   [1:0] local_row_indices_0_reg_3310;
wire   [0:0] icmp_ln194_fu_1983_p2;
wire   [1:0] local_row_indices_1_fu_2021_p3;
reg   [1:0] local_row_indices_1_reg_3315;
wire   [1:0] local_row_indices_2_fu_2027_p3;
reg   [1:0] local_row_indices_2_reg_3320;
wire   [15:0] local_col_index_fu_2037_p2;
reg   [15:0] local_col_index_reg_3325;
wire   [1:0] add_ln215_fu_2043_p2;
reg   [1:0] add_ln215_reg_3330;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln215_1_fu_2049_p2;
wire    ap_CS_fsm_state13;
wire   [16:0] zext_ln218_fu_2074_p1;
reg   [16:0] zext_ln218_reg_3346;
wire   [0:0] icmp_ln215_fu_2062_p2;
wire   [0:0] icmp_ln215_1_fu_2068_p2;
wire   [1:0] l_fu_2083_p2;
reg   [1:0] l_reg_3354;
wire    ap_CS_fsm_state14;
wire   [1:0] m_fu_2099_p2;
reg   [1:0] m_reg_3362;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln228_fu_2105_p1;
reg   [63:0] zext_ln228_reg_3367;
wire   [0:0] icmp_ln220_fu_2093_p2;
wire   [16:0] add_ln228_fu_2112_p2;
reg   [16:0] add_ln228_reg_3404;
wire  signed [15:0] sext_ln228_fu_2156_p1;
reg  signed [15:0] sext_ln228_reg_3424;
wire    ap_CS_fsm_state16;
wire   [7:0] tmp_7_fu_2160_p6;
reg   [7:0] tmp_7_reg_3654;
wire   [7:0] tmp_10_fu_2186_p5;
reg  signed [7:0] tmp_10_reg_3659;
reg   [31:0] partial_sums_0_load_1_reg_3664;
wire   [7:0] tmp_11_fu_2210_p5;
reg  signed [7:0] tmp_11_reg_3669;
wire   [7:0] tmp_12_fu_2234_p5;
reg  signed [7:0] tmp_12_reg_3674;
wire   [7:0] tmp_13_fu_2258_p5;
reg  signed [7:0] tmp_13_reg_3679;
wire   [7:0] tmp_14_fu_2270_p6;
reg   [7:0] tmp_14_reg_3684;
wire   [7:0] tmp_15_fu_2296_p5;
reg  signed [7:0] tmp_15_reg_3689;
reg   [31:0] partial_sums_1_load_1_reg_3694;
wire   [7:0] tmp_16_fu_2320_p5;
reg  signed [7:0] tmp_16_reg_3699;
wire   [7:0] tmp_17_fu_2344_p5;
reg  signed [7:0] tmp_17_reg_3704;
wire   [7:0] tmp_18_fu_2368_p5;
reg  signed [7:0] tmp_18_reg_3709;
wire   [7:0] tmp_19_fu_2380_p6;
reg   [7:0] tmp_19_reg_3714;
wire   [7:0] tmp_20_fu_2406_p5;
reg  signed [7:0] tmp_20_reg_3719;
reg   [31:0] partial_sums_2_load_1_reg_3724;
wire   [7:0] tmp_21_fu_2430_p5;
reg  signed [7:0] tmp_21_reg_3729;
wire   [7:0] tmp_22_fu_2454_p5;
reg  signed [7:0] tmp_22_reg_3734;
wire  signed [31:0] grp_fu_2896_p3;
reg  signed [31:0] add_ln228_3_reg_3739;
wire    ap_CS_fsm_state18;
wire  signed [31:0] grp_fu_2904_p3;
reg  signed [31:0] add_ln228_4_reg_3744;
wire  signed [31:0] grp_fu_2929_p3;
reg  signed [31:0] add_ln228_7_reg_3749;
wire  signed [31:0] grp_fu_2937_p3;
reg  signed [31:0] add_ln228_8_reg_3754;
wire  signed [31:0] grp_fu_2962_p3;
reg  signed [31:0] add_ln228_11_reg_3759;
wire  signed [31:0] grp_fu_2970_p3;
reg  signed [31:0] add_ln228_12_reg_3764;
wire   [1:0] add_ln234_fu_2508_p2;
wire    ap_CS_fsm_state20;
wire   [31:0] kernel_sums_3_3_fu_2514_p6;
reg   [31:0] kernel_sums_3_3_reg_3774;
wire   [31:0] kernel_sums_2_3_fu_2528_p6;
reg   [31:0] kernel_sums_2_3_reg_3780;
wire   [31:0] kernel_sums_1_3_fu_2542_p6;
reg   [31:0] kernel_sums_1_3_reg_3786;
wire   [31:0] kernel_sums_0_3_fu_2556_p6;
reg   [31:0] kernel_sums_0_3_reg_3792;
wire   [1:0] add_ln239_fu_2582_p2;
wire    ap_CS_fsm_state22;
wire   [31:0] kernel_sums_0_fu_2600_p2;
wire   [0:0] icmp_ln239_fu_2576_p2;
wire   [1:0] add_ln239_1_fu_2612_p2;
wire    ap_CS_fsm_state24;
wire   [31:0] kernel_sums_1_fu_2630_p2;
wire   [0:0] icmp_ln239_1_fu_2606_p2;
wire   [1:0] add_ln239_2_fu_2642_p2;
wire    ap_CS_fsm_state26;
wire   [31:0] kernel_sums_2_fu_2660_p2;
wire   [0:0] icmp_ln239_2_fu_2636_p2;
wire   [1:0] add_ln239_3_fu_2672_p2;
wire    ap_CS_fsm_state28;
wire   [31:0] kernel_sums_3_fu_2690_p2;
wire   [0:0] icmp_ln239_3_fu_2666_p2;
wire   [31:0] maxes_0_fu_2702_p3;
wire   [31:0] maxes_1_fu_2716_p3;
wire   [31:0] maxes_2_fu_2730_p3;
wire   [31:0] maxes_3_fu_2744_p3;
wire   [2:0] i_2_fu_2778_p2;
reg    ap_predicate_op696_write_state29;
reg    ap_predicate_op698_write_state29;
reg    ap_predicate_op700_write_state29;
reg    ap_predicate_op702_write_state29;
reg    ap_block_state29;
wire   [0:0] icmp_ln258_fu_2822_p2;
reg   [0:0] icmp_ln258_reg_3884;
wire   [0:0] icmp_ln265_fu_2857_p2;
reg   [0:0] icmp_ln265_reg_3888;
wire    ap_CS_fsm_state30;
reg   [1:0] partial_sums_0_address0;
reg    partial_sums_0_ce0;
reg    partial_sums_0_we0;
reg   [31:0] partial_sums_0_d0;
reg   [1:0] partial_sums_0_address1;
reg    partial_sums_0_ce1;
reg    partial_sums_0_we1;
reg   [31:0] partial_sums_0_d1;
reg   [1:0] partial_sums_1_address0;
reg    partial_sums_1_ce0;
reg    partial_sums_1_we0;
reg   [31:0] partial_sums_1_d0;
reg   [1:0] partial_sums_1_address1;
reg    partial_sums_1_ce1;
reg    partial_sums_1_we1;
reg   [31:0] partial_sums_1_d1;
reg   [1:0] partial_sums_2_address0;
reg    partial_sums_2_ce0;
reg    partial_sums_2_we0;
reg   [31:0] partial_sums_2_d0;
reg   [1:0] partial_sums_2_address1;
reg    partial_sums_2_ce1;
reg    partial_sums_2_we1;
reg   [31:0] partial_sums_2_d1;
reg   [31:0] maxes_3_3_reg_1453;
reg   [31:0] maxes_3_0_reg_1221;
wire    ap_CS_fsm_state31;
reg   [31:0] maxes_2_3_reg_1464;
reg   [31:0] maxes_2_0_reg_1233;
reg   [31:0] maxes_1_3_reg_1475;
reg   [31:0] maxes_1_0_reg_1245;
reg   [31:0] maxes_0_3_reg_1486;
reg   [31:0] maxes_0_0_reg_1257;
reg   [2:0] b_0_reg_1269;
reg   [1:0] j_0_reg_1304;
reg  signed [16:0] local_col_index_0_reg_1315;
reg   [7:0] tmp_112_0_reg_1325;
reg   [7:0] tmp_113_0_reg_1339;
reg  signed [16:0] local_col_index2_0_reg_1353;
reg   [1:0] j3_0_reg_1363;
reg   [7:0] tmp_0_reg_1374;
reg   [7:0] tmp_111_0_reg_1388;
reg   [31:0] maxes_3_14_reg_1402;
wire   [0:0] icmp_ln192_fu_1965_p2;
reg   [31:0] maxes_2_13_reg_1412;
reg   [31:0] maxes_1_12_reg_1422;
reg   [31:0] maxes_0_11_reg_1432;
reg   [1:0] phi_ln192_reg_1442;
reg   [2:0] i4_0_reg_1497;
reg   [1:0] phi_ln215_reg_1508;
reg   [1:0] phi_ln215_1_reg_1520;
reg   [1:0] l_0_reg_1531;
reg   [1:0] m_0_reg_1543;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln218_fu_2077_p2;
reg   [1:0] phi_ln228_reg_1554;
reg   [31:0] kernel_sums_0_2_reg_1565;
wire   [0:0] icmp_ln234_fu_2570_p2;
reg   [31:0] kernel_sums_1_2_reg_1574;
reg   [31:0] kernel_sums_2_2_reg_1583;
reg   [31:0] kernel_sums_3_2_reg_1592;
reg   [1:0] phi_ln234_reg_1601;
reg   [31:0] kernel_sums_0_4_reg_1612;
reg   [1:0] j8_0_0_reg_1622;
reg   [31:0] kernel_sums_1_4_reg_1633;
reg   [1:0] j8_0_1_reg_1643;
reg   [31:0] kernel_sums_2_4_reg_1654;
reg   [1:0] j8_0_2_reg_1664;
reg   [31:0] kernel_sums_3_4_reg_1675;
reg   [1:0] j8_0_3_reg_1684;
reg   [2:0] i10_0_reg_1695;
wire  signed [63:0] sext_ln156_fu_1825_p1;
wire  signed [63:0] sext_ln169_fu_1853_p1;
wire   [63:0] zext_ln215_fu_2055_p1;
wire   [63:0] zext_ln228_1_fu_2117_p1;
wire   [0:0] xor_ln261_fu_2828_p2;
wire   [15:0] add_ln257_fu_2810_p2;
wire   [0:0] xor_ln268_fu_2863_p2;
wire   [15:0] add_ln264_fu_2845_p2;
reg   [31:0] kernel_sums_3_1_fu_220;
reg   [31:0] kernel_sums_2_1_fu_224;
reg   [31:0] kernel_sums_1_1_fu_228;
reg   [31:0] kernel_sums_0_1_fu_232;
wire   [15:0] tmp_69_fu_2802_p1;
wire  signed [31:0] grp_fu_2912_p3;
wire  signed [31:0] grp_fu_2921_p3;
wire  signed [31:0] grp_fu_2880_p3;
wire  signed [31:0] grp_fu_2888_p3;
wire  signed [31:0] grp_fu_2945_p3;
wire  signed [31:0] grp_fu_2954_p3;
wire   [0:0] icmp_ln192_1_fu_1875_p2;
wire   [0:0] icmp_ln192_2_fu_1889_p2;
wire   [31:0] select_ln192_fu_1881_p3;
wire   [0:0] icmp_ln192_3_fu_1903_p2;
wire   [31:0] select_ln192_1_fu_1895_p3;
wire   [31:0] select_ln192_3_fu_1917_p3;
wire   [31:0] select_ln192_4_fu_1925_p3;
wire   [31:0] select_ln192_6_fu_1941_p3;
wire   [1:0] tmp_68_fu_1995_p4;
wire   [0:0] top_offset_fu_2005_p2;
wire   [0:0] trunc_ln206_fu_2011_p1;
wire   [15:0] zext_ln213_fu_2033_p1;
wire   [16:0] zext_ln220_fu_2089_p1;
wire  signed [7:0] tmp_8_fu_2144_p1;
wire   [7:0] tmp_8_fu_2144_p2;
wire  signed [7:0] tmp_8_fu_2144_p3;
wire   [7:0] tmp_8_fu_2144_p5;
wire  signed [7:0] tmp_10_fu_2186_p1;
wire  signed [7:0] tmp_10_fu_2186_p2;
wire  signed [7:0] tmp_10_fu_2186_p3;
wire  signed [7:0] tmp_11_fu_2210_p1;
wire  signed [7:0] tmp_11_fu_2210_p2;
wire  signed [7:0] tmp_11_fu_2210_p3;
wire  signed [7:0] tmp_12_fu_2234_p1;
wire  signed [7:0] tmp_12_fu_2234_p2;
wire  signed [7:0] tmp_12_fu_2234_p3;
wire   [7:0] tmp_13_fu_2258_p1;
wire   [7:0] tmp_13_fu_2258_p2;
wire  signed [7:0] tmp_13_fu_2258_p3;
wire  signed [7:0] tmp_15_fu_2296_p1;
wire  signed [7:0] tmp_15_fu_2296_p2;
wire  signed [7:0] tmp_15_fu_2296_p3;
wire  signed [7:0] tmp_16_fu_2320_p1;
wire  signed [7:0] tmp_16_fu_2320_p2;
wire  signed [7:0] tmp_16_fu_2320_p3;
wire  signed [7:0] tmp_17_fu_2344_p1;
wire  signed [7:0] tmp_17_fu_2344_p2;
wire  signed [7:0] tmp_17_fu_2344_p3;
wire  signed [7:0] tmp_18_fu_2368_p1;
wire  signed [7:0] tmp_18_fu_2368_p2;
wire  signed [7:0] tmp_18_fu_2368_p3;
wire   [7:0] tmp_20_fu_2406_p1;
wire  signed [7:0] tmp_20_fu_2406_p2;
wire  signed [7:0] tmp_20_fu_2406_p3;
wire  signed [7:0] tmp_21_fu_2430_p1;
wire  signed [7:0] tmp_21_fu_2430_p2;
wire  signed [7:0] tmp_21_fu_2430_p3;
wire  signed [7:0] tmp_22_fu_2454_p1;
wire  signed [7:0] tmp_22_fu_2454_p2;
wire  signed [7:0] tmp_22_fu_2454_p3;
wire   [31:0] tmp_9_fu_2588_p5;
wire   [31:0] tmp_23_fu_2618_p5;
wire   [31:0] tmp_24_fu_2648_p5;
wire   [31:0] tmp_25_fu_2678_p5;
wire   [0:0] icmp_ln248_fu_2696_p2;
wire   [0:0] icmp_ln248_1_fu_2710_p2;
wire   [0:0] icmp_ln248_2_fu_2724_p2;
wire   [0:0] icmp_ln248_3_fu_2738_p2;
wire   [1:0] tmp_6_fu_2788_p5;
wire   [31:0] tmp_6_fu_2788_p6;
wire  signed [7:0] grp_fu_2880_p0;
wire   [7:0] grp_fu_2880_p1;
wire   [15:0] zext_ln228_2_fu_2466_p1;
wire   [7:0] grp_fu_2888_p1;
wire   [7:0] grp_fu_2896_p1;
wire   [7:0] grp_fu_2904_p1;
wire   [7:0] grp_fu_2912_p1;
wire   [15:0] zext_ln228_3_fu_2481_p1;
wire   [7:0] grp_fu_2921_p1;
wire   [7:0] grp_fu_2929_p1;
wire   [7:0] grp_fu_2937_p1;
wire   [7:0] grp_fu_2945_p1;
wire   [15:0] zext_ln228_4_fu_2496_p1;
wire   [7:0] grp_fu_2954_p1;
wire   [7:0] grp_fu_2962_p1;
wire   [7:0] grp_fu_2970_p1;
reg   [30:0] ap_NS_fsm;
reg    ap_condition_2120;
reg    ap_condition_810;
reg    ap_condition_2116;
reg    ap_condition_757;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 31'd1;
#0 read_odd = 1'd0;
#0 read_col_index = 16'd1;
#0 compute_odd = 1'd1;
#0 compute_col_index = 16'd508;
end

kernel_kernels_0_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_0_address0),
    .ce0(kernels_0_0_ce0),
    .q0(kernels_0_0_q0)
);

kernel_kernels_0_1 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_1_address0),
    .ce0(kernels_0_1_ce0),
    .q0(kernels_0_1_q0)
);

kernel_kernels_0_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_2_address0),
    .ce0(kernels_0_2_ce0),
    .q0(kernels_0_2_q0)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_0_address0),
    .ce0(stripes_0_0_ce0),
    .q0(stripes_0_0_q0),
    .address1(stripes_0_0_address1),
    .ce1(stripes_0_0_ce1),
    .we1(stripes_0_0_we1),
    .d1(tmp_112_0_reg_1325)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_1_address0),
    .ce0(stripes_0_1_ce0),
    .q0(stripes_0_1_q0),
    .address1(stripes_0_1_addr_reg_3172),
    .ce1(stripes_0_1_ce1),
    .we1(stripes_0_1_we1),
    .d1(tmp_113_0_reg_1339)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_2_address0),
    .ce0(stripes_0_2_ce0),
    .q0(stripes_0_2_q0),
    .address1(stripes_0_2_address1),
    .ce1(stripes_0_2_ce1),
    .we1(stripes_0_2_we1),
    .d1(tmp_0_reg_1374)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_0_3_address0),
    .ce0(stripes_0_3_ce0),
    .q0(stripes_0_3_q0),
    .address1(stripes_0_3_addr_reg_3230),
    .ce1(stripes_0_3_ce1),
    .we1(stripes_0_3_we1),
    .d1(tmp_111_0_reg_1388)
);

kernel_kernels_1_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_0_address0),
    .ce0(kernels_1_0_ce0),
    .q0(kernels_1_0_q0)
);

kernel_kernels_1_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_1_address0),
    .ce0(kernels_1_1_ce0),
    .q0(kernels_1_1_q0)
);

kernel_kernels_1_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_2_address0),
    .ce0(kernels_1_2_ce0),
    .q0(kernels_1_2_q0)
);

kernel_kernels_2_0 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_0_address0),
    .ce0(kernels_2_0_ce0),
    .q0(kernels_2_0_q0)
);

kernel_kernels_2_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_1_address0),
    .ce0(kernels_2_1_ce0),
    .q0(kernels_2_1_q0)
);

kernel_kernels_2_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_2_address0),
    .ce0(kernels_2_2_ce0),
    .q0(kernels_2_2_q0)
);

kernel_kernels_3_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_0_address0),
    .ce0(kernels_3_0_ce0),
    .q0(kernels_3_0_q0)
);

kernel_kernels_3_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_1_address0),
    .ce0(kernels_3_1_ce0),
    .q0(kernels_3_1_q0)
);

kernel_kernels_3_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_3_2_address0),
    .ce0(kernels_3_2_ce0),
    .q0(kernels_3_2_q0)
);

kernel_kernels_4_0 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_0_address0),
    .ce0(kernels_4_0_ce0),
    .q0(kernels_4_0_q0)
);

kernel_kernels_4_1 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_1_address0),
    .ce0(kernels_4_1_ce0),
    .q0(kernels_4_1_q0)
);

kernel_kernels_4_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_4_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_4_2_address0),
    .ce0(kernels_4_2_ce0),
    .q0(kernels_4_2_q0)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_0_address0),
    .ce0(stripes_1_0_ce0),
    .q0(stripes_1_0_q0),
    .address1(stripes_1_0_address1),
    .ce1(stripes_1_0_ce1),
    .we1(stripes_1_0_we1),
    .d1(tmp_112_0_reg_1325)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_1_address0),
    .ce0(stripes_1_1_ce0),
    .q0(stripes_1_1_q0),
    .address1(stripes_1_1_addr_reg_3177),
    .ce1(stripes_1_1_ce1),
    .we1(stripes_1_1_we1),
    .d1(tmp_113_0_reg_1339)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_2_address0),
    .ce0(stripes_1_2_ce0),
    .q0(stripes_1_2_q0),
    .address1(stripes_1_2_address1),
    .ce1(stripes_1_2_ce1),
    .we1(stripes_1_2_we1),
    .d1(tmp_0_reg_1374)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_1_3_address0),
    .ce0(stripes_1_3_ce0),
    .q0(stripes_1_3_q0),
    .address1(stripes_1_3_addr_reg_3235),
    .ce1(stripes_1_3_ce1),
    .we1(stripes_1_3_we1),
    .d1(tmp_111_0_reg_1388)
);

kernel_kernels_5_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_0_address0),
    .ce0(kernels_5_0_ce0),
    .q0(kernels_5_0_q0)
);

kernel_kernels_5_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_1_address0),
    .ce0(kernels_5_1_ce0),
    .q0(kernels_5_1_q0)
);

kernel_kernels_5_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_5_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_5_2_address0),
    .ce0(kernels_5_2_ce0),
    .q0(kernels_5_2_q0)
);

kernel_kernels_6_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_6_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_0_address0),
    .ce0(kernels_6_0_ce0),
    .q0(kernels_6_0_q0)
);

kernel_kernels_6_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_6_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_1_address0),
    .ce0(kernels_6_1_ce0),
    .q0(kernels_6_1_q0)
);

kernel_kernels_6_2 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_6_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_6_2_address0),
    .ce0(kernels_6_2_ce0),
    .q0(kernels_6_2_q0)
);

kernel_kernels_7_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_7_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_0_address0),
    .ce0(kernels_7_0_ce0),
    .q0(kernels_7_0_q0)
);

kernel_kernels_7_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_7_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_1_address0),
    .ce0(kernels_7_1_ce0),
    .q0(kernels_7_1_q0)
);

kernel_kernels_7_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_7_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_7_2_address0),
    .ce0(kernels_7_2_ce0),
    .q0(kernels_7_2_q0)
);

kernel_kernels_8_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_8_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_0_address0),
    .ce0(kernels_8_0_ce0),
    .q0(kernels_8_0_q0)
);

kernel_kernels_8_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_8_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_1_address0),
    .ce0(kernels_8_1_ce0),
    .q0(kernels_8_1_q0)
);

kernel_kernels_8_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_8_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_8_2_address0),
    .ce0(kernels_8_2_ce0),
    .q0(kernels_8_2_q0)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_0_address0),
    .ce0(stripes_2_0_ce0),
    .q0(stripes_2_0_q0),
    .address1(stripes_2_0_address1),
    .ce1(stripes_2_0_ce1),
    .we1(stripes_2_0_we1),
    .d1(tmp_112_0_reg_1325)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_1_address0),
    .ce0(stripes_2_1_ce0),
    .q0(stripes_2_1_q0),
    .address1(stripes_2_1_addr_reg_3182),
    .ce1(stripes_2_1_ce1),
    .we1(stripes_2_1_we1),
    .d1(tmp_113_0_reg_1339)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_2_address0),
    .ce0(stripes_2_2_ce0),
    .q0(stripes_2_2_q0),
    .address1(stripes_2_2_address1),
    .ce1(stripes_2_2_ce1),
    .we1(stripes_2_2_we1),
    .d1(tmp_0_reg_1374)
);

kernel_stripes_0_0 #(
    .DataWidth( 8 ),
    .AddressRange( 514 ),
    .AddressWidth( 10 ))
stripes_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stripes_2_3_address0),
    .ce0(stripes_2_3_ce0),
    .q0(stripes_2_3_q0),
    .address1(stripes_2_3_addr_reg_3240),
    .ce1(stripes_2_3_ce1),
    .we1(stripes_2_3_we1),
    .d1(tmp_111_0_reg_1388)
);

kernel_kernels_9_0 #(
    .DataWidth( 5 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_9_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_0_address0),
    .ce0(kernels_9_0_ce0),
    .q0(kernels_9_0_q0)
);

kernel_kernels_9_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_9_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_1_address0),
    .ce0(kernels_9_1_ce0),
    .q0(kernels_9_1_q0)
);

kernel_kernels_9_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_9_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_9_2_address0),
    .ce0(kernels_9_2_ce0),
    .q0(kernels_9_2_q0)
);

kernel_kernels_10_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_10_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_0_address0),
    .ce0(kernels_10_0_ce0),
    .q0(kernels_10_0_q0)
);

kernel_kernels_10_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_10_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_1_address0),
    .ce0(kernels_10_1_ce0),
    .q0(kernels_10_1_q0)
);

kernel_kernels_10_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_10_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_10_2_address0),
    .ce0(kernels_10_2_ce0),
    .q0(kernels_10_2_q0)
);

kernel_kernels_11_0 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_11_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_0_address0),
    .ce0(kernels_11_0_ce0),
    .q0(kernels_11_0_q0)
);

kernel_kernels_11_1 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_11_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_1_address0),
    .ce0(kernels_11_1_ce0),
    .q0(kernels_11_1_q0)
);

kernel_kernels_11_2 #(
    .DataWidth( 6 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_11_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_11_2_address0),
    .ce0(kernels_11_2_ce0),
    .q0(kernels_11_2_q0)
);

kernel_partial_subkb #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_0_address0),
    .ce0(partial_sums_0_ce0),
    .we0(partial_sums_0_we0),
    .d0(partial_sums_0_d0),
    .q0(partial_sums_0_q0),
    .address1(partial_sums_0_address1),
    .ce1(partial_sums_0_ce1),
    .we1(partial_sums_0_we1),
    .d1(partial_sums_0_d1),
    .q1(partial_sums_0_q1)
);

kernel_partial_subkb #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_1_address0),
    .ce0(partial_sums_1_ce0),
    .we0(partial_sums_1_we0),
    .d0(partial_sums_1_d0),
    .q0(partial_sums_1_q0),
    .address1(partial_sums_1_address1),
    .ce1(partial_sums_1_ce1),
    .we1(partial_sums_1_we1),
    .d1(partial_sums_1_d1),
    .q1(partial_sums_1_q1)
);

kernel_partial_subkb #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
partial_sums_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(partial_sums_2_address0),
    .ce0(partial_sums_2_ce0),
    .we0(partial_sums_2_we0),
    .d0(partial_sums_2_d0),
    .q0(partial_sums_2_q0),
    .address1(partial_sums_2_address1),
    .ce1(partial_sums_2_ce1),
    .we1(partial_sums_2_we1),
    .d1(partial_sums_2_d1),
    .q1(partial_sums_2_q1)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U16(
    .din0(tmp_8_fu_2144_p1),
    .din1(tmp_8_fu_2144_p2),
    .din2(tmp_8_fu_2144_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_8_fu_2144_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_mfYi_U17(
    .din0(stripes_0_0_q0),
    .din1(stripes_0_1_q0),
    .din2(stripes_0_2_q0),
    .din3(stripes_0_3_q0),
    .din4(phi_ln228_reg_1554),
    .dout(tmp_7_fu_2160_p6)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U18(
    .din0(tmp_10_fu_2186_p1),
    .din1(tmp_10_fu_2186_p2),
    .din2(tmp_10_fu_2186_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_10_fu_2186_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U19(
    .din0(tmp_11_fu_2210_p1),
    .din1(tmp_11_fu_2210_p2),
    .din2(tmp_11_fu_2210_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_11_fu_2210_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U20(
    .din0(tmp_12_fu_2234_p1),
    .din1(tmp_12_fu_2234_p2),
    .din2(tmp_12_fu_2234_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_12_fu_2234_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U21(
    .din0(tmp_13_fu_2258_p1),
    .din1(tmp_13_fu_2258_p2),
    .din2(tmp_13_fu_2258_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_13_fu_2258_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_mfYi_U22(
    .din0(stripes_1_0_q0),
    .din1(stripes_1_1_q0),
    .din2(stripes_1_2_q0),
    .din3(stripes_1_3_q0),
    .din4(phi_ln228_reg_1554),
    .dout(tmp_14_fu_2270_p6)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U23(
    .din0(tmp_15_fu_2296_p1),
    .din1(tmp_15_fu_2296_p2),
    .din2(tmp_15_fu_2296_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_15_fu_2296_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U24(
    .din0(tmp_16_fu_2320_p1),
    .din1(tmp_16_fu_2320_p2),
    .din2(tmp_16_fu_2320_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_16_fu_2320_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U25(
    .din0(tmp_17_fu_2344_p1),
    .din1(tmp_17_fu_2344_p2),
    .din2(tmp_17_fu_2344_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_17_fu_2344_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U26(
    .din0(tmp_18_fu_2368_p1),
    .din1(tmp_18_fu_2368_p2),
    .din2(tmp_18_fu_2368_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_18_fu_2368_p5)
);

fused_cnn_layer_mfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_mfYi_U27(
    .din0(stripes_2_0_q0),
    .din1(stripes_2_1_q0),
    .din2(stripes_2_2_q0),
    .din3(stripes_2_3_q0),
    .din4(phi_ln228_reg_1554),
    .dout(tmp_19_fu_2380_p6)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U28(
    .din0(tmp_20_fu_2406_p1),
    .din1(tmp_20_fu_2406_p2),
    .din2(tmp_20_fu_2406_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_20_fu_2406_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U29(
    .din0(tmp_21_fu_2430_p1),
    .din1(tmp_21_fu_2430_p2),
    .din2(tmp_21_fu_2430_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_21_fu_2430_p5)
);

fused_cnn_layer_meOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fused_cnn_layer_meOg_U30(
    .din0(tmp_22_fu_2454_p1),
    .din1(tmp_22_fu_2454_p2),
    .din2(tmp_22_fu_2454_p3),
    .din3(l_0_reg_1531),
    .dout(tmp_22_fu_2454_p5)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U31(
    .din0(kernel_sums_3_2_reg_1592),
    .din1(kernel_sums_3_2_reg_1592),
    .din2(kernel_sums_3_2_reg_1592),
    .din3(32'd0),
    .din4(phi_ln234_reg_1601),
    .dout(kernel_sums_3_3_fu_2514_p6)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U32(
    .din0(kernel_sums_2_2_reg_1583),
    .din1(kernel_sums_2_2_reg_1583),
    .din2(32'd0),
    .din3(kernel_sums_2_2_reg_1583),
    .din4(phi_ln234_reg_1601),
    .dout(kernel_sums_2_3_fu_2528_p6)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U33(
    .din0(kernel_sums_1_2_reg_1574),
    .din1(32'd0),
    .din2(kernel_sums_1_2_reg_1574),
    .din3(kernel_sums_1_2_reg_1574),
    .din4(phi_ln234_reg_1601),
    .dout(kernel_sums_1_3_fu_2542_p6)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U34(
    .din0(32'd0),
    .din1(kernel_sums_0_2_reg_1565),
    .din2(kernel_sums_0_2_reg_1565),
    .din3(kernel_sums_0_2_reg_1565),
    .din4(phi_ln234_reg_1601),
    .dout(kernel_sums_0_3_fu_2556_p6)
);

fused_cnn_layer_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mhbi_U35(
    .din0(reg_1714),
    .din1(reg_1719),
    .din2(reg_1724),
    .din3(j8_0_0_reg_1622),
    .dout(tmp_9_fu_2588_p5)
);

fused_cnn_layer_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mhbi_U36(
    .din0(reg_1714),
    .din1(reg_1719),
    .din2(reg_1724),
    .din3(j8_0_1_reg_1643),
    .dout(tmp_23_fu_2618_p5)
);

fused_cnn_layer_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mhbi_U37(
    .din0(reg_1714),
    .din1(reg_1719),
    .din2(reg_1724),
    .din3(j8_0_2_reg_1664),
    .dout(tmp_24_fu_2648_p5)
);

fused_cnn_layer_mhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mhbi_U38(
    .din0(reg_1714),
    .din1(reg_1719),
    .din2(reg_1724),
    .din3(j8_0_3_reg_1684),
    .dout(tmp_25_fu_2678_p5)
);

fused_cnn_layer_mg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mg8j_U39(
    .din0(maxes_0_3_reg_1486),
    .din1(maxes_1_3_reg_1475),
    .din2(maxes_2_3_reg_1464),
    .din3(maxes_3_3_reg_1453),
    .din4(tmp_6_fu_2788_p5),
    .dout(tmp_6_fu_2788_p6)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U40(
    .din0(grp_fu_2880_p0),
    .din1(grp_fu_2880_p1),
    .din2(reg_1714),
    .dout(grp_fu_2880_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U41(
    .din0(tmp_10_reg_3659),
    .din1(grp_fu_2888_p1),
    .din2(partial_sums_0_load_1_reg_3664),
    .dout(grp_fu_2888_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U42(
    .din0(tmp_11_reg_3669),
    .din1(grp_fu_2896_p1),
    .din2(partial_sums_0_q1),
    .dout(grp_fu_2896_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U43(
    .din0(tmp_12_reg_3674),
    .din1(grp_fu_2904_p1),
    .din2(partial_sums_0_q0),
    .dout(grp_fu_2904_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U44(
    .din0(tmp_13_reg_3679),
    .din1(grp_fu_2912_p1),
    .din2(reg_1719),
    .dout(grp_fu_2912_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U45(
    .din0(tmp_15_reg_3689),
    .din1(grp_fu_2921_p1),
    .din2(partial_sums_1_load_1_reg_3694),
    .dout(grp_fu_2921_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U46(
    .din0(tmp_16_reg_3699),
    .din1(grp_fu_2929_p1),
    .din2(partial_sums_1_q1),
    .dout(grp_fu_2929_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U47(
    .din0(tmp_17_reg_3704),
    .din1(grp_fu_2937_p1),
    .din2(partial_sums_1_q0),
    .dout(grp_fu_2937_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U48(
    .din0(tmp_18_reg_3709),
    .din1(grp_fu_2945_p1),
    .din2(reg_1724),
    .dout(grp_fu_2945_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U49(
    .din0(tmp_20_reg_3719),
    .din1(grp_fu_2954_p1),
    .din2(partial_sums_2_load_1_reg_3724),
    .dout(grp_fu_2954_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U50(
    .din0(tmp_21_reg_3729),
    .din1(grp_fu_2962_p1),
    .din2(partial_sums_2_q1),
    .dout(grp_fu_2962_p3)
);

fused_cnn_layer_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fused_cnn_layer_mibs_U51(
    .din0(tmp_22_reg_3734),
    .din1(grp_fu_2970_p1),
    .din2(partial_sums_2_q0),
    .dout(grp_fu_2970_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        compute_col_index <= 16'd508;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln265_reg_3888 == 1'd1))) begin
            compute_col_index <= 16'd0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            compute_col_index <= add_ln264_fu_2845_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_col_index <= 16'd1;
    end else begin
        if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln258_reg_3884 == 1'd1))) begin
            read_col_index <= 16'd1;
        end else if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd1))) begin
            read_col_index <= add_ln257_fu_2810_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        read_odd <= 1'd0;
    end else begin
        if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd1) & (icmp_ln258_fu_2822_p2 == 1'd1))) begin
            read_odd <= xor_ln261_fu_2828_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        b_0_reg_1269 <= b_reg_3071;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        b_0_reg_1269 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln194_fu_1983_p2 == 1'd1))) begin
        i10_0_reg_1695 <= 3'd0;
    end else if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
        i10_0_reg_1695 <= i_2_fu_2778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (read_odd_load_load_fu_1741_p1 == 1'd1) & (icmp_ln147_fu_1729_p2 == 1'd0))) begin
        i1_0_reg_1292 <= 2'd0;
    end else if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd1))) begin
        i1_0_reg_1292 <= i_reg_3097;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
        i4_0_reg_1497 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        i4_0_reg_1497 <= i_3_reg_3305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd0) & (read_odd_load_load_fu_1741_p1 == 1'd0))) begin
        i_0_reg_1280 <= 2'd0;
    end else if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd1))) begin
        i_0_reg_1280 <= i_1_reg_3084;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j3_0_reg_1363 <= j_reg_3195;
    end else if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3076 == 1'd1) & (icmp_ln164_fu_1761_p2 == 1'd0))) begin
        j3_0_reg_1363 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln239_fu_2576_p2 == 1'd0))) begin
        j8_0_0_reg_1622 <= add_ln239_fu_2582_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j8_0_0_reg_1622 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln239_1_fu_2606_p2 == 1'd0))) begin
        j8_0_1_reg_1643 <= add_ln239_1_fu_2612_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        j8_0_1_reg_1643 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln239_2_fu_2636_p2 == 1'd0))) begin
        j8_0_2_reg_1664 <= add_ln239_2_fu_2642_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        j8_0_2_reg_1664 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd0))) begin
        j8_0_3_reg_1684 <= add_ln239_3_fu_2672_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j8_0_3_reg_1684 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_1304 <= j_1_reg_3137;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1745_p2 == 1'd0) & (read_odd_load_reg_3076 == 1'd0))) begin
        j_0_reg_1304 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
        kernel_sums_0_2_reg_1565 <= kernel_sums_0_1_loa_reg_3297;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd0))) begin
        kernel_sums_0_2_reg_1565 <= kernel_sums_0_3_fu_2556_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln239_fu_2576_p2 == 1'd0))) begin
        kernel_sums_0_4_reg_1612 <= kernel_sums_0_fu_2600_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        kernel_sums_0_4_reg_1612 <= kernel_sums_0_3_reg_3792;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
        kernel_sums_1_2_reg_1574 <= kernel_sums_1_1_loa_reg_3292;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd0))) begin
        kernel_sums_1_2_reg_1574 <= kernel_sums_1_3_fu_2542_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln239_1_fu_2606_p2 == 1'd0))) begin
        kernel_sums_1_4_reg_1633 <= kernel_sums_1_fu_2630_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_sums_1_4_reg_1633 <= kernel_sums_1_3_reg_3786;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
        kernel_sums_2_2_reg_1583 <= kernel_sums_2_1_loa_reg_3287;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd0))) begin
        kernel_sums_2_2_reg_1583 <= kernel_sums_2_3_fu_2528_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln239_2_fu_2636_p2 == 1'd0))) begin
        kernel_sums_2_4_reg_1654 <= kernel_sums_2_fu_2660_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        kernel_sums_2_4_reg_1654 <= kernel_sums_2_3_reg_3780;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
        kernel_sums_3_2_reg_1592 <= kernel_sums_3_1_loa_reg_3282;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd0))) begin
        kernel_sums_3_2_reg_1592 <= kernel_sums_3_3_fu_2514_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd0))) begin
        kernel_sums_3_4_reg_1675 <= kernel_sums_3_fu_2690_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kernel_sums_3_4_reg_1675 <= kernel_sums_3_3_reg_3774;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln220_fu_2093_p2 == 1'd1))) begin
        l_0_reg_1531 <= l_reg_3354;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_1_fu_2068_p2 == 1'd1) & (icmp_ln215_fu_2062_p2 == 1'd1))) begin
        l_0_reg_1531 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        local_col_index2_0_reg_1353 <= local_col_index_1_fu_1863_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3076 == 1'd1) & (icmp_ln164_fu_1761_p2 == 1'd0))) begin
        local_col_index2_0_reg_1353 <= sext_ln166_fu_1773_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        local_col_index_0_reg_1315 <= local_col_index_2_fu_1835_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln151_fu_1745_p2 == 1'd0) & (read_odd_load_reg_3076 == 1'd0))) begin
        local_col_index_0_reg_1315 <= sext_ln153_fu_1757_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd0))) begin
        m_0_reg_1543 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_0_reg_1543 <= m_reg_3362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd0))) begin
        maxes_0_11_reg_1432 <= select_ln192_8_fu_1957_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        maxes_0_11_reg_1432 <= maxes_0_0_reg_1257;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
        maxes_0_3_reg_1486 <= select_ln192_8_fu_1957_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        maxes_0_3_reg_1486 <= maxes_0_fu_2702_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd0))) begin
        maxes_1_12_reg_1422 <= select_ln192_7_fu_1949_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        maxes_1_12_reg_1422 <= maxes_1_0_reg_1245;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
        maxes_1_3_reg_1475 <= select_ln192_7_fu_1949_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        maxes_1_3_reg_1475 <= maxes_1_fu_2716_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd0))) begin
        maxes_2_13_reg_1412 <= select_ln192_5_fu_1933_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        maxes_2_13_reg_1412 <= maxes_2_0_reg_1233;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
        maxes_2_3_reg_1464 <= select_ln192_5_fu_1933_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        maxes_2_3_reg_1464 <= maxes_2_fu_2730_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd0))) begin
        maxes_3_14_reg_1402 <= select_ln192_2_fu_1909_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        maxes_3_14_reg_1402 <= maxes_3_0_reg_1221;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
        maxes_3_3_reg_1453 <= select_ln192_2_fu_1909_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        maxes_3_3_reg_1453 <= maxes_3_fu_2744_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd0))) begin
        phi_ln192_reg_1442 <= add_ln192_fu_1869_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        phi_ln192_reg_1442 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_fu_2062_p2 == 1'd0))) begin
        phi_ln215_1_reg_1520 <= add_ln215_1_fu_2049_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_ln215_1_reg_1520 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_fu_2062_p2 == 1'd1) & (icmp_ln215_1_fu_2068_p2 == 1'd0))) begin
        phi_ln215_reg_1508 <= add_ln215_reg_3330;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln194_fu_1983_p2 == 1'd0))) begin
        phi_ln215_reg_1508 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        if ((l_0_reg_1531 == 2'd0)) begin
            phi_ln228_reg_1554 <= local_row_indices_0_reg_3310;
        end else if ((~(l_0_reg_1531 == 2'd0) & ~(l_0_reg_1531 == 2'd1))) begin
            phi_ln228_reg_1554 <= local_row_indices_2_reg_3320;
        end else if ((l_0_reg_1531 == 2'd1)) begin
            phi_ln228_reg_1554 <= local_row_indices_1_reg_3315;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
        phi_ln234_reg_1601 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd0))) begin
        phi_ln234_reg_1601 <= add_ln234_fu_2508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1714 <= partial_sums_0_q1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1714 <= partial_sums_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1719 <= partial_sums_1_q1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1719 <= partial_sums_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1724 <= partial_sums_2_q1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_1724 <= partial_sums_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2120)) begin
        if ((i1_0_reg_1292 == 2'd0)) begin
            tmp_0_reg_1374 <= input_upper_0_V_dout;
        end else if ((i1_0_reg_1292 == 2'd1)) begin
            tmp_0_reg_1374 <= input_upper_1_V_dout;
        end else if ((~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0))) begin
            tmp_0_reg_1374 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_810)) begin
        if ((i1_0_reg_1292 == 2'd0)) begin
            tmp_111_0_reg_1388 <= input_lower_0_V_dout;
        end else if ((i1_0_reg_1292 == 2'd1)) begin
            tmp_111_0_reg_1388 <= input_lower_1_V_dout;
        end else if ((~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0))) begin
            tmp_111_0_reg_1388 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2116)) begin
        if ((i_0_reg_1280 == 2'd0)) begin
            tmp_112_0_reg_1325 <= input_upper_0_V_dout;
        end else if ((i_0_reg_1280 == 2'd1)) begin
            tmp_112_0_reg_1325 <= input_upper_1_V_dout;
        end else if ((~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0))) begin
            tmp_112_0_reg_1325 <= input_upper_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_757)) begin
        if ((i_0_reg_1280 == 2'd0)) begin
            tmp_113_0_reg_1339 <= input_lower_0_V_dout;
        end else if ((i_0_reg_1280 == 2'd1)) begin
            tmp_113_0_reg_1339 <= input_lower_1_V_dout;
        end else if ((~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0))) begin
            tmp_113_0_reg_1339 <= input_lower_2_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln215_reg_3330 <= add_ln215_fu_2043_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln228_11_reg_3759 <= grp_fu_2962_p3;
        add_ln228_12_reg_3764 <= grp_fu_2970_p3;
        add_ln228_3_reg_3739 <= grp_fu_2896_p3;
        add_ln228_4_reg_3744 <= grp_fu_2904_p3;
        add_ln228_7_reg_3749 <= grp_fu_2929_p3;
        add_ln228_8_reg_3754 <= grp_fu_2937_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln220_fu_2093_p2 == 1'd0))) begin
        add_ln228_reg_3404 <= add_ln228_fu_2112_p2;
        zext_ln228_reg_3367[1 : 0] <= zext_ln228_fu_2105_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_reg_3071 <= b_fu_1735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln265_fu_2857_p2 == 1'd1))) begin
        compute_odd <= xor_ln268_fu_2863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
        compute_odd_load_reg_3107 <= compute_odd;
        select_ln177_1_reg_3117[1] <= select_ln177_1_fu_1789_p3[1];
        select_ln177_2_reg_3123[1] <= select_ln177_2_fu_1797_p3[1];
        select_ln177_3_reg_3129[1] <= select_ln177_3_fu_1805_p3[1];
        select_ln177_reg_3112[1] <= select_ln177_fu_1781_p3[1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3076 == 1'd0))) begin
        i_1_reg_3084 <= i_1_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_3_reg_3305 <= i_3_fu_1989_p2;
        kernel_sums_0_1_loa_reg_3297 <= kernel_sums_0_1_fu_232;
        kernel_sums_1_1_loa_reg_3292 <= kernel_sums_1_1_fu_228;
        kernel_sums_2_1_loa_reg_3287 <= kernel_sums_2_1_fu_224;
        kernel_sums_3_1_loa_reg_3282 <= kernel_sums_3_1_fu_220;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3076 == 1'd1))) begin
        i_reg_3097 <= i_fu_1767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd1))) begin
        icmp_ln258_reg_3884 <= icmp_ln258_fu_2822_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln265_reg_3888 <= icmp_ln265_fu_2857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4))) begin
        j_1_reg_3137 <= j_1_fu_1819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
        j_reg_3195 <= j_fu_1847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
        kernel_sums_0_1_fu_232 <= kernel_sums_0_4_reg_1612;
        kernel_sums_1_1_fu_228 <= kernel_sums_1_4_reg_1633;
        kernel_sums_2_1_fu_224 <= kernel_sums_2_4_reg_1654;
        kernel_sums_3_1_fu_220 <= kernel_sums_3_4_reg_1675;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_sums_0_3_reg_3792 <= kernel_sums_0_3_fu_2556_p6;
        kernel_sums_1_3_reg_3786 <= kernel_sums_1_3_fu_2542_p6;
        kernel_sums_2_3_reg_3780 <= kernel_sums_2_3_fu_2528_p6;
        kernel_sums_3_3_reg_3774 <= kernel_sums_3_3_fu_2514_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        l_reg_3354 <= l_fu_2083_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln194_fu_1983_p2 == 1'd0))) begin
        local_col_index_reg_3325 <= local_col_index_fu_2037_p2;
        local_row_indices_0_reg_3310 <= local_row_indices_0_fu_2015_p3;
        local_row_indices_1_reg_3315 <= local_row_indices_1_fu_2021_p3;
        local_row_indices_2_reg_3320 <= local_row_indices_2_fu_2027_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m_reg_3362 <= m_fu_2099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        maxes_0_0_reg_1257 <= maxes_0_3_reg_1486;
        maxes_1_0_reg_1245 <= maxes_1_3_reg_1475;
        maxes_2_0_reg_1233 <= maxes_2_3_reg_1464;
        maxes_3_0_reg_1221 <= maxes_3_3_reg_1453;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        partial_sums_0_load_1_reg_3664 <= partial_sums_0_q1;
        partial_sums_1_load_1_reg_3694 <= partial_sums_1_q1;
        partial_sums_2_load_1_reg_3724 <= partial_sums_2_q1;
        tmp_10_reg_3659 <= tmp_10_fu_2186_p5;
        tmp_11_reg_3669 <= tmp_11_fu_2210_p5;
        tmp_12_reg_3674 <= tmp_12_fu_2234_p5;
        tmp_13_reg_3679 <= tmp_13_fu_2258_p5;
        tmp_14_reg_3684 <= tmp_14_fu_2270_p6;
        tmp_15_reg_3689 <= tmp_15_fu_2296_p5;
        tmp_16_reg_3699 <= tmp_16_fu_2320_p5;
        tmp_17_reg_3704 <= tmp_17_fu_2344_p5;
        tmp_18_reg_3709 <= tmp_18_fu_2368_p5;
        tmp_19_reg_3714 <= tmp_19_fu_2380_p6;
        tmp_20_reg_3719 <= tmp_20_fu_2406_p5;
        tmp_21_reg_3729 <= tmp_21_fu_2430_p5;
        tmp_22_reg_3734 <= tmp_22_fu_2454_p5;
        tmp_7_reg_3654 <= tmp_7_fu_2160_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd0))) begin
        read_odd_load_reg_3076 <= read_odd;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sext_ln228_reg_3424 <= sext_ln228_fu_2156_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_0_1_addr_reg_3172 <= sext_ln156_fu_1825_p1;
        stripes_1_1_addr_reg_3177 <= sext_ln156_fu_1825_p1;
        stripes_2_1_addr_reg_3182 <= sext_ln156_fu_1825_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_0_3_addr_reg_3230 <= sext_ln169_fu_1853_p1;
        stripes_1_3_addr_reg_3235 <= sext_ln169_fu_1853_p1;
        stripes_2_3_addr_reg_3240 <= sext_ln169_fu_1853_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_1_fu_2068_p2 == 1'd1) & (icmp_ln215_fu_2062_p2 == 1'd1))) begin
        zext_ln218_reg_3346[15 : 0] <= zext_ln218_fu_2074_p1[15 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_0_V_blk_n = input_lower_0_V_empty_n;
    end else begin
        input_lower_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_0_V_read = 1'b1;
    end else begin
        input_lower_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1280 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | ((i1_0_reg_1292 == 2'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_1_V_blk_n = input_lower_1_V_empty_n;
    end else begin
        input_lower_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i_0_reg_1280 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i1_0_reg_1292 == 2'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_1_V_read = 1'b1;
    end else begin
        input_lower_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | (~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_2_V_blk_n = input_lower_2_V_empty_n;
    end else begin
        input_lower_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (ap_predicate_op148_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (ap_predicate_op194_read_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        input_lower_2_V_read = 1'b1;
    end else begin
        input_lower_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd0)) | ((i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd0)))) begin
        input_upper_0_V_blk_n = input_upper_0_V_empty_n;
    end else begin
        input_upper_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op126_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op172_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_upper_0_V_read = 1'b1;
    end else begin
        input_upper_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((i_0_reg_1280 == 2'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd0)) | ((i1_0_reg_1292 == 2'd1) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd0)))) begin
        input_upper_1_V_blk_n = input_upper_1_V_empty_n;
    end else begin
        input_upper_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op124_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op170_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_upper_1_V_read = 1'b1;
    end else begin
        input_upper_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd0)) | (~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd0)))) begin
        input_upper_2_V_blk_n = input_upper_2_V_empty_n;
    end else begin
        input_upper_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op128_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (ap_predicate_op174_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        input_upper_2_V_read = 1'b1;
    end else begin
        input_upper_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        kernels_0_0_ce0 = 1'b1;
    end else begin
        kernels_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        kernels_0_1_ce0 = 1'b1;
    end else begin
        kernels_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        kernels_0_2_ce0 = 1'b1;
    end else begin
        kernels_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_10_0_ce0 = 1'b1;
    end else begin
        kernels_10_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_10_1_ce0 = 1'b1;
    end else begin
        kernels_10_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_10_2_ce0 = 1'b1;
    end else begin
        kernels_10_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_11_0_ce0 = 1'b1;
    end else begin
        kernels_11_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_11_1_ce0 = 1'b1;
    end else begin
        kernels_11_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_11_2_ce0 = 1'b1;
    end else begin
        kernels_11_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_1_0_ce0 = 1'b1;
    end else begin
        kernels_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_1_1_ce0 = 1'b1;
    end else begin
        kernels_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_1_2_ce0 = 1'b1;
    end else begin
        kernels_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_2_0_ce0 = 1'b1;
    end else begin
        kernels_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_2_1_ce0 = 1'b1;
    end else begin
        kernels_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_2_2_ce0 = 1'b1;
    end else begin
        kernels_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_3_0_ce0 = 1'b1;
    end else begin
        kernels_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_3_1_ce0 = 1'b1;
    end else begin
        kernels_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_3_2_ce0 = 1'b1;
    end else begin
        kernels_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_4_0_ce0 = 1'b1;
    end else begin
        kernels_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_4_1_ce0 = 1'b1;
    end else begin
        kernels_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_4_2_ce0 = 1'b1;
    end else begin
        kernels_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_5_0_ce0 = 1'b1;
    end else begin
        kernels_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_5_1_ce0 = 1'b1;
    end else begin
        kernels_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_5_2_ce0 = 1'b1;
    end else begin
        kernels_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_6_0_ce0 = 1'b1;
    end else begin
        kernels_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_6_1_ce0 = 1'b1;
    end else begin
        kernels_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_6_2_ce0 = 1'b1;
    end else begin
        kernels_6_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_7_0_ce0 = 1'b1;
    end else begin
        kernels_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_7_1_ce0 = 1'b1;
    end else begin
        kernels_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_7_2_ce0 = 1'b1;
    end else begin
        kernels_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_8_0_ce0 = 1'b1;
    end else begin
        kernels_8_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_8_1_ce0 = 1'b1;
    end else begin
        kernels_8_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_8_2_ce0 = 1'b1;
    end else begin
        kernels_8_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_9_0_ce0 = 1'b1;
    end else begin
        kernels_9_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_9_1_ce0 = 1'b1;
    end else begin
        kernels_9_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernels_9_2_ce0 = 1'b1;
    end else begin
        kernels_9_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln254_fu_2784_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
        output_0_V_blk_n = output_0_V_full_n;
    end else begin
        output_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (ap_predicate_op700_write_state29 == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        output_0_V_write = 1'b1;
    end else begin
        output_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln254_fu_2784_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
        output_1_V_blk_n = output_1_V_full_n;
    end else begin
        output_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (ap_predicate_op698_write_state29 == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        output_1_V_write = 1'b1;
    end else begin
        output_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln254_fu_2784_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
        output_2_V_blk_n = output_2_V_full_n;
    end else begin
        output_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (ap_predicate_op696_write_state29 == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        output_2_V_write = 1'b1;
    end else begin
        output_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln254_fu_2784_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
        output_3_V_blk_n = output_3_V_full_n;
    end else begin
        output_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (ap_predicate_op702_write_state29 == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        output_3_V_write = 1'b1;
    end else begin
        output_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26))) begin
        partial_sums_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_address0 = zext_ln215_fu_2055_p1;
    end else begin
        partial_sums_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24))) begin
        partial_sums_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_0_address1 = 64'd1;
    end else begin
        partial_sums_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_ce0 = 1'b1;
    end else begin
        partial_sums_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_ce1 = 1'b1;
    end else begin
        partial_sums_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d0 = add_ln228_4_reg_3744;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d0 = grp_fu_2888_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_0_d0 = 32'd0;
    end else begin
        partial_sums_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_0_d1 = add_ln228_3_reg_3739;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_0_d1 = grp_fu_2880_p3;
    end else begin
        partial_sums_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln215_reg_1508 == 2'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_0_we0 = 1'b1;
    end else begin
        partial_sums_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_0_we1 = 1'b1;
    end else begin
        partial_sums_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26))) begin
        partial_sums_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_address0 = zext_ln215_fu_2055_p1;
    end else begin
        partial_sums_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24))) begin
        partial_sums_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_1_address1 = 64'd1;
    end else begin
        partial_sums_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_ce0 = 1'b1;
    end else begin
        partial_sums_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_ce1 = 1'b1;
    end else begin
        partial_sums_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d0 = add_ln228_8_reg_3754;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d0 = grp_fu_2921_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_1_d0 = 32'd0;
    end else begin
        partial_sums_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_1_d1 = add_ln228_7_reg_3749;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_1_d1 = grp_fu_2912_p3;
    end else begin
        partial_sums_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((phi_ln215_reg_1508 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_1_we0 = 1'b1;
    end else begin
        partial_sums_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_1_we1 = 1'b1;
    end else begin
        partial_sums_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26))) begin
        partial_sums_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_address0 = zext_ln215_fu_2055_p1;
    end else begin
        partial_sums_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24))) begin
        partial_sums_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        partial_sums_2_address1 = 64'd1;
    end else begin
        partial_sums_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_ce0 = 1'b1;
    end else begin
        partial_sums_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_ce1 = 1'b1;
    end else begin
        partial_sums_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d0 = add_ln228_12_reg_3764;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d0 = grp_fu_2954_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        partial_sums_2_d0 = 32'd0;
    end else begin
        partial_sums_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        partial_sums_2_d1 = add_ln228_11_reg_3759;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        partial_sums_2_d1 = grp_fu_2945_p3;
    end else begin
        partial_sums_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (~(phi_ln215_reg_1508 == 2'd0) & ~(phi_ln215_reg_1508 == 2'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        partial_sums_2_we0 = 1'b1;
    end else begin
        partial_sums_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        partial_sums_2_we1 = 1'b1;
    end else begin
        partial_sums_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_0_ce0 = 1'b1;
    end else begin
        stripes_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_0_0_ce1 = 1'b1;
    end else begin
        stripes_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_0_0_we1 = 1'b1;
    end else begin
        stripes_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_1_ce0 = 1'b1;
    end else begin
        stripes_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_0_1_ce1 = 1'b1;
    end else begin
        stripes_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        stripes_0_1_we1 = 1'b1;
    end else begin
        stripes_0_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_2_ce0 = 1'b1;
    end else begin
        stripes_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_0_2_ce1 = 1'b1;
    end else begin
        stripes_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_0_2_we1 = 1'b1;
    end else begin
        stripes_0_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_0_3_ce0 = 1'b1;
    end else begin
        stripes_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_0_3_ce1 = 1'b1;
    end else begin
        stripes_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        stripes_0_3_we1 = 1'b1;
    end else begin
        stripes_0_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_0_ce0 = 1'b1;
    end else begin
        stripes_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_1_0_ce1 = 1'b1;
    end else begin
        stripes_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i_0_reg_1280 == 2'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_1_0_we1 = 1'b1;
    end else begin
        stripes_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_1_ce0 = 1'b1;
    end else begin
        stripes_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_1_1_ce1 = 1'b1;
    end else begin
        stripes_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((i_0_reg_1280 == 2'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        stripes_1_1_we1 = 1'b1;
    end else begin
        stripes_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_2_ce0 = 1'b1;
    end else begin
        stripes_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_1_2_ce1 = 1'b1;
    end else begin
        stripes_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (i1_0_reg_1292 == 2'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_1_2_we1 = 1'b1;
    end else begin
        stripes_1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_1_3_ce0 = 1'b1;
    end else begin
        stripes_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_1_3_ce1 = 1'b1;
    end else begin
        stripes_1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((i1_0_reg_1292 == 2'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        stripes_1_3_we1 = 1'b1;
    end else begin
        stripes_1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_0_ce0 = 1'b1;
    end else begin
        stripes_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_2_0_ce1 = 1'b1;
    end else begin
        stripes_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & ~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        stripes_2_0_we1 = 1'b1;
    end else begin
        stripes_2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_1_ce0 = 1'b1;
    end else begin
        stripes_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        stripes_2_1_ce1 = 1'b1;
    end else begin
        stripes_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        stripes_2_1_we1 = 1'b1;
    end else begin
        stripes_2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_2_ce0 = 1'b1;
    end else begin
        stripes_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_2_2_ce1 = 1'b1;
    end else begin
        stripes_2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & ~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        stripes_2_2_we1 = 1'b1;
    end else begin
        stripes_2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        stripes_2_3_ce0 = 1'b1;
    end else begin
        stripes_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_2_3_ce1 = 1'b1;
    end else begin
        stripes_2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        stripes_2_3_we1 = 1'b1;
    end else begin
        stripes_2_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln147_fu_1729_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((icmp_ln164_fu_1761_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd1)) | ((icmp_ln151_fu_1745_p2 == 1'd1) & (read_odd_load_reg_3076 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b1 == ap_CS_fsm_state3) & (read_odd_load_reg_3076 == 1'd1) & (icmp_ln164_fu_1761_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln192_fu_1965_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln194_fu_1983_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_1_fu_2068_p2 == 1'd1) & (icmp_ln215_fu_2062_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_fu_2062_p2 == 1'd1) & (icmp_ln215_1_fu_2068_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln218_fu_2077_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln220_fu_2093_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln234_fu_2570_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln239_fu_2576_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln239_1_fu_2606_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln239_2_fu_2636_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln239_3_fu_2666_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if ((~(((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state29) & (icmp_ln252_fu_2772_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_fu_1869_p2 = (phi_ln192_reg_1442 + 2'd1);

assign add_ln215_1_fu_2049_p2 = (phi_ln215_1_reg_1520 + 2'd1);

assign add_ln215_fu_2043_p2 = (phi_ln215_reg_1508 + 2'd1);

assign add_ln228_fu_2112_p2 = (zext_ln218_reg_3346 + zext_ln220_fu_2089_p1);

assign add_ln234_fu_2508_p2 = (phi_ln234_reg_1601 + 2'd1);

assign add_ln239_1_fu_2612_p2 = (j8_0_1_reg_1643 + 2'd1);

assign add_ln239_2_fu_2642_p2 = (j8_0_2_reg_1664 + 2'd1);

assign add_ln239_3_fu_2672_p2 = (j8_0_3_reg_1684 + 2'd1);

assign add_ln239_fu_2582_p2 = (j8_0_0_reg_1622 + 2'd1);

assign add_ln257_fu_2810_p2 = (read_col_index + 16'd2);

assign add_ln264_fu_2845_p2 = (compute_col_index + 16'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state29 = (((ap_predicate_op702_write_state29 == 1'b1) & (output_3_V_full_n == 1'b0)) | ((ap_predicate_op700_write_state29 == 1'b1) & (output_0_V_full_n == 1'b0)) | ((ap_predicate_op698_write_state29 == 1'b1) & (output_1_V_full_n == 1'b0)) | ((ap_predicate_op696_write_state29 == 1'b1) & (output_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = (((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5 = (((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = (((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state8 = (((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_2116 = (~(((ap_predicate_op128_read_state4 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op126_read_state4 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op124_read_state4 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln154_fu_1813_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_2120 = (~(((ap_predicate_op174_read_state7 == 1'b1) & (input_upper_2_V_empty_n == 1'b0)) | ((ap_predicate_op172_read_state7 == 1'b1) & (input_upper_0_V_empty_n == 1'b0)) | ((ap_predicate_op170_read_state7 == 1'b1) & (input_upper_1_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln167_fu_1841_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_757 = (~(((ap_predicate_op148_read_state5 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i_0_reg_1280 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state5));
end

always @ (*) begin
    ap_condition_810 = (~(((ap_predicate_op194_read_state8 == 1'b1) & (input_lower_2_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd1) & (input_lower_1_V_empty_n == 1'b0)) | ((i1_0_reg_1292 == 2'd0) & (input_lower_0_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state8));
end

always @ (*) begin
    ap_predicate_op124_read_state4 = ((i_0_reg_1280 == 2'd1) & (icmp_ln154_fu_1813_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op126_read_state4 = ((i_0_reg_1280 == 2'd0) & (icmp_ln154_fu_1813_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_read_state4 = (~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0) & (icmp_ln154_fu_1813_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_read_state5 = (~(i_0_reg_1280 == 2'd1) & ~(i_0_reg_1280 == 2'd0));
end

always @ (*) begin
    ap_predicate_op170_read_state7 = ((i1_0_reg_1292 == 2'd1) & (icmp_ln167_fu_1841_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_read_state7 = ((i1_0_reg_1292 == 2'd0) & (icmp_ln167_fu_1841_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_read_state7 = (~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0) & (icmp_ln167_fu_1841_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op194_read_state8 = (~(i1_0_reg_1292 == 2'd1) & ~(i1_0_reg_1292 == 2'd0));
end

always @ (*) begin
    ap_predicate_op696_write_state29 = ((trunc_ln254_fu_2784_p1 == 2'd2) & (icmp_ln252_fu_2772_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op698_write_state29 = ((trunc_ln254_fu_2784_p1 == 2'd1) & (icmp_ln252_fu_2772_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op700_write_state29 = ((trunc_ln254_fu_2784_p1 == 2'd0) & (icmp_ln252_fu_2772_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op702_write_state29 = ((trunc_ln254_fu_2784_p1 == 2'd3) & (icmp_ln252_fu_2772_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign b_fu_1735_p2 = (b_0_reg_1269 + 3'd1);

assign grp_fu_2880_p0 = sext_ln228_reg_3424;

assign grp_fu_2880_p1 = zext_ln228_2_fu_2466_p1;

assign grp_fu_2888_p1 = zext_ln228_2_fu_2466_p1;

assign grp_fu_2896_p1 = zext_ln228_2_fu_2466_p1;

assign grp_fu_2904_p1 = zext_ln228_2_fu_2466_p1;

assign grp_fu_2912_p1 = zext_ln228_3_fu_2481_p1;

assign grp_fu_2921_p1 = zext_ln228_3_fu_2481_p1;

assign grp_fu_2929_p1 = zext_ln228_3_fu_2481_p1;

assign grp_fu_2937_p1 = zext_ln228_3_fu_2481_p1;

assign grp_fu_2945_p1 = zext_ln228_4_fu_2496_p1;

assign grp_fu_2954_p1 = zext_ln228_4_fu_2496_p1;

assign grp_fu_2962_p1 = zext_ln228_4_fu_2496_p1;

assign grp_fu_2970_p1 = zext_ln228_4_fu_2496_p1;

assign i_1_fu_1751_p2 = (i_0_reg_1280 + 2'd1);

assign i_2_fu_2778_p2 = (i10_0_reg_1695 + 3'd1);

assign i_3_fu_1989_p2 = (i4_0_reg_1497 + 3'd1);

assign i_fu_1767_p2 = (i1_0_reg_1292 + 2'd1);

assign icmp_ln147_fu_1729_p2 = ((b_0_reg_1269 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1745_p2 = ((i_0_reg_1280 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_1813_p2 = ((j_0_reg_1304 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_1761_p2 = ((i1_0_reg_1292 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_1841_p2 = ((j3_0_reg_1363 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln192_1_fu_1875_p2 = ((phi_ln192_reg_1442 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln192_2_fu_1889_p2 = ((phi_ln192_reg_1442 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln192_3_fu_1903_p2 = ((phi_ln192_reg_1442 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_1965_p2 = ((phi_ln192_reg_1442 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_1983_p2 = ((i4_0_reg_1497 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln215_1_fu_2068_p2 = ((phi_ln215_reg_1508 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_2062_p2 = ((phi_ln215_1_reg_1520 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_2077_p2 = ((l_0_reg_1531 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln220_fu_2093_p2 = ((m_0_reg_1543 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_2570_p2 = ((phi_ln234_reg_1601 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln239_1_fu_2606_p2 = ((j8_0_1_reg_1643 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln239_2_fu_2636_p2 = ((j8_0_2_reg_1664 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln239_3_fu_2666_p2 = ((j8_0_3_reg_1684 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln239_fu_2576_p2 = ((j8_0_0_reg_1622 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln248_1_fu_2710_p2 = (($signed(kernel_sums_1_4_reg_1633) > $signed(maxes_1_3_reg_1475)) ? 1'b1 : 1'b0);

assign icmp_ln248_2_fu_2724_p2 = (($signed(kernel_sums_2_4_reg_1654) > $signed(maxes_2_3_reg_1464)) ? 1'b1 : 1'b0);

assign icmp_ln248_3_fu_2738_p2 = (($signed(kernel_sums_3_4_reg_1675) > $signed(maxes_3_3_reg_1453)) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_2696_p2 = (($signed(kernel_sums_0_4_reg_1612) > $signed(maxes_0_3_reg_1486)) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_2772_p2 = ((i10_0_reg_1695 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_2822_p2 = ((add_ln257_fu_2810_p2 == 16'd513) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_2857_p2 = ((add_ln264_fu_2845_p2 == 16'd512) ? 1'b1 : 1'b0);

assign j_1_fu_1819_p2 = (j_0_reg_1304 + 2'd1);

assign j_fu_1847_p2 = (j3_0_reg_1363 + 2'd1);

assign kernel_sums_0_fu_2600_p2 = (tmp_9_fu_2588_p5 + kernel_sums_0_4_reg_1612);

assign kernel_sums_1_fu_2630_p2 = (tmp_23_fu_2618_p5 + kernel_sums_1_4_reg_1633);

assign kernel_sums_2_fu_2660_p2 = (tmp_24_fu_2648_p5 + kernel_sums_2_4_reg_1654);

assign kernel_sums_3_fu_2690_p2 = (tmp_25_fu_2678_p5 + kernel_sums_3_4_reg_1675);

assign kernels_0_0_address0 = zext_ln228_fu_2105_p1;

assign kernels_0_1_address0 = zext_ln228_fu_2105_p1;

assign kernels_0_2_address0 = zext_ln228_fu_2105_p1;

assign kernels_10_0_address0 = zext_ln228_reg_3367;

assign kernels_10_1_address0 = zext_ln228_reg_3367;

assign kernels_10_2_address0 = zext_ln228_reg_3367;

assign kernels_11_0_address0 = zext_ln228_reg_3367;

assign kernels_11_1_address0 = zext_ln228_reg_3367;

assign kernels_11_2_address0 = zext_ln228_reg_3367;

assign kernels_1_0_address0 = zext_ln228_reg_3367;

assign kernels_1_1_address0 = zext_ln228_reg_3367;

assign kernels_1_2_address0 = zext_ln228_reg_3367;

assign kernels_2_0_address0 = zext_ln228_reg_3367;

assign kernels_2_1_address0 = zext_ln228_reg_3367;

assign kernels_2_2_address0 = zext_ln228_reg_3367;

assign kernels_3_0_address0 = zext_ln228_reg_3367;

assign kernels_3_1_address0 = zext_ln228_reg_3367;

assign kernels_3_2_address0 = zext_ln228_reg_3367;

assign kernels_4_0_address0 = zext_ln228_reg_3367;

assign kernels_4_1_address0 = zext_ln228_reg_3367;

assign kernels_4_2_address0 = zext_ln228_reg_3367;

assign kernels_5_0_address0 = zext_ln228_reg_3367;

assign kernels_5_1_address0 = zext_ln228_reg_3367;

assign kernels_5_2_address0 = zext_ln228_reg_3367;

assign kernels_6_0_address0 = zext_ln228_reg_3367;

assign kernels_6_1_address0 = zext_ln228_reg_3367;

assign kernels_6_2_address0 = zext_ln228_reg_3367;

assign kernels_7_0_address0 = zext_ln228_reg_3367;

assign kernels_7_1_address0 = zext_ln228_reg_3367;

assign kernels_7_2_address0 = zext_ln228_reg_3367;

assign kernels_8_0_address0 = zext_ln228_reg_3367;

assign kernels_8_1_address0 = zext_ln228_reg_3367;

assign kernels_8_2_address0 = zext_ln228_reg_3367;

assign kernels_9_0_address0 = zext_ln228_reg_3367;

assign kernels_9_1_address0 = zext_ln228_reg_3367;

assign kernels_9_2_address0 = zext_ln228_reg_3367;

assign l_fu_2083_p2 = (l_0_reg_1531 + 2'd1);

assign local_col_index_1_fu_1863_p2 = ($signed(local_col_index2_0_reg_1353) + $signed(17'd1));

assign local_col_index_2_fu_1835_p2 = ($signed(local_col_index_0_reg_1315) + $signed(17'd1));

assign local_col_index_fu_2037_p2 = (compute_col_index + zext_ln213_fu_2033_p1);

assign local_row_indices_0_fu_2015_p3 = ((top_offset_fu_2005_p2[0:0] === 1'b1) ? select_ln177_1_reg_3117 : select_ln177_reg_3112);

assign local_row_indices_1_fu_2021_p3 = ((top_offset_fu_2005_p2[0:0] === 1'b1) ? select_ln177_2_reg_3123 : select_ln177_1_reg_3117);

assign local_row_indices_2_fu_2027_p3 = ((top_offset_fu_2005_p2[0:0] === 1'b1) ? select_ln177_3_reg_3129 : select_ln177_2_reg_3123);

assign m_fu_2099_p2 = (m_0_reg_1543 + 2'd1);

assign maxes_0_fu_2702_p3 = ((icmp_ln248_fu_2696_p2[0:0] === 1'b1) ? kernel_sums_0_4_reg_1612 : maxes_0_3_reg_1486);

assign maxes_1_fu_2716_p3 = ((icmp_ln248_1_fu_2710_p2[0:0] === 1'b1) ? kernel_sums_1_4_reg_1633 : maxes_1_3_reg_1475);

assign maxes_2_fu_2730_p3 = ((icmp_ln248_2_fu_2724_p2[0:0] === 1'b1) ? kernel_sums_2_4_reg_1654 : maxes_2_3_reg_1464);

assign maxes_3_fu_2744_p3 = ((icmp_ln248_3_fu_2738_p2[0:0] === 1'b1) ? kernel_sums_3_4_reg_1675 : maxes_3_3_reg_1453);

assign output_0_V_din = tmp_69_fu_2802_p1;

assign output_1_V_din = tmp_69_fu_2802_p1;

assign output_2_V_din = tmp_69_fu_2802_p1;

assign output_3_V_din = tmp_69_fu_2802_p1;

assign read_odd_load_load_fu_1741_p1 = read_odd;

assign select_ln177_1_fu_1789_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd1 : 2'd3);

assign select_ln177_2_fu_1797_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd2 : 2'd0);

assign select_ln177_3_fu_1805_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd3 : 2'd1);

assign select_ln177_fu_1781_p3 = ((compute_odd[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln192_1_fu_1895_p3 = ((icmp_ln192_2_fu_1889_p2[0:0] === 1'b1) ? maxes_3_14_reg_1402 : select_ln192_fu_1881_p3);

assign select_ln192_2_fu_1909_p3 = ((icmp_ln192_3_fu_1903_p2[0:0] === 1'b1) ? maxes_3_14_reg_1402 : select_ln192_1_fu_1895_p3);

assign select_ln192_3_fu_1917_p3 = ((icmp_ln192_1_fu_1875_p2[0:0] === 1'b1) ? 32'd0 : maxes_2_13_reg_1412);

assign select_ln192_4_fu_1925_p3 = ((icmp_ln192_2_fu_1889_p2[0:0] === 1'b1) ? maxes_2_13_reg_1412 : select_ln192_3_fu_1917_p3);

assign select_ln192_5_fu_1933_p3 = ((icmp_ln192_3_fu_1903_p2[0:0] === 1'b1) ? maxes_2_13_reg_1412 : select_ln192_4_fu_1925_p3);

assign select_ln192_6_fu_1941_p3 = ((icmp_ln192_2_fu_1889_p2[0:0] === 1'b1) ? 32'd0 : maxes_1_12_reg_1422);

assign select_ln192_7_fu_1949_p3 = ((icmp_ln192_3_fu_1903_p2[0:0] === 1'b1) ? maxes_1_12_reg_1422 : select_ln192_6_fu_1941_p3);

assign select_ln192_8_fu_1957_p3 = ((icmp_ln192_3_fu_1903_p2[0:0] === 1'b1) ? 32'd0 : maxes_0_11_reg_1432);

assign select_ln192_fu_1881_p3 = ((icmp_ln192_1_fu_1875_p2[0:0] === 1'b1) ? maxes_3_14_reg_1402 : 32'd0);

assign sext_ln153_fu_1757_p1 = $signed(read_col_index);

assign sext_ln156_fu_1825_p1 = local_col_index_0_reg_1315;

assign sext_ln166_fu_1773_p1 = $signed(read_col_index);

assign sext_ln169_fu_1853_p1 = local_col_index2_0_reg_1353;

assign sext_ln228_fu_2156_p1 = $signed(tmp_8_fu_2144_p5);

assign start_out = real_start;

assign stripes_0_0_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_0_0_address1 = sext_ln156_fu_1825_p1;

assign stripes_0_1_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_0_2_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_0_2_address1 = sext_ln169_fu_1853_p1;

assign stripes_0_3_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_1_0_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_1_0_address1 = sext_ln156_fu_1825_p1;

assign stripes_1_1_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_1_2_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_1_2_address1 = sext_ln169_fu_1853_p1;

assign stripes_1_3_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_2_0_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_2_0_address1 = sext_ln156_fu_1825_p1;

assign stripes_2_1_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_2_2_address0 = zext_ln228_1_fu_2117_p1;

assign stripes_2_2_address1 = sext_ln169_fu_1853_p1;

assign stripes_2_3_address0 = zext_ln228_1_fu_2117_p1;

assign tmp_10_fu_2186_p1 = $signed(kernels_1_0_q0);

assign tmp_10_fu_2186_p2 = $signed(kernels_1_1_q0);

assign tmp_10_fu_2186_p3 = $signed(kernels_1_2_q0);

assign tmp_11_fu_2210_p1 = $signed(kernels_2_0_q0);

assign tmp_11_fu_2210_p2 = $signed(kernels_2_1_q0);

assign tmp_11_fu_2210_p3 = $signed(kernels_2_2_q0);

assign tmp_12_fu_2234_p1 = $signed(kernels_3_0_q0);

assign tmp_12_fu_2234_p2 = $signed(kernels_3_1_q0);

assign tmp_12_fu_2234_p3 = $signed(kernels_3_2_q0);

assign tmp_13_fu_2258_p1 = kernels_4_0_q0;

assign tmp_13_fu_2258_p2 = kernels_4_1_q0;

assign tmp_13_fu_2258_p3 = $signed(kernels_4_2_q0);

assign tmp_15_fu_2296_p1 = $signed(kernels_5_0_q0);

assign tmp_15_fu_2296_p2 = $signed(kernels_5_1_q0);

assign tmp_15_fu_2296_p3 = $signed(kernels_5_2_q0);

assign tmp_16_fu_2320_p1 = $signed(kernels_6_0_q0);

assign tmp_16_fu_2320_p2 = $signed(kernels_6_1_q0);

assign tmp_16_fu_2320_p3 = $signed(kernels_6_2_q0);

assign tmp_17_fu_2344_p1 = $signed(kernels_7_0_q0);

assign tmp_17_fu_2344_p2 = $signed(kernels_7_1_q0);

assign tmp_17_fu_2344_p3 = $signed(kernels_7_2_q0);

assign tmp_18_fu_2368_p1 = $signed(kernels_8_0_q0);

assign tmp_18_fu_2368_p2 = $signed(kernels_8_1_q0);

assign tmp_18_fu_2368_p3 = $signed(kernels_8_2_q0);

assign tmp_20_fu_2406_p1 = kernels_9_0_q0;

assign tmp_20_fu_2406_p2 = $signed(kernels_9_1_q0);

assign tmp_20_fu_2406_p3 = $signed(kernels_9_2_q0);

assign tmp_21_fu_2430_p1 = $signed(kernels_10_0_q0);

assign tmp_21_fu_2430_p2 = $signed(kernels_10_1_q0);

assign tmp_21_fu_2430_p3 = $signed(kernels_10_2_q0);

assign tmp_22_fu_2454_p1 = $signed(kernels_11_0_q0);

assign tmp_22_fu_2454_p2 = $signed(kernels_11_1_q0);

assign tmp_22_fu_2454_p3 = $signed(kernels_11_2_q0);

assign tmp_68_fu_1995_p4 = {{i4_0_reg_1497[2:1]}};

assign tmp_69_fu_2802_p1 = tmp_6_fu_2788_p6[15:0];

assign tmp_6_fu_2788_p5 = i10_0_reg_1695[1:0];

assign tmp_8_fu_2144_p1 = $signed(kernels_0_0_q0);

assign tmp_8_fu_2144_p2 = kernels_0_1_q0;

assign tmp_8_fu_2144_p3 = $signed(kernels_0_2_q0);

assign top_offset_fu_2005_p2 = ((tmp_68_fu_1995_p4 != 2'd0) ? 1'b1 : 1'b0);

assign trunc_ln206_fu_2011_p1 = i4_0_reg_1497[0:0];

assign trunc_ln254_fu_2784_p1 = i10_0_reg_1695[1:0];

assign xor_ln261_fu_2828_p2 = (read_odd_load_reg_3076 ^ 1'd1);

assign xor_ln268_fu_2863_p2 = (compute_odd_load_reg_3107 ^ 1'd1);

assign zext_ln213_fu_2033_p1 = trunc_ln206_fu_2011_p1;

assign zext_ln215_fu_2055_p1 = phi_ln215_1_reg_1520;

assign zext_ln218_fu_2074_p1 = local_col_index_reg_3325;

assign zext_ln220_fu_2089_p1 = m_0_reg_1543;

assign zext_ln228_1_fu_2117_p1 = add_ln228_reg_3404;

assign zext_ln228_2_fu_2466_p1 = tmp_7_reg_3654;

assign zext_ln228_3_fu_2481_p1 = tmp_14_reg_3684;

assign zext_ln228_4_fu_2496_p1 = tmp_19_reg_3714;

assign zext_ln228_fu_2105_p1 = m_0_reg_1543;

always @ (posedge ap_clk) begin
    select_ln177_reg_3112[0] <= 1'b0;
    select_ln177_1_reg_3117[0] <= 1'b1;
    select_ln177_2_reg_3123[0] <= 1'b0;
    select_ln177_3_reg_3129[0] <= 1'b1;
    zext_ln218_reg_3346[16] <= 1'b0;
    zext_ln228_reg_3367[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //kernel
