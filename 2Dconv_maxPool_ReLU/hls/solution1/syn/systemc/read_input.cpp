// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_input.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_input::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_input::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> read_input::ap_ST_fsm_state1 = "1";
const sc_lv<8> read_input::ap_ST_fsm_state2 = "10";
const sc_lv<8> read_input::ap_ST_fsm_state3 = "100";
const sc_lv<8> read_input::ap_ST_fsm_state4 = "1000";
const sc_lv<8> read_input::ap_ST_fsm_state5 = "10000";
const sc_lv<8> read_input::ap_ST_fsm_state6 = "100000";
const sc_lv<8> read_input::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> read_input::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> read_input::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> read_input::ap_const_lv32_1 = "1";
const sc_lv<32> read_input::ap_const_lv32_2 = "10";
const sc_lv<32> read_input::ap_const_lv32_3 = "11";
const sc_lv<32> read_input::ap_const_lv32_4 = "100";
const sc_lv<32> read_input::ap_const_lv32_5 = "101";
const sc_lv<32> read_input::ap_const_lv32_6 = "110";
const sc_lv<32> read_input::ap_const_lv32_7 = "111";
const sc_lv<32> read_input::ap_const_lv32_8 = "1000";
const sc_lv<32> read_input::ap_const_lv32_F = "1111";
const sc_lv<32> read_input::ap_const_lv32_10 = "10000";
const sc_lv<32> read_input::ap_const_lv32_17 = "10111";
const sc_lv<32> read_input::ap_const_lv32_18 = "11000";
const sc_lv<32> read_input::ap_const_lv32_1F = "11111";
const sc_lv<32> read_input::ap_const_lv32_20 = "100000";
const sc_lv<32> read_input::ap_const_lv32_27 = "100111";
const sc_lv<32> read_input::ap_const_lv32_28 = "101000";
const sc_lv<32> read_input::ap_const_lv32_2F = "101111";
const sc_lv<32> read_input::ap_const_lv32_30 = "110000";
const sc_lv<32> read_input::ap_const_lv32_37 = "110111";
const sc_lv<32> read_input::ap_const_lv32_38 = "111000";
const sc_lv<32> read_input::ap_const_lv32_3F = "111111";
const bool read_input::ap_const_boolean_1 = true;

read_input::read_input(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_in_0_V_data_V_U = new regslice_both<64>("regslice_both_in_0_V_data_V_U");
    regslice_both_in_0_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_0_V_data_V_U->ap_rst(ap_rst);
    regslice_both_in_0_V_data_V_U->data_in(in_0_TDATA);
    regslice_both_in_0_V_data_V_U->vld_in(in_0_TVALID);
    regslice_both_in_0_V_data_V_U->ack_in(regslice_both_in_0_V_data_V_U_ack_in);
    regslice_both_in_0_V_data_V_U->data_out(in_0_TDATA_int);
    regslice_both_in_0_V_data_V_U->vld_out(in_0_TVALID_int);
    regslice_both_in_0_V_data_V_U->ack_out(in_0_TREADY_int);
    regslice_both_in_0_V_data_V_U->apdone_blk(regslice_both_in_0_V_data_V_U_apdone_blk);
    regslice_both_in_1_V_data_V_U = new regslice_both<64>("regslice_both_in_1_V_data_V_U");
    regslice_both_in_1_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_1_V_data_V_U->ap_rst(ap_rst);
    regslice_both_in_1_V_data_V_U->data_in(in_1_TDATA);
    regslice_both_in_1_V_data_V_U->vld_in(in_1_TVALID);
    regslice_both_in_1_V_data_V_U->ack_in(regslice_both_in_1_V_data_V_U_ack_in);
    regslice_both_in_1_V_data_V_U->data_out(in_1_TDATA_int);
    regslice_both_in_1_V_data_V_U->vld_out(in_1_TVALID_int);
    regslice_both_in_1_V_data_V_U->ack_out(in_1_TREADY_int);
    regslice_both_in_1_V_data_V_U->apdone_blk(regslice_both_in_1_V_data_V_U_apdone_blk);
    regslice_both_in_0_V_keep_V_U = new regslice_both<8>("regslice_both_in_0_V_keep_V_U");
    regslice_both_in_0_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_0_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_in_0_V_keep_V_U->data_in(in_0_TKEEP);
    regslice_both_in_0_V_keep_V_U->vld_in(in_0_TVALID);
    regslice_both_in_0_V_keep_V_U->ack_in(regslice_both_in_0_V_keep_V_U_ack_in);
    regslice_both_in_0_V_keep_V_U->data_out(in_0_TKEEP_int);
    regslice_both_in_0_V_keep_V_U->vld_out(regslice_both_in_0_V_keep_V_U_vld_out);
    regslice_both_in_0_V_keep_V_U->ack_out(in_0_TREADY_int);
    regslice_both_in_0_V_keep_V_U->apdone_blk(regslice_both_in_0_V_keep_V_U_apdone_blk);
    regslice_both_in_1_V_keep_V_U = new regslice_both<8>("regslice_both_in_1_V_keep_V_U");
    regslice_both_in_1_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_1_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_in_1_V_keep_V_U->data_in(in_1_TKEEP);
    regslice_both_in_1_V_keep_V_U->vld_in(in_1_TVALID);
    regslice_both_in_1_V_keep_V_U->ack_in(regslice_both_in_1_V_keep_V_U_ack_in);
    regslice_both_in_1_V_keep_V_U->data_out(in_1_TKEEP_int);
    regslice_both_in_1_V_keep_V_U->vld_out(regslice_both_in_1_V_keep_V_U_vld_out);
    regslice_both_in_1_V_keep_V_U->ack_out(in_1_TREADY_int);
    regslice_both_in_1_V_keep_V_U->apdone_blk(regslice_both_in_1_V_keep_V_U_apdone_blk);
    regslice_both_in_0_V_strb_V_U = new regslice_both<8>("regslice_both_in_0_V_strb_V_U");
    regslice_both_in_0_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_0_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_in_0_V_strb_V_U->data_in(in_0_TSTRB);
    regslice_both_in_0_V_strb_V_U->vld_in(in_0_TVALID);
    regslice_both_in_0_V_strb_V_U->ack_in(regslice_both_in_0_V_strb_V_U_ack_in);
    regslice_both_in_0_V_strb_V_U->data_out(in_0_TSTRB_int);
    regslice_both_in_0_V_strb_V_U->vld_out(regslice_both_in_0_V_strb_V_U_vld_out);
    regslice_both_in_0_V_strb_V_U->ack_out(in_0_TREADY_int);
    regslice_both_in_0_V_strb_V_U->apdone_blk(regslice_both_in_0_V_strb_V_U_apdone_blk);
    regslice_both_in_1_V_strb_V_U = new regslice_both<8>("regslice_both_in_1_V_strb_V_U");
    regslice_both_in_1_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_1_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_in_1_V_strb_V_U->data_in(in_1_TSTRB);
    regslice_both_in_1_V_strb_V_U->vld_in(in_1_TVALID);
    regslice_both_in_1_V_strb_V_U->ack_in(regslice_both_in_1_V_strb_V_U_ack_in);
    regslice_both_in_1_V_strb_V_U->data_out(in_1_TSTRB_int);
    regslice_both_in_1_V_strb_V_U->vld_out(regslice_both_in_1_V_strb_V_U_vld_out);
    regslice_both_in_1_V_strb_V_U->ack_out(in_1_TREADY_int);
    regslice_both_in_1_V_strb_V_U->apdone_blk(regslice_both_in_1_V_strb_V_U_apdone_blk);
    regslice_both_in_0_V_last_V_U = new regslice_both<1>("regslice_both_in_0_V_last_V_U");
    regslice_both_in_0_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_0_V_last_V_U->ap_rst(ap_rst);
    regslice_both_in_0_V_last_V_U->data_in(in_0_TLAST);
    regslice_both_in_0_V_last_V_U->vld_in(in_0_TVALID);
    regslice_both_in_0_V_last_V_U->ack_in(regslice_both_in_0_V_last_V_U_ack_in);
    regslice_both_in_0_V_last_V_U->data_out(in_0_TLAST_int);
    regslice_both_in_0_V_last_V_U->vld_out(regslice_both_in_0_V_last_V_U_vld_out);
    regslice_both_in_0_V_last_V_U->ack_out(in_0_TREADY_int);
    regslice_both_in_0_V_last_V_U->apdone_blk(regslice_both_in_0_V_last_V_U_apdone_blk);
    regslice_both_in_1_V_last_V_U = new regslice_both<1>("regslice_both_in_1_V_last_V_U");
    regslice_both_in_1_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_1_V_last_V_U->ap_rst(ap_rst);
    regslice_both_in_1_V_last_V_U->data_in(in_1_TLAST);
    regslice_both_in_1_V_last_V_U->vld_in(in_1_TVALID);
    regslice_both_in_1_V_last_V_U->ack_in(regslice_both_in_1_V_last_V_U_ack_in);
    regslice_both_in_1_V_last_V_U->data_out(in_1_TLAST_int);
    regslice_both_in_1_V_last_V_U->vld_out(regslice_both_in_1_V_last_V_U_vld_out);
    regslice_both_in_1_V_last_V_U->ack_out(in_1_TREADY_int);
    regslice_both_in_1_V_last_V_U->apdone_blk(regslice_both_in_1_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_in_0_TDATA_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_0_TVALID_int );

    SC_METHOD(thread_in_0_TREADY);
    sensitive << ( in_0_TVALID );
    sensitive << ( regslice_both_in_0_V_data_V_U_ack_in );

    SC_METHOD(thread_in_0_TREADY_int);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_in_1_TDATA_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_in_1_TREADY);
    sensitive << ( in_1_TVALID );
    sensitive << ( regslice_both_in_1_V_data_V_U_ack_in );

    SC_METHOD(thread_in_1_TREADY_int);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_0_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_0_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_319 );
    sensitive << ( reg_326 );
    sensitive << ( reg_333 );
    sensitive << ( reg_354 );
    sensitive << ( reg_361 );
    sensitive << ( reg_374 );
    sensitive << ( tmp_36_reg_415 );
    sensitive << ( tmp_18_fu_385_p1 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_0_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_1_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_1_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_319 );
    sensitive << ( reg_326 );
    sensitive << ( reg_333 );
    sensitive << ( reg_354 );
    sensitive << ( reg_361 );
    sensitive << ( reg_374 );
    sensitive << ( tmp_49_fu_405_p1 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TDATA_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_1_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_2_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_2_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_319 );
    sensitive << ( reg_326 );
    sensitive << ( reg_333 );
    sensitive << ( reg_354 );
    sensitive << ( reg_361 );
    sensitive << ( tmp_32_fu_395_p1 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TDATA_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_lower_2_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_0_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_0_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_298 );
    sensitive << ( reg_305 );
    sensitive << ( reg_312 );
    sensitive << ( reg_340 );
    sensitive << ( reg_347 );
    sensitive << ( reg_368 );
    sensitive << ( tmp_33_reg_410 );
    sensitive << ( tmp_fu_380_p1 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_0_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_1_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_1_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_298 );
    sensitive << ( reg_305 );
    sensitive << ( reg_312 );
    sensitive << ( reg_340 );
    sensitive << ( reg_347 );
    sensitive << ( reg_368 );
    sensitive << ( tmp_46_fu_400_p1 );
    sensitive << ( in_0_TDATA_int );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_1_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_2_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_2_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_298 );
    sensitive << ( reg_305 );
    sensitive << ( reg_312 );
    sensitive << ( reg_340 );
    sensitive << ( reg_347 );
    sensitive << ( tmp_29_fu_390_p1 );
    sensitive << ( in_0_TDATA_int );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_input_upper_2_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_18_fu_385_p1);
    sensitive << ( in_1_TDATA_int );

    SC_METHOD(thread_tmp_29_fu_390_p1);
    sensitive << ( in_0_TDATA_int );

    SC_METHOD(thread_tmp_32_fu_395_p1);
    sensitive << ( in_1_TDATA_int );

    SC_METHOD(thread_tmp_46_fu_400_p1);
    sensitive << ( in_0_TDATA_int );

    SC_METHOD(thread_tmp_49_fu_405_p1);
    sensitive << ( in_1_TDATA_int );

    SC_METHOD(thread_tmp_fu_380_p1);
    sensitive << ( in_0_TDATA_int );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( in_0_TVALID_int );
    sensitive << ( in_1_TVALID_int );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_input_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, input_upper_0_V_din, "(port)input_upper_0_V_din");
    sc_trace(mVcdFile, input_upper_0_V_full_n, "(port)input_upper_0_V_full_n");
    sc_trace(mVcdFile, input_upper_0_V_write, "(port)input_upper_0_V_write");
    sc_trace(mVcdFile, input_upper_1_V_din, "(port)input_upper_1_V_din");
    sc_trace(mVcdFile, input_upper_1_V_full_n, "(port)input_upper_1_V_full_n");
    sc_trace(mVcdFile, input_upper_1_V_write, "(port)input_upper_1_V_write");
    sc_trace(mVcdFile, input_upper_2_V_din, "(port)input_upper_2_V_din");
    sc_trace(mVcdFile, input_upper_2_V_full_n, "(port)input_upper_2_V_full_n");
    sc_trace(mVcdFile, input_upper_2_V_write, "(port)input_upper_2_V_write");
    sc_trace(mVcdFile, input_lower_0_V_din, "(port)input_lower_0_V_din");
    sc_trace(mVcdFile, input_lower_0_V_full_n, "(port)input_lower_0_V_full_n");
    sc_trace(mVcdFile, input_lower_0_V_write, "(port)input_lower_0_V_write");
    sc_trace(mVcdFile, input_lower_1_V_din, "(port)input_lower_1_V_din");
    sc_trace(mVcdFile, input_lower_1_V_full_n, "(port)input_lower_1_V_full_n");
    sc_trace(mVcdFile, input_lower_1_V_write, "(port)input_lower_1_V_write");
    sc_trace(mVcdFile, input_lower_2_V_din, "(port)input_lower_2_V_din");
    sc_trace(mVcdFile, input_lower_2_V_full_n, "(port)input_lower_2_V_full_n");
    sc_trace(mVcdFile, input_lower_2_V_write, "(port)input_lower_2_V_write");
    sc_trace(mVcdFile, in_0_TDATA, "(port)in_0_TDATA");
    sc_trace(mVcdFile, in_0_TVALID, "(port)in_0_TVALID");
    sc_trace(mVcdFile, in_0_TREADY, "(port)in_0_TREADY");
    sc_trace(mVcdFile, in_1_TDATA, "(port)in_1_TDATA");
    sc_trace(mVcdFile, in_1_TVALID, "(port)in_1_TVALID");
    sc_trace(mVcdFile, in_1_TREADY, "(port)in_1_TREADY");
    sc_trace(mVcdFile, in_0_TKEEP, "(port)in_0_TKEEP");
    sc_trace(mVcdFile, in_1_TKEEP, "(port)in_1_TKEEP");
    sc_trace(mVcdFile, in_0_TSTRB, "(port)in_0_TSTRB");
    sc_trace(mVcdFile, in_1_TSTRB, "(port)in_1_TSTRB");
    sc_trace(mVcdFile, in_0_TLAST, "(port)in_0_TLAST");
    sc_trace(mVcdFile, in_1_TLAST, "(port)in_1_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, input_upper_0_V_blk_n, "input_upper_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, input_upper_1_V_blk_n, "input_upper_1_V_blk_n");
    sc_trace(mVcdFile, input_upper_2_V_blk_n, "input_upper_2_V_blk_n");
    sc_trace(mVcdFile, input_lower_0_V_blk_n, "input_lower_0_V_blk_n");
    sc_trace(mVcdFile, input_lower_1_V_blk_n, "input_lower_1_V_blk_n");
    sc_trace(mVcdFile, input_lower_2_V_blk_n, "input_lower_2_V_blk_n");
    sc_trace(mVcdFile, in_0_TDATA_blk_n, "in_0_TDATA_blk_n");
    sc_trace(mVcdFile, in_1_TDATA_blk_n, "in_1_TDATA_blk_n");
    sc_trace(mVcdFile, reg_298, "reg_298");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, reg_305, "reg_305");
    sc_trace(mVcdFile, reg_312, "reg_312");
    sc_trace(mVcdFile, reg_319, "reg_319");
    sc_trace(mVcdFile, reg_326, "reg_326");
    sc_trace(mVcdFile, reg_333, "reg_333");
    sc_trace(mVcdFile, reg_340, "reg_340");
    sc_trace(mVcdFile, reg_347, "reg_347");
    sc_trace(mVcdFile, reg_354, "reg_354");
    sc_trace(mVcdFile, reg_361, "reg_361");
    sc_trace(mVcdFile, reg_368, "reg_368");
    sc_trace(mVcdFile, reg_374, "reg_374");
    sc_trace(mVcdFile, tmp_33_reg_410, "tmp_33_reg_410");
    sc_trace(mVcdFile, tmp_36_reg_415, "tmp_36_reg_415");
    sc_trace(mVcdFile, tmp_fu_380_p1, "tmp_fu_380_p1");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, tmp_46_fu_400_p1, "tmp_46_fu_400_p1");
    sc_trace(mVcdFile, tmp_29_fu_390_p1, "tmp_29_fu_390_p1");
    sc_trace(mVcdFile, tmp_18_fu_385_p1, "tmp_18_fu_385_p1");
    sc_trace(mVcdFile, tmp_49_fu_405_p1, "tmp_49_fu_405_p1");
    sc_trace(mVcdFile, tmp_32_fu_395_p1, "tmp_32_fu_395_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_0_V_data_V_U_apdone_blk, "regslice_both_in_0_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_0_TDATA_int, "in_0_TDATA_int");
    sc_trace(mVcdFile, in_0_TVALID_int, "in_0_TVALID_int");
    sc_trace(mVcdFile, in_0_TREADY_int, "in_0_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_0_V_data_V_U_ack_in, "regslice_both_in_0_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_1_V_data_V_U_apdone_blk, "regslice_both_in_1_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_1_TDATA_int, "in_1_TDATA_int");
    sc_trace(mVcdFile, in_1_TVALID_int, "in_1_TVALID_int");
    sc_trace(mVcdFile, in_1_TREADY_int, "in_1_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_1_V_data_V_U_ack_in, "regslice_both_in_1_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_0_V_keep_V_U_apdone_blk, "regslice_both_in_0_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_0_TKEEP_int, "in_0_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_0_V_keep_V_U_vld_out, "regslice_both_in_0_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_0_V_keep_V_U_ack_in, "regslice_both_in_0_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_1_V_keep_V_U_apdone_blk, "regslice_both_in_1_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_1_TKEEP_int, "in_1_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_1_V_keep_V_U_vld_out, "regslice_both_in_1_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_1_V_keep_V_U_ack_in, "regslice_both_in_1_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_0_V_strb_V_U_apdone_blk, "regslice_both_in_0_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_0_TSTRB_int, "in_0_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_0_V_strb_V_U_vld_out, "regslice_both_in_0_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_0_V_strb_V_U_ack_in, "regslice_both_in_0_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_1_V_strb_V_U_apdone_blk, "regslice_both_in_1_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_1_TSTRB_int, "in_1_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_1_V_strb_V_U_vld_out, "regslice_both_in_1_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_1_V_strb_V_U_ack_in, "regslice_both_in_1_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_0_V_last_V_U_apdone_blk, "regslice_both_in_0_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_0_TLAST_int, "in_0_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_0_V_last_V_U_vld_out, "regslice_both_in_0_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_0_V_last_V_U_ack_in, "regslice_both_in_0_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_1_V_last_V_U_apdone_blk, "regslice_both_in_1_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_1_TLAST_int, "in_1_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_1_V_last_V_U_vld_out, "regslice_both_in_1_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_1_V_last_V_U_ack_in, "regslice_both_in_1_V_last_V_U_ack_in");
#endif

    }
}

read_input::~read_input() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_in_0_V_data_V_U;
    delete regslice_both_in_1_V_data_V_U;
    delete regslice_both_in_0_V_keep_V_U;
    delete regslice_both_in_1_V_keep_V_U;
    delete regslice_both_in_0_V_strb_V_U;
    delete regslice_both_in_1_V_strb_V_U;
    delete regslice_both_in_0_V_last_V_U;
    delete regslice_both_in_1_V_last_V_U;
}

void read_input::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        reg_298 = in_0_TDATA_int.read().range(31, 24);
        reg_305 = in_0_TDATA_int.read().range(39, 32);
        reg_312 = in_0_TDATA_int.read().range(47, 40);
        reg_319 = in_1_TDATA_int.read().range(31, 24);
        reg_326 = in_1_TDATA_int.read().range(39, 32);
        reg_333 = in_1_TDATA_int.read().range(47, 40);
        reg_340 = in_0_TDATA_int.read().range(55, 48);
        reg_347 = in_0_TDATA_int.read().range(63, 56);
        reg_354 = in_1_TDATA_int.read().range(55, 48);
        reg_361 = in_1_TDATA_int.read().range(63, 56);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        reg_368 = in_0_TDATA_int.read().range(23, 16);
        reg_374 = in_1_TDATA_int.read().range(23, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        tmp_33_reg_410 = in_0_TDATA_int.read().range(15, 8);
        tmp_36_reg_415 = in_1_TDATA_int.read().range(15, 8);
    }
}

void read_input::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_input::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void read_input::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void read_input::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void read_input::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void read_input::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void read_input::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void read_input::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void read_input::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()));
}

void read_input::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()));
}

void read_input::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()));
}

void read_input::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void read_input::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_input::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void read_input::thread_in_0_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        in_0_TDATA_blk_n = in_0_TVALID_int.read();
    } else {
        in_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_in_0_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_0_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_0_V_data_V_U_ack_in.read()))) {
        in_0_TREADY = ap_const_logic_1;
    } else {
        in_0_TREADY = ap_const_logic_0;
    }
}

void read_input::thread_in_0_TREADY_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        in_0_TREADY_int = ap_const_logic_1;
    } else {
        in_0_TREADY_int = ap_const_logic_0;
    }
}

void read_input::thread_in_1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        in_1_TDATA_blk_n = in_1_TVALID_int.read();
    } else {
        in_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_in_1_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_1_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_1_V_data_V_U_ack_in.read()))) {
        in_1_TREADY = ap_const_logic_1;
    } else {
        in_1_TREADY = ap_const_logic_0;
    }
}

void read_input::thread_in_1_TREADY_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        in_1_TREADY_int = ap_const_logic_1;
    } else {
        in_1_TREADY_int = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_0_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_0_V_blk_n = input_lower_0_V_full_n.read();
    } else {
        input_lower_0_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_0_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_333.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_374.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_0_V_din = reg_361.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = tmp_36_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_0_V_din = reg_354.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_319.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_0_V_din = tmp_18_fu_385_p1.read();
    } else {
        input_lower_0_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_0_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_lower_0_V_write = ap_const_logic_1;
    } else {
        input_lower_0_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_1_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_1_V_blk_n = input_lower_1_V_full_n.read();
    } else {
        input_lower_1_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_1_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_354.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_319.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_1_V_din = tmp_49_fu_405_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_333.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_374.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_1_V_din = reg_361.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_1_V_din = in_1_TDATA_int.read().range(15, 8);
    } else {
        input_lower_1_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_1_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_lower_1_V_write = ap_const_logic_1;
    } else {
        input_lower_1_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_2_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_2_V_blk_n = input_lower_2_V_full_n.read();
    } else {
        input_lower_2_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_2_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_361.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_2_V_din = in_1_TDATA_int.read().range(15, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_354.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_319.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_2_V_din = tmp_32_fu_395_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_333.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_lower_2_V_din = in_1_TDATA_int.read().range(23, 16);
    } else {
        input_lower_2_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_2_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_lower_2_V_write = ap_const_logic_1;
    } else {
        input_lower_2_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_0_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_0_V_blk_n = input_upper_0_V_full_n.read();
    } else {
        input_upper_0_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_0_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_312.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_368.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_0_V_din = reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_305.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = tmp_33_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_0_V_din = reg_340.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_0_V_din = tmp_fu_380_p1.read();
    } else {
        input_upper_0_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_0_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_upper_0_V_write = ap_const_logic_1;
    } else {
        input_upper_0_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_1_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_1_V_blk_n = input_upper_1_V_full_n.read();
    } else {
        input_upper_1_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_1_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_340.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_1_V_din = tmp_46_fu_400_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_312.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_368.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_1_V_din = reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_305.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_1_V_din = in_0_TDATA_int.read().range(15, 8);
    } else {
        input_upper_1_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_1_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_upper_1_V_write = ap_const_logic_1;
    } else {
        input_upper_1_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_2_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_2_V_blk_n = input_upper_2_V_full_n.read();
    } else {
        input_upper_2_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_2_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_305.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_2_V_din = in_0_TDATA_int.read().range(15, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_340.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_2_V_din = tmp_29_fu_390_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_312.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
        input_upper_2_V_din = in_0_TDATA_int.read().range(23, 16);
    } else {
        input_upper_2_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_2_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read()))))) {
        input_upper_2_V_write = ap_const_logic_1;
    } else {
        input_upper_2_V_write = ap_const_logic_0;
    }
}

void read_input::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void read_input::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void read_input::thread_start_out() {
    start_out = real_start.read();
}

void read_input::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void read_input::thread_tmp_18_fu_385_p1() {
    tmp_18_fu_385_p1 = in_1_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_tmp_29_fu_390_p1() {
    tmp_29_fu_390_p1 = in_0_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_tmp_32_fu_395_p1() {
    tmp_32_fu_395_p1 = in_1_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_tmp_46_fu_400_p1() {
    tmp_46_fu_400_p1 = in_0_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_tmp_49_fu_405_p1() {
    tmp_49_fu_405_p1 = in_1_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_tmp_fu_380_p1() {
    tmp_fu_380_p1 = in_0_TDATA_int.read().range(8-1, 0);
}

void read_input::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID_int.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

