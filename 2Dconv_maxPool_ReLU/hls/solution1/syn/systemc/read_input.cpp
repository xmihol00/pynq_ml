// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_input.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_input::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_input::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> read_input::ap_ST_fsm_state1 = "1";
const sc_lv<8> read_input::ap_ST_fsm_state2 = "10";
const sc_lv<8> read_input::ap_ST_fsm_state3 = "100";
const sc_lv<8> read_input::ap_ST_fsm_state4 = "1000";
const sc_lv<8> read_input::ap_ST_fsm_state5 = "10000";
const sc_lv<8> read_input::ap_ST_fsm_state6 = "100000";
const sc_lv<8> read_input::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> read_input::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> read_input::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> read_input::ap_const_lv32_1 = "1";
const sc_lv<32> read_input::ap_const_lv32_2 = "10";
const sc_lv<32> read_input::ap_const_lv32_3 = "11";
const sc_lv<32> read_input::ap_const_lv32_4 = "100";
const sc_lv<32> read_input::ap_const_lv32_5 = "101";
const sc_lv<32> read_input::ap_const_lv32_6 = "110";
const sc_lv<32> read_input::ap_const_lv32_7 = "111";
const sc_lv<32> read_input::ap_const_lv32_8 = "1000";
const sc_lv<32> read_input::ap_const_lv32_F = "1111";
const sc_lv<32> read_input::ap_const_lv32_10 = "10000";
const sc_lv<32> read_input::ap_const_lv32_17 = "10111";
const sc_lv<32> read_input::ap_const_lv32_18 = "11000";
const sc_lv<32> read_input::ap_const_lv32_1F = "11111";
const sc_lv<32> read_input::ap_const_lv32_20 = "100000";
const sc_lv<32> read_input::ap_const_lv32_27 = "100111";
const sc_lv<32> read_input::ap_const_lv32_28 = "101000";
const sc_lv<32> read_input::ap_const_lv32_2F = "101111";
const sc_lv<32> read_input::ap_const_lv32_30 = "110000";
const sc_lv<32> read_input::ap_const_lv32_37 = "110111";
const sc_lv<32> read_input::ap_const_lv32_38 = "111000";
const sc_lv<32> read_input::ap_const_lv32_3F = "111111";
const bool read_input::ap_const_boolean_1 = true;

read_input::read_input(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_in_0_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_0_TVALID );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_in_0_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_in_1_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_in_1_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_input_lower_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_0_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_317 );
    sensitive << ( reg_324 );
    sensitive << ( reg_331 );
    sensitive << ( reg_352 );
    sensitive << ( reg_359 );
    sensitive << ( reg_372 );
    sensitive << ( tmp_36_reg_413 );
    sensitive << ( tmp_18_fu_383_p1 );

    SC_METHOD(thread_input_lower_0_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_1_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TDATA );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_317 );
    sensitive << ( reg_324 );
    sensitive << ( reg_331 );
    sensitive << ( reg_352 );
    sensitive << ( reg_359 );
    sensitive << ( reg_372 );
    sensitive << ( tmp_49_fu_403_p1 );

    SC_METHOD(thread_input_lower_1_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_lower_2_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TDATA );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_317 );
    sensitive << ( reg_324 );
    sensitive << ( reg_331 );
    sensitive << ( reg_352 );
    sensitive << ( reg_359 );
    sensitive << ( tmp_32_fu_393_p1 );

    SC_METHOD(thread_input_lower_2_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_0_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_296 );
    sensitive << ( reg_303 );
    sensitive << ( reg_310 );
    sensitive << ( reg_338 );
    sensitive << ( reg_345 );
    sensitive << ( reg_366 );
    sensitive << ( tmp_33_reg_408 );
    sensitive << ( tmp_fu_378_p1 );

    SC_METHOD(thread_input_upper_0_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_1_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_296 );
    sensitive << ( reg_303 );
    sensitive << ( reg_310 );
    sensitive << ( reg_338 );
    sensitive << ( reg_345 );
    sensitive << ( reg_366 );
    sensitive << ( tmp_46_fu_398_p1 );

    SC_METHOD(thread_input_upper_1_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_upper_2_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TDATA );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( reg_296 );
    sensitive << ( reg_303 );
    sensitive << ( reg_310 );
    sensitive << ( reg_338 );
    sensitive << ( reg_345 );
    sensitive << ( tmp_29_fu_388_p1 );

    SC_METHOD(thread_input_upper_2_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_18_fu_383_p1);
    sensitive << ( in_1_TDATA );

    SC_METHOD(thread_tmp_29_fu_388_p1);
    sensitive << ( in_0_TDATA );

    SC_METHOD(thread_tmp_32_fu_393_p1);
    sensitive << ( in_1_TDATA );

    SC_METHOD(thread_tmp_46_fu_398_p1);
    sensitive << ( in_0_TDATA );

    SC_METHOD(thread_tmp_49_fu_403_p1);
    sensitive << ( in_1_TDATA );

    SC_METHOD(thread_tmp_fu_378_p1);
    sensitive << ( in_0_TDATA );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_upper_0_V_full_n );
    sensitive << ( input_upper_1_V_full_n );
    sensitive << ( input_upper_2_V_full_n );
    sensitive << ( input_lower_0_V_full_n );
    sensitive << ( input_lower_1_V_full_n );
    sensitive << ( input_lower_2_V_full_n );
    sensitive << ( in_0_TVALID );
    sensitive << ( in_1_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_input_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_upper_0_V_din, "(port)input_upper_0_V_din");
    sc_trace(mVcdFile, input_upper_0_V_full_n, "(port)input_upper_0_V_full_n");
    sc_trace(mVcdFile, input_upper_0_V_write, "(port)input_upper_0_V_write");
    sc_trace(mVcdFile, input_upper_1_V_din, "(port)input_upper_1_V_din");
    sc_trace(mVcdFile, input_upper_1_V_full_n, "(port)input_upper_1_V_full_n");
    sc_trace(mVcdFile, input_upper_1_V_write, "(port)input_upper_1_V_write");
    sc_trace(mVcdFile, input_upper_2_V_din, "(port)input_upper_2_V_din");
    sc_trace(mVcdFile, input_upper_2_V_full_n, "(port)input_upper_2_V_full_n");
    sc_trace(mVcdFile, input_upper_2_V_write, "(port)input_upper_2_V_write");
    sc_trace(mVcdFile, input_lower_0_V_din, "(port)input_lower_0_V_din");
    sc_trace(mVcdFile, input_lower_0_V_full_n, "(port)input_lower_0_V_full_n");
    sc_trace(mVcdFile, input_lower_0_V_write, "(port)input_lower_0_V_write");
    sc_trace(mVcdFile, input_lower_1_V_din, "(port)input_lower_1_V_din");
    sc_trace(mVcdFile, input_lower_1_V_full_n, "(port)input_lower_1_V_full_n");
    sc_trace(mVcdFile, input_lower_1_V_write, "(port)input_lower_1_V_write");
    sc_trace(mVcdFile, input_lower_2_V_din, "(port)input_lower_2_V_din");
    sc_trace(mVcdFile, input_lower_2_V_full_n, "(port)input_lower_2_V_full_n");
    sc_trace(mVcdFile, input_lower_2_V_write, "(port)input_lower_2_V_write");
    sc_trace(mVcdFile, in_0_TDATA, "(port)in_0_TDATA");
    sc_trace(mVcdFile, in_0_TVALID, "(port)in_0_TVALID");
    sc_trace(mVcdFile, in_0_TREADY, "(port)in_0_TREADY");
    sc_trace(mVcdFile, in_1_TDATA, "(port)in_1_TDATA");
    sc_trace(mVcdFile, in_1_TVALID, "(port)in_1_TVALID");
    sc_trace(mVcdFile, in_1_TREADY, "(port)in_1_TREADY");
    sc_trace(mVcdFile, in_0_TKEEP, "(port)in_0_TKEEP");
    sc_trace(mVcdFile, in_1_TKEEP, "(port)in_1_TKEEP");
    sc_trace(mVcdFile, in_0_TSTRB, "(port)in_0_TSTRB");
    sc_trace(mVcdFile, in_1_TSTRB, "(port)in_1_TSTRB");
    sc_trace(mVcdFile, in_0_TLAST, "(port)in_0_TLAST");
    sc_trace(mVcdFile, in_1_TLAST, "(port)in_1_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_upper_0_V_blk_n, "input_upper_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, input_upper_1_V_blk_n, "input_upper_1_V_blk_n");
    sc_trace(mVcdFile, input_upper_2_V_blk_n, "input_upper_2_V_blk_n");
    sc_trace(mVcdFile, input_lower_0_V_blk_n, "input_lower_0_V_blk_n");
    sc_trace(mVcdFile, input_lower_1_V_blk_n, "input_lower_1_V_blk_n");
    sc_trace(mVcdFile, input_lower_2_V_blk_n, "input_lower_2_V_blk_n");
    sc_trace(mVcdFile, in_0_TDATA_blk_n, "in_0_TDATA_blk_n");
    sc_trace(mVcdFile, in_1_TDATA_blk_n, "in_1_TDATA_blk_n");
    sc_trace(mVcdFile, reg_296, "reg_296");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, reg_303, "reg_303");
    sc_trace(mVcdFile, reg_310, "reg_310");
    sc_trace(mVcdFile, reg_317, "reg_317");
    sc_trace(mVcdFile, reg_324, "reg_324");
    sc_trace(mVcdFile, reg_331, "reg_331");
    sc_trace(mVcdFile, reg_338, "reg_338");
    sc_trace(mVcdFile, reg_345, "reg_345");
    sc_trace(mVcdFile, reg_352, "reg_352");
    sc_trace(mVcdFile, reg_359, "reg_359");
    sc_trace(mVcdFile, reg_366, "reg_366");
    sc_trace(mVcdFile, reg_372, "reg_372");
    sc_trace(mVcdFile, tmp_33_reg_408, "tmp_33_reg_408");
    sc_trace(mVcdFile, tmp_36_reg_413, "tmp_36_reg_413");
    sc_trace(mVcdFile, tmp_fu_378_p1, "tmp_fu_378_p1");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, tmp_46_fu_398_p1, "tmp_46_fu_398_p1");
    sc_trace(mVcdFile, tmp_29_fu_388_p1, "tmp_29_fu_388_p1");
    sc_trace(mVcdFile, tmp_18_fu_383_p1, "tmp_18_fu_383_p1");
    sc_trace(mVcdFile, tmp_49_fu_403_p1, "tmp_49_fu_403_p1");
    sc_trace(mVcdFile, tmp_32_fu_393_p1, "tmp_32_fu_393_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

read_input::~read_input() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void read_input::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        reg_296 = in_0_TDATA.read().range(31, 24);
        reg_303 = in_0_TDATA.read().range(39, 32);
        reg_310 = in_0_TDATA.read().range(47, 40);
        reg_317 = in_1_TDATA.read().range(31, 24);
        reg_324 = in_1_TDATA.read().range(39, 32);
        reg_331 = in_1_TDATA.read().range(47, 40);
        reg_338 = in_0_TDATA.read().range(55, 48);
        reg_345 = in_0_TDATA.read().range(63, 56);
        reg_352 = in_1_TDATA.read().range(55, 48);
        reg_359 = in_1_TDATA.read().range(63, 56);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        reg_366 = in_0_TDATA.read().range(23, 16);
        reg_372 = in_1_TDATA.read().range(23, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        tmp_33_reg_408 = in_0_TDATA.read().range(15, 8);
        tmp_36_reg_413 = in_1_TDATA.read().range(15, 8);
    }
}

void read_input::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_input::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void read_input::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void read_input::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void read_input::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void read_input::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void read_input::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void read_input::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void read_input::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()));
}

void read_input::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void read_input::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_input::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void read_input::thread_in_0_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        in_0_TDATA_blk_n = in_0_TVALID.read();
    } else {
        in_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_in_0_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        in_0_TREADY = ap_const_logic_1;
    } else {
        in_0_TREADY = ap_const_logic_0;
    }
}

void read_input::thread_in_1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        in_1_TDATA_blk_n = in_1_TVALID.read();
    } else {
        in_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_in_1_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        in_1_TREADY = ap_const_logic_1;
    } else {
        in_1_TREADY = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_0_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_0_V_blk_n = input_lower_0_V_full_n.read();
    } else {
        input_lower_0_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_0_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_331.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_372.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_359.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_324.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = tmp_36_reg_413.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = reg_317.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_0_V_din = tmp_18_fu_383_p1.read();
    } else {
        input_lower_0_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_0_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_lower_0_V_write = ap_const_logic_1;
    } else {
        input_lower_0_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_1_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_1_V_blk_n = input_lower_1_V_full_n.read();
    } else {
        input_lower_1_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_1_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_317.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = tmp_49_fu_403_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_331.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_372.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_359.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = reg_324.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_1_V_din = in_1_TDATA.read().range(15, 8);
    } else {
        input_lower_1_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_1_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_lower_1_V_write = ap_const_logic_1;
    } else {
        input_lower_1_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_lower_2_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_lower_2_V_blk_n = input_lower_2_V_full_n.read();
    } else {
        input_lower_2_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_lower_2_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_359.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_324.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = in_1_TDATA.read().range(15, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_317.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = tmp_32_fu_393_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = reg_331.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_lower_2_V_din = in_1_TDATA.read().range(23, 16);
    } else {
        input_lower_2_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_lower_2_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_lower_2_V_write = ap_const_logic_1;
    } else {
        input_lower_2_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_0_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_0_V_blk_n = input_upper_0_V_full_n.read();
    } else {
        input_upper_0_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_0_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_366.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_345.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = tmp_33_reg_408.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_338.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_0_V_din = tmp_fu_378_p1.read();
    } else {
        input_upper_0_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_0_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_upper_0_V_write = ap_const_logic_1;
    } else {
        input_upper_0_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_1_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_1_V_blk_n = input_upper_1_V_full_n.read();
    } else {
        input_upper_1_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_1_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_338.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = tmp_46_fu_398_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_366.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_345.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_1_V_din = in_0_TDATA.read().range(15, 8);
    } else {
        input_upper_1_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_1_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_upper_1_V_write = ap_const_logic_1;
    } else {
        input_upper_1_V_write = ap_const_logic_0;
    }
}

void read_input::thread_input_upper_2_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        input_upper_2_V_blk_n = input_upper_2_V_full_n.read();
    } else {
        input_upper_2_V_blk_n = ap_const_logic_1;
    }
}

void read_input::thread_input_upper_2_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_345.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = in_0_TDATA.read().range(15, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_338.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = tmp_29_fu_388_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
        input_upper_2_V_din = in_0_TDATA.read().range(23, 16);
    } else {
        input_upper_2_V_din = "XXXXXXXX";
    }
}

void read_input::thread_input_upper_2_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read()))))) {
        input_upper_2_V_write = ap_const_logic_1;
    } else {
        input_upper_2_V_write = ap_const_logic_0;
    }
}

void read_input::thread_tmp_18_fu_383_p1() {
    tmp_18_fu_383_p1 = in_1_TDATA.read().range(8-1, 0);
}

void read_input::thread_tmp_29_fu_388_p1() {
    tmp_29_fu_388_p1 = in_0_TDATA.read().range(8-1, 0);
}

void read_input::thread_tmp_32_fu_393_p1() {
    tmp_32_fu_393_p1 = in_1_TDATA.read().range(8-1, 0);
}

void read_input::thread_tmp_46_fu_398_p1() {
    tmp_46_fu_398_p1 = in_0_TDATA.read().range(8-1, 0);
}

void read_input::thread_tmp_49_fu_403_p1() {
    tmp_49_fu_403_p1 = in_1_TDATA.read().range(8-1, 0);
}

void read_input::thread_tmp_fu_378_p1() {
    tmp_fu_378_p1 = in_0_TDATA.read().range(8-1, 0);
}

void read_input::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_0_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_TVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, input_upper_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_upper_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, input_lower_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

