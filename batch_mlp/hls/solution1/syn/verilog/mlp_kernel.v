// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mlp_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_0_address0,
        sample_0_ce0,
        sample_0_q0,
        sample_1_address0,
        sample_1_ce0,
        sample_1_q0,
        sample_2_address0,
        sample_2_ce0,
        sample_2_q0,
        sample_3_address0,
        sample_3_ce0,
        sample_3_q0,
        sample_4_address0,
        sample_4_ce0,
        sample_4_q0,
        sample_5_address0,
        sample_5_ce0,
        sample_5_q0,
        sample_6_address0,
        sample_6_ce0,
        sample_6_q0,
        sample_7_address0,
        sample_7_ce0,
        sample_7_q0,
        prediction_0_address0,
        prediction_0_ce0,
        prediction_0_we0,
        prediction_0_d0,
        prediction_1_address0,
        prediction_1_ce0,
        prediction_1_we0,
        prediction_1_d0,
        prediction_2_address0,
        prediction_2_ce0,
        prediction_2_we0,
        prediction_2_d0,
        prediction_3_address0,
        prediction_3_ce0,
        prediction_3_we0,
        prediction_3_d0,
        prediction_4_address0,
        prediction_4_ce0,
        prediction_4_we0,
        prediction_4_d0,
        prediction_5_address0,
        prediction_5_ce0,
        prediction_5_we0,
        prediction_5_d0,
        prediction_6_address0,
        prediction_6_ce0,
        prediction_6_we0,
        prediction_6_d0,
        prediction_7_address0,
        prediction_7_ce0,
        prediction_7_we0,
        prediction_7_d0
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_state9 = 35'd256;
parameter    ap_ST_fsm_state10 = 35'd512;
parameter    ap_ST_fsm_state11 = 35'd1024;
parameter    ap_ST_fsm_state12 = 35'd2048;
parameter    ap_ST_fsm_state13 = 35'd4096;
parameter    ap_ST_fsm_state14 = 35'd8192;
parameter    ap_ST_fsm_state15 = 35'd16384;
parameter    ap_ST_fsm_state16 = 35'd32768;
parameter    ap_ST_fsm_state17 = 35'd65536;
parameter    ap_ST_fsm_state18 = 35'd131072;
parameter    ap_ST_fsm_state19 = 35'd262144;
parameter    ap_ST_fsm_state20 = 35'd524288;
parameter    ap_ST_fsm_state21 = 35'd1048576;
parameter    ap_ST_fsm_state22 = 35'd2097152;
parameter    ap_ST_fsm_state23 = 35'd4194304;
parameter    ap_ST_fsm_state24 = 35'd8388608;
parameter    ap_ST_fsm_state25 = 35'd16777216;
parameter    ap_ST_fsm_state26 = 35'd33554432;
parameter    ap_ST_fsm_state27 = 35'd67108864;
parameter    ap_ST_fsm_state28 = 35'd134217728;
parameter    ap_ST_fsm_state29 = 35'd268435456;
parameter    ap_ST_fsm_state30 = 35'd536870912;
parameter    ap_ST_fsm_state31 = 35'd1073741824;
parameter    ap_ST_fsm_state32 = 35'd2147483648;
parameter    ap_ST_fsm_state33 = 35'd4294967296;
parameter    ap_ST_fsm_state34 = 35'd8589934592;
parameter    ap_ST_fsm_state35 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] sample_0_address0;
output   sample_0_ce0;
input  [7:0] sample_0_q0;
output  [5:0] sample_1_address0;
output   sample_1_ce0;
input  [7:0] sample_1_q0;
output  [5:0] sample_2_address0;
output   sample_2_ce0;
input  [7:0] sample_2_q0;
output  [5:0] sample_3_address0;
output   sample_3_ce0;
input  [7:0] sample_3_q0;
output  [5:0] sample_4_address0;
output   sample_4_ce0;
input  [7:0] sample_4_q0;
output  [5:0] sample_5_address0;
output   sample_5_ce0;
input  [7:0] sample_5_q0;
output  [5:0] sample_6_address0;
output   sample_6_ce0;
input  [7:0] sample_6_q0;
output  [5:0] sample_7_address0;
output   sample_7_ce0;
input  [7:0] sample_7_q0;
output  [3:0] prediction_0_address0;
output   prediction_0_ce0;
output   prediction_0_we0;
output  [15:0] prediction_0_d0;
output  [3:0] prediction_1_address0;
output   prediction_1_ce0;
output   prediction_1_we0;
output  [15:0] prediction_1_d0;
output  [3:0] prediction_2_address0;
output   prediction_2_ce0;
output   prediction_2_we0;
output  [15:0] prediction_2_d0;
output  [3:0] prediction_3_address0;
output   prediction_3_ce0;
output   prediction_3_we0;
output  [15:0] prediction_3_d0;
output  [3:0] prediction_4_address0;
output   prediction_4_ce0;
output   prediction_4_we0;
output  [15:0] prediction_4_d0;
output  [3:0] prediction_5_address0;
output   prediction_5_ce0;
output   prediction_5_we0;
output  [15:0] prediction_5_d0;
output  [3:0] prediction_6_address0;
output   prediction_6_ce0;
output   prediction_6_we0;
output  [15:0] prediction_6_d0;
output  [3:0] prediction_7_address0;
output   prediction_7_ce0;
output   prediction_7_we0;
output  [15:0] prediction_7_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] sample_0_address0;
reg sample_0_ce0;
reg[5:0] sample_1_address0;
reg sample_1_ce0;
reg[5:0] sample_2_address0;
reg sample_2_ce0;
reg[5:0] sample_3_address0;
reg sample_3_ce0;
reg[5:0] sample_4_address0;
reg sample_4_ce0;
reg[5:0] sample_5_address0;
reg sample_5_ce0;
reg[5:0] sample_6_address0;
reg sample_6_ce0;
reg[5:0] sample_7_address0;
reg sample_7_ce0;
reg prediction_0_ce0;
reg prediction_0_we0;
reg prediction_1_ce0;
reg prediction_1_we0;
reg prediction_2_ce0;
reg prediction_2_we0;
reg prediction_3_ce0;
reg prediction_3_we0;
reg prediction_4_ce0;
reg prediction_4_we0;
reg prediction_5_ce0;
reg prediction_5_we0;
reg prediction_6_ce0;
reg prediction_6_we0;
reg prediction_7_ce0;
reg prediction_7_we0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] l1_weights_0_address0;
reg    l1_weights_0_ce0;
wire   [7:0] l1_weights_0_q0;
wire   [10:0] l1_weights_1_address0;
reg    l1_weights_1_ce0;
wire   [7:0] l1_weights_1_q0;
wire   [4:0] l1_biases_1_address0;
reg    l1_biases_1_ce0;
wire   [7:0] l1_biases_1_q0;
wire   [4:0] l1_biases_0_address0;
reg    l1_biases_0_ce0;
wire   [7:0] l1_biases_0_q0;
wire   [8:0] l2_weights_0_address0;
reg    l2_weights_0_ce0;
wire   [7:0] l2_weights_0_q0;
wire   [8:0] l2_weights_1_address0;
reg    l2_weights_1_ce0;
wire   [7:0] l2_weights_1_q0;
wire   [2:0] l2_biases_1_address0;
reg    l2_biases_1_ce0;
wire   [7:0] l2_biases_1_q0;
wire   [2:0] l2_biases_0_address0;
reg    l2_biases_0_ce0;
wire   [7:0] l2_biases_0_q0;
wire   [15:0] sums_1_q0;
reg   [15:0] reg_1064;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state29;
wire   [15:0] sums_1_q1;
reg   [15:0] reg_1068;
reg   [15:0] reg_1072;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state30;
reg   [15:0] reg_1076;
reg   [15:0] reg_1080;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state31;
reg   [15:0] reg_1084;
wire   [6:0] i_fu_1094_p2;
reg   [6:0] i_reg_2145;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln345_fu_1088_p2;
wire   [2:0] add_ln347_fu_1100_p2;
wire    ap_CS_fsm_state3;
wire   [5:0] trunc_ln351_fu_1117_p1;
reg   [5:0] trunc_ln351_reg_2200;
wire   [0:0] icmp_ln347_fu_1111_p2;
wire   [11:0] shl_ln_fu_1121_p3;
reg   [11:0] shl_ln_reg_2205;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln348_fu_1133_p2;
reg   [7:0] l1_weights_0_load_reg_2228;
wire    ap_CS_fsm_state5;
wire   [15:0] sums_q0;
reg   [15:0] sums_load_reg_2238;
wire   [15:0] sums_q1;
reg   [15:0] sums_load_8_reg_2248;
wire   [5:0] empty_17_fu_1187_p1;
reg   [5:0] empty_17_reg_2283;
wire   [6:0] add_ln348_fu_1213_p2;
reg   [6:0] add_ln348_reg_2293;
reg   [7:0] sample_0_load_reg_2298;
wire    ap_CS_fsm_state6;
reg   [7:0] sample_1_load_reg_2303;
reg   [7:0] sample_2_load_reg_2308;
reg   [15:0] sums_load_9_reg_2313;
reg   [7:0] sample_3_load_reg_2318;
reg   [15:0] sums_load_10_reg_2323;
reg   [7:0] sample_4_load_reg_2328;
reg   [7:0] sample_5_load_reg_2333;
reg   [7:0] sample_6_load_reg_2338;
reg   [7:0] sample_7_load_reg_2343;
reg   [7:0] l1_weights_1_load_reg_2348;
reg   [15:0] sums_load_11_reg_2393;
wire    ap_CS_fsm_state7;
reg   [15:0] sums_load_12_reg_2398;
wire  signed [15:0] grp_fu_1924_p3;
reg  signed [15:0] add_ln355_reg_2403;
wire  signed [15:0] grp_fu_1932_p3;
reg  signed [15:0] add_ln355_2_reg_2408;
wire  signed [15:0] grp_fu_1940_p3;
reg  signed [15:0] add_ln355_4_reg_2413;
wire  signed [15:0] grp_fu_1948_p3;
reg  signed [15:0] add_ln355_6_reg_2418;
wire  signed [15:0] grp_fu_1956_p3;
reg  signed [15:0] add_ln355_8_reg_2423;
wire  signed [15:0] grp_fu_1964_p3;
reg  signed [15:0] add_ln355_10_reg_2428;
wire  signed [15:0] grp_fu_1972_p3;
reg  signed [15:0] add_ln355_12_reg_2433;
wire  signed [15:0] grp_fu_1980_p3;
reg  signed [15:0] add_ln355_14_reg_2438;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_5_fu_1356_p2;
reg   [15:0] add_ln355_5_reg_2443;
wire    ap_CS_fsm_state8;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_7_fu_1360_p2;
reg   [15:0] add_ln355_7_reg_2448;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_9_fu_1364_p2;
reg   [15:0] add_ln355_9_reg_2453;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_11_fu_1368_p2;
reg   [15:0] add_ln355_11_reg_2458;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_13_fu_1372_p2;
reg   [15:0] add_ln355_13_reg_2463;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_15_fu_1377_p2;
reg   [15:0] add_ln355_15_reg_2468;
wire  signed [7:0] select_ln362_fu_1386_p3;
reg  signed [7:0] select_ln362_reg_2473;
wire    ap_CS_fsm_state12;
wire  signed [15:0] sext_ln362_fu_1394_p1;
reg  signed [15:0] sext_ln362_reg_2478;
wire   [14:0] trunc_ln362_1_fu_1400_p1;
reg   [14:0] trunc_ln362_1_reg_2484;
wire   [0:0] grp_fu_1043_p3;
reg   [0:0] tmp_2_reg_2489;
wire   [14:0] trunc_ln362_2_fu_1404_p1;
reg   [14:0] trunc_ln362_2_reg_2494;
wire   [0:0] grp_fu_1056_p3;
reg   [0:0] tmp_3_reg_2499;
wire   [14:0] trunc_ln362_3_fu_1408_p1;
reg   [14:0] trunc_ln362_3_reg_2504;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_6_reg_2509;
wire   [14:0] trunc_ln362_4_fu_1412_p1;
reg   [14:0] trunc_ln362_4_reg_2514;
reg   [0:0] tmp_7_reg_2519;
wire   [14:0] trunc_ln362_5_fu_1416_p1;
reg   [14:0] trunc_ln362_5_reg_2524;
wire    ap_CS_fsm_state14;
reg   [0:0] tmp_8_reg_2529;
wire   [14:0] trunc_ln362_6_fu_1420_p1;
reg   [14:0] trunc_ln362_6_reg_2534;
reg   [0:0] tmp_9_reg_2539;
wire   [14:0] select_ln363_2_fu_1480_p3;
reg   [14:0] select_ln363_2_reg_2544;
wire    ap_CS_fsm_state15;
wire   [14:0] select_ln363_3_fu_1493_p3;
reg   [14:0] select_ln363_3_reg_2549;
wire   [14:0] select_ln363_4_fu_1506_p3;
reg   [14:0] select_ln363_4_reg_2554;
wire   [14:0] select_ln363_5_fu_1519_p3;
reg   [14:0] select_ln363_5_reg_2559;
wire   [14:0] select_ln363_6_fu_1537_p3;
reg   [14:0] select_ln363_6_reg_2564;
wire   [14:0] select_ln363_7_fu_1556_p3;
reg   [14:0] select_ln363_7_reg_2569;
wire   [3:0] i_1_fu_1595_p2;
reg   [3:0] i_1_reg_2577;
wire    ap_CS_fsm_state19;
wire   [2:0] add_ln371_fu_1601_p2;
wire    ap_CS_fsm_state20;
wire   [9:0] shl_ln1_fu_1618_p3;
reg   [9:0] shl_ln1_reg_2590;
wire   [0:0] icmp_ln371_fu_1612_p2;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln372_fu_1630_p2;
reg   [7:0] l2_weights_0_load_reg_2603;
reg   [7:0] l2_weights_1_load_reg_2653;
wire   [6:0] add_ln372_fu_1713_p2;
reg   [6:0] add_ln372_reg_2698;
wire   [14:0] l1_out_0_q0;
reg   [14:0] l1_out_0_load_reg_2703;
wire   [14:0] l1_out_1_q0;
reg   [14:0] l1_out_1_load_reg_2708;
wire   [14:0] l1_out_2_q0;
reg   [14:0] l1_out_2_load_reg_2713;
wire   [14:0] l1_out_3_q0;
reg   [14:0] l1_out_3_load_reg_2718;
wire   [14:0] l1_out_4_q0;
reg   [14:0] l1_out_4_load_reg_2723;
wire   [14:0] l1_out_5_q0;
reg   [14:0] l1_out_5_load_reg_2728;
wire   [14:0] l1_out_6_q0;
reg   [14:0] l1_out_6_load_reg_2733;
wire   [14:0] l1_out_7_q0;
reg   [14:0] l1_out_7_load_reg_2738;
wire  signed [15:0] mul_ln379_8_fu_1988_p2;
reg  signed [15:0] mul_ln379_8_reg_2743;
wire  signed [15:0] mul_ln379_9_fu_1994_p2;
reg  signed [15:0] mul_ln379_9_reg_2748;
wire  signed [15:0] mul_ln379_10_fu_2000_p2;
reg  signed [15:0] mul_ln379_10_reg_2753;
wire  signed [15:0] mul_ln379_11_fu_2006_p2;
reg  signed [15:0] mul_ln379_11_reg_2758;
wire  signed [15:0] mul_ln379_12_fu_2012_p2;
reg  signed [15:0] mul_ln379_12_reg_2763;
wire  signed [15:0] mul_ln379_13_fu_2018_p2;
reg  signed [15:0] mul_ln379_13_reg_2768;
wire  signed [15:0] mul_ln379_14_fu_2024_p2;
reg  signed [15:0] mul_ln379_14_reg_2773;
wire  signed [15:0] mul_ln379_15_fu_2030_p2;
reg  signed [15:0] mul_ln379_15_reg_2778;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_5_fu_1793_p2;
reg   [15:0] add_ln379_5_reg_2783;
wire    ap_CS_fsm_state25;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_7_fu_1798_p2;
reg   [15:0] add_ln379_7_reg_2788;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_9_fu_1803_p2;
reg   [15:0] add_ln379_9_reg_2793;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_11_fu_1808_p2;
reg   [15:0] add_ln379_11_reg_2798;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_13_fu_1813_p2;
reg   [15:0] add_ln379_13_reg_2803;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_15_fu_1818_p2;
reg   [15:0] add_ln379_15_reg_2808;
wire   [7:0] select_ln386_fu_1843_p3;
reg   [7:0] select_ln386_reg_2823;
wire   [15:0] add_ln386_2_fu_1882_p2;
reg   [15:0] add_ln386_2_reg_2828;
wire    ap_CS_fsm_state32;
wire   [15:0] add_ln386_3_fu_1889_p2;
reg   [15:0] add_ln386_3_reg_2833;
wire   [15:0] add_ln386_4_fu_1896_p2;
reg   [15:0] add_ln386_4_reg_2838;
wire   [15:0] add_ln386_5_fu_1903_p2;
reg   [15:0] add_ln386_5_reg_2843;
wire   [15:0] add_ln386_6_fu_1910_p2;
reg   [15:0] add_ln386_6_reg_2848;
wire   [15:0] add_ln386_7_fu_1917_p2;
reg   [15:0] add_ln386_7_reg_2853;
reg   [5:0] l1_out_0_address0;
reg    l1_out_0_ce0;
reg    l1_out_0_we0;
wire   [5:0] l1_out_0_address1;
reg    l1_out_0_ce1;
wire   [14:0] l1_out_0_q1;
reg   [5:0] l1_out_1_address0;
reg    l1_out_1_ce0;
reg    l1_out_1_we0;
wire   [5:0] l1_out_1_address1;
reg    l1_out_1_ce1;
wire   [14:0] l1_out_1_q1;
reg   [5:0] l1_out_2_address0;
reg    l1_out_2_ce0;
reg    l1_out_2_we0;
wire   [14:0] l1_out_2_d0;
wire   [5:0] l1_out_2_address1;
reg    l1_out_2_ce1;
wire   [14:0] l1_out_2_q1;
reg   [5:0] l1_out_3_address0;
reg    l1_out_3_ce0;
reg    l1_out_3_we0;
wire   [14:0] l1_out_3_d0;
wire   [5:0] l1_out_3_address1;
reg    l1_out_3_ce1;
wire   [14:0] l1_out_3_q1;
reg   [5:0] l1_out_4_address0;
reg    l1_out_4_ce0;
reg    l1_out_4_we0;
wire   [14:0] l1_out_4_d0;
wire   [5:0] l1_out_4_address1;
reg    l1_out_4_ce1;
wire   [14:0] l1_out_4_q1;
reg   [5:0] l1_out_5_address0;
reg    l1_out_5_ce0;
reg    l1_out_5_we0;
wire   [14:0] l1_out_5_d0;
wire   [5:0] l1_out_5_address1;
reg    l1_out_5_ce1;
wire   [14:0] l1_out_5_q1;
reg   [5:0] l1_out_6_address0;
reg    l1_out_6_ce0;
reg    l1_out_6_we0;
wire   [14:0] l1_out_6_d0;
wire   [5:0] l1_out_6_address1;
reg    l1_out_6_ce1;
wire   [14:0] l1_out_6_q1;
reg   [5:0] l1_out_7_address0;
reg    l1_out_7_ce0;
reg    l1_out_7_we0;
wire   [14:0] l1_out_7_d0;
wire   [5:0] l1_out_7_address1;
reg    l1_out_7_ce1;
wire   [14:0] l1_out_7_q1;
reg   [2:0] sums_address0;
reg    sums_ce0;
reg    sums_we0;
reg   [15:0] sums_d0;
reg   [2:0] sums_address1;
reg    sums_ce1;
reg    sums_we1;
reg   [15:0] sums_d1;
reg   [2:0] sums_1_address0;
reg    sums_1_ce0;
reg    sums_1_we0;
reg   [15:0] sums_1_d0;
reg   [2:0] sums_1_address1;
reg    sums_1_ce1;
reg    sums_1_we1;
reg   [15:0] sums_1_d1;
reg   [6:0] i_0_reg_968;
wire    ap_CS_fsm_state18;
reg   [2:0] phi_ln347_reg_980;
reg   [6:0] j_0_0_reg_991;
wire    ap_CS_fsm_state11;
reg   [3:0] i2_0_reg_1003;
wire    ap_CS_fsm_state35;
reg   [2:0] phi_ln371_reg_1015;
wire   [0:0] icmp_ln369_fu_1589_p2;
reg   [6:0] j4_0_0_reg_1026;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln347_fu_1106_p1;
wire   [63:0] zext_ln351_fu_1154_p1;
wire   [63:0] zext_ln362_1_fu_1169_p1;
wire   [63:0] zext_ln355_fu_1175_p1;
wire   [63:0] zext_ln351_1_fu_1208_p1;
wire   [63:0] zext_ln355_1_fu_1224_p1;
wire   [63:0] zext_ln362_fu_1424_p1;
wire   [63:0] zext_ln371_fu_1607_p1;
wire   [63:0] zext_ln375_fu_1651_p1;
wire   [63:0] zext_ln375_1_fu_1674_p1;
wire   [63:0] zext_ln379_fu_1679_p1;
wire   [63:0] zext_ln379_1_fu_1701_p1;
wire   [63:0] zext_ln386_1_fu_1833_p1;
wire   [63:0] zext_ln386_fu_1851_p1;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_1_fu_1346_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln355_3_fu_1351_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [15:0] zext_ln363_fu_1452_p1;
wire   [15:0] zext_ln363_1_fu_1470_p1;
wire    ap_CS_fsm_state16;
wire   [15:0] zext_ln363_2_fu_1565_p1;
wire   [15:0] zext_ln363_3_fu_1569_p1;
wire    ap_CS_fsm_state17;
wire   [15:0] zext_ln363_4_fu_1573_p1;
wire   [15:0] zext_ln363_5_fu_1577_p1;
wire   [15:0] zext_ln363_6_fu_1581_p1;
wire   [15:0] zext_ln363_7_fu_1585_p1;
wire   [14:0] select_ln363_fu_1444_p3;
wire   [14:0] select_ln363_1_fu_1462_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_1_fu_1781_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln379_3_fu_1787_p2;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire   [15:0] add_ln386_fu_1866_p2;
wire   [15:0] add_ln386_1_fu_1874_p2;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg  signed [15:0] grp_fu_1038_p0;
wire   [15:0] grp_fu_1038_p2;
reg  signed [15:0] grp_fu_1051_p0;
wire   [15:0] grp_fu_1051_p2;
wire   [11:0] j_0_0_cast22_fu_1129_p1;
wire   [11:0] add_ln351_fu_1139_p2;
wire   [10:0] lshr_ln1_fu_1144_p4;
wire   [5:0] lshr_ln_fu_1159_p4;
wire   [4:0] tmp_4_fu_1191_p4;
wire   [10:0] lshr_ln351_1_fu_1201_p3;
wire   [5:0] or_ln348_fu_1219_p2;
wire  signed [7:0] mul_ln355_fu_1242_p0;
wire  signed [15:0] sext_ln355_fu_1236_p1;
wire  signed [7:0] mul_ln355_fu_1242_p1;
wire  signed [7:0] mul_ln355_1_fu_1251_p0;
wire  signed [7:0] mul_ln355_1_fu_1251_p1;
wire  signed [7:0] mul_ln355_2_fu_1260_p0;
wire  signed [7:0] mul_ln355_2_fu_1260_p1;
wire  signed [7:0] mul_ln355_3_fu_1269_p0;
wire  signed [7:0] mul_ln355_3_fu_1269_p1;
wire  signed [7:0] mul_ln355_4_fu_1278_p0;
wire  signed [7:0] mul_ln355_4_fu_1278_p1;
wire  signed [7:0] mul_ln355_5_fu_1287_p0;
wire  signed [7:0] mul_ln355_5_fu_1287_p1;
wire  signed [7:0] mul_ln355_6_fu_1296_p0;
wire  signed [7:0] mul_ln355_6_fu_1296_p1;
wire  signed [7:0] mul_ln355_7_fu_1305_p0;
wire  signed [7:0] mul_ln355_7_fu_1305_p1;
wire   [0:0] trunc_ln362_fu_1382_p1;
wire  signed [14:0] sext_ln362_1_fu_1436_p1;
wire   [14:0] add_ln363_fu_1439_p2;
wire   [14:0] add_ln363_1_fu_1457_p2;
wire   [14:0] add_ln363_2_fu_1475_p2;
wire   [14:0] add_ln363_3_fu_1488_p2;
wire   [14:0] add_ln363_4_fu_1501_p2;
wire   [14:0] add_ln363_5_fu_1514_p2;
wire   [14:0] trunc_ln362_7_fu_1527_p1;
wire   [14:0] add_ln363_6_fu_1531_p2;
wire   [14:0] trunc_ln362_8_fu_1546_p1;
wire   [14:0] add_ln363_7_fu_1550_p2;
wire   [9:0] j4_0_0_cast18_fu_1626_p1;
wire   [9:0] add_ln375_fu_1636_p2;
wire   [8:0] lshr_ln3_fu_1641_p4;
wire   [4:0] tmp_5_fu_1656_p4;
wire   [8:0] lshr_ln375_1_fu_1666_p3;
wire   [5:0] empty_22_fu_1691_p1;
wire   [5:0] or_ln372_fu_1695_p2;
wire  signed [15:0] grp_fu_2036_p3;
wire  signed [15:0] grp_fu_2044_p3;
wire  signed [15:0] grp_fu_2052_p3;
wire  signed [15:0] grp_fu_2060_p3;
wire  signed [15:0] grp_fu_2068_p3;
wire  signed [15:0] grp_fu_2076_p3;
wire  signed [15:0] grp_fu_2084_p3;
wire  signed [15:0] grp_fu_2092_p3;
wire   [2:0] lshr_ln2_fu_1823_p4;
wire   [0:0] trunc_ln386_fu_1839_p1;
wire  signed [15:0] sext_ln386_fu_1863_p1;
wire  signed [7:0] grp_fu_1924_p0;
wire  signed [15:0] sext_ln355_9_fu_1311_p1;
wire   [15:0] grp_fu_1924_p2;
wire  signed [7:0] grp_fu_1932_p0;
wire   [15:0] grp_fu_1932_p2;
wire  signed [7:0] grp_fu_1940_p0;
wire   [15:0] grp_fu_1940_p2;
wire  signed [7:0] grp_fu_1948_p0;
wire   [15:0] grp_fu_1948_p2;
wire  signed [7:0] grp_fu_1956_p0;
wire   [15:0] grp_fu_1956_p2;
wire  signed [7:0] grp_fu_1964_p0;
wire   [15:0] grp_fu_1964_p2;
wire  signed [7:0] grp_fu_1972_p0;
wire   [15:0] grp_fu_1972_p2;
wire  signed [7:0] grp_fu_1980_p0;
wire   [15:0] grp_fu_1980_p2;
wire  signed [7:0] mul_ln379_8_fu_1988_p0;
wire  signed [15:0] sext_ln379_1_fu_1719_p1;
wire   [14:0] mul_ln379_8_fu_1988_p1;
wire  signed [7:0] mul_ln379_9_fu_1994_p0;
wire   [14:0] mul_ln379_9_fu_1994_p1;
wire  signed [7:0] mul_ln379_10_fu_2000_p0;
wire   [14:0] mul_ln379_10_fu_2000_p1;
wire  signed [7:0] mul_ln379_11_fu_2006_p0;
wire   [14:0] mul_ln379_11_fu_2006_p1;
wire  signed [7:0] mul_ln379_12_fu_2012_p0;
wire   [14:0] mul_ln379_12_fu_2012_p1;
wire  signed [7:0] mul_ln379_13_fu_2018_p0;
wire   [14:0] mul_ln379_13_fu_2018_p1;
wire  signed [7:0] mul_ln379_14_fu_2024_p0;
wire   [14:0] mul_ln379_14_fu_2024_p1;
wire  signed [7:0] mul_ln379_15_fu_2030_p0;
wire   [14:0] mul_ln379_15_fu_2030_p1;
wire  signed [7:0] grp_fu_2036_p0;
wire  signed [15:0] sext_ln379_fu_1754_p1;
wire   [14:0] grp_fu_2036_p1;
wire  signed [7:0] grp_fu_2044_p0;
wire   [14:0] grp_fu_2044_p1;
wire  signed [7:0] grp_fu_2052_p0;
wire   [14:0] grp_fu_2052_p1;
wire  signed [7:0] grp_fu_2060_p0;
wire   [14:0] grp_fu_2060_p1;
wire  signed [7:0] grp_fu_2068_p0;
wire   [14:0] grp_fu_2068_p1;
wire  signed [7:0] grp_fu_2076_p0;
wire   [14:0] grp_fu_2076_p1;
wire  signed [7:0] grp_fu_2084_p0;
wire   [14:0] grp_fu_2084_p1;
wire  signed [7:0] grp_fu_2092_p0;
wire   [14:0] grp_fu_2092_p1;
reg   [34:0] ap_NS_fsm;
wire   [15:0] grp_fu_2036_p10;
wire   [15:0] grp_fu_2044_p10;
wire   [15:0] grp_fu_2052_p10;
wire   [15:0] grp_fu_2060_p10;
wire   [15:0] grp_fu_2068_p10;
wire   [15:0] grp_fu_2076_p10;
wire   [15:0] grp_fu_2084_p10;
wire   [15:0] grp_fu_2092_p10;
wire   [15:0] mul_ln379_10_fu_2000_p10;
wire   [15:0] mul_ln379_11_fu_2006_p10;
wire   [15:0] mul_ln379_12_fu_2012_p10;
wire   [15:0] mul_ln379_13_fu_2018_p10;
wire   [15:0] mul_ln379_14_fu_2024_p10;
wire   [15:0] mul_ln379_15_fu_2030_p10;
wire   [15:0] mul_ln379_8_fu_1988_p10;
wire   [15:0] mul_ln379_9_fu_1994_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
end

mlp_kernel_l1_weibkb #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
l1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_weights_0_address0),
    .ce0(l1_weights_0_ce0),
    .q0(l1_weights_0_q0)
);

mlp_kernel_l1_weicud #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
l1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_weights_1_address0),
    .ce0(l1_weights_1_ce0),
    .q0(l1_weights_1_q0)
);

mlp_kernel_l1_biadEe #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
l1_biases_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_biases_1_address0),
    .ce0(l1_biases_1_ce0),
    .q0(l1_biases_1_q0)
);

mlp_kernel_l1_biaeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
l1_biases_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_biases_0_address0),
    .ce0(l1_biases_0_ce0),
    .q0(l1_biases_0_q0)
);

mlp_kernel_l2_weifYi #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
l2_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l2_weights_0_address0),
    .ce0(l2_weights_0_ce0),
    .q0(l2_weights_0_q0)
);

mlp_kernel_l2_weig8j #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
l2_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l2_weights_1_address0),
    .ce0(l2_weights_1_ce0),
    .q0(l2_weights_1_q0)
);

mlp_kernel_l2_biahbi #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
l2_biases_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l2_biases_1_address0),
    .ce0(l2_biases_1_ce0),
    .q0(l2_biases_1_q0)
);

mlp_kernel_l2_biaibs #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
l2_biases_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l2_biases_0_address0),
    .ce0(l2_biases_0_ce0),
    .q0(l2_biases_0_q0)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_0_address0),
    .ce0(l1_out_0_ce0),
    .we0(l1_out_0_we0),
    .d0(select_ln363_fu_1444_p3),
    .q0(l1_out_0_q0),
    .address1(l1_out_0_address1),
    .ce1(l1_out_0_ce1),
    .q1(l1_out_0_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_1_address0),
    .ce0(l1_out_1_ce0),
    .we0(l1_out_1_we0),
    .d0(select_ln363_1_fu_1462_p3),
    .q0(l1_out_1_q0),
    .address1(l1_out_1_address1),
    .ce1(l1_out_1_ce1),
    .q1(l1_out_1_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_2_address0),
    .ce0(l1_out_2_ce0),
    .we0(l1_out_2_we0),
    .d0(l1_out_2_d0),
    .q0(l1_out_2_q0),
    .address1(l1_out_2_address1),
    .ce1(l1_out_2_ce1),
    .q1(l1_out_2_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_3_address0),
    .ce0(l1_out_3_ce0),
    .we0(l1_out_3_we0),
    .d0(l1_out_3_d0),
    .q0(l1_out_3_q0),
    .address1(l1_out_3_address1),
    .ce1(l1_out_3_ce1),
    .q1(l1_out_3_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_4_address0),
    .ce0(l1_out_4_ce0),
    .we0(l1_out_4_we0),
    .d0(l1_out_4_d0),
    .q0(l1_out_4_q0),
    .address1(l1_out_4_address1),
    .ce1(l1_out_4_ce1),
    .q1(l1_out_4_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_5_address0),
    .ce0(l1_out_5_ce0),
    .we0(l1_out_5_we0),
    .d0(l1_out_5_d0),
    .q0(l1_out_5_q0),
    .address1(l1_out_5_address1),
    .ce1(l1_out_5_ce1),
    .q1(l1_out_5_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_6_address0),
    .ce0(l1_out_6_ce0),
    .we0(l1_out_6_we0),
    .d0(l1_out_6_d0),
    .q0(l1_out_6_q0),
    .address1(l1_out_6_address1),
    .ce1(l1_out_6_ce1),
    .q1(l1_out_6_q1)
);

mlp_kernel_l1_out_0 #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
l1_out_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l1_out_7_address0),
    .ce0(l1_out_7_ce0),
    .we0(l1_out_7_we0),
    .d0(l1_out_7_d0),
    .q0(l1_out_7_q0),
    .address1(l1_out_7_address1),
    .ce1(l1_out_7_ce1),
    .q1(l1_out_7_q1)
);

mlp_kernel_sums #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sums_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sums_address0),
    .ce0(sums_ce0),
    .we0(sums_we0),
    .d0(sums_d0),
    .q0(sums_q0),
    .address1(sums_address1),
    .ce1(sums_ce1),
    .we1(sums_we1),
    .d1(sums_d1),
    .q1(sums_q1)
);

mlp_kernel_sums #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sums_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sums_1_address0),
    .ce0(sums_1_ce0),
    .we0(sums_1_we0),
    .d0(sums_1_d0),
    .q0(sums_1_q0),
    .address1(sums_1_address1),
    .ce1(sums_1_ce1),
    .we1(sums_1_we1),
    .d1(sums_1_d1),
    .q1(sums_1_q1)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U1(
    .din0(grp_fu_1924_p0),
    .din1(sample_0_q0),
    .din2(grp_fu_1924_p2),
    .dout(grp_fu_1924_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U2(
    .din0(grp_fu_1932_p0),
    .din1(sample_1_q0),
    .din2(grp_fu_1932_p2),
    .dout(grp_fu_1932_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U3(
    .din0(grp_fu_1940_p0),
    .din1(sample_2_q0),
    .din2(grp_fu_1940_p2),
    .dout(grp_fu_1940_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U4(
    .din0(grp_fu_1948_p0),
    .din1(sample_3_q0),
    .din2(grp_fu_1948_p2),
    .dout(grp_fu_1948_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U5(
    .din0(grp_fu_1956_p0),
    .din1(sample_4_q0),
    .din2(grp_fu_1956_p2),
    .dout(grp_fu_1956_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U6(
    .din0(grp_fu_1964_p0),
    .din1(sample_5_q0),
    .din2(grp_fu_1964_p2),
    .dout(grp_fu_1964_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U7(
    .din0(grp_fu_1972_p0),
    .din1(sample_6_q0),
    .din2(grp_fu_1972_p2),
    .dout(grp_fu_1972_p3)
);

mlp_mac_muladd_8sjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8sjbC_U8(
    .din0(grp_fu_1980_p0),
    .din1(sample_7_q0),
    .din2(grp_fu_1980_p2),
    .dout(grp_fu_1980_p3)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U9(
    .din0(mul_ln379_8_fu_1988_p0),
    .din1(mul_ln379_8_fu_1988_p1),
    .dout(mul_ln379_8_fu_1988_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U10(
    .din0(mul_ln379_9_fu_1994_p0),
    .din1(mul_ln379_9_fu_1994_p1),
    .dout(mul_ln379_9_fu_1994_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U11(
    .din0(mul_ln379_10_fu_2000_p0),
    .din1(mul_ln379_10_fu_2000_p1),
    .dout(mul_ln379_10_fu_2000_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U12(
    .din0(mul_ln379_11_fu_2006_p0),
    .din1(mul_ln379_11_fu_2006_p1),
    .dout(mul_ln379_11_fu_2006_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U13(
    .din0(mul_ln379_12_fu_2012_p0),
    .din1(mul_ln379_12_fu_2012_p1),
    .dout(mul_ln379_12_fu_2012_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U14(
    .din0(mul_ln379_13_fu_2018_p0),
    .din1(mul_ln379_13_fu_2018_p1),
    .dout(mul_ln379_13_fu_2018_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U15(
    .din0(mul_ln379_14_fu_2024_p0),
    .din1(mul_ln379_14_fu_2024_p1),
    .dout(mul_ln379_14_fu_2024_p2)
);

mlp_mul_mul_8s_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mlp_mul_mul_8s_15kbM_U16(
    .din0(mul_ln379_15_fu_2030_p0),
    .din1(mul_ln379_15_fu_2030_p1),
    .dout(mul_ln379_15_fu_2030_p2)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U17(
    .din0(grp_fu_2036_p0),
    .din1(grp_fu_2036_p1),
    .din2(mul_ln379_8_reg_2743),
    .dout(grp_fu_2036_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U18(
    .din0(grp_fu_2044_p0),
    .din1(grp_fu_2044_p1),
    .din2(mul_ln379_9_reg_2748),
    .dout(grp_fu_2044_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U19(
    .din0(grp_fu_2052_p0),
    .din1(grp_fu_2052_p1),
    .din2(mul_ln379_10_reg_2753),
    .dout(grp_fu_2052_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U20(
    .din0(grp_fu_2060_p0),
    .din1(grp_fu_2060_p1),
    .din2(mul_ln379_11_reg_2758),
    .dout(grp_fu_2060_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U21(
    .din0(grp_fu_2068_p0),
    .din1(grp_fu_2068_p1),
    .din2(mul_ln379_12_reg_2763),
    .dout(grp_fu_2068_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U22(
    .din0(grp_fu_2076_p0),
    .din1(grp_fu_2076_p1),
    .din2(mul_ln379_13_reg_2768),
    .dout(grp_fu_2076_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U23(
    .din0(grp_fu_2084_p0),
    .din1(grp_fu_2084_p1),
    .din2(mul_ln379_14_reg_2773),
    .dout(grp_fu_2084_p3)
);

mlp_mac_muladd_8slbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mlp_mac_muladd_8slbW_U24(
    .din0(grp_fu_2092_p0),
    .din1(grp_fu_2092_p1),
    .din2(mul_ln379_15_reg_2778),
    .dout(grp_fu_2092_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln345_fu_1088_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i2_0_reg_1003 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i2_0_reg_1003 <= i_1_reg_2577;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_0_reg_968 <= i_reg_2145;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_968 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j4_0_0_reg_1026 <= add_ln372_reg_2698;
    end else if (((icmp_ln371_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        j4_0_0_reg_1026 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_0_reg_991 <= add_ln348_reg_2293;
    end else if (((icmp_ln347_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_0_reg_991 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_fu_1111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln347_reg_980 <= add_ln347_fu_1100_p2;
    end else if (((icmp_ln345_fu_1088_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln347_reg_980 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln371_fu_1612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        phi_ln371_reg_1015 <= add_ln371_fu_1601_p2;
    end else if (((icmp_ln369_fu_1589_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        phi_ln371_reg_1015 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln348_reg_2293 <= add_ln348_fu_1213_p2;
        empty_17_reg_2283 <= empty_17_fu_1187_p1;
        l1_weights_0_load_reg_2228 <= l1_weights_0_q0;
        sums_load_8_reg_2248 <= sums_q1;
        sums_load_reg_2238 <= sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln355_10_reg_2428 <= grp_fu_1964_p3;
        add_ln355_12_reg_2433 <= grp_fu_1972_p3;
        add_ln355_14_reg_2438 <= grp_fu_1980_p3;
        add_ln355_2_reg_2408 <= grp_fu_1932_p3;
        add_ln355_4_reg_2413 <= grp_fu_1940_p3;
        add_ln355_6_reg_2418 <= grp_fu_1948_p3;
        add_ln355_8_reg_2423 <= grp_fu_1956_p3;
        add_ln355_reg_2403 <= grp_fu_1924_p3;
        sums_load_11_reg_2393 <= sums_q1;
        sums_load_12_reg_2398 <= sums_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln355_11_reg_2458 <= add_ln355_11_fu_1368_p2;
        add_ln355_13_reg_2463 <= add_ln355_13_fu_1372_p2;
        add_ln355_15_reg_2468 <= add_ln355_15_fu_1377_p2;
        add_ln355_5_reg_2443 <= add_ln355_5_fu_1356_p2;
        add_ln355_7_reg_2448 <= add_ln355_7_fu_1360_p2;
        add_ln355_9_reg_2453 <= add_ln355_9_fu_1364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln372_reg_2698 <= add_ln372_fu_1713_p2;
        l2_weights_1_load_reg_2653 <= l2_weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln379_11_reg_2798 <= add_ln379_11_fu_1808_p2;
        add_ln379_13_reg_2803 <= add_ln379_13_fu_1813_p2;
        add_ln379_15_reg_2808 <= add_ln379_15_fu_1818_p2;
        add_ln379_5_reg_2783 <= add_ln379_5_fu_1793_p2;
        add_ln379_7_reg_2788 <= add_ln379_7_fu_1798_p2;
        add_ln379_9_reg_2793 <= add_ln379_9_fu_1803_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln386_2_reg_2828 <= add_ln386_2_fu_1882_p2;
        add_ln386_3_reg_2833 <= add_ln386_3_fu_1889_p2;
        add_ln386_4_reg_2838 <= add_ln386_4_fu_1896_p2;
        add_ln386_5_reg_2843 <= add_ln386_5_fu_1903_p2;
        add_ln386_6_reg_2848 <= add_ln386_6_fu_1910_p2;
        add_ln386_7_reg_2853 <= add_ln386_7_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_1_reg_2577 <= i_1_fu_1595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2145 <= i_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        l1_out_0_load_reg_2703 <= l1_out_0_q0;
        l1_out_1_load_reg_2708 <= l1_out_1_q0;
        l1_out_2_load_reg_2713 <= l1_out_2_q0;
        l1_out_3_load_reg_2718 <= l1_out_3_q0;
        l1_out_4_load_reg_2723 <= l1_out_4_q0;
        l1_out_5_load_reg_2728 <= l1_out_5_q0;
        l1_out_6_load_reg_2733 <= l1_out_6_q0;
        l1_out_7_load_reg_2738 <= l1_out_7_q0;
        mul_ln379_10_reg_2753 <= mul_ln379_10_fu_2000_p2;
        mul_ln379_11_reg_2758 <= mul_ln379_11_fu_2006_p2;
        mul_ln379_12_reg_2763 <= mul_ln379_12_fu_2012_p2;
        mul_ln379_13_reg_2768 <= mul_ln379_13_fu_2018_p2;
        mul_ln379_14_reg_2773 <= mul_ln379_14_fu_2024_p2;
        mul_ln379_15_reg_2778 <= mul_ln379_15_fu_2030_p2;
        mul_ln379_8_reg_2743 <= mul_ln379_8_fu_1988_p2;
        mul_ln379_9_reg_2748 <= mul_ln379_9_fu_1994_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        l1_weights_1_load_reg_2348 <= l1_weights_1_q0;
        sample_0_load_reg_2298 <= sample_0_q0;
        sample_1_load_reg_2303 <= sample_1_q0;
        sample_2_load_reg_2308 <= sample_2_q0;
        sample_3_load_reg_2318 <= sample_3_q0;
        sample_4_load_reg_2328 <= sample_4_q0;
        sample_5_load_reg_2333 <= sample_5_q0;
        sample_6_load_reg_2338 <= sample_6_q0;
        sample_7_load_reg_2343 <= sample_7_q0;
        sums_load_10_reg_2323 <= sums_q0;
        sums_load_9_reg_2313 <= sums_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        l2_weights_0_load_reg_2603 <= l2_weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_1064 <= sums_1_q0;
        reg_1068 <= sums_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_1072 <= sums_1_q1;
        reg_1076 <= sums_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_1080 <= sums_1_q1;
        reg_1084 <= sums_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        select_ln362_reg_2473 <= select_ln362_fu_1386_p3;
        sext_ln362_reg_2478 <= sext_ln362_fu_1394_p1;
        tmp_2_reg_2489 <= grp_fu_1038_p2[32'd15];
        tmp_3_reg_2499 <= grp_fu_1051_p2[32'd15];
        trunc_ln362_1_reg_2484 <= trunc_ln362_1_fu_1400_p1;
        trunc_ln362_2_reg_2494 <= trunc_ln362_2_fu_1404_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        select_ln363_2_reg_2544 <= select_ln363_2_fu_1480_p3;
        select_ln363_3_reg_2549 <= select_ln363_3_fu_1493_p3;
        select_ln363_4_reg_2554 <= select_ln363_4_fu_1506_p3;
        select_ln363_5_reg_2559 <= select_ln363_5_fu_1519_p3;
        select_ln363_6_reg_2564 <= select_ln363_6_fu_1537_p3;
        select_ln363_7_reg_2569 <= select_ln363_7_fu_1556_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        select_ln386_reg_2823 <= select_ln386_fu_1843_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln371_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        shl_ln1_reg_2590[9 : 6] <= shl_ln1_fu_1618_p3[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln_reg_2205[11 : 6] <= shl_ln_fu_1121_p3[11 : 6];
        trunc_ln351_reg_2200 <= trunc_ln351_fu_1117_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_6_reg_2509 <= grp_fu_1051_p2[32'd15];
        tmp_7_reg_2519 <= grp_fu_1038_p2[32'd15];
        trunc_ln362_3_reg_2504 <= trunc_ln362_3_fu_1408_p1;
        trunc_ln362_4_reg_2514 <= trunc_ln362_4_fu_1412_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_8_reg_2529 <= grp_fu_1051_p2[32'd15];
        tmp_9_reg_2539 <= grp_fu_1038_p2[32'd15];
        trunc_ln362_5_reg_2524 <= trunc_ln362_5_fu_1416_p1;
        trunc_ln362_6_reg_2534 <= trunc_ln362_6_fu_1420_p1;
    end
end

always @ (*) begin
    if ((((icmp_ln369_fu_1589_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln369_fu_1589_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1038_p0 = sext_ln362_reg_2478;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1038_p0 = sext_ln362_fu_1394_p1;
    end else begin
        grp_fu_1038_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_1051_p0 = sext_ln362_reg_2478;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1051_p0 = sext_ln362_fu_1394_p1;
    end else begin
        grp_fu_1051_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l1_biases_0_ce0 = 1'b1;
    end else begin
        l1_biases_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l1_biases_1_ce0 = 1'b1;
    end else begin
        l1_biases_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_0_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_0_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_0_ce0 = 1'b1;
    end else begin
        l1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_0_ce1 = 1'b1;
    end else begin
        l1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_0_we0 = 1'b1;
    end else begin
        l1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_1_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_1_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_1_ce0 = 1'b1;
    end else begin
        l1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_1_ce1 = 1'b1;
    end else begin
        l1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_1_we0 = 1'b1;
    end else begin
        l1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_2_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_2_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_2_ce0 = 1'b1;
    end else begin
        l1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_2_ce1 = 1'b1;
    end else begin
        l1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_2_we0 = 1'b1;
    end else begin
        l1_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_3_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_3_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_3_ce0 = 1'b1;
    end else begin
        l1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_3_ce1 = 1'b1;
    end else begin
        l1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_3_we0 = 1'b1;
    end else begin
        l1_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_4_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_4_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_4_ce0 = 1'b1;
    end else begin
        l1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_4_ce1 = 1'b1;
    end else begin
        l1_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_4_we0 = 1'b1;
    end else begin
        l1_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_5_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_5_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_5_ce0 = 1'b1;
    end else begin
        l1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_5_ce1 = 1'b1;
    end else begin
        l1_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_5_we0 = 1'b1;
    end else begin
        l1_out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_6_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_6_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_6_ce0 = 1'b1;
    end else begin
        l1_out_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_6_ce1 = 1'b1;
    end else begin
        l1_out_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_6_we0 = 1'b1;
    end else begin
        l1_out_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_7_address0 = zext_ln379_fu_1679_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_7_address0 = zext_ln362_fu_1424_p1;
    end else begin
        l1_out_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23))) begin
        l1_out_7_ce0 = 1'b1;
    end else begin
        l1_out_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        l1_out_7_ce1 = 1'b1;
    end else begin
        l1_out_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l1_out_7_we0 = 1'b1;
    end else begin
        l1_out_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l1_weights_0_ce0 = 1'b1;
    end else begin
        l1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        l1_weights_1_ce0 = 1'b1;
    end else begin
        l1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        l2_biases_0_ce0 = 1'b1;
    end else begin
        l2_biases_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        l2_biases_1_ce0 = 1'b1;
    end else begin
        l2_biases_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        l2_weights_0_ce0 = 1'b1;
    end else begin
        l2_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        l2_weights_1_ce0 = 1'b1;
    end else begin
        l2_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_0_ce0 = 1'b1;
    end else begin
        prediction_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_0_we0 = 1'b1;
    end else begin
        prediction_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_1_ce0 = 1'b1;
    end else begin
        prediction_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_1_we0 = 1'b1;
    end else begin
        prediction_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_2_ce0 = 1'b1;
    end else begin
        prediction_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_2_we0 = 1'b1;
    end else begin
        prediction_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_3_ce0 = 1'b1;
    end else begin
        prediction_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_3_we0 = 1'b1;
    end else begin
        prediction_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_4_ce0 = 1'b1;
    end else begin
        prediction_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_4_we0 = 1'b1;
    end else begin
        prediction_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_5_ce0 = 1'b1;
    end else begin
        prediction_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_5_we0 = 1'b1;
    end else begin
        prediction_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_6_ce0 = 1'b1;
    end else begin
        prediction_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_6_we0 = 1'b1;
    end else begin
        prediction_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_7_ce0 = 1'b1;
    end else begin
        prediction_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_7_we0 = 1'b1;
    end else begin
        prediction_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_0_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_0_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_0_ce0 = 1'b1;
    end else begin
        sample_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_1_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_1_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_1_ce0 = 1'b1;
    end else begin
        sample_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_2_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_2_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_2_ce0 = 1'b1;
    end else begin
        sample_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_3_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_3_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_3_ce0 = 1'b1;
    end else begin
        sample_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_4_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_4_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_4_ce0 = 1'b1;
    end else begin
        sample_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_5_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_5_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_5_ce0 = 1'b1;
    end else begin
        sample_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_6_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_6_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_6_ce0 = 1'b1;
    end else begin
        sample_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_7_address0 = zext_ln355_1_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_7_address0 = zext_ln355_fu_1175_p1;
    end else begin
        sample_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_7_ce0 = 1'b1;
    end else begin
        sample_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25))) begin
        sums_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24))) begin
        sums_1_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23))) begin
        sums_1_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22))) begin
        sums_1_address0 = 64'd3;
    end else if ((((icmp_ln372_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln372_fu_1630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21)))) begin
        sums_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sums_1_address0 = zext_ln371_fu_1607_p1;
    end else begin
        sums_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25))) begin
        sums_1_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24))) begin
        sums_1_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23))) begin
        sums_1_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22))) begin
        sums_1_address1 = 64'd2;
    end else if ((((icmp_ln372_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln372_fu_1630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21)))) begin
        sums_1_address1 = 64'd1;
    end else begin
        sums_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22) | ((icmp_ln372_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln372_fu_1630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21)))) begin
        sums_1_ce0 = 1'b1;
    end else begin
        sums_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22) | ((icmp_ln372_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln372_fu_1630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21)))) begin
        sums_1_ce1 = 1'b1;
    end else begin
        sums_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        sums_1_d0 = add_ln386_7_reg_2853;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sums_1_d0 = add_ln386_5_reg_2843;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sums_1_d0 = add_ln386_3_reg_2833;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sums_1_d0 = add_ln386_1_fu_1874_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sums_1_d0 = add_ln379_15_reg_2808;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sums_1_d0 = add_ln379_11_reg_2798;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        sums_1_d0 = add_ln379_7_reg_2788;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        sums_1_d0 = add_ln379_3_fu_1787_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sums_1_d0 = 16'd0;
    end else begin
        sums_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        sums_1_d1 = add_ln386_6_reg_2848;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sums_1_d1 = add_ln386_4_reg_2838;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sums_1_d1 = add_ln386_2_reg_2828;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sums_1_d1 = add_ln386_fu_1866_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sums_1_d1 = add_ln379_13_reg_2803;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sums_1_d1 = add_ln379_9_reg_2793;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        sums_1_d1 = add_ln379_5_reg_2783;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        sums_1_d1 = add_ln379_1_fu_1781_p2;
    end else begin
        sums_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20))) begin
        sums_1_we0 = 1'b1;
    end else begin
        sums_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25))) begin
        sums_1_we1 = 1'b1;
    end else begin
        sums_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8))) begin
        sums_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        sums_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        sums_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        sums_address0 = 64'd3;
    end else if ((((icmp_ln348_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln348_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        sums_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sums_address0 = zext_ln347_fu_1106_p1;
    end else begin
        sums_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8))) begin
        sums_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        sums_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        sums_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        sums_address1 = 64'd2;
    end else if ((((icmp_ln348_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln348_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        sums_address1 = 64'd1;
    end else begin
        sums_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln348_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln348_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        sums_ce0 = 1'b1;
    end else begin
        sums_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln348_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln348_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        sums_ce1 = 1'b1;
    end else begin
        sums_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sums_d0 = zext_ln363_7_fu_1585_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sums_d0 = zext_ln363_5_fu_1577_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sums_d0 = zext_ln363_3_fu_1569_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sums_d0 = zext_ln363_1_fu_1470_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sums_d0 = add_ln355_15_reg_2468;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sums_d0 = add_ln355_11_reg_2458;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sums_d0 = add_ln355_7_reg_2448;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sums_d0 = add_ln355_3_fu_1351_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sums_d0 = 16'd0;
    end else begin
        sums_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sums_d1 = zext_ln363_6_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sums_d1 = zext_ln363_4_fu_1573_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sums_d1 = zext_ln363_2_fu_1565_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sums_d1 = zext_ln363_fu_1452_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sums_d1 = add_ln355_13_reg_2463;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sums_d1 = add_ln355_9_reg_2453;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sums_d1 = add_ln355_5_reg_2443;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sums_d1 = add_ln355_1_fu_1346_p2;
    end else begin
        sums_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        sums_we0 = 1'b1;
    end else begin
        sums_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8))) begin
        sums_we1 = 1'b1;
    end else begin
        sums_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln345_fu_1088_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln347_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln348_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln369_fu_1589_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln371_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln372_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln347_fu_1100_p2 = (phi_ln347_reg_980 + 3'd1);

assign add_ln348_fu_1213_p2 = (7'd2 + j_0_0_reg_991);

assign add_ln351_fu_1139_p2 = (shl_ln_reg_2205 + j_0_0_cast22_fu_1129_p1);

assign add_ln355_11_fu_1368_p2 = ($signed(add_ln355_10_reg_2428) + $signed(sums_load_12_reg_2398));

assign add_ln355_13_fu_1372_p2 = ($signed(add_ln355_12_reg_2433) + $signed(sums_q1));

assign add_ln355_15_fu_1377_p2 = ($signed(add_ln355_14_reg_2438) + $signed(sums_q0));

assign add_ln355_1_fu_1346_p2 = ($signed(add_ln355_reg_2403) + $signed(sums_load_reg_2238));

assign add_ln355_3_fu_1351_p2 = ($signed(add_ln355_2_reg_2408) + $signed(sums_load_8_reg_2248));

assign add_ln355_5_fu_1356_p2 = ($signed(add_ln355_4_reg_2413) + $signed(sums_load_9_reg_2313));

assign add_ln355_7_fu_1360_p2 = ($signed(add_ln355_6_reg_2418) + $signed(sums_load_10_reg_2323));

assign add_ln355_9_fu_1364_p2 = ($signed(add_ln355_8_reg_2423) + $signed(sums_load_11_reg_2393));

assign add_ln363_1_fu_1457_p2 = ($signed(trunc_ln362_2_reg_2494) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_2_fu_1475_p2 = ($signed(trunc_ln362_3_reg_2504) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_3_fu_1488_p2 = ($signed(trunc_ln362_4_reg_2514) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_4_fu_1501_p2 = ($signed(trunc_ln362_5_reg_2524) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_5_fu_1514_p2 = ($signed(trunc_ln362_6_reg_2534) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_6_fu_1531_p2 = ($signed(trunc_ln362_7_fu_1527_p1) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_7_fu_1550_p2 = ($signed(trunc_ln362_8_fu_1546_p1) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln363_fu_1439_p2 = ($signed(trunc_ln362_1_reg_2484) + $signed(sext_ln362_1_fu_1436_p1));

assign add_ln371_fu_1601_p2 = (phi_ln371_reg_1015 + 3'd1);

assign add_ln372_fu_1713_p2 = (7'd2 + j4_0_0_reg_1026);

assign add_ln375_fu_1636_p2 = (j4_0_0_cast18_fu_1626_p1 + shl_ln1_reg_2590);

assign add_ln379_11_fu_1808_p2 = ($signed(reg_1084) + $signed(grp_fu_2076_p3));

assign add_ln379_13_fu_1813_p2 = ($signed(sums_1_q1) + $signed(grp_fu_2084_p3));

assign add_ln379_15_fu_1818_p2 = ($signed(sums_1_q0) + $signed(grp_fu_2092_p3));

assign add_ln379_1_fu_1781_p2 = ($signed(reg_1064) + $signed(grp_fu_2036_p3));

assign add_ln379_3_fu_1787_p2 = ($signed(reg_1068) + $signed(grp_fu_2044_p3));

assign add_ln379_5_fu_1793_p2 = ($signed(reg_1072) + $signed(grp_fu_2052_p3));

assign add_ln379_7_fu_1798_p2 = ($signed(reg_1076) + $signed(grp_fu_2060_p3));

assign add_ln379_9_fu_1803_p2 = ($signed(reg_1080) + $signed(grp_fu_2068_p3));

assign add_ln386_1_fu_1874_p2 = ($signed(reg_1068) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_2_fu_1882_p2 = ($signed(reg_1072) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_3_fu_1889_p2 = ($signed(reg_1076) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_4_fu_1896_p2 = ($signed(reg_1080) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_5_fu_1903_p2 = ($signed(reg_1084) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_6_fu_1910_p2 = ($signed(sums_1_q1) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_7_fu_1917_p2 = ($signed(sums_1_q0) + $signed(sext_ln386_fu_1863_p1));

assign add_ln386_fu_1866_p2 = ($signed(reg_1064) + $signed(sext_ln386_fu_1863_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_17_fu_1187_p1 = j_0_0_reg_991[5:0];

assign empty_22_fu_1691_p1 = j4_0_0_reg_1026[5:0];

assign grp_fu_1038_p2 = ($signed(grp_fu_1038_p0) + $signed(sums_q0));

assign grp_fu_1043_p3 = grp_fu_1038_p2[32'd15];

assign grp_fu_1051_p2 = ($signed(grp_fu_1051_p0) + $signed(sums_q1));

assign grp_fu_1056_p3 = grp_fu_1051_p2[32'd15];

assign grp_fu_1924_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1924_p2 = ($signed(mul_ln355_fu_1242_p0) * $signed(mul_ln355_fu_1242_p1));

assign grp_fu_1932_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1932_p2 = ($signed(mul_ln355_1_fu_1251_p0) * $signed(mul_ln355_1_fu_1251_p1));

assign grp_fu_1940_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1940_p2 = ($signed(mul_ln355_2_fu_1260_p0) * $signed(mul_ln355_2_fu_1260_p1));

assign grp_fu_1948_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1948_p2 = ($signed(mul_ln355_3_fu_1269_p0) * $signed(mul_ln355_3_fu_1269_p1));

assign grp_fu_1956_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1956_p2 = ($signed(mul_ln355_4_fu_1278_p0) * $signed(mul_ln355_4_fu_1278_p1));

assign grp_fu_1964_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1964_p2 = ($signed(mul_ln355_5_fu_1287_p0) * $signed(mul_ln355_5_fu_1287_p1));

assign grp_fu_1972_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1972_p2 = ($signed(mul_ln355_6_fu_1296_p0) * $signed(mul_ln355_6_fu_1296_p1));

assign grp_fu_1980_p0 = sext_ln355_9_fu_1311_p1;

assign grp_fu_1980_p2 = ($signed(mul_ln355_7_fu_1305_p0) * $signed(mul_ln355_7_fu_1305_p1));

assign grp_fu_2036_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2036_p1 = grp_fu_2036_p10;

assign grp_fu_2036_p10 = l1_out_0_load_reg_2703;

assign grp_fu_2044_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2044_p1 = grp_fu_2044_p10;

assign grp_fu_2044_p10 = l1_out_1_load_reg_2708;

assign grp_fu_2052_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2052_p1 = grp_fu_2052_p10;

assign grp_fu_2052_p10 = l1_out_2_load_reg_2713;

assign grp_fu_2060_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2060_p1 = grp_fu_2060_p10;

assign grp_fu_2060_p10 = l1_out_3_load_reg_2718;

assign grp_fu_2068_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2068_p1 = grp_fu_2068_p10;

assign grp_fu_2068_p10 = l1_out_4_load_reg_2723;

assign grp_fu_2076_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2076_p1 = grp_fu_2076_p10;

assign grp_fu_2076_p10 = l1_out_5_load_reg_2728;

assign grp_fu_2084_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2084_p1 = grp_fu_2084_p10;

assign grp_fu_2084_p10 = l1_out_6_load_reg_2733;

assign grp_fu_2092_p0 = sext_ln379_fu_1754_p1;

assign grp_fu_2092_p1 = grp_fu_2092_p10;

assign grp_fu_2092_p10 = l1_out_7_load_reg_2738;

assign i_1_fu_1595_p2 = (i2_0_reg_1003 + 4'd1);

assign i_fu_1094_p2 = (i_0_reg_968 + 7'd1);

assign icmp_ln345_fu_1088_p2 = ((i_0_reg_968 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_1111_p2 = ((phi_ln347_reg_980 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_1133_p2 = ((j_0_0_reg_991 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln369_fu_1589_p2 = ((i2_0_reg_1003 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln371_fu_1612_p2 = ((phi_ln371_reg_1015 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln372_fu_1630_p2 = ((j4_0_0_reg_1026 == 7'd64) ? 1'b1 : 1'b0);

assign j4_0_0_cast18_fu_1626_p1 = j4_0_0_reg_1026;

assign j_0_0_cast22_fu_1129_p1 = j_0_0_reg_991;

assign l1_biases_0_address0 = zext_ln362_1_fu_1169_p1;

assign l1_biases_1_address0 = zext_ln362_1_fu_1169_p1;

assign l1_out_0_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_1_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_2_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_2_d0 = ((tmp_6_reg_2509[0:0] === 1'b1) ? 15'd0 : add_ln363_2_fu_1475_p2);

assign l1_out_3_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_3_d0 = ((tmp_7_reg_2519[0:0] === 1'b1) ? 15'd0 : add_ln363_3_fu_1488_p2);

assign l1_out_4_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_4_d0 = ((tmp_8_reg_2529[0:0] === 1'b1) ? 15'd0 : add_ln363_4_fu_1501_p2);

assign l1_out_5_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_5_d0 = ((tmp_9_reg_2539[0:0] === 1'b1) ? 15'd0 : add_ln363_5_fu_1514_p2);

assign l1_out_6_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_6_d0 = ((grp_fu_1056_p3[0:0] === 1'b1) ? 15'd0 : add_ln363_6_fu_1531_p2);

assign l1_out_7_address1 = zext_ln379_1_fu_1701_p1;

assign l1_out_7_d0 = ((grp_fu_1043_p3[0:0] === 1'b1) ? 15'd0 : add_ln363_7_fu_1550_p2);

assign l1_weights_0_address0 = zext_ln351_fu_1154_p1;

assign l1_weights_1_address0 = zext_ln351_1_fu_1208_p1;

assign l2_biases_0_address0 = zext_ln386_1_fu_1833_p1;

assign l2_biases_1_address0 = zext_ln386_1_fu_1833_p1;

assign l2_weights_0_address0 = zext_ln375_fu_1651_p1;

assign l2_weights_1_address0 = zext_ln375_1_fu_1674_p1;

assign lshr_ln1_fu_1144_p4 = {{add_ln351_fu_1139_p2[11:1]}};

assign lshr_ln2_fu_1823_p4 = {{i2_0_reg_1003[3:1]}};

assign lshr_ln351_1_fu_1201_p3 = {{trunc_ln351_reg_2200}, {tmp_4_fu_1191_p4}};

assign lshr_ln375_1_fu_1666_p3 = {{i2_0_reg_1003}, {tmp_5_fu_1656_p4}};

assign lshr_ln3_fu_1641_p4 = {{add_ln375_fu_1636_p2[9:1]}};

assign lshr_ln_fu_1159_p4 = {{i_0_reg_968[6:1]}};

assign mul_ln355_1_fu_1251_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_1_fu_1251_p1 = sample_1_load_reg_2303;

assign mul_ln355_2_fu_1260_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_2_fu_1260_p1 = sample_2_load_reg_2308;

assign mul_ln355_3_fu_1269_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_3_fu_1269_p1 = sample_3_load_reg_2318;

assign mul_ln355_4_fu_1278_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_4_fu_1278_p1 = sample_4_load_reg_2328;

assign mul_ln355_5_fu_1287_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_5_fu_1287_p1 = sample_5_load_reg_2333;

assign mul_ln355_6_fu_1296_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_6_fu_1296_p1 = sample_6_load_reg_2338;

assign mul_ln355_7_fu_1305_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_7_fu_1305_p1 = sample_7_load_reg_2343;

assign mul_ln355_fu_1242_p0 = sext_ln355_fu_1236_p1;

assign mul_ln355_fu_1242_p1 = sample_0_load_reg_2298;

assign mul_ln379_10_fu_2000_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_10_fu_2000_p1 = mul_ln379_10_fu_2000_p10;

assign mul_ln379_10_fu_2000_p10 = l1_out_2_q1;

assign mul_ln379_11_fu_2006_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_11_fu_2006_p1 = mul_ln379_11_fu_2006_p10;

assign mul_ln379_11_fu_2006_p10 = l1_out_3_q1;

assign mul_ln379_12_fu_2012_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_12_fu_2012_p1 = mul_ln379_12_fu_2012_p10;

assign mul_ln379_12_fu_2012_p10 = l1_out_4_q1;

assign mul_ln379_13_fu_2018_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_13_fu_2018_p1 = mul_ln379_13_fu_2018_p10;

assign mul_ln379_13_fu_2018_p10 = l1_out_5_q1;

assign mul_ln379_14_fu_2024_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_14_fu_2024_p1 = mul_ln379_14_fu_2024_p10;

assign mul_ln379_14_fu_2024_p10 = l1_out_6_q1;

assign mul_ln379_15_fu_2030_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_15_fu_2030_p1 = mul_ln379_15_fu_2030_p10;

assign mul_ln379_15_fu_2030_p10 = l1_out_7_q1;

assign mul_ln379_8_fu_1988_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_8_fu_1988_p1 = mul_ln379_8_fu_1988_p10;

assign mul_ln379_8_fu_1988_p10 = l1_out_0_q1;

assign mul_ln379_9_fu_1994_p0 = sext_ln379_1_fu_1719_p1;

assign mul_ln379_9_fu_1994_p1 = mul_ln379_9_fu_1994_p10;

assign mul_ln379_9_fu_1994_p10 = l1_out_1_q1;

assign or_ln348_fu_1219_p2 = (empty_17_reg_2283 | 6'd1);

assign or_ln372_fu_1695_p2 = (empty_22_fu_1691_p1 | 6'd1);

assign prediction_0_address0 = zext_ln386_fu_1851_p1;

assign prediction_0_d0 = ($signed(reg_1064) + $signed(sext_ln386_fu_1863_p1));

assign prediction_1_address0 = zext_ln386_fu_1851_p1;

assign prediction_1_d0 = ($signed(reg_1068) + $signed(sext_ln386_fu_1863_p1));

assign prediction_2_address0 = zext_ln386_fu_1851_p1;

assign prediction_2_d0 = ($signed(reg_1072) + $signed(sext_ln386_fu_1863_p1));

assign prediction_3_address0 = zext_ln386_fu_1851_p1;

assign prediction_3_d0 = ($signed(reg_1076) + $signed(sext_ln386_fu_1863_p1));

assign prediction_4_address0 = zext_ln386_fu_1851_p1;

assign prediction_4_d0 = ($signed(reg_1080) + $signed(sext_ln386_fu_1863_p1));

assign prediction_5_address0 = zext_ln386_fu_1851_p1;

assign prediction_5_d0 = ($signed(reg_1084) + $signed(sext_ln386_fu_1863_p1));

assign prediction_6_address0 = zext_ln386_fu_1851_p1;

assign prediction_6_d0 = ($signed(sums_1_q1) + $signed(sext_ln386_fu_1863_p1));

assign prediction_7_address0 = zext_ln386_fu_1851_p1;

assign prediction_7_d0 = ($signed(sums_1_q0) + $signed(sext_ln386_fu_1863_p1));

assign select_ln362_fu_1386_p3 = ((trunc_ln362_fu_1382_p1[0:0] === 1'b1) ? l1_biases_1_q0 : l1_biases_0_q0);

assign select_ln363_1_fu_1462_p3 = ((tmp_3_reg_2499[0:0] === 1'b1) ? 15'd0 : add_ln363_1_fu_1457_p2);

assign select_ln363_2_fu_1480_p3 = ((tmp_6_reg_2509[0:0] === 1'b1) ? 15'd0 : add_ln363_2_fu_1475_p2);

assign select_ln363_3_fu_1493_p3 = ((tmp_7_reg_2519[0:0] === 1'b1) ? 15'd0 : add_ln363_3_fu_1488_p2);

assign select_ln363_4_fu_1506_p3 = ((tmp_8_reg_2529[0:0] === 1'b1) ? 15'd0 : add_ln363_4_fu_1501_p2);

assign select_ln363_5_fu_1519_p3 = ((tmp_9_reg_2539[0:0] === 1'b1) ? 15'd0 : add_ln363_5_fu_1514_p2);

assign select_ln363_6_fu_1537_p3 = ((grp_fu_1056_p3[0:0] === 1'b1) ? 15'd0 : add_ln363_6_fu_1531_p2);

assign select_ln363_7_fu_1556_p3 = ((grp_fu_1043_p3[0:0] === 1'b1) ? 15'd0 : add_ln363_7_fu_1550_p2);

assign select_ln363_fu_1444_p3 = ((tmp_2_reg_2489[0:0] === 1'b1) ? 15'd0 : add_ln363_fu_1439_p2);

assign select_ln386_fu_1843_p3 = ((trunc_ln386_fu_1839_p1[0:0] === 1'b1) ? l2_biases_1_q0 : l2_biases_0_q0);

assign sext_ln355_9_fu_1311_p1 = $signed(l1_weights_1_load_reg_2348);

assign sext_ln355_fu_1236_p1 = $signed(l1_weights_0_load_reg_2228);

assign sext_ln362_1_fu_1436_p1 = select_ln362_reg_2473;

assign sext_ln362_fu_1394_p1 = select_ln362_fu_1386_p3;

assign sext_ln379_1_fu_1719_p1 = $signed(l2_weights_1_load_reg_2653);

assign sext_ln379_fu_1754_p1 = $signed(l2_weights_0_load_reg_2603);

assign sext_ln386_fu_1863_p1 = $signed(select_ln386_reg_2823);

assign shl_ln1_fu_1618_p3 = {{i2_0_reg_1003}, {6'd0}};

assign shl_ln_fu_1121_p3 = {{trunc_ln351_fu_1117_p1}, {6'd0}};

assign tmp_4_fu_1191_p4 = {{j_0_0_reg_991[5:1]}};

assign tmp_5_fu_1656_p4 = {{j4_0_0_reg_1026[5:1]}};

assign trunc_ln351_fu_1117_p1 = i_0_reg_968[5:0];

assign trunc_ln362_1_fu_1400_p1 = sums_q0[14:0];

assign trunc_ln362_2_fu_1404_p1 = sums_q1[14:0];

assign trunc_ln362_3_fu_1408_p1 = sums_q1[14:0];

assign trunc_ln362_4_fu_1412_p1 = sums_q0[14:0];

assign trunc_ln362_5_fu_1416_p1 = sums_q1[14:0];

assign trunc_ln362_6_fu_1420_p1 = sums_q0[14:0];

assign trunc_ln362_7_fu_1527_p1 = sums_q1[14:0];

assign trunc_ln362_8_fu_1546_p1 = sums_q0[14:0];

assign trunc_ln362_fu_1382_p1 = i_0_reg_968[0:0];

assign trunc_ln386_fu_1839_p1 = i2_0_reg_1003[0:0];

assign zext_ln347_fu_1106_p1 = phi_ln347_reg_980;

assign zext_ln351_1_fu_1208_p1 = lshr_ln351_1_fu_1201_p3;

assign zext_ln351_fu_1154_p1 = lshr_ln1_fu_1144_p4;

assign zext_ln355_1_fu_1224_p1 = or_ln348_fu_1219_p2;

assign zext_ln355_fu_1175_p1 = j_0_0_reg_991;

assign zext_ln362_1_fu_1169_p1 = lshr_ln_fu_1159_p4;

assign zext_ln362_fu_1424_p1 = i_0_reg_968;

assign zext_ln363_1_fu_1470_p1 = select_ln363_1_fu_1462_p3;

assign zext_ln363_2_fu_1565_p1 = select_ln363_2_reg_2544;

assign zext_ln363_3_fu_1569_p1 = select_ln363_3_reg_2549;

assign zext_ln363_4_fu_1573_p1 = select_ln363_4_reg_2554;

assign zext_ln363_5_fu_1577_p1 = select_ln363_5_reg_2559;

assign zext_ln363_6_fu_1581_p1 = select_ln363_6_reg_2564;

assign zext_ln363_7_fu_1585_p1 = select_ln363_7_reg_2569;

assign zext_ln363_fu_1452_p1 = select_ln363_fu_1444_p3;

assign zext_ln371_fu_1607_p1 = phi_ln371_reg_1015;

assign zext_ln375_1_fu_1674_p1 = lshr_ln375_1_fu_1666_p3;

assign zext_ln375_fu_1651_p1 = lshr_ln3_fu_1641_p4;

assign zext_ln379_1_fu_1701_p1 = or_ln372_fu_1695_p2;

assign zext_ln379_fu_1679_p1 = j4_0_0_reg_1026;

assign zext_ln386_1_fu_1833_p1 = lshr_ln2_fu_1823_p4;

assign zext_ln386_fu_1851_p1 = i2_0_reg_1003;

always @ (posedge ap_clk) begin
    shl_ln_reg_2205[5:0] <= 6'b000000;
    shl_ln1_reg_2590[5:0] <= 6'b000000;
end

endmodule //mlp_kernel
