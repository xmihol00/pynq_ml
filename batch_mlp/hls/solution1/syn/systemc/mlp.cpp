// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> mlp::ap_ST_fsm_state1 = "1";
const sc_lv<11> mlp::ap_ST_fsm_state2 = "10";
const sc_lv<11> mlp::ap_ST_fsm_state3 = "100";
const sc_lv<11> mlp::ap_ST_fsm_state4 = "1000";
const sc_lv<11> mlp::ap_ST_fsm_state5 = "10000";
const sc_lv<11> mlp::ap_ST_fsm_state6 = "100000";
const sc_lv<11> mlp::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> mlp::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> mlp::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> mlp::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> mlp::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> mlp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mlp::ap_const_lv32_1 = "1";
const sc_lv<1> mlp::ap_const_lv1_0 = "0";
const sc_lv<32> mlp::ap_const_lv32_9 = "1001";
const sc_lv<1> mlp::ap_const_lv1_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_A = "1010";
const int mlp::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mlp::ap_const_lv32_2 = "10";
const sc_lv<32> mlp::ap_const_lv32_4 = "100";
const sc_lv<32> mlp::ap_const_lv32_6 = "110";
const sc_lv<32> mlp::ap_const_lv32_7 = "111";
const sc_lv<32> mlp::ap_const_lv32_8 = "1000";
const bool mlp::ap_const_boolean_0 = false;
const sc_lv<4> mlp::ap_const_lv4_0 = "0000";
const sc_lv<10> mlp::ap_const_lv10_0 = "0000000000";
const sc_lv<10> mlp::ap_const_lv10_7 = "111";
const sc_lv<7> mlp::ap_const_lv7_0 = "0000000";
const sc_lv<32> mlp::ap_const_lv32_5 = "101";
const sc_lv<32> mlp::ap_const_lv32_3 = "11";
const sc_lv<8> mlp::ap_const_lv8_0 = "00000000";
const sc_lv<32> mlp::ap_const_lv32_F = "1111";
const sc_lv<16> mlp::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> mlp::ap_const_lv16_0 = "0000000000000000";
const sc_lv<3> mlp::ap_const_lv3_6 = "110";
const sc_lv<3> mlp::ap_const_lv3_5 = "101";
const sc_lv<3> mlp::ap_const_lv3_4 = "100";
const sc_lv<3> mlp::ap_const_lv3_3 = "11";
const sc_lv<3> mlp::ap_const_lv3_2 = "10";
const sc_lv<3> mlp::ap_const_lv3_1 = "1";
const sc_lv<3> mlp::ap_const_lv3_0 = "000";
const sc_lv<3> mlp::ap_const_lv3_7 = "111";
const sc_lv<4> mlp::ap_const_lv4_8 = "1000";
const sc_lv<4> mlp::ap_const_lv4_1 = "1";
const sc_lv<7> mlp::ap_const_lv7_40 = "1000000";
const sc_lv<7> mlp::ap_const_lv7_1 = "1";
const sc_lv<32> mlp::ap_const_lv32_1FF = "111111111";
const sc_lv<10> mlp::ap_const_lv10_1FF = "111111111";
const sc_lv<512> mlp::ap_const_lv512_lc_1 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<10> mlp::ap_const_lv10_8 = "1000";
const sc_lv<4> mlp::ap_const_lv4_7 = "111";
const sc_lv<4> mlp::ap_const_lv4_A = "1010";
const sc_lv<8> mlp::ap_const_lv8_7F = "1111111";
const sc_lv<32> mlp::ap_const_lv32_7F = "1111111";
const sc_lv<128> mlp::ap_const_lv128_lc_2 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> mlp::ap_const_lv32_10 = "10000";
const sc_lv<8> mlp::ap_const_lv8_1 = "1";
const sc_lv<8> mlp::ap_const_lv8_8 = "1000";
const bool mlp::ap_const_boolean_1 = true;

mlp::mlp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mlp_control_s_axi_U = new mlp_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("mlp_control_s_axi_U");
    mlp_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    mlp_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    mlp_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    mlp_control_s_axi_U->WVALID(s_axi_control_WVALID);
    mlp_control_s_axi_U->WREADY(s_axi_control_WREADY);
    mlp_control_s_axi_U->WDATA(s_axi_control_WDATA);
    mlp_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    mlp_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    mlp_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    mlp_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    mlp_control_s_axi_U->RVALID(s_axi_control_RVALID);
    mlp_control_s_axi_U->RREADY(s_axi_control_RREADY);
    mlp_control_s_axi_U->RDATA(s_axi_control_RDATA);
    mlp_control_s_axi_U->RRESP(s_axi_control_RRESP);
    mlp_control_s_axi_U->BVALID(s_axi_control_BVALID);
    mlp_control_s_axi_U->BREADY(s_axi_control_BREADY);
    mlp_control_s_axi_U->BRESP(s_axi_control_BRESP);
    mlp_control_s_axi_U->ACLK(ap_clk);
    mlp_control_s_axi_U->ARESET(ap_rst_n_inv);
    mlp_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    mlp_control_s_axi_U->ap_start(ap_start);
    mlp_control_s_axi_U->interrupt(interrupt);
    mlp_control_s_axi_U->ap_ready(ap_ready);
    mlp_control_s_axi_U->ap_done(ap_done);
    mlp_control_s_axi_U->ap_idle(ap_idle);
    sample_0_U = new mlp_sample_0("sample_0_U");
    sample_0_U->clk(ap_clk);
    sample_0_U->reset(ap_rst_n_inv);
    sample_0_U->address0(sample_0_address0);
    sample_0_U->ce0(sample_0_ce0);
    sample_0_U->we0(sample_0_we0);
    sample_0_U->d0(trunc_ln425_1_fu_786_p1);
    sample_0_U->q0(sample_0_q0);
    sample_0_U->address1(grp_mlp_kernel_fu_569_sample_0_address1);
    sample_0_U->ce1(sample_0_ce1);
    sample_0_U->q1(sample_0_q1);
    sample_1_U = new mlp_sample_0("sample_1_U");
    sample_1_U->clk(ap_clk);
    sample_1_U->reset(ap_rst_n_inv);
    sample_1_U->address0(sample_1_address0);
    sample_1_U->ce0(sample_1_ce0);
    sample_1_U->we0(sample_1_we0);
    sample_1_U->d0(trunc_ln425_1_fu_786_p1);
    sample_1_U->q0(sample_1_q0);
    sample_1_U->address1(grp_mlp_kernel_fu_569_sample_1_address1);
    sample_1_U->ce1(sample_1_ce1);
    sample_1_U->q1(sample_1_q1);
    sample_2_U = new mlp_sample_0("sample_2_U");
    sample_2_U->clk(ap_clk);
    sample_2_U->reset(ap_rst_n_inv);
    sample_2_U->address0(sample_2_address0);
    sample_2_U->ce0(sample_2_ce0);
    sample_2_U->we0(sample_2_we0);
    sample_2_U->d0(trunc_ln425_1_fu_786_p1);
    sample_2_U->q0(sample_2_q0);
    sample_2_U->address1(grp_mlp_kernel_fu_569_sample_2_address1);
    sample_2_U->ce1(sample_2_ce1);
    sample_2_U->q1(sample_2_q1);
    sample_3_U = new mlp_sample_0("sample_3_U");
    sample_3_U->clk(ap_clk);
    sample_3_U->reset(ap_rst_n_inv);
    sample_3_U->address0(sample_3_address0);
    sample_3_U->ce0(sample_3_ce0);
    sample_3_U->we0(sample_3_we0);
    sample_3_U->d0(trunc_ln425_1_fu_786_p1);
    sample_3_U->q0(sample_3_q0);
    sample_3_U->address1(grp_mlp_kernel_fu_569_sample_3_address1);
    sample_3_U->ce1(sample_3_ce1);
    sample_3_U->q1(sample_3_q1);
    sample_4_U = new mlp_sample_0("sample_4_U");
    sample_4_U->clk(ap_clk);
    sample_4_U->reset(ap_rst_n_inv);
    sample_4_U->address0(sample_4_address0);
    sample_4_U->ce0(sample_4_ce0);
    sample_4_U->we0(sample_4_we0);
    sample_4_U->d0(trunc_ln425_1_fu_786_p1);
    sample_4_U->q0(sample_4_q0);
    sample_4_U->address1(grp_mlp_kernel_fu_569_sample_4_address1);
    sample_4_U->ce1(sample_4_ce1);
    sample_4_U->q1(sample_4_q1);
    sample_5_U = new mlp_sample_0("sample_5_U");
    sample_5_U->clk(ap_clk);
    sample_5_U->reset(ap_rst_n_inv);
    sample_5_U->address0(sample_5_address0);
    sample_5_U->ce0(sample_5_ce0);
    sample_5_U->we0(sample_5_we0);
    sample_5_U->d0(trunc_ln425_1_fu_786_p1);
    sample_5_U->q0(sample_5_q0);
    sample_5_U->address1(grp_mlp_kernel_fu_569_sample_5_address1);
    sample_5_U->ce1(sample_5_ce1);
    sample_5_U->q1(sample_5_q1);
    sample_6_U = new mlp_sample_0("sample_6_U");
    sample_6_U->clk(ap_clk);
    sample_6_U->reset(ap_rst_n_inv);
    sample_6_U->address0(sample_6_address0);
    sample_6_U->ce0(sample_6_ce0);
    sample_6_U->we0(sample_6_we0);
    sample_6_U->d0(trunc_ln425_1_fu_786_p1);
    sample_6_U->q0(sample_6_q0);
    sample_6_U->address1(grp_mlp_kernel_fu_569_sample_6_address1);
    sample_6_U->ce1(sample_6_ce1);
    sample_6_U->q1(sample_6_q1);
    sample_7_U = new mlp_sample_0("sample_7_U");
    sample_7_U->clk(ap_clk);
    sample_7_U->reset(ap_rst_n_inv);
    sample_7_U->address0(sample_7_address0);
    sample_7_U->ce0(sample_7_ce0);
    sample_7_U->we0(sample_7_we0);
    sample_7_U->d0(trunc_ln425_1_fu_786_p1);
    sample_7_U->q0(sample_7_q0);
    sample_7_U->address1(grp_mlp_kernel_fu_569_sample_7_address1);
    sample_7_U->ce1(sample_7_ce1);
    sample_7_U->q1(sample_7_q1);
    prediction_0_U = new mlp_prediction_0("prediction_0_U");
    prediction_0_U->clk(ap_clk);
    prediction_0_U->reset(ap_rst_n_inv);
    prediction_0_U->address0(prediction_0_address0);
    prediction_0_U->ce0(prediction_0_ce0);
    prediction_0_U->we0(prediction_0_we0);
    prediction_0_U->d0(grp_mlp_kernel_fu_569_prediction_0_d0);
    prediction_0_U->q0(prediction_0_q0);
    prediction_1_U = new mlp_prediction_0("prediction_1_U");
    prediction_1_U->clk(ap_clk);
    prediction_1_U->reset(ap_rst_n_inv);
    prediction_1_U->address0(prediction_1_address0);
    prediction_1_U->ce0(prediction_1_ce0);
    prediction_1_U->we0(prediction_1_we0);
    prediction_1_U->d0(grp_mlp_kernel_fu_569_prediction_1_d0);
    prediction_1_U->q0(prediction_1_q0);
    prediction_2_U = new mlp_prediction_0("prediction_2_U");
    prediction_2_U->clk(ap_clk);
    prediction_2_U->reset(ap_rst_n_inv);
    prediction_2_U->address0(prediction_2_address0);
    prediction_2_U->ce0(prediction_2_ce0);
    prediction_2_U->we0(prediction_2_we0);
    prediction_2_U->d0(grp_mlp_kernel_fu_569_prediction_2_d0);
    prediction_2_U->q0(prediction_2_q0);
    prediction_3_U = new mlp_prediction_0("prediction_3_U");
    prediction_3_U->clk(ap_clk);
    prediction_3_U->reset(ap_rst_n_inv);
    prediction_3_U->address0(prediction_3_address0);
    prediction_3_U->ce0(prediction_3_ce0);
    prediction_3_U->we0(prediction_3_we0);
    prediction_3_U->d0(grp_mlp_kernel_fu_569_prediction_3_d0);
    prediction_3_U->q0(prediction_3_q0);
    prediction_4_U = new mlp_prediction_0("prediction_4_U");
    prediction_4_U->clk(ap_clk);
    prediction_4_U->reset(ap_rst_n_inv);
    prediction_4_U->address0(prediction_4_address0);
    prediction_4_U->ce0(prediction_4_ce0);
    prediction_4_U->we0(prediction_4_we0);
    prediction_4_U->d0(grp_mlp_kernel_fu_569_prediction_4_d0);
    prediction_4_U->q0(prediction_4_q0);
    prediction_5_U = new mlp_prediction_0("prediction_5_U");
    prediction_5_U->clk(ap_clk);
    prediction_5_U->reset(ap_rst_n_inv);
    prediction_5_U->address0(prediction_5_address0);
    prediction_5_U->ce0(prediction_5_ce0);
    prediction_5_U->we0(prediction_5_we0);
    prediction_5_U->d0(grp_mlp_kernel_fu_569_prediction_5_d0);
    prediction_5_U->q0(prediction_5_q0);
    prediction_6_U = new mlp_prediction_0("prediction_6_U");
    prediction_6_U->clk(ap_clk);
    prediction_6_U->reset(ap_rst_n_inv);
    prediction_6_U->address0(prediction_6_address0);
    prediction_6_U->ce0(prediction_6_ce0);
    prediction_6_U->we0(prediction_6_we0);
    prediction_6_U->d0(grp_mlp_kernel_fu_569_prediction_6_d0);
    prediction_6_U->q0(prediction_6_q0);
    prediction_7_U = new mlp_prediction_0("prediction_7_U");
    prediction_7_U->clk(ap_clk);
    prediction_7_U->reset(ap_rst_n_inv);
    prediction_7_U->address0(prediction_7_address0);
    prediction_7_U->ce0(prediction_7_ce0);
    prediction_7_U->we0(prediction_7_we0);
    prediction_7_U->d0(grp_mlp_kernel_fu_569_prediction_7_d0);
    prediction_7_U->q0(prediction_7_q0);
    grp_mlp_kernel_fu_569 = new mlp_kernel("grp_mlp_kernel_fu_569");
    grp_mlp_kernel_fu_569->ap_clk(ap_clk);
    grp_mlp_kernel_fu_569->ap_rst(ap_rst_n_inv);
    grp_mlp_kernel_fu_569->ap_start(grp_mlp_kernel_fu_569_ap_start);
    grp_mlp_kernel_fu_569->ap_done(grp_mlp_kernel_fu_569_ap_done);
    grp_mlp_kernel_fu_569->ap_idle(grp_mlp_kernel_fu_569_ap_idle);
    grp_mlp_kernel_fu_569->ap_ready(grp_mlp_kernel_fu_569_ap_ready);
    grp_mlp_kernel_fu_569->sample_0_address0(grp_mlp_kernel_fu_569_sample_0_address0);
    grp_mlp_kernel_fu_569->sample_0_ce0(grp_mlp_kernel_fu_569_sample_0_ce0);
    grp_mlp_kernel_fu_569->sample_0_q0(sample_0_q0);
    grp_mlp_kernel_fu_569->sample_0_address1(grp_mlp_kernel_fu_569_sample_0_address1);
    grp_mlp_kernel_fu_569->sample_0_ce1(grp_mlp_kernel_fu_569_sample_0_ce1);
    grp_mlp_kernel_fu_569->sample_0_q1(sample_0_q1);
    grp_mlp_kernel_fu_569->sample_1_address0(grp_mlp_kernel_fu_569_sample_1_address0);
    grp_mlp_kernel_fu_569->sample_1_ce0(grp_mlp_kernel_fu_569_sample_1_ce0);
    grp_mlp_kernel_fu_569->sample_1_q0(sample_1_q0);
    grp_mlp_kernel_fu_569->sample_1_address1(grp_mlp_kernel_fu_569_sample_1_address1);
    grp_mlp_kernel_fu_569->sample_1_ce1(grp_mlp_kernel_fu_569_sample_1_ce1);
    grp_mlp_kernel_fu_569->sample_1_q1(sample_1_q1);
    grp_mlp_kernel_fu_569->sample_2_address0(grp_mlp_kernel_fu_569_sample_2_address0);
    grp_mlp_kernel_fu_569->sample_2_ce0(grp_mlp_kernel_fu_569_sample_2_ce0);
    grp_mlp_kernel_fu_569->sample_2_q0(sample_2_q0);
    grp_mlp_kernel_fu_569->sample_2_address1(grp_mlp_kernel_fu_569_sample_2_address1);
    grp_mlp_kernel_fu_569->sample_2_ce1(grp_mlp_kernel_fu_569_sample_2_ce1);
    grp_mlp_kernel_fu_569->sample_2_q1(sample_2_q1);
    grp_mlp_kernel_fu_569->sample_3_address0(grp_mlp_kernel_fu_569_sample_3_address0);
    grp_mlp_kernel_fu_569->sample_3_ce0(grp_mlp_kernel_fu_569_sample_3_ce0);
    grp_mlp_kernel_fu_569->sample_3_q0(sample_3_q0);
    grp_mlp_kernel_fu_569->sample_3_address1(grp_mlp_kernel_fu_569_sample_3_address1);
    grp_mlp_kernel_fu_569->sample_3_ce1(grp_mlp_kernel_fu_569_sample_3_ce1);
    grp_mlp_kernel_fu_569->sample_3_q1(sample_3_q1);
    grp_mlp_kernel_fu_569->sample_4_address0(grp_mlp_kernel_fu_569_sample_4_address0);
    grp_mlp_kernel_fu_569->sample_4_ce0(grp_mlp_kernel_fu_569_sample_4_ce0);
    grp_mlp_kernel_fu_569->sample_4_q0(sample_4_q0);
    grp_mlp_kernel_fu_569->sample_4_address1(grp_mlp_kernel_fu_569_sample_4_address1);
    grp_mlp_kernel_fu_569->sample_4_ce1(grp_mlp_kernel_fu_569_sample_4_ce1);
    grp_mlp_kernel_fu_569->sample_4_q1(sample_4_q1);
    grp_mlp_kernel_fu_569->sample_5_address0(grp_mlp_kernel_fu_569_sample_5_address0);
    grp_mlp_kernel_fu_569->sample_5_ce0(grp_mlp_kernel_fu_569_sample_5_ce0);
    grp_mlp_kernel_fu_569->sample_5_q0(sample_5_q0);
    grp_mlp_kernel_fu_569->sample_5_address1(grp_mlp_kernel_fu_569_sample_5_address1);
    grp_mlp_kernel_fu_569->sample_5_ce1(grp_mlp_kernel_fu_569_sample_5_ce1);
    grp_mlp_kernel_fu_569->sample_5_q1(sample_5_q1);
    grp_mlp_kernel_fu_569->sample_6_address0(grp_mlp_kernel_fu_569_sample_6_address0);
    grp_mlp_kernel_fu_569->sample_6_ce0(grp_mlp_kernel_fu_569_sample_6_ce0);
    grp_mlp_kernel_fu_569->sample_6_q0(sample_6_q0);
    grp_mlp_kernel_fu_569->sample_6_address1(grp_mlp_kernel_fu_569_sample_6_address1);
    grp_mlp_kernel_fu_569->sample_6_ce1(grp_mlp_kernel_fu_569_sample_6_ce1);
    grp_mlp_kernel_fu_569->sample_6_q1(sample_6_q1);
    grp_mlp_kernel_fu_569->sample_7_address0(grp_mlp_kernel_fu_569_sample_7_address0);
    grp_mlp_kernel_fu_569->sample_7_ce0(grp_mlp_kernel_fu_569_sample_7_ce0);
    grp_mlp_kernel_fu_569->sample_7_q0(sample_7_q0);
    grp_mlp_kernel_fu_569->sample_7_address1(grp_mlp_kernel_fu_569_sample_7_address1);
    grp_mlp_kernel_fu_569->sample_7_ce1(grp_mlp_kernel_fu_569_sample_7_ce1);
    grp_mlp_kernel_fu_569->sample_7_q1(sample_7_q1);
    grp_mlp_kernel_fu_569->prediction_0_address0(grp_mlp_kernel_fu_569_prediction_0_address0);
    grp_mlp_kernel_fu_569->prediction_0_ce0(grp_mlp_kernel_fu_569_prediction_0_ce0);
    grp_mlp_kernel_fu_569->prediction_0_we0(grp_mlp_kernel_fu_569_prediction_0_we0);
    grp_mlp_kernel_fu_569->prediction_0_d0(grp_mlp_kernel_fu_569_prediction_0_d0);
    grp_mlp_kernel_fu_569->prediction_1_address0(grp_mlp_kernel_fu_569_prediction_1_address0);
    grp_mlp_kernel_fu_569->prediction_1_ce0(grp_mlp_kernel_fu_569_prediction_1_ce0);
    grp_mlp_kernel_fu_569->prediction_1_we0(grp_mlp_kernel_fu_569_prediction_1_we0);
    grp_mlp_kernel_fu_569->prediction_1_d0(grp_mlp_kernel_fu_569_prediction_1_d0);
    grp_mlp_kernel_fu_569->prediction_2_address0(grp_mlp_kernel_fu_569_prediction_2_address0);
    grp_mlp_kernel_fu_569->prediction_2_ce0(grp_mlp_kernel_fu_569_prediction_2_ce0);
    grp_mlp_kernel_fu_569->prediction_2_we0(grp_mlp_kernel_fu_569_prediction_2_we0);
    grp_mlp_kernel_fu_569->prediction_2_d0(grp_mlp_kernel_fu_569_prediction_2_d0);
    grp_mlp_kernel_fu_569->prediction_3_address0(grp_mlp_kernel_fu_569_prediction_3_address0);
    grp_mlp_kernel_fu_569->prediction_3_ce0(grp_mlp_kernel_fu_569_prediction_3_ce0);
    grp_mlp_kernel_fu_569->prediction_3_we0(grp_mlp_kernel_fu_569_prediction_3_we0);
    grp_mlp_kernel_fu_569->prediction_3_d0(grp_mlp_kernel_fu_569_prediction_3_d0);
    grp_mlp_kernel_fu_569->prediction_4_address0(grp_mlp_kernel_fu_569_prediction_4_address0);
    grp_mlp_kernel_fu_569->prediction_4_ce0(grp_mlp_kernel_fu_569_prediction_4_ce0);
    grp_mlp_kernel_fu_569->prediction_4_we0(grp_mlp_kernel_fu_569_prediction_4_we0);
    grp_mlp_kernel_fu_569->prediction_4_d0(grp_mlp_kernel_fu_569_prediction_4_d0);
    grp_mlp_kernel_fu_569->prediction_5_address0(grp_mlp_kernel_fu_569_prediction_5_address0);
    grp_mlp_kernel_fu_569->prediction_5_ce0(grp_mlp_kernel_fu_569_prediction_5_ce0);
    grp_mlp_kernel_fu_569->prediction_5_we0(grp_mlp_kernel_fu_569_prediction_5_we0);
    grp_mlp_kernel_fu_569->prediction_5_d0(grp_mlp_kernel_fu_569_prediction_5_d0);
    grp_mlp_kernel_fu_569->prediction_6_address0(grp_mlp_kernel_fu_569_prediction_6_address0);
    grp_mlp_kernel_fu_569->prediction_6_ce0(grp_mlp_kernel_fu_569_prediction_6_ce0);
    grp_mlp_kernel_fu_569->prediction_6_we0(grp_mlp_kernel_fu_569_prediction_6_we0);
    grp_mlp_kernel_fu_569->prediction_6_d0(grp_mlp_kernel_fu_569_prediction_6_d0);
    grp_mlp_kernel_fu_569->prediction_7_address0(grp_mlp_kernel_fu_569_prediction_7_address0);
    grp_mlp_kernel_fu_569->prediction_7_ce0(grp_mlp_kernel_fu_569_prediction_7_ce0);
    grp_mlp_kernel_fu_569->prediction_7_we0(grp_mlp_kernel_fu_569_prediction_7_we0);
    grp_mlp_kernel_fu_569->prediction_7_d0(grp_mlp_kernel_fu_569_prediction_7_d0);
    mlp_mux_83_16_1_1_U330 = new mlp_mux_83_16_1_1<1,1,16,16,16,16,16,16,16,16,3,16>("mlp_mux_83_16_1_1_U330");
    mlp_mux_83_16_1_1_U330->din0(prediction_0_q0);
    mlp_mux_83_16_1_1_U330->din1(prediction_1_q0);
    mlp_mux_83_16_1_1_U330->din2(prediction_2_q0);
    mlp_mux_83_16_1_1_U330->din3(prediction_3_q0);
    mlp_mux_83_16_1_1_U330->din4(prediction_4_q0);
    mlp_mux_83_16_1_1_U330->din5(prediction_5_q0);
    mlp_mux_83_16_1_1_U330->din6(prediction_6_q0);
    mlp_mux_83_16_1_1_U330->din7(prediction_7_q0);
    mlp_mux_83_16_1_1_U330->din8(trunc_ln444_reg_1150);
    mlp_mux_83_16_1_1_U330->dout(val_assign_fu_874_p10);
    regslice_both_in_V_data_V_U = new regslice_both<512>("regslice_both_in_V_data_V_U");
    regslice_both_in_V_data_V_U->ap_clk(ap_clk);
    regslice_both_in_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_V_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_data_V_U->ack_in(regslice_both_in_V_data_V_U_ack_in);
    regslice_both_in_V_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_V_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_V_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_data_V_U->apdone_blk(regslice_both_in_V_data_V_U_apdone_blk);
    regslice_both_in_V_keep_V_U = new regslice_both<64>("regslice_both_in_V_keep_V_U");
    regslice_both_in_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_in_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_keep_V_U->data_in(in_r_TKEEP);
    regslice_both_in_V_keep_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_keep_V_U->ack_in(regslice_both_in_V_keep_V_U_ack_in);
    regslice_both_in_V_keep_V_U->data_out(in_r_TKEEP_int);
    regslice_both_in_V_keep_V_U->vld_out(regslice_both_in_V_keep_V_U_vld_out);
    regslice_both_in_V_keep_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_keep_V_U->apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk);
    regslice_both_in_V_strb_V_U = new regslice_both<64>("regslice_both_in_V_strb_V_U");
    regslice_both_in_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_in_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_strb_V_U->data_in(in_r_TSTRB);
    regslice_both_in_V_strb_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_strb_V_U->ack_in(regslice_both_in_V_strb_V_U_ack_in);
    regslice_both_in_V_strb_V_U->data_out(in_r_TSTRB_int);
    regslice_both_in_V_strb_V_U->vld_out(regslice_both_in_V_strb_V_U_vld_out);
    regslice_both_in_V_strb_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_strb_V_U->apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk);
    regslice_both_in_V_last_V_U = new regslice_both<1>("regslice_both_in_V_last_V_U");
    regslice_both_in_V_last_V_U->ap_clk(ap_clk);
    regslice_both_in_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_V_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_V_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_V_last_V_U->ack_in(regslice_both_in_V_last_V_U_ack_in);
    regslice_both_in_V_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_V_last_V_U->vld_out(regslice_both_in_V_last_V_U_vld_out);
    regslice_both_in_V_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_V_last_V_U->apdone_blk(regslice_both_in_V_last_V_U_apdone_blk);
    regslice_both_out_V_data_V_U = new regslice_both<128>("regslice_both_out_V_data_V_U");
    regslice_both_out_V_data_V_U->ap_clk(ap_clk);
    regslice_both_out_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_data_V_U->data_in(out_r_TDATA_int);
    regslice_both_out_V_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_V_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_V_data_V_U->vld_out(regslice_both_out_V_data_V_U_vld_out);
    regslice_both_out_V_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_data_V_U->apdone_blk(regslice_both_out_V_data_V_U_apdone_blk);
    regslice_both_out_V_keep_V_U = new regslice_both<16>("regslice_both_out_V_keep_V_U");
    regslice_both_out_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_out_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_keep_V_U->data_in(ap_var_for_const1);
    regslice_both_out_V_keep_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_keep_V_U->ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy);
    regslice_both_out_V_keep_V_U->data_out(out_r_TKEEP);
    regslice_both_out_V_keep_V_U->vld_out(regslice_both_out_V_keep_V_U_vld_out);
    regslice_both_out_V_keep_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_keep_V_U->apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk);
    regslice_both_out_V_strb_V_U = new regslice_both<16>("regslice_both_out_V_strb_V_U");
    regslice_both_out_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_out_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_strb_V_U->data_in(ap_var_for_const2);
    regslice_both_out_V_strb_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_strb_V_U->ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy);
    regslice_both_out_V_strb_V_U->data_out(out_r_TSTRB);
    regslice_both_out_V_strb_V_U->vld_out(regslice_both_out_V_strb_V_U_vld_out);
    regslice_both_out_V_strb_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_strb_V_U->apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk);
    regslice_both_out_V_last_V_U = new regslice_both<1>("regslice_both_out_V_last_V_U");
    regslice_both_out_V_last_V_U->ap_clk(ap_clk);
    regslice_both_out_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_V_last_V_U->data_in(tmp_last_V_reg_1145);
    regslice_both_out_V_last_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_V_last_V_U->ack_in(regslice_both_out_V_last_V_U_ack_in_dummy);
    regslice_both_out_V_last_V_U->data_out(out_r_TLAST);
    regslice_both_out_V_last_V_U->vld_out(regslice_both_out_V_last_V_U_vld_out);
    regslice_both_out_V_last_V_U->ack_out(out_r_TREADY);
    regslice_both_out_V_last_V_U->apdone_blk(regslice_both_out_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln389_1_fu_1004_p2);
    sensitive << ( p_Val2_s_fu_274 );
    sensitive << ( xor_ln389_fu_998_p2 );

    SC_METHOD(thread_and_ln389_2_fu_1010_p2);
    sensitive << ( and_ln389_fu_992_p2 );
    sensitive << ( select_ln389_3_fu_973_p3 );

    SC_METHOD(thread_and_ln389_fu_992_p2);
    sensitive << ( shl_ln389_1_fu_980_p2 );
    sensitive << ( lshr_ln389_fu_986_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( icmp_ln449_fu_1039_p2 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state11_io);
    sensitive << ( icmp_ln449_reg_1246 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state2_ignore_call4);
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln440_fu_822_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln440_fu_822_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_count_fu_1033_p2);
    sensitive << ( count_1_fu_262 );

    SC_METHOD(thread_grp_mlp_kernel_fu_569_ap_start);
    sensitive << ( grp_mlp_kernel_fu_569_ap_start_reg );

    SC_METHOD(thread_high_2_fu_1028_p2);
    sensitive << ( high_1_fu_266 );

    SC_METHOD(thread_high_fu_816_p2);
    sensitive << ( Hi_assign_reg_523 );

    SC_METHOD(thread_i_2_fu_828_p2);
    sensitive << ( i2_0_reg_547 );

    SC_METHOD(thread_i_fu_674_p2);
    sensitive << ( i_0_reg_500 );

    SC_METHOD(thread_icmp_ln389_fu_895_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( high_1_fu_266 );
    sensitive << ( low_1_fu_270 );

    SC_METHOD(thread_icmp_ln417_fu_668_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( i_0_reg_500 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln423_fu_688_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_535 );

    SC_METHOD(thread_icmp_ln440_fu_822_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( i2_0_reg_547 );

    SC_METHOD(thread_icmp_ln442_fu_844_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j3_0_reg_558 );

    SC_METHOD(thread_icmp_ln449_fu_1039_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( count_fu_1033_p2 );

    SC_METHOD(thread_icmp_ln681_fu_700_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln423_fu_688_p2 );
    sensitive << ( Lo_assign_reg_511 );
    sensitive << ( Hi_assign_reg_523 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_V_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_j_1_fu_694_p2);
    sensitive << ( j_0_reg_535 );

    SC_METHOD(thread_j_fu_850_p2);
    sensitive << ( j3_0_reg_558 );

    SC_METHOD(thread_low_2_fu_1023_p2);
    sensitive << ( low_1_fu_270 );

    SC_METHOD(thread_low_fu_810_p2);
    sensitive << ( Lo_assign_reg_511 );

    SC_METHOD(thread_lshr_ln389_fu_986_p2);
    sensitive << ( zext_ln389_2_fu_953_p1 );

    SC_METHOD(thread_lshr_ln681_1_fu_775_p2);
    sensitive << ( zext_ln681_1_fu_772_p1 );

    SC_METHOD(thread_lshr_ln681_fu_766_p2);
    sensitive << ( select_ln681_1_fu_741_p3 );
    sensitive << ( zext_ln681_fu_762_p1 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln449_fu_1039_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln449_reg_1246 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TDATA_int);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln449_fu_1039_p2 );
    sensitive << ( and_ln389_1_fu_1004_p2 );
    sensitive << ( and_ln389_2_fu_1010_p2 );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_V_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln449_fu_1039_p2 );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_p_Result_2_fu_1016_p2);
    sensitive << ( and_ln389_1_fu_1004_p2 );
    sensitive << ( and_ln389_2_fu_1010_p2 );

    SC_METHOD(thread_p_Result_s_fu_781_p2);
    sensitive << ( lshr_ln681_reg_1122 );
    sensitive << ( lshr_ln681_1_fu_775_p2 );

    SC_METHOD(thread_prediction_0_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_0_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_0_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_0_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_0_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_0_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_1_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_1_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_1_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_1_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_1_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_1_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_2_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_2_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_2_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_2_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_2_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_2_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_3_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_3_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_3_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_3_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_3_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_3_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_4_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_4_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_4_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_4_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_4_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_4_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_5_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_5_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_5_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_5_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_5_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_5_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_6_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_6_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_6_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_6_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_6_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_6_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_7_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_7_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln444_fu_856_p1 );

    SC_METHOD(thread_prediction_7_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_mlp_kernel_fu_569_prediction_7_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_prediction_7_we0);
    sensitive << ( grp_mlp_kernel_fu_569_prediction_7_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_0_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_0_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_0_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_0_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_0_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_0_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_0_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_1_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_1_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_1_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_1_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_1_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_2_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_2_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_2_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_2_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_2_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_3_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_3_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_3_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_3_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_3_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_4_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_4_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_4_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_4_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_4_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_5_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_5_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_5_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_5_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_5_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_6_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_6_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_6_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_6_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_6_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_address0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_7_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln425_fu_798_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_ce0);
    sensitive << ( grp_mlp_kernel_fu_569_sample_7_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sample_7_ce1);
    sensitive << ( grp_mlp_kernel_fu_569_sample_7_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sample_7_we0);
    sensitive << ( trunc_ln425_reg_1078 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln389_1_fu_928_p3);
    sensitive << ( icmp_ln389_reg_1218 );
    sensitive << ( trunc_ln389_reg_1226 );
    sensitive << ( trunc_ln389_1_reg_1234 );

    SC_METHOD(thread_select_ln389_2_fu_933_p3);
    sensitive << ( icmp_ln389_reg_1218 );
    sensitive << ( trunc_ln389_reg_1226 );
    sensitive << ( sub_ln389_fu_918_p2 );

    SC_METHOD(thread_select_ln389_3_fu_973_p3);
    sensitive << ( icmp_ln389_reg_1218 );
    sensitive << ( shl_ln389_fu_957_p2 );
    sensitive << ( tmp_20_fu_963_p4 );

    SC_METHOD(thread_select_ln389_fu_923_p3);
    sensitive << ( icmp_ln389_reg_1218 );
    sensitive << ( trunc_ln389_reg_1226 );
    sensitive << ( trunc_ln389_1_reg_1234 );

    SC_METHOD(thread_select_ln681_1_fu_741_p3);
    sensitive << ( tmp_data_V_1_reg_1072 );
    sensitive << ( icmp_ln681_fu_700_p2 );
    sensitive << ( tmp_19_fu_706_p4 );

    SC_METHOD(thread_select_ln681_2_fu_748_p3);
    sensitive << ( Lo_assign_reg_511 );
    sensitive << ( icmp_ln681_fu_700_p2 );
    sensitive << ( sub_ln681_1_fu_721_p2 );

    SC_METHOD(thread_select_ln681_fu_733_p3);
    sensitive << ( icmp_ln681_fu_700_p2 );
    sensitive << ( sub_ln681_fu_715_p2 );
    sensitive << ( sub_ln681_2_fu_727_p2 );

    SC_METHOD(thread_shl_ln389_1_fu_980_p2);
    sensitive << ( zext_ln389_1_fu_949_p1 );

    SC_METHOD(thread_shl_ln389_fu_957_p2);
    sensitive << ( tmp_V_fu_915_p1 );
    sensitive << ( zext_ln389_fu_945_p1 );

    SC_METHOD(thread_sub_ln389_1_fu_939_p2);
    sensitive << ( select_ln389_fu_923_p3 );

    SC_METHOD(thread_sub_ln389_fu_918_p2);
    sensitive << ( trunc_ln389_reg_1226 );

    SC_METHOD(thread_sub_ln681_1_fu_721_p2);
    sensitive << ( Lo_assign_reg_511 );

    SC_METHOD(thread_sub_ln681_2_fu_727_p2);
    sensitive << ( Lo_assign_reg_511 );
    sensitive << ( Hi_assign_reg_523 );

    SC_METHOD(thread_sub_ln681_3_fu_756_p2);
    sensitive << ( select_ln681_fu_733_p3 );

    SC_METHOD(thread_sub_ln681_fu_715_p2);
    sensitive << ( Lo_assign_reg_511 );
    sensitive << ( Hi_assign_reg_523 );

    SC_METHOD(thread_tmp_19_fu_706_p4);
    sensitive << ( tmp_data_V_1_reg_1072 );

    SC_METHOD(thread_tmp_20_fu_963_p4);
    sensitive << ( shl_ln389_fu_957_p2 );

    SC_METHOD(thread_tmp_V_fu_915_p1);
    sensitive << ( val_assign_reg_1213 );

    SC_METHOD(thread_tmp_last_V_fu_834_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln440_fu_822_p2 );
    sensitive << ( i2_0_reg_547 );

    SC_METHOD(thread_trunc_ln389_1_fu_905_p1);
    sensitive << ( high_1_fu_266 );

    SC_METHOD(thread_trunc_ln389_fu_901_p1);
    sensitive << ( low_1_fu_270 );

    SC_METHOD(thread_trunc_ln425_1_fu_786_p1);
    sensitive << ( p_Result_s_fu_781_p2 );

    SC_METHOD(thread_trunc_ln425_fu_684_p1);
    sensitive << ( i_0_reg_500 );

    SC_METHOD(thread_trunc_ln444_fu_840_p1);
    sensitive << ( i2_0_reg_547 );

    SC_METHOD(thread_xor_ln389_fu_998_p2);
    sensitive << ( and_ln389_fu_992_p2 );

    SC_METHOD(thread_zext_ln389_1_fu_949_p1);
    sensitive << ( select_ln389_1_fu_928_p3 );

    SC_METHOD(thread_zext_ln389_2_fu_953_p1);
    sensitive << ( sub_ln389_1_fu_939_p2 );

    SC_METHOD(thread_zext_ln389_fu_945_p1);
    sensitive << ( select_ln389_2_fu_933_p3 );

    SC_METHOD(thread_zext_ln425_fu_798_p1);
    sensitive << ( j_0_reg_535 );

    SC_METHOD(thread_zext_ln444_fu_856_p1);
    sensitive << ( j3_0_reg_558 );

    SC_METHOD(thread_zext_ln681_1_fu_772_p1);
    sensitive << ( sub_ln681_3_reg_1117 );

    SC_METHOD(thread_zext_ln681_fu_762_p1);
    sensitive << ( select_ln681_2_fu_748_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln417_fu_668_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln423_fu_688_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( regslice_both_out_V_data_V_U_apdone_blk );
    sensitive << ( icmp_ln440_fu_822_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln442_fu_844_p2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( grp_mlp_kernel_fu_569_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state11_io );
    sensitive << ( in_r_TVALID_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000001";
    grp_mlp_kernel_fu_569_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln417_fu_668_p2, "icmp_ln417_fu_668_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln449_fu_1039_p2, "icmp_ln449_fu_1039_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln449_reg_1246, "icmp_ln449_reg_1246");
    sc_trace(mVcdFile, i_fu_674_p2, "i_fu_674_p2");
    sc_trace(mVcdFile, i_reg_1067, "i_reg_1067");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_V_1_reg_1072, "tmp_data_V_1_reg_1072");
    sc_trace(mVcdFile, trunc_ln425_fu_684_p1, "trunc_ln425_fu_684_p1");
    sc_trace(mVcdFile, trunc_ln425_reg_1078, "trunc_ln425_reg_1078");
    sc_trace(mVcdFile, j_1_fu_694_p2, "j_1_fu_694_p2");
    sc_trace(mVcdFile, j_1_reg_1112, "j_1_reg_1112");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln681_3_fu_756_p2, "sub_ln681_3_fu_756_p2");
    sc_trace(mVcdFile, sub_ln681_3_reg_1117, "sub_ln681_3_reg_1117");
    sc_trace(mVcdFile, icmp_ln423_fu_688_p2, "icmp_ln423_fu_688_p2");
    sc_trace(mVcdFile, lshr_ln681_fu_766_p2, "lshr_ln681_fu_766_p2");
    sc_trace(mVcdFile, lshr_ln681_reg_1122, "lshr_ln681_reg_1122");
    sc_trace(mVcdFile, low_fu_810_p2, "low_fu_810_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, high_fu_816_p2, "high_fu_816_p2");
    sc_trace(mVcdFile, i_2_fu_828_p2, "i_2_fu_828_p2");
    sc_trace(mVcdFile, i_2_reg_1140, "i_2_reg_1140");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_apdone_blk, "regslice_both_out_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, tmp_last_V_fu_834_p2, "tmp_last_V_fu_834_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_1145, "tmp_last_V_reg_1145");
    sc_trace(mVcdFile, icmp_ln440_fu_822_p2, "icmp_ln440_fu_822_p2");
    sc_trace(mVcdFile, trunc_ln444_fu_840_p1, "trunc_ln444_fu_840_p1");
    sc_trace(mVcdFile, trunc_ln444_reg_1150, "trunc_ln444_reg_1150");
    sc_trace(mVcdFile, j_fu_850_p2, "j_fu_850_p2");
    sc_trace(mVcdFile, j_reg_1158, "j_reg_1158");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln442_fu_844_p2, "icmp_ln442_fu_844_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, val_assign_fu_874_p10, "val_assign_fu_874_p10");
    sc_trace(mVcdFile, val_assign_reg_1213, "val_assign_reg_1213");
    sc_trace(mVcdFile, icmp_ln389_fu_895_p2, "icmp_ln389_fu_895_p2");
    sc_trace(mVcdFile, icmp_ln389_reg_1218, "icmp_ln389_reg_1218");
    sc_trace(mVcdFile, trunc_ln389_fu_901_p1, "trunc_ln389_fu_901_p1");
    sc_trace(mVcdFile, trunc_ln389_reg_1226, "trunc_ln389_reg_1226");
    sc_trace(mVcdFile, trunc_ln389_1_fu_905_p1, "trunc_ln389_1_fu_905_p1");
    sc_trace(mVcdFile, trunc_ln389_1_reg_1234, "trunc_ln389_1_reg_1234");
    sc_trace(mVcdFile, p_Result_2_fu_1016_p2, "p_Result_2_fu_1016_p2");
    sc_trace(mVcdFile, p_Result_2_reg_1240, "p_Result_2_reg_1240");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, sample_0_address0, "sample_0_address0");
    sc_trace(mVcdFile, sample_0_ce0, "sample_0_ce0");
    sc_trace(mVcdFile, sample_0_we0, "sample_0_we0");
    sc_trace(mVcdFile, sample_0_q0, "sample_0_q0");
    sc_trace(mVcdFile, sample_0_ce1, "sample_0_ce1");
    sc_trace(mVcdFile, sample_0_q1, "sample_0_q1");
    sc_trace(mVcdFile, sample_1_address0, "sample_1_address0");
    sc_trace(mVcdFile, sample_1_ce0, "sample_1_ce0");
    sc_trace(mVcdFile, sample_1_we0, "sample_1_we0");
    sc_trace(mVcdFile, sample_1_q0, "sample_1_q0");
    sc_trace(mVcdFile, sample_1_ce1, "sample_1_ce1");
    sc_trace(mVcdFile, sample_1_q1, "sample_1_q1");
    sc_trace(mVcdFile, sample_2_address0, "sample_2_address0");
    sc_trace(mVcdFile, sample_2_ce0, "sample_2_ce0");
    sc_trace(mVcdFile, sample_2_we0, "sample_2_we0");
    sc_trace(mVcdFile, sample_2_q0, "sample_2_q0");
    sc_trace(mVcdFile, sample_2_ce1, "sample_2_ce1");
    sc_trace(mVcdFile, sample_2_q1, "sample_2_q1");
    sc_trace(mVcdFile, sample_3_address0, "sample_3_address0");
    sc_trace(mVcdFile, sample_3_ce0, "sample_3_ce0");
    sc_trace(mVcdFile, sample_3_we0, "sample_3_we0");
    sc_trace(mVcdFile, sample_3_q0, "sample_3_q0");
    sc_trace(mVcdFile, sample_3_ce1, "sample_3_ce1");
    sc_trace(mVcdFile, sample_3_q1, "sample_3_q1");
    sc_trace(mVcdFile, sample_4_address0, "sample_4_address0");
    sc_trace(mVcdFile, sample_4_ce0, "sample_4_ce0");
    sc_trace(mVcdFile, sample_4_we0, "sample_4_we0");
    sc_trace(mVcdFile, sample_4_q0, "sample_4_q0");
    sc_trace(mVcdFile, sample_4_ce1, "sample_4_ce1");
    sc_trace(mVcdFile, sample_4_q1, "sample_4_q1");
    sc_trace(mVcdFile, sample_5_address0, "sample_5_address0");
    sc_trace(mVcdFile, sample_5_ce0, "sample_5_ce0");
    sc_trace(mVcdFile, sample_5_we0, "sample_5_we0");
    sc_trace(mVcdFile, sample_5_q0, "sample_5_q0");
    sc_trace(mVcdFile, sample_5_ce1, "sample_5_ce1");
    sc_trace(mVcdFile, sample_5_q1, "sample_5_q1");
    sc_trace(mVcdFile, sample_6_address0, "sample_6_address0");
    sc_trace(mVcdFile, sample_6_ce0, "sample_6_ce0");
    sc_trace(mVcdFile, sample_6_we0, "sample_6_we0");
    sc_trace(mVcdFile, sample_6_q0, "sample_6_q0");
    sc_trace(mVcdFile, sample_6_ce1, "sample_6_ce1");
    sc_trace(mVcdFile, sample_6_q1, "sample_6_q1");
    sc_trace(mVcdFile, sample_7_address0, "sample_7_address0");
    sc_trace(mVcdFile, sample_7_ce0, "sample_7_ce0");
    sc_trace(mVcdFile, sample_7_we0, "sample_7_we0");
    sc_trace(mVcdFile, sample_7_q0, "sample_7_q0");
    sc_trace(mVcdFile, sample_7_ce1, "sample_7_ce1");
    sc_trace(mVcdFile, sample_7_q1, "sample_7_q1");
    sc_trace(mVcdFile, prediction_0_address0, "prediction_0_address0");
    sc_trace(mVcdFile, prediction_0_ce0, "prediction_0_ce0");
    sc_trace(mVcdFile, prediction_0_we0, "prediction_0_we0");
    sc_trace(mVcdFile, prediction_0_q0, "prediction_0_q0");
    sc_trace(mVcdFile, prediction_1_address0, "prediction_1_address0");
    sc_trace(mVcdFile, prediction_1_ce0, "prediction_1_ce0");
    sc_trace(mVcdFile, prediction_1_we0, "prediction_1_we0");
    sc_trace(mVcdFile, prediction_1_q0, "prediction_1_q0");
    sc_trace(mVcdFile, prediction_2_address0, "prediction_2_address0");
    sc_trace(mVcdFile, prediction_2_ce0, "prediction_2_ce0");
    sc_trace(mVcdFile, prediction_2_we0, "prediction_2_we0");
    sc_trace(mVcdFile, prediction_2_q0, "prediction_2_q0");
    sc_trace(mVcdFile, prediction_3_address0, "prediction_3_address0");
    sc_trace(mVcdFile, prediction_3_ce0, "prediction_3_ce0");
    sc_trace(mVcdFile, prediction_3_we0, "prediction_3_we0");
    sc_trace(mVcdFile, prediction_3_q0, "prediction_3_q0");
    sc_trace(mVcdFile, prediction_4_address0, "prediction_4_address0");
    sc_trace(mVcdFile, prediction_4_ce0, "prediction_4_ce0");
    sc_trace(mVcdFile, prediction_4_we0, "prediction_4_we0");
    sc_trace(mVcdFile, prediction_4_q0, "prediction_4_q0");
    sc_trace(mVcdFile, prediction_5_address0, "prediction_5_address0");
    sc_trace(mVcdFile, prediction_5_ce0, "prediction_5_ce0");
    sc_trace(mVcdFile, prediction_5_we0, "prediction_5_we0");
    sc_trace(mVcdFile, prediction_5_q0, "prediction_5_q0");
    sc_trace(mVcdFile, prediction_6_address0, "prediction_6_address0");
    sc_trace(mVcdFile, prediction_6_ce0, "prediction_6_ce0");
    sc_trace(mVcdFile, prediction_6_we0, "prediction_6_we0");
    sc_trace(mVcdFile, prediction_6_q0, "prediction_6_q0");
    sc_trace(mVcdFile, prediction_7_address0, "prediction_7_address0");
    sc_trace(mVcdFile, prediction_7_ce0, "prediction_7_ce0");
    sc_trace(mVcdFile, prediction_7_we0, "prediction_7_we0");
    sc_trace(mVcdFile, prediction_7_q0, "prediction_7_q0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_ap_start, "grp_mlp_kernel_fu_569_ap_start");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_ap_done, "grp_mlp_kernel_fu_569_ap_done");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_ap_idle, "grp_mlp_kernel_fu_569_ap_idle");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_ap_ready, "grp_mlp_kernel_fu_569_ap_ready");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_0_address0, "grp_mlp_kernel_fu_569_sample_0_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_0_ce0, "grp_mlp_kernel_fu_569_sample_0_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_0_address1, "grp_mlp_kernel_fu_569_sample_0_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_0_ce1, "grp_mlp_kernel_fu_569_sample_0_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_1_address0, "grp_mlp_kernel_fu_569_sample_1_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_1_ce0, "grp_mlp_kernel_fu_569_sample_1_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_1_address1, "grp_mlp_kernel_fu_569_sample_1_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_1_ce1, "grp_mlp_kernel_fu_569_sample_1_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_2_address0, "grp_mlp_kernel_fu_569_sample_2_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_2_ce0, "grp_mlp_kernel_fu_569_sample_2_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_2_address1, "grp_mlp_kernel_fu_569_sample_2_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_2_ce1, "grp_mlp_kernel_fu_569_sample_2_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_3_address0, "grp_mlp_kernel_fu_569_sample_3_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_3_ce0, "grp_mlp_kernel_fu_569_sample_3_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_3_address1, "grp_mlp_kernel_fu_569_sample_3_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_3_ce1, "grp_mlp_kernel_fu_569_sample_3_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_4_address0, "grp_mlp_kernel_fu_569_sample_4_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_4_ce0, "grp_mlp_kernel_fu_569_sample_4_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_4_address1, "grp_mlp_kernel_fu_569_sample_4_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_4_ce1, "grp_mlp_kernel_fu_569_sample_4_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_5_address0, "grp_mlp_kernel_fu_569_sample_5_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_5_ce0, "grp_mlp_kernel_fu_569_sample_5_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_5_address1, "grp_mlp_kernel_fu_569_sample_5_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_5_ce1, "grp_mlp_kernel_fu_569_sample_5_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_6_address0, "grp_mlp_kernel_fu_569_sample_6_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_6_ce0, "grp_mlp_kernel_fu_569_sample_6_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_6_address1, "grp_mlp_kernel_fu_569_sample_6_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_6_ce1, "grp_mlp_kernel_fu_569_sample_6_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_7_address0, "grp_mlp_kernel_fu_569_sample_7_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_7_ce0, "grp_mlp_kernel_fu_569_sample_7_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_7_address1, "grp_mlp_kernel_fu_569_sample_7_address1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_sample_7_ce1, "grp_mlp_kernel_fu_569_sample_7_ce1");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_0_address0, "grp_mlp_kernel_fu_569_prediction_0_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_0_ce0, "grp_mlp_kernel_fu_569_prediction_0_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_0_we0, "grp_mlp_kernel_fu_569_prediction_0_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_0_d0, "grp_mlp_kernel_fu_569_prediction_0_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_1_address0, "grp_mlp_kernel_fu_569_prediction_1_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_1_ce0, "grp_mlp_kernel_fu_569_prediction_1_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_1_we0, "grp_mlp_kernel_fu_569_prediction_1_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_1_d0, "grp_mlp_kernel_fu_569_prediction_1_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_2_address0, "grp_mlp_kernel_fu_569_prediction_2_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_2_ce0, "grp_mlp_kernel_fu_569_prediction_2_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_2_we0, "grp_mlp_kernel_fu_569_prediction_2_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_2_d0, "grp_mlp_kernel_fu_569_prediction_2_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_3_address0, "grp_mlp_kernel_fu_569_prediction_3_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_3_ce0, "grp_mlp_kernel_fu_569_prediction_3_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_3_we0, "grp_mlp_kernel_fu_569_prediction_3_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_3_d0, "grp_mlp_kernel_fu_569_prediction_3_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_4_address0, "grp_mlp_kernel_fu_569_prediction_4_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_4_ce0, "grp_mlp_kernel_fu_569_prediction_4_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_4_we0, "grp_mlp_kernel_fu_569_prediction_4_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_4_d0, "grp_mlp_kernel_fu_569_prediction_4_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_5_address0, "grp_mlp_kernel_fu_569_prediction_5_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_5_ce0, "grp_mlp_kernel_fu_569_prediction_5_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_5_we0, "grp_mlp_kernel_fu_569_prediction_5_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_5_d0, "grp_mlp_kernel_fu_569_prediction_5_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_6_address0, "grp_mlp_kernel_fu_569_prediction_6_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_6_ce0, "grp_mlp_kernel_fu_569_prediction_6_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_6_we0, "grp_mlp_kernel_fu_569_prediction_6_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_6_d0, "grp_mlp_kernel_fu_569_prediction_6_d0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_7_address0, "grp_mlp_kernel_fu_569_prediction_7_address0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_7_ce0, "grp_mlp_kernel_fu_569_prediction_7_ce0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_7_we0, "grp_mlp_kernel_fu_569_prediction_7_we0");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_prediction_7_d0, "grp_mlp_kernel_fu_569_prediction_7_d0");
    sc_trace(mVcdFile, i_0_reg_500, "i_0_reg_500");
    sc_trace(mVcdFile, Lo_assign_reg_511, "Lo_assign_reg_511");
    sc_trace(mVcdFile, Hi_assign_reg_523, "Hi_assign_reg_523");
    sc_trace(mVcdFile, j_0_reg_535, "j_0_reg_535");
    sc_trace(mVcdFile, i2_0_reg_547, "i2_0_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j3_0_reg_558, "j3_0_reg_558");
    sc_trace(mVcdFile, ap_block_state11_io, "ap_block_state11_io");
    sc_trace(mVcdFile, grp_mlp_kernel_fu_569_ap_start_reg, "grp_mlp_kernel_fu_569_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call4, "ap_block_state2_ignore_call4");
    sc_trace(mVcdFile, zext_ln425_fu_798_p1, "zext_ln425_fu_798_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln444_fu_856_p1, "zext_ln444_fu_856_p1");
    sc_trace(mVcdFile, count_1_fu_262, "count_1_fu_262");
    sc_trace(mVcdFile, count_fu_1033_p2, "count_fu_1033_p2");
    sc_trace(mVcdFile, high_1_fu_266, "high_1_fu_266");
    sc_trace(mVcdFile, high_2_fu_1028_p2, "high_2_fu_1028_p2");
    sc_trace(mVcdFile, low_1_fu_270, "low_1_fu_270");
    sc_trace(mVcdFile, low_2_fu_1023_p2, "low_2_fu_1023_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_274, "p_Val2_s_fu_274");
    sc_trace(mVcdFile, trunc_ln425_1_fu_786_p1, "trunc_ln425_1_fu_786_p1");
    sc_trace(mVcdFile, icmp_ln681_fu_700_p2, "icmp_ln681_fu_700_p2");
    sc_trace(mVcdFile, sub_ln681_fu_715_p2, "sub_ln681_fu_715_p2");
    sc_trace(mVcdFile, sub_ln681_2_fu_727_p2, "sub_ln681_2_fu_727_p2");
    sc_trace(mVcdFile, tmp_19_fu_706_p4, "tmp_19_fu_706_p4");
    sc_trace(mVcdFile, sub_ln681_1_fu_721_p2, "sub_ln681_1_fu_721_p2");
    sc_trace(mVcdFile, select_ln681_fu_733_p3, "select_ln681_fu_733_p3");
    sc_trace(mVcdFile, select_ln681_2_fu_748_p3, "select_ln681_2_fu_748_p3");
    sc_trace(mVcdFile, select_ln681_1_fu_741_p3, "select_ln681_1_fu_741_p3");
    sc_trace(mVcdFile, zext_ln681_fu_762_p1, "zext_ln681_fu_762_p1");
    sc_trace(mVcdFile, zext_ln681_1_fu_772_p1, "zext_ln681_1_fu_772_p1");
    sc_trace(mVcdFile, lshr_ln681_1_fu_775_p2, "lshr_ln681_1_fu_775_p2");
    sc_trace(mVcdFile, p_Result_s_fu_781_p2, "p_Result_s_fu_781_p2");
    sc_trace(mVcdFile, sub_ln389_fu_918_p2, "sub_ln389_fu_918_p2");
    sc_trace(mVcdFile, select_ln389_fu_923_p3, "select_ln389_fu_923_p3");
    sc_trace(mVcdFile, select_ln389_2_fu_933_p3, "select_ln389_2_fu_933_p3");
    sc_trace(mVcdFile, select_ln389_1_fu_928_p3, "select_ln389_1_fu_928_p3");
    sc_trace(mVcdFile, sub_ln389_1_fu_939_p2, "sub_ln389_1_fu_939_p2");
    sc_trace(mVcdFile, tmp_V_fu_915_p1, "tmp_V_fu_915_p1");
    sc_trace(mVcdFile, zext_ln389_fu_945_p1, "zext_ln389_fu_945_p1");
    sc_trace(mVcdFile, shl_ln389_fu_957_p2, "shl_ln389_fu_957_p2");
    sc_trace(mVcdFile, tmp_20_fu_963_p4, "tmp_20_fu_963_p4");
    sc_trace(mVcdFile, zext_ln389_1_fu_949_p1, "zext_ln389_1_fu_949_p1");
    sc_trace(mVcdFile, zext_ln389_2_fu_953_p1, "zext_ln389_2_fu_953_p1");
    sc_trace(mVcdFile, shl_ln389_1_fu_980_p2, "shl_ln389_1_fu_980_p2");
    sc_trace(mVcdFile, lshr_ln389_fu_986_p2, "lshr_ln389_fu_986_p2");
    sc_trace(mVcdFile, and_ln389_fu_992_p2, "and_ln389_fu_992_p2");
    sc_trace(mVcdFile, xor_ln389_fu_998_p2, "xor_ln389_fu_998_p2");
    sc_trace(mVcdFile, select_ln389_3_fu_973_p3, "select_ln389_3_fu_973_p3");
    sc_trace(mVcdFile, and_ln389_1_fu_1004_p2, "and_ln389_1_fu_1004_p2");
    sc_trace(mVcdFile, and_ln389_2_fu_1010_p2, "and_ln389_2_fu_1010_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_apdone_blk, "regslice_both_in_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_V_data_V_U_ack_in, "regslice_both_in_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_apdone_blk, "regslice_both_in_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TKEEP_int, "in_r_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_vld_out, "regslice_both_in_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_keep_V_U_ack_in, "regslice_both_in_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_apdone_blk, "regslice_both_in_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TSTRB_int, "in_r_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_vld_out, "regslice_both_in_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_strb_V_U_ack_in, "regslice_both_in_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_apdone_blk, "regslice_both_in_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_vld_out, "regslice_both_in_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_V_last_V_U_ack_in, "regslice_both_in_V_last_V_U_ack_in");
    sc_trace(mVcdFile, out_r_TDATA_int, "out_r_TDATA_int");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_data_V_U_vld_out, "regslice_both_out_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_apdone_blk, "regslice_both_out_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_ack_in_dummy, "regslice_both_out_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_keep_V_U_vld_out, "regslice_both_out_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_apdone_blk, "regslice_both_out_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_ack_in_dummy, "regslice_both_out_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_strb_V_U_vld_out, "regslice_both_out_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_apdone_blk, "regslice_both_out_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_ack_in_dummy, "regslice_both_out_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_out_V_last_V_U_vld_out, "regslice_both_out_V_last_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("mlp.hdltvin.dat");
    mHdltvoutHandle.open("mlp.hdltvout.dat");
}

mlp::~mlp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mlp_control_s_axi_U;
    delete sample_0_U;
    delete sample_1_U;
    delete sample_2_U;
    delete sample_3_U;
    delete sample_4_U;
    delete sample_5_U;
    delete sample_6_U;
    delete sample_7_U;
    delete prediction_0_U;
    delete prediction_1_U;
    delete prediction_2_U;
    delete prediction_3_U;
    delete prediction_4_U;
    delete prediction_5_U;
    delete prediction_6_U;
    delete prediction_7_U;
    delete grp_mlp_kernel_fu_569;
    delete mlp_mux_83_16_1_1_U330;
    delete regslice_both_in_V_data_V_U;
    delete regslice_both_in_V_keep_V_U;
    delete regslice_both_in_V_strb_V_U;
    delete regslice_both_in_V_last_V_U;
    delete regslice_both_out_V_data_V_U;
    delete regslice_both_out_V_keep_V_U;
    delete regslice_both_out_V_strb_V_U;
    delete regslice_both_out_V_last_V_U;
}

void mlp::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mlp::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv16_FFFF;
}

void mlp::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv16_0;
}

void mlp::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Hi_assign_reg_523 = high_fu_816_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Hi_assign_reg_523 = ap_const_lv10_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Lo_assign_reg_511 = low_fu_810_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        Lo_assign_reg_511 = ap_const_lv10_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln449_fu_1039_p2.read()))) {
        count_1_fu_262 = count_fu_1033_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                 esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()))))) {
        count_1_fu_262 = ap_const_lv8_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_mlp_kernel_fu_569_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            grp_mlp_kernel_fu_569_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mlp_kernel_fu_569_ap_ready.read())) {
            grp_mlp_kernel_fu_569_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln449_fu_1039_p2.read()))) {
        high_1_fu_266 = high_2_fu_1028_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                 esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()))))) {
        high_1_fu_266 = ap_const_lv32_F;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln442_fu_844_p2.read()))) {
        i2_0_reg_547 = i_2_reg_1140.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_mlp_kernel_fu_569_ap_done.read(), ap_const_logic_1))) {
        i2_0_reg_547 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln423_fu_688_p2.read()))) {
        i_0_reg_500 = i_reg_1067.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_500 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_block_state11_io.read(), ap_const_boolean_0))) {
        j3_0_reg_558 = j_reg_1158.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln440_fu_822_p2.read()))) {
        j3_0_reg_558 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_535 = j_1_reg_1112.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        j_0_reg_535 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln449_fu_1039_p2.read()))) {
        low_1_fu_270 = low_2_fu_1023_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                 esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()))))) {
        low_1_fu_270 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        i_2_reg_1140 = i_2_fu_828_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_1067 = i_fu_674_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        icmp_ln389_reg_1218 = icmp_ln389_fu_895_p2.read();
        trunc_ln389_1_reg_1234 = trunc_ln389_1_fu_905_p1.read();
        trunc_ln389_reg_1226 = trunc_ln389_fu_901_p1.read();
        val_assign_reg_1213 = val_assign_fu_874_p10.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        icmp_ln449_reg_1246 = icmp_ln449_fu_1039_p2.read();
        p_Result_2_reg_1240 = p_Result_2_fu_1016_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_1112 = j_1_fu_694_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_reg_1158 = j_fu_850_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln423_fu_688_p2.read()))) {
        lshr_ln681_reg_1122 = lshr_ln681_fu_766_p2.read();
        sub_ln681_3_reg_1117 = sub_ln681_3_fu_756_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_block_state11_io.read(), ap_const_boolean_0))) {
        p_Val2_s_fu_274 = p_Result_2_reg_1240.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        tmp_data_V_1_reg_1072 = in_r_TDATA_int.read();
        trunc_ln425_reg_1078 = trunc_ln425_fu_684_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln440_fu_822_p2.read()))) {
        tmp_last_V_reg_1145 = tmp_last_V_fu_834_p2.read();
        trunc_ln444_reg_1150 = trunc_ln444_fu_840_p1.read();
    }
}

void mlp::thread_and_ln389_1_fu_1004_p2() {
    and_ln389_1_fu_1004_p2 = (p_Val2_s_fu_274.read() & xor_ln389_fu_998_p2.read());
}

void mlp::thread_and_ln389_2_fu_1010_p2() {
    and_ln389_2_fu_1010_p2 = (select_ln389_3_fu_973_p3.read() & and_ln389_fu_992_p2.read());
}

void mlp::thread_and_ln389_fu_992_p2() {
    and_ln389_fu_992_p2 = (shl_ln389_1_fu_980_p2.read() & lshr_ln389_fu_986_p2.read());
}

void mlp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mlp::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mlp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mlp::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mlp::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mlp::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mlp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mlp::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mlp::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mlp::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void mlp::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_block_state11_io() {
    ap_block_state11_io = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln449_reg_1246.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void mlp::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_block_state2_ignore_call4() {
    ap_block_state2_ignore_call4 = (esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void mlp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln440_fu_822_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mlp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mlp::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln440_fu_822_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mlp::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mlp::thread_count_fu_1033_p2() {
    count_fu_1033_p2 = (!ap_const_lv8_1.is_01() || !count_1_fu_262.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(count_1_fu_262.read()));
}

void mlp::thread_grp_mlp_kernel_fu_569_ap_start() {
    grp_mlp_kernel_fu_569_ap_start = grp_mlp_kernel_fu_569_ap_start_reg.read();
}

void mlp::thread_high_2_fu_1028_p2() {
    high_2_fu_1028_p2 = (!ap_const_lv32_10.is_01() || !high_1_fu_266.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(high_1_fu_266.read()));
}

void mlp::thread_high_fu_816_p2() {
    high_fu_816_p2 = (!Hi_assign_reg_523.read().is_01() || !ap_const_lv10_8.is_01())? sc_lv<10>(): (sc_biguint<10>(Hi_assign_reg_523.read()) + sc_biguint<10>(ap_const_lv10_8));
}

void mlp::thread_i_2_fu_828_p2() {
    i_2_fu_828_p2 = (!i2_0_reg_547.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_0_reg_547.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mlp::thread_i_fu_674_p2() {
    i_fu_674_p2 = (!i_0_reg_500.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_500.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mlp::thread_icmp_ln389_fu_895_p2() {
    icmp_ln389_fu_895_p2 = (!low_1_fu_270.read().is_01() || !high_1_fu_266.read().is_01())? sc_lv<1>(): (sc_biguint<32>(low_1_fu_270.read()) > sc_biguint<32>(high_1_fu_266.read()));
}

void mlp::thread_icmp_ln417_fu_668_p2() {
    icmp_ln417_fu_668_p2 = (!i_0_reg_500.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_500.read() == ap_const_lv4_8);
}

void mlp::thread_icmp_ln423_fu_688_p2() {
    icmp_ln423_fu_688_p2 = (!j_0_reg_535.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_535.read() == ap_const_lv7_40);
}

void mlp::thread_icmp_ln440_fu_822_p2() {
    icmp_ln440_fu_822_p2 = (!i2_0_reg_547.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_547.read() == ap_const_lv4_8);
}

void mlp::thread_icmp_ln442_fu_844_p2() {
    icmp_ln442_fu_844_p2 = (!j3_0_reg_558.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_reg_558.read() == ap_const_lv4_A);
}

void mlp::thread_icmp_ln449_fu_1039_p2() {
    icmp_ln449_fu_1039_p2 = (!count_fu_1033_p2.read().is_01() || !ap_const_lv8_8.is_01())? sc_lv<1>(): sc_lv<1>(count_fu_1033_p2.read() == ap_const_lv8_8);
}

void mlp::thread_icmp_ln681_fu_700_p2() {
    icmp_ln681_fu_700_p2 = (!Lo_assign_reg_511.read().is_01() || !Hi_assign_reg_523.read().is_01())? sc_lv<1>(): (sc_biguint<10>(Lo_assign_reg_511.read()) > sc_biguint<10>(Hi_assign_reg_523.read()));
}

void mlp::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_V_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void mlp::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void mlp::thread_j_1_fu_694_p2() {
    j_1_fu_694_p2 = (!j_0_reg_535.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_535.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp::thread_j_fu_850_p2() {
    j_fu_850_p2 = (!j3_0_reg_558.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j3_0_reg_558.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mlp::thread_low_2_fu_1023_p2() {
    low_2_fu_1023_p2 = (!ap_const_lv32_10.is_01() || !low_1_fu_270.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(low_1_fu_270.read()));
}

void mlp::thread_low_fu_810_p2() {
    low_fu_810_p2 = (!Lo_assign_reg_511.read().is_01() || !ap_const_lv10_8.is_01())? sc_lv<10>(): (sc_biguint<10>(Lo_assign_reg_511.read()) + sc_biguint<10>(ap_const_lv10_8));
}

void mlp::thread_lshr_ln389_fu_986_p2() {
    lshr_ln389_fu_986_p2 = (!zext_ln389_2_fu_953_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_2 >> (unsigned short)zext_ln389_2_fu_953_p1.read().to_uint();
}

void mlp::thread_lshr_ln681_1_fu_775_p2() {
    lshr_ln681_1_fu_775_p2 = (!zext_ln681_1_fu_772_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_1 >> (unsigned short)zext_ln681_1_fu_772_p1.read().to_uint();
}

void mlp::thread_lshr_ln681_fu_766_p2() {
    lshr_ln681_fu_766_p2 = (!zext_ln681_fu_762_p1.read().is_01())? sc_lv<512>(): select_ln681_1_fu_741_p3.read() >> (unsigned short)zext_ln681_fu_762_p1.read().to_uint();
}

void mlp::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln449_reg_1246.read())))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp::thread_out_r_TDATA_int() {
    out_r_TDATA_int = (and_ln389_1_fu_1004_p2.read() | and_ln389_2_fu_1010_p2.read());
}

void mlp::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_V_data_V_U_vld_out.read();
}

void mlp::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln449_fu_1039_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void mlp::thread_p_Result_2_fu_1016_p2() {
    p_Result_2_fu_1016_p2 = (and_ln389_1_fu_1004_p2.read() | and_ln389_2_fu_1010_p2.read());
}

void mlp::thread_p_Result_s_fu_781_p2() {
    p_Result_s_fu_781_p2 = (lshr_ln681_reg_1122.read() & lshr_ln681_1_fu_775_p2.read());
}

void mlp::thread_prediction_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_0_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_address0 = grp_mlp_kernel_fu_569_prediction_0_address0.read();
    } else {
        prediction_0_address0 = "XXXX";
    }
}

void mlp::thread_prediction_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_ce0 = grp_mlp_kernel_fu_569_prediction_0_ce0.read();
    } else {
        prediction_0_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_0_we0 = grp_mlp_kernel_fu_569_prediction_0_we0.read();
    } else {
        prediction_0_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_1_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_address0 = grp_mlp_kernel_fu_569_prediction_1_address0.read();
    } else {
        prediction_1_address0 = "XXXX";
    }
}

void mlp::thread_prediction_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_ce0 = grp_mlp_kernel_fu_569_prediction_1_ce0.read();
    } else {
        prediction_1_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_1_we0 = grp_mlp_kernel_fu_569_prediction_1_we0.read();
    } else {
        prediction_1_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_2_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_2_address0 = grp_mlp_kernel_fu_569_prediction_2_address0.read();
    } else {
        prediction_2_address0 = "XXXX";
    }
}

void mlp::thread_prediction_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_2_ce0 = grp_mlp_kernel_fu_569_prediction_2_ce0.read();
    } else {
        prediction_2_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_2_we0 = grp_mlp_kernel_fu_569_prediction_2_we0.read();
    } else {
        prediction_2_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_3_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_3_address0 = grp_mlp_kernel_fu_569_prediction_3_address0.read();
    } else {
        prediction_3_address0 = "XXXX";
    }
}

void mlp::thread_prediction_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_3_ce0 = grp_mlp_kernel_fu_569_prediction_3_ce0.read();
    } else {
        prediction_3_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_3_we0 = grp_mlp_kernel_fu_569_prediction_3_we0.read();
    } else {
        prediction_3_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_4_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_4_address0 = grp_mlp_kernel_fu_569_prediction_4_address0.read();
    } else {
        prediction_4_address0 = "XXXX";
    }
}

void mlp::thread_prediction_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_4_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_4_ce0 = grp_mlp_kernel_fu_569_prediction_4_ce0.read();
    } else {
        prediction_4_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_4_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_4_we0 = grp_mlp_kernel_fu_569_prediction_4_we0.read();
    } else {
        prediction_4_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_5_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_5_address0 = grp_mlp_kernel_fu_569_prediction_5_address0.read();
    } else {
        prediction_5_address0 = "XXXX";
    }
}

void mlp::thread_prediction_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_5_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_5_ce0 = grp_mlp_kernel_fu_569_prediction_5_ce0.read();
    } else {
        prediction_5_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_5_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_5_we0 = grp_mlp_kernel_fu_569_prediction_5_we0.read();
    } else {
        prediction_5_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_6_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_6_address0 = grp_mlp_kernel_fu_569_prediction_6_address0.read();
    } else {
        prediction_6_address0 = "XXXX";
    }
}

void mlp::thread_prediction_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_6_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_6_ce0 = grp_mlp_kernel_fu_569_prediction_6_ce0.read();
    } else {
        prediction_6_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_6_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_6_we0 = grp_mlp_kernel_fu_569_prediction_6_we0.read();
    } else {
        prediction_6_we0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_7_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_7_address0 =  (sc_lv<4>) (zext_ln444_fu_856_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_7_address0 = grp_mlp_kernel_fu_569_prediction_7_address0.read();
    } else {
        prediction_7_address0 = "XXXX";
    }
}

void mlp::thread_prediction_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        prediction_7_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_7_ce0 = grp_mlp_kernel_fu_569_prediction_7_ce0.read();
    } else {
        prediction_7_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_prediction_7_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prediction_7_we0 = grp_mlp_kernel_fu_569_prediction_7_we0.read();
    } else {
        prediction_7_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_0_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_0_address0 = grp_mlp_kernel_fu_569_sample_0_address0.read();
    } else {
        sample_0_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_0_ce0 = grp_mlp_kernel_fu_569_sample_0_ce0.read();
    } else {
        sample_0_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_0_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_0_ce1 = grp_mlp_kernel_fu_569_sample_0_ce1.read();
    } else {
        sample_0_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_0))) {
        sample_0_we0 = ap_const_logic_1;
    } else {
        sample_0_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_1_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_1_address0 = grp_mlp_kernel_fu_569_sample_1_address0.read();
    } else {
        sample_1_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_1_ce0 = grp_mlp_kernel_fu_569_sample_1_ce0.read();
    } else {
        sample_1_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_1_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_1_ce1 = grp_mlp_kernel_fu_569_sample_1_ce1.read();
    } else {
        sample_1_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_1))) {
        sample_1_we0 = ap_const_logic_1;
    } else {
        sample_1_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_2_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_2_address0 = grp_mlp_kernel_fu_569_sample_2_address0.read();
    } else {
        sample_2_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_2_ce0 = grp_mlp_kernel_fu_569_sample_2_ce0.read();
    } else {
        sample_2_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_2_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_2_ce1 = grp_mlp_kernel_fu_569_sample_2_ce1.read();
    } else {
        sample_2_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_2))) {
        sample_2_we0 = ap_const_logic_1;
    } else {
        sample_2_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_3_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_3_address0 = grp_mlp_kernel_fu_569_sample_3_address0.read();
    } else {
        sample_3_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_3_ce0 = grp_mlp_kernel_fu_569_sample_3_ce0.read();
    } else {
        sample_3_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_3_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_3_ce1 = grp_mlp_kernel_fu_569_sample_3_ce1.read();
    } else {
        sample_3_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_3))) {
        sample_3_we0 = ap_const_logic_1;
    } else {
        sample_3_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_4_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_4_address0 = grp_mlp_kernel_fu_569_sample_4_address0.read();
    } else {
        sample_4_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_4_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_4_ce0 = grp_mlp_kernel_fu_569_sample_4_ce0.read();
    } else {
        sample_4_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_4_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_4_ce1 = grp_mlp_kernel_fu_569_sample_4_ce1.read();
    } else {
        sample_4_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_4))) {
        sample_4_we0 = ap_const_logic_1;
    } else {
        sample_4_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_5_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_5_address0 = grp_mlp_kernel_fu_569_sample_5_address0.read();
    } else {
        sample_5_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_5_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_5_ce0 = grp_mlp_kernel_fu_569_sample_5_ce0.read();
    } else {
        sample_5_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_5_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_5_ce1 = grp_mlp_kernel_fu_569_sample_5_ce1.read();
    } else {
        sample_5_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_5))) {
        sample_5_we0 = ap_const_logic_1;
    } else {
        sample_5_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_6_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_6_address0 = grp_mlp_kernel_fu_569_sample_6_address0.read();
    } else {
        sample_6_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_6_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_6_ce0 = grp_mlp_kernel_fu_569_sample_6_ce0.read();
    } else {
        sample_6_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_6_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_6_ce1 = grp_mlp_kernel_fu_569_sample_6_ce1.read();
    } else {
        sample_6_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_6))) {
        sample_6_we0 = ap_const_logic_1;
    } else {
        sample_6_we0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_7_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_7_address0 =  (sc_lv<6>) (zext_ln425_fu_798_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_7_address0 = grp_mlp_kernel_fu_569_sample_7_address0.read();
    } else {
        sample_7_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp::thread_sample_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sample_7_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_7_ce0 = grp_mlp_kernel_fu_569_sample_7_ce0.read();
    } else {
        sample_7_ce0 = ap_const_logic_0;
    }
}

void mlp::thread_sample_7_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sample_7_ce1 = grp_mlp_kernel_fu_569_sample_7_ce1.read();
    } else {
        sample_7_ce1 = ap_const_logic_0;
    }
}

void mlp::thread_sample_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,3,3>(trunc_ln425_reg_1078.read(), ap_const_lv3_7))) {
        sample_7_we0 = ap_const_logic_1;
    } else {
        sample_7_we0 = ap_const_logic_0;
    }
}

void mlp::thread_select_ln389_1_fu_928_p3() {
    select_ln389_1_fu_928_p3 = (!icmp_ln389_reg_1218.read()[0].is_01())? sc_lv<8>(): ((icmp_ln389_reg_1218.read()[0].to_bool())? trunc_ln389_1_reg_1234.read(): trunc_ln389_reg_1226.read());
}

void mlp::thread_select_ln389_2_fu_933_p3() {
    select_ln389_2_fu_933_p3 = (!icmp_ln389_reg_1218.read()[0].is_01())? sc_lv<8>(): ((icmp_ln389_reg_1218.read()[0].to_bool())? sub_ln389_fu_918_p2.read(): trunc_ln389_reg_1226.read());
}

void mlp::thread_select_ln389_3_fu_973_p3() {
    select_ln389_3_fu_973_p3 = (!icmp_ln389_reg_1218.read()[0].is_01())? sc_lv<128>(): ((icmp_ln389_reg_1218.read()[0].to_bool())? tmp_20_fu_963_p4.read(): shl_ln389_fu_957_p2.read());
}

void mlp::thread_select_ln389_fu_923_p3() {
    select_ln389_fu_923_p3 = (!icmp_ln389_reg_1218.read()[0].is_01())? sc_lv<8>(): ((icmp_ln389_reg_1218.read()[0].to_bool())? trunc_ln389_reg_1226.read(): trunc_ln389_1_reg_1234.read());
}

void mlp::thread_select_ln681_1_fu_741_p3() {
    select_ln681_1_fu_741_p3 = (!icmp_ln681_fu_700_p2.read()[0].is_01())? sc_lv<512>(): ((icmp_ln681_fu_700_p2.read()[0].to_bool())? tmp_19_fu_706_p4.read(): tmp_data_V_1_reg_1072.read());
}

void mlp::thread_select_ln681_2_fu_748_p3() {
    select_ln681_2_fu_748_p3 = (!icmp_ln681_fu_700_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln681_fu_700_p2.read()[0].to_bool())? sub_ln681_1_fu_721_p2.read(): Lo_assign_reg_511.read());
}

void mlp::thread_select_ln681_fu_733_p3() {
    select_ln681_fu_733_p3 = (!icmp_ln681_fu_700_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln681_fu_700_p2.read()[0].to_bool())? sub_ln681_fu_715_p2.read(): sub_ln681_2_fu_727_p2.read());
}

void mlp::thread_shl_ln389_1_fu_980_p2() {
    shl_ln389_1_fu_980_p2 = (!zext_ln389_1_fu_949_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_2 << (unsigned short)zext_ln389_1_fu_949_p1.read().to_uint();
}

void mlp::thread_shl_ln389_fu_957_p2() {
    shl_ln389_fu_957_p2 = (!zext_ln389_fu_945_p1.read().is_01())? sc_lv<128>(): tmp_V_fu_915_p1.read() << (unsigned short)zext_ln389_fu_945_p1.read().to_uint();
}

void mlp::thread_sub_ln389_1_fu_939_p2() {
    sub_ln389_1_fu_939_p2 = (!ap_const_lv8_7F.is_01() || !select_ln389_fu_923_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(select_ln389_fu_923_p3.read()));
}

void mlp::thread_sub_ln389_fu_918_p2() {
    sub_ln389_fu_918_p2 = (!ap_const_lv8_7F.is_01() || !trunc_ln389_reg_1226.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(trunc_ln389_reg_1226.read()));
}

void mlp::thread_sub_ln681_1_fu_721_p2() {
    sub_ln681_1_fu_721_p2 = (!ap_const_lv10_1FF.is_01() || !Lo_assign_reg_511.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(Lo_assign_reg_511.read()));
}

void mlp::thread_sub_ln681_2_fu_727_p2() {
    sub_ln681_2_fu_727_p2 = (!Hi_assign_reg_523.read().is_01() || !Lo_assign_reg_511.read().is_01())? sc_lv<10>(): (sc_biguint<10>(Hi_assign_reg_523.read()) - sc_biguint<10>(Lo_assign_reg_511.read()));
}

void mlp::thread_sub_ln681_3_fu_756_p2() {
    sub_ln681_3_fu_756_p2 = (!ap_const_lv10_1FF.is_01() || !select_ln681_fu_733_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(select_ln681_fu_733_p3.read()));
}

void mlp::thread_sub_ln681_fu_715_p2() {
    sub_ln681_fu_715_p2 = (!Lo_assign_reg_511.read().is_01() || !Hi_assign_reg_523.read().is_01())? sc_lv<10>(): (sc_biguint<10>(Lo_assign_reg_511.read()) - sc_biguint<10>(Hi_assign_reg_523.read()));
}

void mlp::thread_tmp_19_fu_706_p4() {
    tmp_19_fu_706_p4 = tmp_data_V_1_reg_1072.read().range(0, 511);
}

void mlp::thread_tmp_20_fu_963_p4() {
    tmp_20_fu_963_p4 = shl_ln389_fu_957_p2.read().range(0, 127);
}

void mlp::thread_tmp_V_fu_915_p1() {
    tmp_V_fu_915_p1 = esl_sext<128,16>(val_assign_reg_1213.read());
}

void mlp::thread_tmp_last_V_fu_834_p2() {
    tmp_last_V_fu_834_p2 = (!i2_0_reg_547.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_547.read() == ap_const_lv4_7);
}

void mlp::thread_trunc_ln389_1_fu_905_p1() {
    trunc_ln389_1_fu_905_p1 = high_1_fu_266.read().range(8-1, 0);
}

void mlp::thread_trunc_ln389_fu_901_p1() {
    trunc_ln389_fu_901_p1 = low_1_fu_270.read().range(8-1, 0);
}

void mlp::thread_trunc_ln425_1_fu_786_p1() {
    trunc_ln425_1_fu_786_p1 = p_Result_s_fu_781_p2.read().range(8-1, 0);
}

void mlp::thread_trunc_ln425_fu_684_p1() {
    trunc_ln425_fu_684_p1 = i_0_reg_500.read().range(3-1, 0);
}

void mlp::thread_trunc_ln444_fu_840_p1() {
    trunc_ln444_fu_840_p1 = i2_0_reg_547.read().range(3-1, 0);
}

void mlp::thread_xor_ln389_fu_998_p2() {
    xor_ln389_fu_998_p2 = (and_ln389_fu_992_p2.read() ^ ap_const_lv128_lc_2);
}

void mlp::thread_zext_ln389_1_fu_949_p1() {
    zext_ln389_1_fu_949_p1 = esl_zext<128,8>(select_ln389_1_fu_928_p3.read());
}

void mlp::thread_zext_ln389_2_fu_953_p1() {
    zext_ln389_2_fu_953_p1 = esl_zext<128,8>(sub_ln389_1_fu_939_p2.read());
}

void mlp::thread_zext_ln389_fu_945_p1() {
    zext_ln389_fu_945_p1 = esl_zext<128,8>(select_ln389_2_fu_933_p3.read());
}

void mlp::thread_zext_ln425_fu_798_p1() {
    zext_ln425_fu_798_p1 = esl_zext<64,7>(j_0_reg_535.read());
}

void mlp::thread_zext_ln444_fu_856_p1() {
    zext_ln444_fu_856_p1 = esl_zext<64,4>(j3_0_reg_558.read());
}

void mlp::thread_zext_ln681_1_fu_772_p1() {
    zext_ln681_1_fu_772_p1 = esl_zext<512,10>(sub_ln681_3_reg_1117.read());
}

void mlp::thread_zext_ln681_fu_762_p1() {
    zext_ln681_fu_762_p1 = esl_zext<512,10>(select_ln681_2_fu_748_p3.read());
}

void mlp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln417_fu_668_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln423_fu_688_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_mlp_kernel_fu_569_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln440_fu_822_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(regslice_both_out_V_data_V_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln440_fu_822_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln442_fu_844_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_block_state11_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void mlp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

