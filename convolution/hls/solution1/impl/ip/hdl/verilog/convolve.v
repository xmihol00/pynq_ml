// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolve (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stripes_0_address0,
        stripes_0_ce0,
        stripes_0_q0,
        stripes_1_address0,
        stripes_1_ce0,
        stripes_1_q0,
        stripes_2_address0,
        stripes_2_ce0,
        stripes_2_q0,
        stripes_3_address0,
        stripes_3_ce0,
        stripes_3_q0,
        stripes_4_address0,
        stripes_4_ce0,
        stripes_4_q0,
        stripes_5_address0,
        stripes_5_ce0,
        stripes_5_q0,
        blue_output_V_din,
        blue_output_V_full_n,
        blue_output_V_write,
        green_output_V_din,
        green_output_V_full_n,
        green_output_V_write,
        red_output_V_din,
        red_output_V_full_n,
        red_output_V_write,
        input_line_ready_V_dout,
        input_line_ready_V_empty_n,
        input_line_ready_V_read
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_pp0_stage0 = 20'd4;
parameter    ap_ST_fsm_state7 = 20'd8;
parameter    ap_ST_fsm_state8 = 20'd16;
parameter    ap_ST_fsm_state9 = 20'd32;
parameter    ap_ST_fsm_state10 = 20'd64;
parameter    ap_ST_fsm_state11 = 20'd128;
parameter    ap_ST_fsm_pp1_stage0 = 20'd256;
parameter    ap_ST_fsm_state16 = 20'd512;
parameter    ap_ST_fsm_state17 = 20'd1024;
parameter    ap_ST_fsm_state18 = 20'd2048;
parameter    ap_ST_fsm_state19 = 20'd4096;
parameter    ap_ST_fsm_state20 = 20'd8192;
parameter    ap_ST_fsm_pp2_stage0 = 20'd16384;
parameter    ap_ST_fsm_state25 = 20'd32768;
parameter    ap_ST_fsm_state26 = 20'd65536;
parameter    ap_ST_fsm_state27 = 20'd131072;
parameter    ap_ST_fsm_state28 = 20'd262144;
parameter    ap_ST_fsm_state29 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] stripes_0_address0;
output   stripes_0_ce0;
input  [7:0] stripes_0_q0;
output  [11:0] stripes_1_address0;
output   stripes_1_ce0;
input  [7:0] stripes_1_q0;
output  [11:0] stripes_2_address0;
output   stripes_2_ce0;
input  [7:0] stripes_2_q0;
output  [11:0] stripes_3_address0;
output   stripes_3_ce0;
input  [7:0] stripes_3_q0;
output  [11:0] stripes_4_address0;
output   stripes_4_ce0;
input  [7:0] stripes_4_q0;
output  [11:0] stripes_5_address0;
output   stripes_5_ce0;
input  [7:0] stripes_5_q0;
output  [15:0] blue_output_V_din;
input   blue_output_V_full_n;
output   blue_output_V_write;
output  [15:0] green_output_V_din;
input   green_output_V_full_n;
output   green_output_V_write;
output  [15:0] red_output_V_din;
input   red_output_V_full_n;
output   red_output_V_write;
input  [7:0] input_line_ready_V_dout;
input   input_line_ready_V_empty_n;
output   input_line_ready_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] stripes_0_address0;
reg stripes_0_ce0;
reg[11:0] stripes_1_address0;
reg stripes_1_ce0;
reg[11:0] stripes_2_address0;
reg stripes_2_ce0;
reg[11:0] stripes_3_address0;
reg stripes_3_ce0;
reg[11:0] stripes_4_address0;
reg stripes_4_ce0;
reg[11:0] stripes_5_address0;
reg stripes_5_ce0;
reg[15:0] blue_output_V_din;
reg blue_output_V_write;
reg[15:0] green_output_V_din;
reg green_output_V_write;
reg[15:0] red_output_V_din;
reg red_output_V_write;
reg input_line_ready_V_read;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] iteration;
reg   [7:0] row_indices_lower_0;
reg   [2:0] row_indices_lower_1;
reg   [7:0] row_indices_lower_2;
reg   [7:0] row_indices_upper_0;
reg   [7:0] row_indices_upper_1;
reg   [2:0] row_indices_upper_2;
reg   [1:0] kernels_0_0_address0;
reg    kernels_0_0_ce0;
wire   [1:0] kernels_0_0_q0;
reg   [1:0] kernels_1_0_address0;
reg    kernels_1_0_ce0;
wire   [1:0] kernels_1_0_q0;
reg   [1:0] kernels_2_0_address0;
reg    kernels_2_0_ce0;
wire   [1:0] kernels_2_0_q0;
reg   [1:0] kernels_0_1_address0;
reg    kernels_0_1_ce0;
wire   [1:0] kernels_0_1_q0;
reg   [1:0] kernels_2_1_address0;
reg    kernels_2_1_ce0;
wire   [1:0] kernels_2_1_q0;
reg   [1:0] kernels_0_2_address0;
reg    kernels_0_2_ce0;
wire   [1:0] kernels_0_2_q0;
reg   [1:0] kernels_1_2_address0;
reg    kernels_1_2_ce0;
wire   [2:0] kernels_1_2_q0;
reg   [1:0] kernels_2_2_address0;
reg    kernels_2_2_ce0;
wire   [1:0] kernels_2_2_q0;
reg    blue_output_V_blk_n;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln135_2_fu_2311_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln94_fu_1349_p2;
reg    green_output_V_blk_n;
reg    red_output_V_blk_n;
reg    input_line_ready_V_blk_n;
reg   [2:0] indvar_flatten_reg_719;
reg   [1:0] k_0_0_reg_730;
reg   [1:0] l2_0_0_reg_741;
reg   [15:0] channel_maxes_0_2_19_reg_752;
reg   [11:0] partial_sums_2_1_reg_763;
reg  signed [10:0] partial_sums_1_1_20_reg_774;
reg   [10:0] partial_sums_0_1_reg_785;
reg   [2:0] indvar_flatten6_reg_865;
reg   [1:0] k_0_1_reg_876;
reg   [1:0] l2_0_1_reg_887;
reg   [15:0] channel_maxes_1_2_30_reg_898;
reg   [10:0] partial_sums_2_3_reg_909;
reg   [11:0] partial_sums_0_3_reg_920;
reg   [2:0] indvar_flatten13_reg_988;
reg   [1:0] k_0_2_reg_999;
reg   [1:0] l2_0_2_reg_1010;
reg   [15:0] channel_maxes_2_2_40_reg_1021;
reg  signed [10:0] partial_sums_2_5_41_reg_1032;
reg  signed [11:0] partial_sums_1_5_reg_1043;
reg  signed [10:0] partial_sums_0_5_42_reg_1054;
reg   [1:0] reg_1237;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln111_reg_2636;
reg   [0:0] icmp_ln111_reg_2636_pp0_iter1_reg;
wire    ap_CS_fsm_state10;
wire   [7:0] grp_fu_1135_p8;
reg   [7:0] reg_1241;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln111_1_reg_2827;
reg   [0:0] icmp_ln111_1_reg_2827_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state21_pp2_stage0_iter0;
wire    ap_block_state22_pp2_stage0_iter1;
wire    ap_block_state23_pp2_stage0_iter2;
wire    ap_block_state24_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln111_2_reg_2997;
reg   [0:0] icmp_ln111_2_reg_2997_pp2_iter1_reg;
reg  signed [1:0] reg_1245;
wire   [7:0] grp_fu_1152_p8;
reg   [7:0] reg_1249;
reg  signed [1:0] reg_1253;
wire   [7:0] grp_fu_1169_p8;
reg   [7:0] reg_1257;
wire   [7:0] grp_fu_1186_p8;
reg   [7:0] reg_1261;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state28;
wire   [7:0] grp_fu_1203_p8;
reg   [7:0] reg_1265;
wire   [7:0] grp_fu_1220_p8;
reg   [7:0] reg_1269;
reg  signed [1:0] reg_1273;
reg   [1:0] reg_1277;
reg  signed [1:0] reg_1281;
reg  signed [2:0] reg_1285;
reg  signed [1:0] reg_1289;
reg   [2:0] row_indices_lower_1_s_reg_2575;
reg    ap_block_state1;
reg   [2:0] row_indices_upper_2_s_reg_2582;
wire   [2:0] trunc_ln124_fu_1333_p1;
reg   [2:0] trunc_ln124_reg_2589;
wire   [2:0] trunc_ln125_fu_1337_p1;
reg   [2:0] trunc_ln125_reg_2596;
wire   [2:0] trunc_ln148_fu_1341_p1;
reg   [2:0] trunc_ln148_reg_2603;
wire   [2:0] trunc_ln150_fu_1345_p1;
reg   [2:0] trunc_ln150_reg_2610;
reg    ap_block_state2;
wire   [9:0] i_fu_1355_p2;
reg   [9:0] i_reg_2621;
wire   [10:0] shl_ln_fu_1361_p3;
reg   [10:0] shl_ln_reg_2626;
wire   [0:0] icmp_ln111_fu_1565_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] icmp_ln111_reg_2636_pp0_iter2_reg;
wire   [2:0] add_ln111_3_fu_1571_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln121_fu_1583_p2;
reg   [0:0] icmp_ln121_reg_2645;
reg   [0:0] icmp_ln121_reg_2645_pp0_iter1_reg;
reg   [0:0] icmp_ln121_reg_2645_pp0_iter2_reg;
wire   [1:0] select_ln111_3_fu_1589_p3;
reg   [1:0] select_ln111_3_reg_2653;
wire   [1:0] select_ln111_4_fu_1597_p3;
reg   [1:0] select_ln111_4_reg_2659;
wire   [1:0] add_ln121_fu_1605_p2;
wire   [15:0] channel_maxes_0_1_fu_1678_p3;
reg   [15:0] channel_maxes_0_1_reg_2715;
reg    ap_enable_reg_pp0_iter3;
wire   [15:0] select_ln111_5_fu_1707_p3;
wire   [10:0] grp_fu_2447_p3;
wire  signed [10:0] grp_fu_2455_p3;
wire  signed [11:0] grp_fu_2463_p3;
wire   [10:0] zext_ln135_fu_1738_p1;
reg   [10:0] zext_ln135_reg_2740;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln135_fu_1742_p2;
wire   [1:0] add_ln135_fu_1748_p2;
reg   [1:0] add_ln135_reg_2749;
wire   [1:0] add_ln146_fu_1764_p2;
reg   [1:0] add_ln146_reg_2757;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln146_fu_1758_p2;
wire   [15:0] channel_maxes_0_3_fu_1831_p3;
wire   [10:0] grp_fu_2471_p3;
wire    ap_CS_fsm_state11;
wire  signed [10:0] grp_fu_2479_p3;
wire  signed [11:0] grp_fu_2487_p3;
wire   [0:0] icmp_ln111_1_fu_1863_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln111_1_reg_2827_pp1_iter2_reg;
wire   [2:0] add_ln111_4_fu_1869_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln121_1_fu_1881_p2;
reg   [0:0] icmp_ln121_1_reg_2836;
reg   [0:0] icmp_ln121_1_reg_2836_pp1_iter1_reg;
reg   [0:0] icmp_ln121_1_reg_2836_pp1_iter2_reg;
wire   [1:0] select_ln111_8_fu_1887_p3;
reg   [1:0] select_ln111_8_reg_2843;
wire   [1:0] select_ln111_9_fu_1895_p3;
reg   [1:0] select_ln111_9_reg_2849;
wire   [1:0] add_ln121_1_fu_1903_p2;
wire   [15:0] channel_maxes_1_1_fu_1971_p3;
reg   [15:0] channel_maxes_1_1_reg_2900;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] select_ln111_10_fu_1993_p3;
wire  signed [11:0] grp_fu_2495_p3;
wire   [10:0] grp_fu_2503_p3;
wire   [10:0] zext_ln135_1_fu_2016_p1;
reg   [10:0] zext_ln135_1_reg_2920;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln135_1_fu_2020_p2;
wire   [1:0] add_ln135_1_fu_2026_p2;
reg   [1:0] add_ln135_1_reg_2929;
wire   [1:0] add_ln146_1_fu_2042_p2;
reg   [1:0] add_ln146_1_reg_2937;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln146_1_fu_2036_p2;
wire   [15:0] channel_maxes_1_3_fu_2104_p3;
wire  signed [11:0] grp_fu_2511_p3;
wire    ap_CS_fsm_state20;
wire   [10:0] grp_fu_2519_p3;
wire   [0:0] icmp_ln111_2_fu_2128_p2;
wire    ap_CS_fsm_pp2_stage0;
reg   [0:0] icmp_ln111_2_reg_2997_pp2_iter2_reg;
wire   [2:0] add_ln111_5_fu_2134_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln121_2_fu_2146_p2;
reg   [0:0] icmp_ln121_2_reg_3006;
reg   [0:0] icmp_ln121_2_reg_3006_pp2_iter1_reg;
reg   [0:0] icmp_ln121_2_reg_3006_pp2_iter2_reg;
wire   [1:0] select_ln121_3_fu_2152_p3;
reg   [1:0] select_ln121_3_reg_3014;
wire   [1:0] select_ln111_12_fu_2160_p3;
reg   [1:0] select_ln111_12_reg_3020;
wire   [1:0] add_ln121_2_fu_2168_p2;
wire   [15:0] channel_maxes_2_1_fu_2251_p3;
reg   [15:0] channel_maxes_2_1_reg_3076;
reg    ap_enable_reg_pp2_iter3;
wire   [15:0] select_ln111_11_fu_2280_p3;
wire  signed [10:0] grp_fu_2527_p3;
wire  signed [11:0] grp_fu_2535_p3;
wire  signed [10:0] grp_fu_2543_p3;
wire   [1:0] add_ln135_2_fu_2317_p2;
reg   [1:0] add_ln135_2_reg_3104;
reg    ap_block_state26;
wire   [1:0] add_ln146_2_fu_2329_p2;
reg   [1:0] add_ln146_2_reg_3112;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln146_2_fu_2323_p2;
wire   [15:0] channel_maxes_2_3_fu_2415_p3;
wire  signed [10:0] grp_fu_2551_p3;
wire    ap_CS_fsm_state29;
wire  signed [11:0] grp_fu_2559_p3;
wire  signed [10:0] grp_fu_2567_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_enable_reg_pp2_iter1;
reg   [9:0] i_0_reg_708;
reg   [1:0] ap_phi_mux_k_0_0_phi_fu_734_p4;
wire    ap_block_pp0_stage0;
reg   [15:0] tmp_22_reg_796;
wire    ap_CS_fsm_state7;
reg   [1:0] k3_0_0_reg_807;
reg   [11:0] partial_sums_2_0_reg_818;
reg  signed [10:0] partial_sums_1_0_reg_830;
reg   [10:0] partial_sums_0_0_reg_842;
reg   [1:0] l5_0_0_reg_854;
reg   [1:0] ap_phi_mux_k_0_1_phi_fu_880_p4;
wire    ap_block_pp1_stage0;
reg   [15:0] tmp_23_reg_931;
wire    ap_CS_fsm_state16;
reg   [1:0] k3_0_1_reg_942;
reg   [10:0] partial_sums_2_2_23_reg_953;
reg   [11:0] partial_sums_0_2_24_reg_965;
reg   [1:0] l5_0_1_reg_977;
reg   [1:0] ap_phi_mux_k_0_2_phi_fu_1003_p4;
wire    ap_block_pp2_stage0;
reg   [15:0] tmp_24_reg_1065;
wire    ap_CS_fsm_state25;
reg   [1:0] k3_0_2_reg_1076;
reg  signed [10:0] partial_sums_2_4_33_reg_1088;
reg  signed [11:0] partial_sums_1_4_reg_1100;
reg  signed [10:0] partial_sums_0_4_34_reg_1112;
reg   [1:0] l5_0_2_reg_1124;
wire   [63:0] zext_ln124_fu_1617_p1;
wire   [63:0] zext_ln124_1_fu_1634_p1;
wire   [63:0] zext_ln148_fu_1770_p1;
wire   [63:0] zext_ln148_1_fu_1787_p1;
wire   [63:0] zext_ln124_3_fu_1915_p1;
wire   [63:0] zext_ln124_8_fu_1941_p1;
wire   [63:0] zext_ln148_3_fu_2048_p1;
wire   [63:0] zext_ln148_8_fu_2074_p1;
wire   [63:0] zext_ln124_6_fu_2174_p1;
wire  signed [63:0] sext_ln124_3_fu_2203_p1;
wire   [63:0] zext_ln148_6_fu_2335_p1;
wire  signed [63:0] sext_ln148_3_fu_2367_p1;
wire   [31:0] add_ln87_fu_1297_p2;
wire   [7:0] zext_ln189_fu_1427_p1;
wire   [2:0] select_ln189_1_fu_1487_p3;
wire   [7:0] zext_ln189_1_fu_1555_p1;
wire   [7:0] zext_ln188_fu_1393_p1;
wire   [7:0] zext_ln188_1_fu_1461_p1;
wire   [2:0] select_ln188_2_fu_1517_p3;
wire   [2:0] add_ln188_fu_1369_p2;
wire   [0:0] icmp_ln188_fu_1374_p2;
wire   [2:0] xor_ln188_fu_1380_p2;
wire   [2:0] select_ln188_fu_1385_p3;
wire   [2:0] add_ln189_fu_1403_p2;
wire   [0:0] icmp_ln189_fu_1408_p2;
wire   [2:0] xor_ln189_fu_1414_p2;
wire   [2:0] select_ln189_fu_1419_p3;
wire   [2:0] add_ln188_1_fu_1437_p2;
wire   [0:0] icmp_ln188_1_fu_1442_p2;
wire   [2:0] xor_ln188_1_fu_1448_p2;
wire   [2:0] select_ln188_1_fu_1453_p3;
wire   [2:0] add_ln189_1_fu_1471_p2;
wire   [0:0] icmp_ln189_1_fu_1476_p2;
wire   [2:0] xor_ln189_1_fu_1482_p2;
wire   [2:0] add_ln188_2_fu_1501_p2;
wire   [0:0] icmp_ln188_2_fu_1506_p2;
wire   [2:0] xor_ln188_2_fu_1512_p2;
wire   [2:0] add_ln189_2_fu_1531_p2;
wire   [0:0] icmp_ln189_2_fu_1536_p2;
wire   [2:0] xor_ln189_2_fu_1542_p2;
wire   [2:0] select_ln189_2_fu_1547_p3;
wire   [1:0] add_ln111_fu_1577_p2;
wire   [10:0] zext_ln121_1_fu_1614_p1;
wire   [10:0] zext_ln111_fu_1611_p1;
wire   [10:0] add_ln124_fu_1623_p2;
wire   [10:0] add_ln124_1_fu_1628_p2;
wire   [11:0] zext_ln121_fu_1648_p1;
wire   [11:0] add_ln128_fu_1652_p2;
wire  signed [12:0] sext_ln128_fu_1658_p1;
wire  signed [12:0] sext_ln121_fu_1644_p1;
wire   [12:0] channel_maxes_0_fu_1662_p2;
wire  signed [15:0] sext_ln128_1_fu_1668_p1;
wire   [0:0] icmp_ln129_fu_1672_p2;
wire   [10:0] zext_ln146_1_fu_1754_p1;
wire   [10:0] add_ln148_fu_1777_p2;
wire   [10:0] add_ln148_1_fu_1782_p2;
wire   [11:0] zext_ln146_fu_1801_p1;
wire   [11:0] add_ln152_fu_1805_p2;
wire  signed [12:0] sext_ln152_fu_1811_p1;
wire  signed [12:0] sext_ln146_fu_1797_p1;
wire   [12:0] channel_maxes_0_2_fu_1815_p2;
wire  signed [15:0] sext_ln152_1_fu_1821_p1;
wire   [0:0] icmp_ln153_fu_1825_p2;
wire   [1:0] add_ln111_1_fu_1875_p2;
wire   [10:0] zext_ln121_3_fu_1912_p1;
wire   [10:0] zext_ln111_1_fu_1909_p1;
wire   [10:0] add_ln124_3_fu_1920_p2;
wire   [10:0] add_ln124_4_fu_1925_p2;
wire   [11:0] zext_ln124_7_fu_1931_p1;
wire   [11:0] add_ln124_5_fu_1935_p2;
wire   [11:0] zext_ln121_2_fu_1951_p1;
wire   [11:0] channel_maxes_1_fu_1955_p2;
wire  signed [15:0] sext_ln128_2_fu_1961_p1;
wire   [0:0] icmp_ln129_1_fu_1965_p2;
wire   [10:0] zext_ln146_3_fu_2032_p1;
wire   [10:0] add_ln148_3_fu_2054_p2;
wire   [10:0] add_ln148_4_fu_2059_p2;
wire   [11:0] zext_ln148_7_fu_2064_p1;
wire   [11:0] add_ln148_5_fu_2068_p2;
wire   [11:0] zext_ln146_2_fu_2084_p1;
wire   [11:0] channel_maxes_1_2_fu_2088_p2;
wire  signed [15:0] sext_ln152_2_fu_2094_p1;
wire   [0:0] icmp_ln153_1_fu_2098_p2;
wire   [1:0] add_ln111_2_fu_2140_p2;
wire   [1:0] add_ln124_6_fu_2180_p2;
wire   [10:0] zext_ln124_10_fu_2184_p1;
wire   [10:0] add_ln124_7_fu_2188_p2;
wire   [12:0] zext_ln124_11_fu_2193_p1;
wire   [12:0] add_ln124_9_fu_2197_p2;
wire  signed [11:0] sext_ln121_3_fu_2221_p1;
wire  signed [11:0] sext_ln121_1_fu_2213_p1;
wire   [11:0] add_ln128_3_fu_2225_p2;
wire  signed [12:0] sext_ln128_3_fu_2231_p1;
wire  signed [12:0] sext_ln121_2_fu_2217_p1;
wire   [12:0] channel_maxes_2_fu_2235_p2;
wire  signed [15:0] sext_ln128_4_fu_2241_p1;
wire   [0:0] icmp_ln129_2_fu_2245_p2;
wire   [1:0] add_ln148_6_fu_2342_p2;
wire   [10:0] zext_ln148_10_fu_2348_p1;
wire   [10:0] add_ln148_7_fu_2352_p2;
wire   [12:0] zext_ln148_11_fu_2357_p1;
wire   [12:0] add_ln148_9_fu_2361_p2;
wire  signed [11:0] sext_ln146_3_fu_2385_p1;
wire  signed [11:0] sext_ln146_1_fu_2377_p1;
wire   [11:0] add_ln152_3_fu_2389_p2;
wire  signed [12:0] sext_ln152_3_fu_2395_p1;
wire  signed [12:0] sext_ln146_2_fu_2381_p1;
wire   [12:0] channel_maxes_2_2_fu_2399_p2;
wire  signed [15:0] sext_ln152_4_fu_2405_p1;
wire   [0:0] icmp_ln153_2_fu_2409_p2;
wire   [1:0] grp_fu_2447_p0;
wire   [7:0] grp_fu_2447_p1;
wire   [10:0] grp_fu_2447_p2;
wire   [7:0] grp_fu_2455_p1;
wire   [10:0] grp_fu_2455_p2;
wire   [7:0] grp_fu_2463_p1;
wire   [11:0] grp_fu_2463_p2;
wire   [1:0] grp_fu_2471_p0;
wire   [7:0] grp_fu_2471_p1;
wire   [7:0] grp_fu_2479_p1;
wire   [7:0] grp_fu_2487_p1;
wire   [7:0] grp_fu_2495_p1;
wire   [11:0] grp_fu_2495_p2;
wire   [1:0] grp_fu_2503_p0;
wire   [7:0] grp_fu_2503_p1;
wire   [10:0] grp_fu_2503_p2;
wire   [7:0] grp_fu_2511_p1;
wire   [1:0] grp_fu_2519_p0;
wire   [7:0] grp_fu_2519_p1;
wire   [7:0] grp_fu_2527_p0;
wire   [10:0] grp_fu_2527_p2;
wire   [7:0] grp_fu_2535_p0;
wire   [11:0] grp_fu_2535_p2;
wire   [7:0] grp_fu_2543_p0;
wire   [10:0] grp_fu_2543_p2;
wire   [7:0] grp_fu_2551_p0;
wire   [7:0] grp_fu_2559_p0;
wire   [7:0] grp_fu_2567_p0;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [9:0] grp_fu_2447_p00;
wire   [9:0] grp_fu_2447_p10;
wire   [9:0] grp_fu_2455_p10;
wire   [9:0] grp_fu_2463_p10;
wire   [9:0] grp_fu_2471_p00;
wire   [9:0] grp_fu_2471_p10;
wire   [9:0] grp_fu_2479_p10;
wire   [9:0] grp_fu_2487_p10;
wire   [9:0] grp_fu_2495_p10;
wire   [9:0] grp_fu_2503_p00;
wire   [9:0] grp_fu_2503_p10;
wire   [9:0] grp_fu_2511_p10;
wire   [9:0] grp_fu_2519_p00;
wire   [9:0] grp_fu_2519_p10;
wire   [9:0] grp_fu_2527_p00;
wire   [10:0] grp_fu_2535_p00;
wire   [9:0] grp_fu_2543_p00;
wire   [9:0] grp_fu_2551_p00;
wire   [10:0] grp_fu_2559_p00;
wire   [9:0] grp_fu_2567_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 iteration = 32'd4294967295;
#0 row_indices_lower_0 = 8'd5;
#0 row_indices_lower_1 = 3'd0;
#0 row_indices_lower_2 = 8'd1;
#0 row_indices_upper_0 = 8'd4;
#0 row_indices_upper_1 = 8'd5;
#0 row_indices_upper_2 = 3'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

convolve_kernels_bkb #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_0_address0),
    .ce0(kernels_0_0_ce0),
    .q0(kernels_0_0_q0)
);

convolve_kernels_cud #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_0_address0),
    .ce0(kernels_1_0_ce0),
    .q0(kernels_1_0_q0)
);

convolve_kernels_dEe #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_0_address0),
    .ce0(kernels_2_0_ce0),
    .q0(kernels_2_0_q0)
);

convolve_kernels_eOg #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_1_address0),
    .ce0(kernels_0_1_ce0),
    .q0(kernels_0_1_q0)
);

convolve_kernels_fYi #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_1_address0),
    .ce0(kernels_2_1_ce0),
    .q0(kernels_2_1_q0)
);

convolve_kernels_cud #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_0_2_address0),
    .ce0(kernels_0_2_ce0),
    .q0(kernels_0_2_q0)
);

convolve_kernels_hbi #(
    .DataWidth( 3 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_1_2_address0),
    .ce0(kernels_1_2_ce0),
    .q0(kernels_1_2_q0)
);

convolve_kernels_cud #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
kernels_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernels_2_2_address0),
    .ce0(kernels_2_2_ce0),
    .q0(kernels_2_2_q0)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U12(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(trunc_ln124_reg_2589),
    .dout(grp_fu_1135_p8)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U13(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(trunc_ln125_reg_2596),
    .dout(grp_fu_1152_p8)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U14(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(row_indices_upper_2_s_reg_2582),
    .dout(grp_fu_1169_p8)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U15(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(trunc_ln148_reg_2603),
    .dout(grp_fu_1186_p8)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U16(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(row_indices_lower_1_s_reg_2575),
    .dout(grp_fu_1203_p8)
);

convolution_mux_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
convolution_mux_6jbC_U17(
    .din0(stripes_0_q0),
    .din1(stripes_1_q0),
    .din2(stripes_2_q0),
    .din3(stripes_3_q0),
    .din4(stripes_4_q0),
    .din5(stripes_5_q0),
    .din6(trunc_ln150_reg_2610),
    .dout(grp_fu_1220_p8)
);

convolution_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mkbM_U18(
    .din0(grp_fu_2447_p0),
    .din1(grp_fu_2447_p1),
    .din2(grp_fu_2447_p2),
    .dout(grp_fu_2447_p3)
);

convolution_mac_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mlbW_U19(
    .din0(reg_1245),
    .din1(grp_fu_2455_p1),
    .din2(grp_fu_2455_p2),
    .dout(grp_fu_2455_p3)
);

convolution_mac_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mmb6_U20(
    .din0(reg_1253),
    .din1(grp_fu_2463_p1),
    .din2(grp_fu_2463_p2),
    .dout(grp_fu_2463_p3)
);

convolution_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mkbM_U21(
    .din0(grp_fu_2471_p0),
    .din1(grp_fu_2471_p1),
    .din2(partial_sums_0_0_reg_842),
    .dout(grp_fu_2471_p3)
);

convolution_mac_mncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mncg_U22(
    .din0(reg_1245),
    .din1(grp_fu_2479_p1),
    .din2(partial_sums_1_0_reg_830),
    .dout(grp_fu_2479_p3)
);

convolution_mac_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mmb6_U23(
    .din0(reg_1253),
    .din1(grp_fu_2487_p1),
    .din2(partial_sums_2_0_reg_818),
    .dout(grp_fu_2487_p3)
);

convolution_mac_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mmb6_U24(
    .din0(reg_1273),
    .din1(grp_fu_2495_p1),
    .din2(grp_fu_2495_p2),
    .dout(grp_fu_2495_p3)
);

convolution_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mkbM_U25(
    .din0(grp_fu_2503_p0),
    .din1(grp_fu_2503_p1),
    .din2(grp_fu_2503_p2),
    .dout(grp_fu_2503_p3)
);

convolution_mac_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mmb6_U26(
    .din0(reg_1273),
    .din1(grp_fu_2511_p1),
    .din2(partial_sums_0_2_24_reg_965),
    .dout(grp_fu_2511_p3)
);

convolution_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mkbM_U27(
    .din0(grp_fu_2519_p0),
    .din1(grp_fu_2519_p1),
    .din2(partial_sums_2_2_23_reg_953),
    .dout(grp_fu_2519_p3)
);

convolution_mac_mocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mocq_U28(
    .din0(grp_fu_2527_p0),
    .din1(reg_1281),
    .din2(grp_fu_2527_p2),
    .dout(grp_fu_2527_p3)
);

convolution_mac_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mpcA_U29(
    .din0(grp_fu_2535_p0),
    .din1(reg_1285),
    .din2(grp_fu_2535_p2),
    .dout(grp_fu_2535_p3)
);

convolution_mac_mocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mocq_U30(
    .din0(grp_fu_2543_p0),
    .din1(reg_1289),
    .din2(grp_fu_2543_p2),
    .dout(grp_fu_2543_p3)
);

convolution_mac_mqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mqcK_U31(
    .din0(grp_fu_2551_p0),
    .din1(reg_1281),
    .din2(partial_sums_0_4_34_reg_1112),
    .dout(grp_fu_2551_p3)
);

convolution_mac_mrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
convolution_mac_mrcU_U32(
    .din0(grp_fu_2559_p0),
    .din1(reg_1285),
    .din2(partial_sums_1_4_reg_1100),
    .dout(grp_fu_2559_p3)
);

convolution_mac_mqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
convolution_mac_mqcK_U33(
    .din0(grp_fu_2567_p0),
    .din1(reg_1289),
    .din2(partial_sums_2_4_33_reg_1088),
    .dout(grp_fu_2567_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln111_fu_1565_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln111_1_fu_1863_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln111_2_fu_2128_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_2636_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        channel_maxes_0_2_19_reg_752 <= select_ln111_5_fu_1707_p3;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        channel_maxes_0_2_19_reg_752 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        channel_maxes_1_2_30_reg_898 <= select_ln111_10_fu_1993_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        channel_maxes_1_2_30_reg_898 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        channel_maxes_2_2_40_reg_1021 <= select_ln111_11_fu_2280_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        channel_maxes_2_2_40_reg_1021 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) begin
        i_0_reg_708 <= i_reg_2621;
    end else if ((~((input_line_ready_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_708 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_fu_2128_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten13_reg_988 <= add_ln111_5_fu_2134_p2;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        indvar_flatten13_reg_988 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_fu_1863_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten6_reg_865 <= add_ln111_4_fu_1869_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        indvar_flatten6_reg_865 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1565_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_719 <= add_ln111_3_fu_1571_p2;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        indvar_flatten_reg_719 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k3_0_0_reg_807 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln146_fu_1758_p2 == 1'd1))) begin
        k3_0_0_reg_807 <= add_ln135_reg_2749;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k3_0_1_reg_942 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln146_1_fu_2036_p2 == 1'd1))) begin
        k3_0_1_reg_942 <= add_ln135_1_reg_2929;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        k3_0_2_reg_1076 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln146_2_fu_2323_p2 == 1'd1))) begin
        k3_0_2_reg_1076 <= add_ln135_2_reg_3104;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_2636 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_0_0_reg_730 <= select_ln111_4_reg_2659;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        k_0_0_reg_730 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        k_0_1_reg_876 <= select_ln111_9_reg_2849;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        k_0_1_reg_876 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_0_2_reg_999 <= select_ln111_12_reg_3020;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        k_0_2_reg_999 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1565_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l2_0_0_reg_741 <= add_ln121_fu_1605_p2;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        l2_0_0_reg_741 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_fu_1863_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        l2_0_1_reg_887 <= add_ln121_1_fu_1903_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        l2_0_1_reg_887 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_fu_2128_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        l2_0_2_reg_1010 <= add_ln121_2_fu_2168_p2;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        l2_0_2_reg_1010 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_1742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        l5_0_0_reg_854 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        l5_0_0_reg_854 <= add_ln146_reg_2757;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_1_fu_2020_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        l5_0_1_reg_977 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        l5_0_1_reg_977 <= add_ln146_1_reg_2937;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd0))) begin
        l5_0_2_reg_1124 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        l5_0_2_reg_1124 <= add_ln146_2_reg_3112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_1742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        partial_sums_0_0_reg_842 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        partial_sums_0_0_reg_842 <= grp_fu_2471_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_2636_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        partial_sums_0_1_reg_785 <= grp_fu_2447_p3;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        partial_sums_0_1_reg_785 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_1_fu_2020_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_0_2_24_reg_965 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        partial_sums_0_2_24_reg_965 <= grp_fu_2511_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        partial_sums_0_3_reg_920 <= grp_fu_2495_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        partial_sums_0_3_reg_920 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd0))) begin
        partial_sums_0_4_34_reg_1112 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_0_4_34_reg_1112 <= grp_fu_2551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        partial_sums_0_5_42_reg_1054 <= grp_fu_2527_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        partial_sums_0_5_42_reg_1054 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_1742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        partial_sums_1_0_reg_830 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        partial_sums_1_0_reg_830 <= grp_fu_2479_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_2636_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        partial_sums_1_1_20_reg_774 <= grp_fu_2455_p3;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        partial_sums_1_1_20_reg_774 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd0))) begin
        partial_sums_1_4_reg_1100 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_1_4_reg_1100 <= grp_fu_2559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        partial_sums_1_5_reg_1043 <= grp_fu_2535_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        partial_sums_1_5_reg_1043 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_1742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        partial_sums_2_0_reg_818 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        partial_sums_2_0_reg_818 <= grp_fu_2487_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_2636_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        partial_sums_2_1_reg_763 <= grp_fu_2463_p3;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        partial_sums_2_1_reg_763 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_1_fu_2020_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        partial_sums_2_2_23_reg_953 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        partial_sums_2_2_23_reg_953 <= grp_fu_2519_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        partial_sums_2_3_reg_909 <= grp_fu_2503_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
        partial_sums_2_3_reg_909 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd0))) begin
        partial_sums_2_4_33_reg_1088 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        partial_sums_2_4_33_reg_1088 <= grp_fu_2567_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        partial_sums_2_5_41_reg_1032 <= grp_fu_2543_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
        partial_sums_2_5_41_reg_1032 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_22_reg_796 <= channel_maxes_0_1_reg_2715;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln146_fu_1758_p2 == 1'd1))) begin
        tmp_22_reg_796 <= channel_maxes_0_3_fu_1831_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_23_reg_931 <= channel_maxes_1_1_reg_2900;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln146_1_fu_2036_p2 == 1'd1))) begin
        tmp_23_reg_931 <= channel_maxes_1_3_fu_2104_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_24_reg_1065 <= channel_maxes_2_1_reg_3076;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln146_2_fu_2323_p2 == 1'd1))) begin
        tmp_24_reg_1065 <= channel_maxes_2_3_fu_2415_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln135_1_reg_2929 <= add_ln135_1_fu_2026_p2;
        zext_ln135_1_reg_2920[1 : 0] <= zext_ln135_1_fu_2016_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26))) begin
        add_ln135_2_reg_3104 <= add_ln135_2_fu_2317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln135_reg_2749 <= add_ln135_fu_1748_p2;
        zext_ln135_reg_2740[1 : 0] <= zext_ln135_fu_1738_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln146_1_reg_2937 <= add_ln146_1_fu_2042_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln146_2_reg_3112 <= add_ln146_2_fu_2329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln146_reg_2757 <= add_ln146_fu_1764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        channel_maxes_0_1_reg_2715 <= channel_maxes_0_1_fu_1678_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        channel_maxes_1_1_reg_2900 <= channel_maxes_1_1_fu_1971_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        channel_maxes_2_1_reg_3076 <= channel_maxes_2_1_fu_2251_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_2621 <= i_fu_1355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln111_1_reg_2827 <= icmp_ln111_1_fu_1863_p2;
        icmp_ln111_1_reg_2827_pp1_iter1_reg <= icmp_ln111_1_reg_2827;
        icmp_ln121_1_reg_2836_pp1_iter1_reg <= icmp_ln121_1_reg_2836;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln111_1_reg_2827_pp1_iter2_reg <= icmp_ln111_1_reg_2827_pp1_iter1_reg;
        icmp_ln121_1_reg_2836_pp1_iter2_reg <= icmp_ln121_1_reg_2836_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln111_2_reg_2997 <= icmp_ln111_2_fu_2128_p2;
        icmp_ln111_2_reg_2997_pp2_iter1_reg <= icmp_ln111_2_reg_2997;
        icmp_ln121_2_reg_3006_pp2_iter1_reg <= icmp_ln121_2_reg_3006;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln111_2_reg_2997_pp2_iter2_reg <= icmp_ln111_2_reg_2997_pp2_iter1_reg;
        icmp_ln121_2_reg_3006_pp2_iter2_reg <= icmp_ln121_2_reg_3006_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln111_reg_2636 <= icmp_ln111_fu_1565_p2;
        icmp_ln111_reg_2636_pp0_iter1_reg <= icmp_ln111_reg_2636;
        icmp_ln121_reg_2645_pp0_iter1_reg <= icmp_ln121_reg_2645;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln111_reg_2636_pp0_iter2_reg <= icmp_ln111_reg_2636_pp0_iter1_reg;
        icmp_ln121_reg_2645_pp0_iter2_reg <= icmp_ln121_reg_2645_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_fu_1863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln121_1_reg_2836 <= icmp_ln121_1_fu_1881_p2;
        select_ln111_8_reg_2843 <= select_ln111_8_fu_1887_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_fu_2128_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln121_2_reg_3006 <= icmp_ln121_2_fu_2146_p2;
        select_ln121_3_reg_3014 <= select_ln121_3_fu_2152_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1565_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln121_reg_2645 <= icmp_ln121_fu_1583_p2;
        select_ln111_3_reg_2653 <= select_ln111_3_fu_1589_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((input_line_ready_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        iteration <= add_ln87_fu_1297_p2;
        row_indices_lower_1_s_reg_2575 <= row_indices_lower_1;
        row_indices_upper_2_s_reg_2582 <= row_indices_upper_2;
        trunc_ln124_reg_2589 <= trunc_ln124_fu_1333_p1;
        trunc_ln125_reg_2596 <= trunc_ln125_fu_1337_p1;
        trunc_ln148_reg_2603 <= trunc_ln148_fu_1341_p1;
        trunc_ln150_reg_2610 <= trunc_ln150_fu_1345_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln111_reg_2636_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_1237 <= kernels_0_0_q0;
        reg_1245 <= kernels_1_0_q0;
        reg_1253 <= kernels_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln111_reg_2636_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_1241 <= grp_fu_1135_p8;
        reg_1257 <= grp_fu_1169_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln111_reg_2636_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_1249 <= grp_fu_1152_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1261 <= grp_fu_1186_p8;
        reg_1269 <= grp_fu_1220_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1265 <= grp_fu_1203_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_reg_2827_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_1273 <= kernels_0_1_q0;
        reg_1277 <= kernels_2_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_reg_2997_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        reg_1281 <= kernels_0_2_q0;
        reg_1285 <= kernels_1_2_q0;
        reg_1289 <= kernels_2_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
        row_indices_lower_0[2 : 0] <= zext_ln189_fu_1427_p1[2 : 0];
        row_indices_lower_1 <= select_ln189_1_fu_1487_p3;
        row_indices_lower_2[2 : 0] <= zext_ln189_1_fu_1555_p1[2 : 0];
        row_indices_upper_0[2 : 0] <= zext_ln188_fu_1393_p1[2 : 0];
        row_indices_upper_1[2 : 0] <= zext_ln188_1_fu_1461_p1[2 : 0];
        row_indices_upper_2 <= select_ln188_2_fu_1517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln111_2_fu_2128_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln111_12_reg_3020 <= select_ln111_12_fu_2160_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1565_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln111_4_reg_2659 <= select_ln111_4_fu_1597_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln111_1_fu_1863_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln111_9_reg_2849 <= select_ln111_9_fu_1895_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
        shl_ln_reg_2626[10 : 1] <= shl_ln_fu_1361_p3[10 : 1];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_2636 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_k_0_0_phi_fu_734_p4 = select_ln111_4_reg_2659;
    end else begin
        ap_phi_mux_k_0_0_phi_fu_734_p4 = k_0_0_reg_730;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln111_1_reg_2827 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_k_0_1_phi_fu_880_p4 = select_ln111_9_reg_2849;
    end else begin
        ap_phi_mux_k_0_1_phi_fu_880_p4 = k_0_1_reg_876;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln111_2_reg_2997 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_k_0_2_phi_fu_1003_p4 = select_ln111_12_reg_3020;
    end else begin
        ap_phi_mux_k_0_2_phi_fu_1003_p4 = k_0_2_reg_999;
    end
end

always @ (*) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        blue_output_V_blk_n = blue_output_V_full_n;
    end else begin
        blue_output_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) begin
        blue_output_V_din = tmp_22_reg_796;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
        blue_output_V_din = 16'd0;
    end else begin
        blue_output_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | (~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        blue_output_V_write = 1'b1;
    end else begin
        blue_output_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        green_output_V_blk_n = green_output_V_full_n;
    end else begin
        green_output_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) begin
        green_output_V_din = tmp_23_reg_931;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
        green_output_V_din = 16'd0;
    end else begin
        green_output_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | (~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        green_output_V_write = 1'b1;
    end else begin
        green_output_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)))) begin
        input_line_ready_V_blk_n = input_line_ready_V_empty_n;
    end else begin
        input_line_ready_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((input_line_ready_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)))) begin
        input_line_ready_V_read = 1'b1;
    end else begin
        input_line_ready_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernels_0_0_address0 = zext_ln148_fu_1770_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernels_0_0_address0 = zext_ln124_fu_1617_p1;
    end else begin
        kernels_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernels_0_0_ce0 = 1'b1;
    end else begin
        kernels_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        kernels_0_1_address0 = zext_ln148_3_fu_2048_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernels_0_1_address0 = zext_ln124_3_fu_1915_p1;
    end else begin
        kernels_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        kernels_0_1_ce0 = 1'b1;
    end else begin
        kernels_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_0_2_address0 = zext_ln148_6_fu_2335_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        kernels_0_2_address0 = zext_ln124_6_fu_2174_p1;
    end else begin
        kernels_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        kernels_0_2_ce0 = 1'b1;
    end else begin
        kernels_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernels_1_0_address0 = zext_ln148_fu_1770_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernels_1_0_address0 = zext_ln124_fu_1617_p1;
    end else begin
        kernels_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernels_1_0_ce0 = 1'b1;
    end else begin
        kernels_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_1_2_address0 = zext_ln148_6_fu_2335_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        kernels_1_2_address0 = zext_ln124_6_fu_2174_p1;
    end else begin
        kernels_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        kernels_1_2_ce0 = 1'b1;
    end else begin
        kernels_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernels_2_0_address0 = zext_ln148_fu_1770_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernels_2_0_address0 = zext_ln124_fu_1617_p1;
    end else begin
        kernels_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernels_2_0_ce0 = 1'b1;
    end else begin
        kernels_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        kernels_2_1_address0 = zext_ln148_3_fu_2048_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernels_2_1_address0 = zext_ln124_3_fu_1915_p1;
    end else begin
        kernels_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        kernels_2_1_ce0 = 1'b1;
    end else begin
        kernels_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        kernels_2_2_address0 = zext_ln148_6_fu_2335_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        kernels_2_2_address0 = zext_ln124_6_fu_2174_p1;
    end else begin
        kernels_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        kernels_2_2_ce0 = 1'b1;
    end else begin
        kernels_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        red_output_V_blk_n = red_output_V_full_n;
    end else begin
        red_output_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) begin
        red_output_V_din = tmp_24_reg_1065;
    end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
        red_output_V_din = 16'd0;
    end else begin
        red_output_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1)) | (~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1)))) begin
        red_output_V_write = 1'b1;
    end else begin
        red_output_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_0_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_0_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_0_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_0_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_0_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_0_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_0_ce0 = 1'b1;
    end else begin
        stripes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_1_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_1_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_1_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_1_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_1_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_1_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_1_ce0 = 1'b1;
    end else begin
        stripes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_2_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_2_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_2_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_2_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_2_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_2_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_2_ce0 = 1'b1;
    end else begin
        stripes_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_3_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_3_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_3_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_3_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_3_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_3_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_3_ce0 = 1'b1;
    end else begin
        stripes_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_4_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_4_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_4_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_4_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_4_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_4_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_4_ce0 = 1'b1;
    end else begin
        stripes_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        stripes_5_address0 = sext_ln148_3_fu_2367_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stripes_5_address0 = sext_ln124_3_fu_2203_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        stripes_5_address0 = zext_ln148_8_fu_2074_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stripes_5_address0 = zext_ln124_8_fu_1941_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        stripes_5_address0 = zext_ln148_1_fu_1787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stripes_5_address0 = zext_ln124_1_fu_1634_p1;
    end else begin
        stripes_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stripes_5_ce0 = 1'b1;
    end else begin
        stripes_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((input_line_ready_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln94_fu_1349_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln135_fu_1742_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln146_fu_1758_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln135_1_fu_2020_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln146_1_fu_2036_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1))) & (1'b1 == ap_CS_fsm_state26) & (icmp_ln135_2_fu_2311_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln146_2_fu_2323_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_1_fu_1875_p2 = (ap_phi_mux_k_0_1_phi_fu_880_p4 + 2'd1);

assign add_ln111_2_fu_2140_p2 = (ap_phi_mux_k_0_2_phi_fu_1003_p4 + 2'd1);

assign add_ln111_3_fu_1571_p2 = (indvar_flatten_reg_719 + 3'd1);

assign add_ln111_4_fu_1869_p2 = (indvar_flatten6_reg_865 + 3'd1);

assign add_ln111_5_fu_2134_p2 = (indvar_flatten13_reg_988 + 3'd1);

assign add_ln111_fu_1577_p2 = (ap_phi_mux_k_0_0_phi_fu_734_p4 + 2'd1);

assign add_ln121_1_fu_1903_p2 = (select_ln111_8_fu_1887_p3 + 2'd1);

assign add_ln121_2_fu_2168_p2 = (select_ln121_3_fu_2152_p3 + 2'd1);

assign add_ln121_fu_1605_p2 = (select_ln111_3_fu_1589_p3 + 2'd1);

assign add_ln124_1_fu_1628_p2 = (zext_ln111_fu_1611_p1 + add_ln124_fu_1623_p2);

assign add_ln124_3_fu_1920_p2 = (zext_ln121_3_fu_1912_p1 + shl_ln_reg_2626);

assign add_ln124_4_fu_1925_p2 = (zext_ln111_1_fu_1909_p1 + add_ln124_3_fu_1920_p2);

assign add_ln124_5_fu_1935_p2 = (zext_ln124_7_fu_1931_p1 + 12'd1280);

assign add_ln124_6_fu_2180_p2 = (select_ln121_3_reg_3014 + select_ln111_12_reg_3020);

assign add_ln124_7_fu_2188_p2 = (shl_ln_reg_2626 + zext_ln124_10_fu_2184_p1);

assign add_ln124_9_fu_2197_p2 = (zext_ln124_11_fu_2193_p1 + 13'd2560);

assign add_ln124_fu_1623_p2 = (zext_ln121_1_fu_1614_p1 + shl_ln_reg_2626);

assign add_ln128_3_fu_2225_p2 = ($signed(sext_ln121_3_fu_2221_p1) + $signed(sext_ln121_1_fu_2213_p1));

assign add_ln128_fu_1652_p2 = (zext_ln121_fu_1648_p1 + partial_sums_2_1_reg_763);

assign add_ln135_1_fu_2026_p2 = (k3_0_1_reg_942 + 2'd1);

assign add_ln135_2_fu_2317_p2 = (k3_0_2_reg_1076 + 2'd1);

assign add_ln135_fu_1748_p2 = (k3_0_0_reg_807 + 2'd1);

assign add_ln146_1_fu_2042_p2 = (l5_0_1_reg_977 + 2'd1);

assign add_ln146_2_fu_2329_p2 = (l5_0_2_reg_1124 + 2'd1);

assign add_ln146_fu_1764_p2 = (l5_0_0_reg_854 + 2'd1);

assign add_ln148_1_fu_1782_p2 = (zext_ln135_reg_2740 + add_ln148_fu_1777_p2);

assign add_ln148_3_fu_2054_p2 = (zext_ln146_3_fu_2032_p1 + shl_ln_reg_2626);

assign add_ln148_4_fu_2059_p2 = (zext_ln135_1_reg_2920 + add_ln148_3_fu_2054_p2);

assign add_ln148_5_fu_2068_p2 = (zext_ln148_7_fu_2064_p1 + 12'd1280);

assign add_ln148_6_fu_2342_p2 = (l5_0_2_reg_1124 + k3_0_2_reg_1076);

assign add_ln148_7_fu_2352_p2 = (shl_ln_reg_2626 + zext_ln148_10_fu_2348_p1);

assign add_ln148_9_fu_2361_p2 = (zext_ln148_11_fu_2357_p1 + 13'd2560);

assign add_ln148_fu_1777_p2 = (zext_ln146_1_fu_1754_p1 + shl_ln_reg_2626);

assign add_ln152_3_fu_2389_p2 = ($signed(sext_ln146_3_fu_2385_p1) + $signed(sext_ln146_1_fu_2377_p1));

assign add_ln152_fu_1805_p2 = (zext_ln146_fu_1801_p1 + partial_sums_2_0_reg_818);

assign add_ln188_1_fu_1437_p2 = (trunc_ln125_reg_2596 + 3'd2);

assign add_ln188_2_fu_1501_p2 = (row_indices_upper_2_s_reg_2582 + 3'd2);

assign add_ln188_fu_1369_p2 = (trunc_ln124_reg_2589 + 3'd2);

assign add_ln189_1_fu_1471_p2 = (row_indices_lower_1_s_reg_2575 + 3'd2);

assign add_ln189_2_fu_1531_p2 = (trunc_ln150_reg_2610 + 3'd2);

assign add_ln189_fu_1403_p2 = (trunc_ln148_reg_2603 + 3'd2);

assign add_ln87_fu_1297_p2 = (32'd1 + iteration);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((input_line_ready_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = (((red_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)) | ((input_line_ready_V_empty_n == 1'b0) & (icmp_ln94_fu_1349_p2 == 1'd1)));
end

assign ap_block_state21_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26 = (((red_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((green_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)) | ((blue_output_V_full_n == 1'b0) & (icmp_ln135_2_fu_2311_p2 == 1'd1)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign channel_maxes_0_1_fu_1678_p3 = ((icmp_ln129_fu_1672_p2[0:0] === 1'b1) ? sext_ln128_1_fu_1668_p1 : channel_maxes_0_2_19_reg_752);

assign channel_maxes_0_2_fu_1815_p2 = ($signed(sext_ln152_fu_1811_p1) + $signed(sext_ln146_fu_1797_p1));

assign channel_maxes_0_3_fu_1831_p3 = ((icmp_ln153_fu_1825_p2[0:0] === 1'b1) ? sext_ln152_1_fu_1821_p1 : tmp_22_reg_796);

assign channel_maxes_0_fu_1662_p2 = ($signed(sext_ln128_fu_1658_p1) + $signed(sext_ln121_fu_1644_p1));

assign channel_maxes_1_1_fu_1971_p3 = ((icmp_ln129_1_fu_1965_p2[0:0] === 1'b1) ? sext_ln128_2_fu_1961_p1 : channel_maxes_1_2_30_reg_898);

assign channel_maxes_1_2_fu_2088_p2 = (partial_sums_0_2_24_reg_965 + zext_ln146_2_fu_2084_p1);

assign channel_maxes_1_3_fu_2104_p3 = ((icmp_ln153_1_fu_2098_p2[0:0] === 1'b1) ? sext_ln152_2_fu_2094_p1 : tmp_23_reg_931);

assign channel_maxes_1_fu_1955_p2 = (partial_sums_0_3_reg_920 + zext_ln121_2_fu_1951_p1);

assign channel_maxes_2_1_fu_2251_p3 = ((icmp_ln129_2_fu_2245_p2[0:0] === 1'b1) ? sext_ln128_4_fu_2241_p1 : channel_maxes_2_2_40_reg_1021);

assign channel_maxes_2_2_fu_2399_p2 = ($signed(sext_ln152_3_fu_2395_p1) + $signed(sext_ln146_2_fu_2381_p1));

assign channel_maxes_2_3_fu_2415_p3 = ((icmp_ln153_2_fu_2409_p2[0:0] === 1'b1) ? sext_ln152_4_fu_2405_p1 : tmp_24_reg_1065);

assign channel_maxes_2_fu_2235_p2 = ($signed(sext_ln128_3_fu_2231_p1) + $signed(sext_ln121_2_fu_2217_p1));

assign grp_fu_2447_p0 = grp_fu_2447_p00;

assign grp_fu_2447_p00 = reg_1237;

assign grp_fu_2447_p1 = grp_fu_2447_p10;

assign grp_fu_2447_p10 = reg_1241;

assign grp_fu_2447_p2 = ((icmp_ln121_reg_2645_pp0_iter2_reg[0:0] === 1'b1) ? 11'd0 : partial_sums_0_1_reg_785);

assign grp_fu_2455_p1 = grp_fu_2455_p10;

assign grp_fu_2455_p10 = reg_1249;

assign grp_fu_2455_p2 = ((icmp_ln121_reg_2645_pp0_iter2_reg[0:0] === 1'b1) ? 11'd0 : partial_sums_1_1_20_reg_774);

assign grp_fu_2463_p1 = grp_fu_2463_p10;

assign grp_fu_2463_p10 = reg_1257;

assign grp_fu_2463_p2 = ((icmp_ln121_reg_2645_pp0_iter2_reg[0:0] === 1'b1) ? 12'd0 : partial_sums_2_1_reg_763);

assign grp_fu_2471_p0 = grp_fu_2471_p00;

assign grp_fu_2471_p00 = reg_1237;

assign grp_fu_2471_p1 = grp_fu_2471_p10;

assign grp_fu_2471_p10 = reg_1261;

assign grp_fu_2479_p1 = grp_fu_2479_p10;

assign grp_fu_2479_p10 = reg_1265;

assign grp_fu_2487_p1 = grp_fu_2487_p10;

assign grp_fu_2487_p10 = reg_1269;

assign grp_fu_2495_p1 = grp_fu_2495_p10;

assign grp_fu_2495_p10 = reg_1241;

assign grp_fu_2495_p2 = ((icmp_ln121_1_reg_2836_pp1_iter2_reg[0:0] === 1'b1) ? 12'd0 : partial_sums_0_3_reg_920);

assign grp_fu_2503_p0 = grp_fu_2503_p00;

assign grp_fu_2503_p00 = reg_1277;

assign grp_fu_2503_p1 = grp_fu_2503_p10;

assign grp_fu_2503_p10 = reg_1257;

assign grp_fu_2503_p2 = ((icmp_ln121_1_reg_2836_pp1_iter2_reg[0:0] === 1'b1) ? 11'd0 : partial_sums_2_3_reg_909);

assign grp_fu_2511_p1 = grp_fu_2511_p10;

assign grp_fu_2511_p10 = reg_1261;

assign grp_fu_2519_p0 = grp_fu_2519_p00;

assign grp_fu_2519_p00 = reg_1277;

assign grp_fu_2519_p1 = grp_fu_2519_p10;

assign grp_fu_2519_p10 = reg_1269;

assign grp_fu_2527_p0 = grp_fu_2527_p00;

assign grp_fu_2527_p00 = reg_1241;

assign grp_fu_2527_p2 = ((icmp_ln121_2_reg_3006_pp2_iter2_reg[0:0] === 1'b1) ? 11'd0 : partial_sums_0_5_42_reg_1054);

assign grp_fu_2535_p0 = grp_fu_2535_p00;

assign grp_fu_2535_p00 = reg_1249;

assign grp_fu_2535_p2 = ((icmp_ln121_2_reg_3006_pp2_iter2_reg[0:0] === 1'b1) ? 12'd0 : partial_sums_1_5_reg_1043);

assign grp_fu_2543_p0 = grp_fu_2543_p00;

assign grp_fu_2543_p00 = reg_1257;

assign grp_fu_2543_p2 = ((icmp_ln121_2_reg_3006_pp2_iter2_reg[0:0] === 1'b1) ? 11'd0 : partial_sums_2_5_41_reg_1032);

assign grp_fu_2551_p0 = grp_fu_2551_p00;

assign grp_fu_2551_p00 = reg_1261;

assign grp_fu_2559_p0 = grp_fu_2559_p00;

assign grp_fu_2559_p00 = reg_1265;

assign grp_fu_2567_p0 = grp_fu_2567_p00;

assign grp_fu_2567_p00 = reg_1269;

assign i_fu_1355_p2 = (i_0_reg_708 + 10'd1);

assign icmp_ln111_1_fu_1863_p2 = ((indvar_flatten6_reg_865 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln111_2_fu_2128_p2 = ((indvar_flatten13_reg_988 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_1565_p2 = ((indvar_flatten_reg_719 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln121_1_fu_1881_p2 = ((l2_0_1_reg_887 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln121_2_fu_2146_p2 = ((l2_0_2_reg_1010 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_1583_p2 = ((l2_0_0_reg_741 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln129_1_fu_1965_p2 = (($signed(sext_ln128_2_fu_1961_p1) > $signed(channel_maxes_1_2_30_reg_898)) ? 1'b1 : 1'b0);

assign icmp_ln129_2_fu_2245_p2 = (($signed(sext_ln128_4_fu_2241_p1) > $signed(channel_maxes_2_2_40_reg_1021)) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_1672_p2 = (($signed(sext_ln128_1_fu_1668_p1) > $signed(channel_maxes_0_2_19_reg_752)) ? 1'b1 : 1'b0);

assign icmp_ln135_1_fu_2020_p2 = ((k3_0_1_reg_942 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_2_fu_2311_p2 = ((k3_0_2_reg_1076 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_1742_p2 = ((k3_0_0_reg_807 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln146_1_fu_2036_p2 = ((l5_0_1_reg_977 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln146_2_fu_2323_p2 = ((l5_0_2_reg_1124 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_1758_p2 = ((l5_0_0_reg_854 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_2098_p2 = (($signed(sext_ln152_2_fu_2094_p1) > $signed(tmp_23_reg_931)) ? 1'b1 : 1'b0);

assign icmp_ln153_2_fu_2409_p2 = (($signed(sext_ln152_4_fu_2405_p1) > $signed(tmp_24_reg_1065)) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_1825_p2 = (($signed(sext_ln152_1_fu_1821_p1) > $signed(tmp_22_reg_796)) ? 1'b1 : 1'b0);

assign icmp_ln188_1_fu_1442_p2 = ((add_ln188_1_fu_1437_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln188_2_fu_1506_p2 = ((add_ln188_2_fu_1501_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_1374_p2 = ((add_ln188_fu_1369_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln189_1_fu_1476_p2 = ((add_ln189_1_fu_1471_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln189_2_fu_1536_p2 = ((add_ln189_2_fu_1531_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_1408_p2 = ((add_ln189_fu_1403_p2 < 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1349_p2 = ((i_0_reg_708 == 10'd639) ? 1'b1 : 1'b0);

assign select_ln111_10_fu_1993_p3 = ((icmp_ln121_1_reg_2836_pp1_iter2_reg[0:0] === 1'b1) ? channel_maxes_1_1_fu_1971_p3 : channel_maxes_1_2_30_reg_898);

assign select_ln111_11_fu_2280_p3 = ((icmp_ln121_2_reg_3006_pp2_iter2_reg[0:0] === 1'b1) ? channel_maxes_2_1_fu_2251_p3 : channel_maxes_2_2_40_reg_1021);

assign select_ln111_12_fu_2160_p3 = ((icmp_ln121_2_fu_2146_p2[0:0] === 1'b1) ? add_ln111_2_fu_2140_p2 : ap_phi_mux_k_0_2_phi_fu_1003_p4);

assign select_ln111_3_fu_1589_p3 = ((icmp_ln121_fu_1583_p2[0:0] === 1'b1) ? 2'd0 : l2_0_0_reg_741);

assign select_ln111_4_fu_1597_p3 = ((icmp_ln121_fu_1583_p2[0:0] === 1'b1) ? add_ln111_fu_1577_p2 : ap_phi_mux_k_0_0_phi_fu_734_p4);

assign select_ln111_5_fu_1707_p3 = ((icmp_ln121_reg_2645_pp0_iter2_reg[0:0] === 1'b1) ? channel_maxes_0_1_fu_1678_p3 : channel_maxes_0_2_19_reg_752);

assign select_ln111_8_fu_1887_p3 = ((icmp_ln121_1_fu_1881_p2[0:0] === 1'b1) ? 2'd0 : l2_0_1_reg_887);

assign select_ln111_9_fu_1895_p3 = ((icmp_ln121_1_fu_1881_p2[0:0] === 1'b1) ? add_ln111_1_fu_1875_p2 : ap_phi_mux_k_0_1_phi_fu_880_p4);

assign select_ln121_3_fu_2152_p3 = ((icmp_ln121_2_fu_2146_p2[0:0] === 1'b1) ? 2'd0 : l2_0_2_reg_1010);

assign select_ln188_1_fu_1453_p3 = ((icmp_ln188_1_fu_1442_p2[0:0] === 1'b1) ? add_ln188_1_fu_1437_p2 : xor_ln188_1_fu_1448_p2);

assign select_ln188_2_fu_1517_p3 = ((icmp_ln188_2_fu_1506_p2[0:0] === 1'b1) ? add_ln188_2_fu_1501_p2 : xor_ln188_2_fu_1512_p2);

assign select_ln188_fu_1385_p3 = ((icmp_ln188_fu_1374_p2[0:0] === 1'b1) ? add_ln188_fu_1369_p2 : xor_ln188_fu_1380_p2);

assign select_ln189_1_fu_1487_p3 = ((icmp_ln189_1_fu_1476_p2[0:0] === 1'b1) ? add_ln189_1_fu_1471_p2 : xor_ln189_1_fu_1482_p2);

assign select_ln189_2_fu_1547_p3 = ((icmp_ln189_2_fu_1536_p2[0:0] === 1'b1) ? add_ln189_2_fu_1531_p2 : xor_ln189_2_fu_1542_p2);

assign select_ln189_fu_1419_p3 = ((icmp_ln189_fu_1408_p2[0:0] === 1'b1) ? add_ln189_fu_1403_p2 : xor_ln189_fu_1414_p2);

assign sext_ln121_1_fu_2213_p1 = partial_sums_2_5_41_reg_1032;

assign sext_ln121_2_fu_2217_p1 = partial_sums_1_5_reg_1043;

assign sext_ln121_3_fu_2221_p1 = partial_sums_0_5_42_reg_1054;

assign sext_ln121_fu_1644_p1 = partial_sums_1_1_20_reg_774;

assign sext_ln124_3_fu_2203_p1 = $signed(add_ln124_9_fu_2197_p2);

assign sext_ln128_1_fu_1668_p1 = $signed(channel_maxes_0_fu_1662_p2);

assign sext_ln128_2_fu_1961_p1 = $signed(channel_maxes_1_fu_1955_p2);

assign sext_ln128_3_fu_2231_p1 = $signed(add_ln128_3_fu_2225_p2);

assign sext_ln128_4_fu_2241_p1 = $signed(channel_maxes_2_fu_2235_p2);

assign sext_ln128_fu_1658_p1 = $signed(add_ln128_fu_1652_p2);

assign sext_ln146_1_fu_2377_p1 = partial_sums_2_4_33_reg_1088;

assign sext_ln146_2_fu_2381_p1 = partial_sums_1_4_reg_1100;

assign sext_ln146_3_fu_2385_p1 = partial_sums_0_4_34_reg_1112;

assign sext_ln146_fu_1797_p1 = partial_sums_1_0_reg_830;

assign sext_ln148_3_fu_2367_p1 = $signed(add_ln148_9_fu_2361_p2);

assign sext_ln152_1_fu_1821_p1 = $signed(channel_maxes_0_2_fu_1815_p2);

assign sext_ln152_2_fu_2094_p1 = $signed(channel_maxes_1_2_fu_2088_p2);

assign sext_ln152_3_fu_2395_p1 = $signed(add_ln152_3_fu_2389_p2);

assign sext_ln152_4_fu_2405_p1 = $signed(channel_maxes_2_2_fu_2399_p2);

assign sext_ln152_fu_1811_p1 = $signed(add_ln152_fu_1805_p2);

assign shl_ln_fu_1361_p3 = {{i_0_reg_708}, {1'd0}};

assign trunc_ln124_fu_1333_p1 = row_indices_upper_0[2:0];

assign trunc_ln125_fu_1337_p1 = row_indices_upper_1[2:0];

assign trunc_ln148_fu_1341_p1 = row_indices_lower_0[2:0];

assign trunc_ln150_fu_1345_p1 = row_indices_lower_2[2:0];

assign xor_ln188_1_fu_1448_p2 = (trunc_ln125_reg_2596 ^ 3'd4);

assign xor_ln188_2_fu_1512_p2 = (row_indices_upper_2_s_reg_2582 ^ 3'd4);

assign xor_ln188_fu_1380_p2 = (trunc_ln124_reg_2589 ^ 3'd4);

assign xor_ln189_1_fu_1482_p2 = (row_indices_lower_1_s_reg_2575 ^ 3'd4);

assign xor_ln189_2_fu_1542_p2 = (trunc_ln150_reg_2610 ^ 3'd4);

assign xor_ln189_fu_1414_p2 = (trunc_ln148_reg_2603 ^ 3'd4);

assign zext_ln111_1_fu_1909_p1 = select_ln111_9_reg_2849;

assign zext_ln111_fu_1611_p1 = select_ln111_4_reg_2659;

assign zext_ln121_1_fu_1614_p1 = select_ln111_3_reg_2653;

assign zext_ln121_2_fu_1951_p1 = partial_sums_2_3_reg_909;

assign zext_ln121_3_fu_1912_p1 = select_ln111_8_reg_2843;

assign zext_ln121_fu_1648_p1 = partial_sums_0_1_reg_785;

assign zext_ln124_10_fu_2184_p1 = add_ln124_6_fu_2180_p2;

assign zext_ln124_11_fu_2193_p1 = add_ln124_7_fu_2188_p2;

assign zext_ln124_1_fu_1634_p1 = add_ln124_1_fu_1628_p2;

assign zext_ln124_3_fu_1915_p1 = select_ln111_8_reg_2843;

assign zext_ln124_6_fu_2174_p1 = select_ln121_3_reg_3014;

assign zext_ln124_7_fu_1931_p1 = add_ln124_4_fu_1925_p2;

assign zext_ln124_8_fu_1941_p1 = add_ln124_5_fu_1935_p2;

assign zext_ln124_fu_1617_p1 = select_ln111_3_reg_2653;

assign zext_ln135_1_fu_2016_p1 = k3_0_1_reg_942;

assign zext_ln135_fu_1738_p1 = k3_0_0_reg_807;

assign zext_ln146_1_fu_1754_p1 = l5_0_0_reg_854;

assign zext_ln146_2_fu_2084_p1 = partial_sums_2_2_23_reg_953;

assign zext_ln146_3_fu_2032_p1 = l5_0_1_reg_977;

assign zext_ln146_fu_1801_p1 = partial_sums_0_0_reg_842;

assign zext_ln148_10_fu_2348_p1 = add_ln148_6_fu_2342_p2;

assign zext_ln148_11_fu_2357_p1 = add_ln148_7_fu_2352_p2;

assign zext_ln148_1_fu_1787_p1 = add_ln148_1_fu_1782_p2;

assign zext_ln148_3_fu_2048_p1 = l5_0_1_reg_977;

assign zext_ln148_6_fu_2335_p1 = l5_0_2_reg_1124;

assign zext_ln148_7_fu_2064_p1 = add_ln148_4_fu_2059_p2;

assign zext_ln148_8_fu_2074_p1 = add_ln148_5_fu_2068_p2;

assign zext_ln148_fu_1770_p1 = l5_0_0_reg_854;

assign zext_ln188_1_fu_1461_p1 = select_ln188_1_fu_1453_p3;

assign zext_ln188_fu_1393_p1 = select_ln188_fu_1385_p3;

assign zext_ln189_1_fu_1555_p1 = select_ln189_2_fu_1547_p3;

assign zext_ln189_fu_1427_p1 = select_ln189_fu_1419_p3;

always @ (posedge ap_clk) begin
    row_indices_lower_0[7:3] <= 5'b00000;
    row_indices_lower_2[7:3] <= 5'b00000;
    row_indices_upper_0[7:3] <= 5'b00000;
    row_indices_upper_1[7:3] <= 5'b00000;
    shl_ln_reg_2626[0] <= 1'b0;
    zext_ln135_reg_2740[10:2] <= 9'b000000000;
    zext_ln135_1_reg_2920[10:2] <= 9'b000000000;
end

endmodule //convolve
